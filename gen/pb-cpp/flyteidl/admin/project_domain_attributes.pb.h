// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/project_domain_attributes.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/admin/matchable_resource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto();
namespace flyteidl {
namespace admin {
class ProjectDomainAttributes;
class ProjectDomainAttributesDefaultTypeInternal;
extern ProjectDomainAttributesDefaultTypeInternal _ProjectDomainAttributes_default_instance_;
class ProjectDomainAttributesDeleteRequest;
class ProjectDomainAttributesDeleteRequestDefaultTypeInternal;
extern ProjectDomainAttributesDeleteRequestDefaultTypeInternal _ProjectDomainAttributesDeleteRequest_default_instance_;
class ProjectDomainAttributesDeleteResponse;
class ProjectDomainAttributesDeleteResponseDefaultTypeInternal;
extern ProjectDomainAttributesDeleteResponseDefaultTypeInternal _ProjectDomainAttributesDeleteResponse_default_instance_;
class ProjectDomainAttributesGetRequest;
class ProjectDomainAttributesGetRequestDefaultTypeInternal;
extern ProjectDomainAttributesGetRequestDefaultTypeInternal _ProjectDomainAttributesGetRequest_default_instance_;
class ProjectDomainAttributesGetResponse;
class ProjectDomainAttributesGetResponseDefaultTypeInternal;
extern ProjectDomainAttributesGetResponseDefaultTypeInternal _ProjectDomainAttributesGetResponse_default_instance_;
class ProjectDomainAttributesUpdateRequest;
class ProjectDomainAttributesUpdateRequestDefaultTypeInternal;
extern ProjectDomainAttributesUpdateRequestDefaultTypeInternal _ProjectDomainAttributesUpdateRequest_default_instance_;
class ProjectDomainAttributesUpdateResponse;
class ProjectDomainAttributesUpdateResponseDefaultTypeInternal;
extern ProjectDomainAttributesUpdateResponseDefaultTypeInternal _ProjectDomainAttributesUpdateResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::admin::ProjectDomainAttributes* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributes>(Arena*);
template<> ::flyteidl::admin::ProjectDomainAttributesDeleteRequest* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributesDeleteRequest>(Arena*);
template<> ::flyteidl::admin::ProjectDomainAttributesDeleteResponse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributesDeleteResponse>(Arena*);
template<> ::flyteidl::admin::ProjectDomainAttributesGetRequest* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributesGetRequest>(Arena*);
template<> ::flyteidl::admin::ProjectDomainAttributesGetResponse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributesGetResponse>(Arena*);
template<> ::flyteidl::admin::ProjectDomainAttributesUpdateRequest* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributesUpdateRequest>(Arena*);
template<> ::flyteidl::admin::ProjectDomainAttributesUpdateResponse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributesUpdateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace admin {

// ===================================================================

class ProjectDomainAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectDomainAttributes) */ {
 public:
  ProjectDomainAttributes();
  virtual ~ProjectDomainAttributes();

  ProjectDomainAttributes(const ProjectDomainAttributes& from);

  inline ProjectDomainAttributes& operator=(const ProjectDomainAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectDomainAttributes(ProjectDomainAttributes&& from) noexcept
    : ProjectDomainAttributes() {
    *this = ::std::move(from);
  }

  inline ProjectDomainAttributes& operator=(ProjectDomainAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectDomainAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectDomainAttributes* internal_default_instance() {
    return reinterpret_cast<const ProjectDomainAttributes*>(
               &_ProjectDomainAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProjectDomainAttributes* other);
  friend void swap(ProjectDomainAttributes& a, ProjectDomainAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectDomainAttributes* New() const final {
    return CreateMaybeMessage<ProjectDomainAttributes>(nullptr);
  }

  ProjectDomainAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectDomainAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectDomainAttributes& from);
  void MergeFrom(const ProjectDomainAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectDomainAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // .flyteidl.admin.MatchingAttributes matching_attributes = 3;
  bool has_matching_attributes() const;
  void clear_matching_attributes();
  static const int kMatchingAttributesFieldNumber = 3;
  const ::flyteidl::admin::MatchingAttributes& matching_attributes() const;
  ::flyteidl::admin::MatchingAttributes* release_matching_attributes();
  ::flyteidl::admin::MatchingAttributes* mutable_matching_attributes();
  void set_allocated_matching_attributes(::flyteidl::admin::MatchingAttributes* matching_attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectDomainAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::flyteidl::admin::MatchingAttributes* matching_attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectDomainAttributesUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectDomainAttributesUpdateRequest) */ {
 public:
  ProjectDomainAttributesUpdateRequest();
  virtual ~ProjectDomainAttributesUpdateRequest();

  ProjectDomainAttributesUpdateRequest(const ProjectDomainAttributesUpdateRequest& from);

  inline ProjectDomainAttributesUpdateRequest& operator=(const ProjectDomainAttributesUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectDomainAttributesUpdateRequest(ProjectDomainAttributesUpdateRequest&& from) noexcept
    : ProjectDomainAttributesUpdateRequest() {
    *this = ::std::move(from);
  }

  inline ProjectDomainAttributesUpdateRequest& operator=(ProjectDomainAttributesUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectDomainAttributesUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectDomainAttributesUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const ProjectDomainAttributesUpdateRequest*>(
               &_ProjectDomainAttributesUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ProjectDomainAttributesUpdateRequest* other);
  friend void swap(ProjectDomainAttributesUpdateRequest& a, ProjectDomainAttributesUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectDomainAttributesUpdateRequest* New() const final {
    return CreateMaybeMessage<ProjectDomainAttributesUpdateRequest>(nullptr);
  }

  ProjectDomainAttributesUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectDomainAttributesUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectDomainAttributesUpdateRequest& from);
  void MergeFrom(const ProjectDomainAttributesUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectDomainAttributesUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.ProjectDomainAttributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::flyteidl::admin::ProjectDomainAttributes& attributes() const;
  ::flyteidl::admin::ProjectDomainAttributes* release_attributes();
  ::flyteidl::admin::ProjectDomainAttributes* mutable_attributes();
  void set_allocated_attributes(::flyteidl::admin::ProjectDomainAttributes* attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectDomainAttributesUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::ProjectDomainAttributes* attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectDomainAttributesUpdateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectDomainAttributesUpdateResponse) */ {
 public:
  ProjectDomainAttributesUpdateResponse();
  virtual ~ProjectDomainAttributesUpdateResponse();

  ProjectDomainAttributesUpdateResponse(const ProjectDomainAttributesUpdateResponse& from);

  inline ProjectDomainAttributesUpdateResponse& operator=(const ProjectDomainAttributesUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectDomainAttributesUpdateResponse(ProjectDomainAttributesUpdateResponse&& from) noexcept
    : ProjectDomainAttributesUpdateResponse() {
    *this = ::std::move(from);
  }

  inline ProjectDomainAttributesUpdateResponse& operator=(ProjectDomainAttributesUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectDomainAttributesUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectDomainAttributesUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const ProjectDomainAttributesUpdateResponse*>(
               &_ProjectDomainAttributesUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ProjectDomainAttributesUpdateResponse* other);
  friend void swap(ProjectDomainAttributesUpdateResponse& a, ProjectDomainAttributesUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectDomainAttributesUpdateResponse* New() const final {
    return CreateMaybeMessage<ProjectDomainAttributesUpdateResponse>(nullptr);
  }

  ProjectDomainAttributesUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectDomainAttributesUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectDomainAttributesUpdateResponse& from);
  void MergeFrom(const ProjectDomainAttributesUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectDomainAttributesUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectDomainAttributesUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectDomainAttributesGetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectDomainAttributesGetRequest) */ {
 public:
  ProjectDomainAttributesGetRequest();
  virtual ~ProjectDomainAttributesGetRequest();

  ProjectDomainAttributesGetRequest(const ProjectDomainAttributesGetRequest& from);

  inline ProjectDomainAttributesGetRequest& operator=(const ProjectDomainAttributesGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectDomainAttributesGetRequest(ProjectDomainAttributesGetRequest&& from) noexcept
    : ProjectDomainAttributesGetRequest() {
    *this = ::std::move(from);
  }

  inline ProjectDomainAttributesGetRequest& operator=(ProjectDomainAttributesGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectDomainAttributesGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectDomainAttributesGetRequest* internal_default_instance() {
    return reinterpret_cast<const ProjectDomainAttributesGetRequest*>(
               &_ProjectDomainAttributesGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ProjectDomainAttributesGetRequest* other);
  friend void swap(ProjectDomainAttributesGetRequest& a, ProjectDomainAttributesGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectDomainAttributesGetRequest* New() const final {
    return CreateMaybeMessage<ProjectDomainAttributesGetRequest>(nullptr);
  }

  ProjectDomainAttributesGetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectDomainAttributesGetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectDomainAttributesGetRequest& from);
  void MergeFrom(const ProjectDomainAttributesGetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectDomainAttributesGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // .flyteidl.admin.MatchableResource resource_type = 3;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 3;
  ::flyteidl::admin::MatchableResource resource_type() const;
  void set_resource_type(::flyteidl::admin::MatchableResource value);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectDomainAttributesGetRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  int resource_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectDomainAttributesGetResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectDomainAttributesGetResponse) */ {
 public:
  ProjectDomainAttributesGetResponse();
  virtual ~ProjectDomainAttributesGetResponse();

  ProjectDomainAttributesGetResponse(const ProjectDomainAttributesGetResponse& from);

  inline ProjectDomainAttributesGetResponse& operator=(const ProjectDomainAttributesGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectDomainAttributesGetResponse(ProjectDomainAttributesGetResponse&& from) noexcept
    : ProjectDomainAttributesGetResponse() {
    *this = ::std::move(from);
  }

  inline ProjectDomainAttributesGetResponse& operator=(ProjectDomainAttributesGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectDomainAttributesGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectDomainAttributesGetResponse* internal_default_instance() {
    return reinterpret_cast<const ProjectDomainAttributesGetResponse*>(
               &_ProjectDomainAttributesGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ProjectDomainAttributesGetResponse* other);
  friend void swap(ProjectDomainAttributesGetResponse& a, ProjectDomainAttributesGetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectDomainAttributesGetResponse* New() const final {
    return CreateMaybeMessage<ProjectDomainAttributesGetResponse>(nullptr);
  }

  ProjectDomainAttributesGetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectDomainAttributesGetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectDomainAttributesGetResponse& from);
  void MergeFrom(const ProjectDomainAttributesGetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectDomainAttributesGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.ProjectDomainAttributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::flyteidl::admin::ProjectDomainAttributes& attributes() const;
  ::flyteidl::admin::ProjectDomainAttributes* release_attributes();
  ::flyteidl::admin::ProjectDomainAttributes* mutable_attributes();
  void set_allocated_attributes(::flyteidl::admin::ProjectDomainAttributes* attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectDomainAttributesGetResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::ProjectDomainAttributes* attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectDomainAttributesDeleteRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectDomainAttributesDeleteRequest) */ {
 public:
  ProjectDomainAttributesDeleteRequest();
  virtual ~ProjectDomainAttributesDeleteRequest();

  ProjectDomainAttributesDeleteRequest(const ProjectDomainAttributesDeleteRequest& from);

  inline ProjectDomainAttributesDeleteRequest& operator=(const ProjectDomainAttributesDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectDomainAttributesDeleteRequest(ProjectDomainAttributesDeleteRequest&& from) noexcept
    : ProjectDomainAttributesDeleteRequest() {
    *this = ::std::move(from);
  }

  inline ProjectDomainAttributesDeleteRequest& operator=(ProjectDomainAttributesDeleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectDomainAttributesDeleteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectDomainAttributesDeleteRequest* internal_default_instance() {
    return reinterpret_cast<const ProjectDomainAttributesDeleteRequest*>(
               &_ProjectDomainAttributesDeleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ProjectDomainAttributesDeleteRequest* other);
  friend void swap(ProjectDomainAttributesDeleteRequest& a, ProjectDomainAttributesDeleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectDomainAttributesDeleteRequest* New() const final {
    return CreateMaybeMessage<ProjectDomainAttributesDeleteRequest>(nullptr);
  }

  ProjectDomainAttributesDeleteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectDomainAttributesDeleteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectDomainAttributesDeleteRequest& from);
  void MergeFrom(const ProjectDomainAttributesDeleteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectDomainAttributesDeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // .flyteidl.admin.MatchableResource resource_type = 3;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 3;
  ::flyteidl::admin::MatchableResource resource_type() const;
  void set_resource_type(::flyteidl::admin::MatchableResource value);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectDomainAttributesDeleteRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  int resource_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectDomainAttributesDeleteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectDomainAttributesDeleteResponse) */ {
 public:
  ProjectDomainAttributesDeleteResponse();
  virtual ~ProjectDomainAttributesDeleteResponse();

  ProjectDomainAttributesDeleteResponse(const ProjectDomainAttributesDeleteResponse& from);

  inline ProjectDomainAttributesDeleteResponse& operator=(const ProjectDomainAttributesDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectDomainAttributesDeleteResponse(ProjectDomainAttributesDeleteResponse&& from) noexcept
    : ProjectDomainAttributesDeleteResponse() {
    *this = ::std::move(from);
  }

  inline ProjectDomainAttributesDeleteResponse& operator=(ProjectDomainAttributesDeleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectDomainAttributesDeleteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectDomainAttributesDeleteResponse* internal_default_instance() {
    return reinterpret_cast<const ProjectDomainAttributesDeleteResponse*>(
               &_ProjectDomainAttributesDeleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ProjectDomainAttributesDeleteResponse* other);
  friend void swap(ProjectDomainAttributesDeleteResponse& a, ProjectDomainAttributesDeleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectDomainAttributesDeleteResponse* New() const final {
    return CreateMaybeMessage<ProjectDomainAttributesDeleteResponse>(nullptr);
  }

  ProjectDomainAttributesDeleteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectDomainAttributesDeleteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectDomainAttributesDeleteResponse& from);
  void MergeFrom(const ProjectDomainAttributesDeleteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectDomainAttributesDeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectDomainAttributesDeleteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProjectDomainAttributes

// string project = 1;
inline void ProjectDomainAttributes::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectDomainAttributes::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributes.project)
  return project_.GetNoArena();
}
inline void ProjectDomainAttributes::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributes.project)
}
#if LANG_CXX11
inline void ProjectDomainAttributes::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectDomainAttributes.project)
}
#endif
inline void ProjectDomainAttributes::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectDomainAttributes.project)
}
inline void ProjectDomainAttributes::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectDomainAttributes.project)
}
inline ::std::string* ProjectDomainAttributes::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributes.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectDomainAttributes::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributes.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectDomainAttributes::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributes.project)
}

// string domain = 2;
inline void ProjectDomainAttributes::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectDomainAttributes::domain() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributes.domain)
  return domain_.GetNoArena();
}
inline void ProjectDomainAttributes::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributes.domain)
}
#if LANG_CXX11
inline void ProjectDomainAttributes::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectDomainAttributes.domain)
}
#endif
inline void ProjectDomainAttributes::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectDomainAttributes.domain)
}
inline void ProjectDomainAttributes::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectDomainAttributes.domain)
}
inline ::std::string* ProjectDomainAttributes::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributes.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectDomainAttributes::release_domain() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributes.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectDomainAttributes::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributes.domain)
}

// .flyteidl.admin.MatchingAttributes matching_attributes = 3;
inline bool ProjectDomainAttributes::has_matching_attributes() const {
  return this != internal_default_instance() && matching_attributes_ != nullptr;
}
inline const ::flyteidl::admin::MatchingAttributes& ProjectDomainAttributes::matching_attributes() const {
  const ::flyteidl::admin::MatchingAttributes* p = matching_attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributes.matching_attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::MatchingAttributes*>(
      &::flyteidl::admin::_MatchingAttributes_default_instance_);
}
inline ::flyteidl::admin::MatchingAttributes* ProjectDomainAttributes::release_matching_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributes.matching_attributes)
  
  ::flyteidl::admin::MatchingAttributes* temp = matching_attributes_;
  matching_attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::MatchingAttributes* ProjectDomainAttributes::mutable_matching_attributes() {
  
  if (matching_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::MatchingAttributes>(GetArenaNoVirtual());
    matching_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributes.matching_attributes)
  return matching_attributes_;
}
inline void ProjectDomainAttributes::set_allocated_matching_attributes(::flyteidl::admin::MatchingAttributes* matching_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(matching_attributes_);
  }
  if (matching_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      matching_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, matching_attributes, submessage_arena);
    }
    
  } else {
    
  }
  matching_attributes_ = matching_attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributes.matching_attributes)
}

// -------------------------------------------------------------------

// ProjectDomainAttributesUpdateRequest

// .flyteidl.admin.ProjectDomainAttributes attributes = 1;
inline bool ProjectDomainAttributesUpdateRequest::has_attributes() const {
  return this != internal_default_instance() && attributes_ != nullptr;
}
inline void ProjectDomainAttributesUpdateRequest::clear_attributes() {
  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
}
inline const ::flyteidl::admin::ProjectDomainAttributes& ProjectDomainAttributesUpdateRequest::attributes() const {
  const ::flyteidl::admin::ProjectDomainAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesUpdateRequest.attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::ProjectDomainAttributes*>(
      &::flyteidl::admin::_ProjectDomainAttributes_default_instance_);
}
inline ::flyteidl::admin::ProjectDomainAttributes* ProjectDomainAttributesUpdateRequest::release_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributesUpdateRequest.attributes)
  
  ::flyteidl::admin::ProjectDomainAttributes* temp = attributes_;
  attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::ProjectDomainAttributes* ProjectDomainAttributesUpdateRequest::mutable_attributes() {
  
  if (attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributesUpdateRequest.attributes)
  return attributes_;
}
inline void ProjectDomainAttributesUpdateRequest::set_allocated_attributes(::flyteidl::admin::ProjectDomainAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributesUpdateRequest.attributes)
}

// -------------------------------------------------------------------

// ProjectDomainAttributesUpdateResponse

// -------------------------------------------------------------------

// ProjectDomainAttributesGetRequest

// string project = 1;
inline void ProjectDomainAttributesGetRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectDomainAttributesGetRequest::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
  return project_.GetNoArena();
}
inline void ProjectDomainAttributesGetRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
}
#if LANG_CXX11
inline void ProjectDomainAttributesGetRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
}
#endif
inline void ProjectDomainAttributesGetRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
}
inline void ProjectDomainAttributesGetRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
}
inline ::std::string* ProjectDomainAttributesGetRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectDomainAttributesGetRequest::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectDomainAttributesGetRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributesGetRequest.project)
}

// string domain = 2;
inline void ProjectDomainAttributesGetRequest::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectDomainAttributesGetRequest::domain() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
  return domain_.GetNoArena();
}
inline void ProjectDomainAttributesGetRequest::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
}
#if LANG_CXX11
inline void ProjectDomainAttributesGetRequest::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
}
#endif
inline void ProjectDomainAttributesGetRequest::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
}
inline void ProjectDomainAttributesGetRequest::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
}
inline ::std::string* ProjectDomainAttributesGetRequest::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectDomainAttributesGetRequest::release_domain() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectDomainAttributesGetRequest::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributesGetRequest.domain)
}

// .flyteidl.admin.MatchableResource resource_type = 3;
inline void ProjectDomainAttributesGetRequest::clear_resource_type() {
  resource_type_ = 0;
}
inline ::flyteidl::admin::MatchableResource ProjectDomainAttributesGetRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesGetRequest.resource_type)
  return static_cast< ::flyteidl::admin::MatchableResource >(resource_type_);
}
inline void ProjectDomainAttributesGetRequest::set_resource_type(::flyteidl::admin::MatchableResource value) {
  
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributesGetRequest.resource_type)
}

// -------------------------------------------------------------------

// ProjectDomainAttributesGetResponse

// .flyteidl.admin.ProjectDomainAttributes attributes = 1;
inline bool ProjectDomainAttributesGetResponse::has_attributes() const {
  return this != internal_default_instance() && attributes_ != nullptr;
}
inline void ProjectDomainAttributesGetResponse::clear_attributes() {
  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
}
inline const ::flyteidl::admin::ProjectDomainAttributes& ProjectDomainAttributesGetResponse::attributes() const {
  const ::flyteidl::admin::ProjectDomainAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesGetResponse.attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::ProjectDomainAttributes*>(
      &::flyteidl::admin::_ProjectDomainAttributes_default_instance_);
}
inline ::flyteidl::admin::ProjectDomainAttributes* ProjectDomainAttributesGetResponse::release_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributesGetResponse.attributes)
  
  ::flyteidl::admin::ProjectDomainAttributes* temp = attributes_;
  attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::ProjectDomainAttributes* ProjectDomainAttributesGetResponse::mutable_attributes() {
  
  if (attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::ProjectDomainAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributesGetResponse.attributes)
  return attributes_;
}
inline void ProjectDomainAttributesGetResponse::set_allocated_attributes(::flyteidl::admin::ProjectDomainAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributesGetResponse.attributes)
}

// -------------------------------------------------------------------

// ProjectDomainAttributesDeleteRequest

// string project = 1;
inline void ProjectDomainAttributesDeleteRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectDomainAttributesDeleteRequest::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
  return project_.GetNoArena();
}
inline void ProjectDomainAttributesDeleteRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
}
#if LANG_CXX11
inline void ProjectDomainAttributesDeleteRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
}
#endif
inline void ProjectDomainAttributesDeleteRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
}
inline void ProjectDomainAttributesDeleteRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
}
inline ::std::string* ProjectDomainAttributesDeleteRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectDomainAttributesDeleteRequest::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectDomainAttributesDeleteRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributesDeleteRequest.project)
}

// string domain = 2;
inline void ProjectDomainAttributesDeleteRequest::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectDomainAttributesDeleteRequest::domain() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
  return domain_.GetNoArena();
}
inline void ProjectDomainAttributesDeleteRequest::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
}
#if LANG_CXX11
inline void ProjectDomainAttributesDeleteRequest::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
}
#endif
inline void ProjectDomainAttributesDeleteRequest::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
}
inline void ProjectDomainAttributesDeleteRequest::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
}
inline ::std::string* ProjectDomainAttributesDeleteRequest::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectDomainAttributesDeleteRequest::release_domain() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectDomainAttributesDeleteRequest::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectDomainAttributesDeleteRequest.domain)
}

// .flyteidl.admin.MatchableResource resource_type = 3;
inline void ProjectDomainAttributesDeleteRequest::clear_resource_type() {
  resource_type_ = 0;
}
inline ::flyteidl::admin::MatchableResource ProjectDomainAttributesDeleteRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectDomainAttributesDeleteRequest.resource_type)
  return static_cast< ::flyteidl::admin::MatchableResource >(resource_type_);
}
inline void ProjectDomainAttributesDeleteRequest::set_resource_type(::flyteidl::admin::MatchableResource value) {
  
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectDomainAttributesDeleteRequest.resource_type)
}

// -------------------------------------------------------------------

// ProjectDomainAttributesDeleteResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto
