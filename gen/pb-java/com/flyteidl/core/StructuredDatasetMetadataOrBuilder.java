// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/literals.proto

package com.flyteidl.core;

public interface StructuredDatasetMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.core.StructuredDatasetMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Bundle the type information along with the literal.
   * This is here because StructuredDatasets can often be more defined at run time than at compile time.
   * That is, at compile time you might only declare a task to return a pandas dataframe or a StructuredDataset,
   * without any column information, but at run time, you might have that column information.
   * flytekit python will copy this type information into the literal, from the type information, if not provided by
   * the various plugins (encoders).
   * Since this field is run time generated, it's not used for any type checking.
   * </pre>
   *
   * <code>.flyteidl.core.StructuredDatasetType structured_dataset_type = 1 [json_name = "structuredDatasetType"];</code>
   * @return Whether the structuredDatasetType field is set.
   */
  boolean hasStructuredDatasetType();
  /**
   * <pre>
   * Bundle the type information along with the literal.
   * This is here because StructuredDatasets can often be more defined at run time than at compile time.
   * That is, at compile time you might only declare a task to return a pandas dataframe or a StructuredDataset,
   * without any column information, but at run time, you might have that column information.
   * flytekit python will copy this type information into the literal, from the type information, if not provided by
   * the various plugins (encoders).
   * Since this field is run time generated, it's not used for any type checking.
   * </pre>
   *
   * <code>.flyteidl.core.StructuredDatasetType structured_dataset_type = 1 [json_name = "structuredDatasetType"];</code>
   * @return The structuredDatasetType.
   */
  com.flyteidl.core.StructuredDatasetType getStructuredDatasetType();
  /**
   * <pre>
   * Bundle the type information along with the literal.
   * This is here because StructuredDatasets can often be more defined at run time than at compile time.
   * That is, at compile time you might only declare a task to return a pandas dataframe or a StructuredDataset,
   * without any column information, but at run time, you might have that column information.
   * flytekit python will copy this type information into the literal, from the type information, if not provided by
   * the various plugins (encoders).
   * Since this field is run time generated, it's not used for any type checking.
   * </pre>
   *
   * <code>.flyteidl.core.StructuredDatasetType structured_dataset_type = 1 [json_name = "structuredDatasetType"];</code>
   */
  com.flyteidl.core.StructuredDatasetTypeOrBuilder getStructuredDatasetTypeOrBuilder();
}
