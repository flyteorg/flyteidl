// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/tasks.proto

package flyteidl.core;

public final class Tasks {
  private Tasks() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ResourcesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.Resources)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> 
        getRequestsList();
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    flyteidl.core.Tasks.Resources.ResourceEntry getRequests(int index);
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    int getRequestsCount();
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    java.util.List<? extends flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
        getRequestsOrBuilderList();
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder getRequestsOrBuilder(
        int index);

    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> 
        getLimitsList();
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    flyteidl.core.Tasks.Resources.ResourceEntry getLimits(int index);
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    int getLimitsCount();
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    java.util.List<? extends flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
        getLimitsOrBuilderList();
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder getLimitsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A customizable interface to convey resources requested for a container. This can be interpreted differently for different
   * container engines.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.Resources}
   */
  public  static final class Resources extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.Resources)
      ResourcesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Resources.newBuilder() to construct.
    private Resources(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Resources() {
      requests_ = java.util.Collections.emptyList();
      limits_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Resources(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                requests_ = new java.util.ArrayList<flyteidl.core.Tasks.Resources.ResourceEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              requests_.add(
                  input.readMessage(flyteidl.core.Tasks.Resources.ResourceEntry.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                limits_ = new java.util.ArrayList<flyteidl.core.Tasks.Resources.ResourceEntry>();
                mutable_bitField0_ |= 0x00000002;
              }
              limits_.add(
                  input.readMessage(flyteidl.core.Tasks.Resources.ResourceEntry.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          requests_ = java.util.Collections.unmodifiableList(requests_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          limits_ = java.util.Collections.unmodifiableList(limits_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.Resources.class, flyteidl.core.Tasks.Resources.Builder.class);
    }

    /**
     * <pre>
     * Known resource names.
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.Resources.ResourceName}
     */
    public enum ResourceName
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>CPU = 1;</code>
       */
      CPU(1),
      /**
       * <code>GPU = 2;</code>
       */
      GPU(2),
      /**
       * <code>MEMORY = 3;</code>
       */
      MEMORY(3),
      /**
       * <code>STORAGE = 4;</code>
       */
      STORAGE(4),
      /**
       * <pre>
       * For Kubernetes-based deployments, pods use ephemeral local storage for scratch space, caching, and for logs.
       * </pre>
       *
       * <code>EPHEMERAL_STORAGE = 5;</code>
       */
      EPHEMERAL_STORAGE(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>CPU = 1;</code>
       */
      public static final int CPU_VALUE = 1;
      /**
       * <code>GPU = 2;</code>
       */
      public static final int GPU_VALUE = 2;
      /**
       * <code>MEMORY = 3;</code>
       */
      public static final int MEMORY_VALUE = 3;
      /**
       * <code>STORAGE = 4;</code>
       */
      public static final int STORAGE_VALUE = 4;
      /**
       * <pre>
       * For Kubernetes-based deployments, pods use ephemeral local storage for scratch space, caching, and for logs.
       * </pre>
       *
       * <code>EPHEMERAL_STORAGE = 5;</code>
       */
      public static final int EPHEMERAL_STORAGE_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ResourceName valueOf(int value) {
        return forNumber(value);
      }

      public static ResourceName forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return CPU;
          case 2: return GPU;
          case 3: return MEMORY;
          case 4: return STORAGE;
          case 5: return EPHEMERAL_STORAGE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ResourceName>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ResourceName> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResourceName>() {
              public ResourceName findValueByNumber(int number) {
                return ResourceName.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Tasks.Resources.getDescriptor().getEnumTypes().get(0);
      }

      private static final ResourceName[] VALUES = values();

      public static ResourceName valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ResourceName(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.Resources.ResourceName)
    }

    public interface ResourceEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:flyteidl.core.Resources.ResourceEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Resource name.
       * </pre>
       *
       * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
       */
      int getNameValue();
      /**
       * <pre>
       * Resource name.
       * </pre>
       *
       * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
       */
      flyteidl.core.Tasks.Resources.ResourceName getName();

      /**
       * <pre>
       * Value must be a valid k8s quantity. See
       * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      java.lang.String getValue();
      /**
       * <pre>
       * Value must be a valid k8s quantity. See
       * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * <pre>
     * Encapsulates a resource name and value.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.Resources.ResourceEntry}
     */
    public  static final class ResourceEntry extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:flyteidl.core.Resources.ResourceEntry)
        ResourceEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ResourceEntry.newBuilder() to construct.
      private ResourceEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ResourceEntry() {
        name_ = 0;
        value_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ResourceEntry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                name_ = rawValue;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                value_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_ResourceEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_ResourceEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.Resources.ResourceEntry.class, flyteidl.core.Tasks.Resources.ResourceEntry.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private int name_;
      /**
       * <pre>
       * Resource name.
       * </pre>
       *
       * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
       */
      public int getNameValue() {
        return name_;
      }
      /**
       * <pre>
       * Resource name.
       * </pre>
       *
       * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceName getName() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Tasks.Resources.ResourceName result = flyteidl.core.Tasks.Resources.ResourceName.valueOf(name_);
        return result == null ? flyteidl.core.Tasks.Resources.ResourceName.UNRECOGNIZED : result;
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private volatile java.lang.Object value_;
      /**
       * <pre>
       * Value must be a valid k8s quantity. See
       * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Value must be a valid k8s quantity. See
       * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
       * </pre>
       *
       * <code>string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (name_ != flyteidl.core.Tasks.Resources.ResourceName.UNKNOWN.getNumber()) {
          output.writeEnum(1, name_);
        }
        if (!getValueBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (name_ != flyteidl.core.Tasks.Resources.ResourceName.UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, name_);
        }
        if (!getValueBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof flyteidl.core.Tasks.Resources.ResourceEntry)) {
          return super.equals(obj);
        }
        flyteidl.core.Tasks.Resources.ResourceEntry other = (flyteidl.core.Tasks.Resources.ResourceEntry) obj;

        if (name_ != other.name_) return false;
        if (!getValue()
            .equals(other.getValue())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + name_;
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static flyteidl.core.Tasks.Resources.ResourceEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(flyteidl.core.Tasks.Resources.ResourceEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Encapsulates a resource name and value.
       * </pre>
       *
       * Protobuf type {@code flyteidl.core.Resources.ResourceEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:flyteidl.core.Resources.ResourceEntry)
          flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_ResourceEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_ResourceEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  flyteidl.core.Tasks.Resources.ResourceEntry.class, flyteidl.core.Tasks.Resources.ResourceEntry.Builder.class);
        }

        // Construct using flyteidl.core.Tasks.Resources.ResourceEntry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = 0;

          value_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_ResourceEntry_descriptor;
        }

        @java.lang.Override
        public flyteidl.core.Tasks.Resources.ResourceEntry getDefaultInstanceForType() {
          return flyteidl.core.Tasks.Resources.ResourceEntry.getDefaultInstance();
        }

        @java.lang.Override
        public flyteidl.core.Tasks.Resources.ResourceEntry build() {
          flyteidl.core.Tasks.Resources.ResourceEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public flyteidl.core.Tasks.Resources.ResourceEntry buildPartial() {
          flyteidl.core.Tasks.Resources.ResourceEntry result = new flyteidl.core.Tasks.Resources.ResourceEntry(this);
          result.name_ = name_;
          result.value_ = value_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof flyteidl.core.Tasks.Resources.ResourceEntry) {
            return mergeFrom((flyteidl.core.Tasks.Resources.ResourceEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(flyteidl.core.Tasks.Resources.ResourceEntry other) {
          if (other == flyteidl.core.Tasks.Resources.ResourceEntry.getDefaultInstance()) return this;
          if (other.name_ != 0) {
            setNameValue(other.getNameValue());
          }
          if (!other.getValue().isEmpty()) {
            value_ = other.value_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          flyteidl.core.Tasks.Resources.ResourceEntry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (flyteidl.core.Tasks.Resources.ResourceEntry) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int name_ = 0;
        /**
         * <pre>
         * Resource name.
         * </pre>
         *
         * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
         */
        public int getNameValue() {
          return name_;
        }
        /**
         * <pre>
         * Resource name.
         * </pre>
         *
         * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
         */
        public Builder setNameValue(int value) {
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Resource name.
         * </pre>
         *
         * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
         */
        public flyteidl.core.Tasks.Resources.ResourceName getName() {
          @SuppressWarnings("deprecation")
          flyteidl.core.Tasks.Resources.ResourceName result = flyteidl.core.Tasks.Resources.ResourceName.valueOf(name_);
          return result == null ? flyteidl.core.Tasks.Resources.ResourceName.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Resource name.
         * </pre>
         *
         * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
         */
        public Builder setName(flyteidl.core.Tasks.Resources.ResourceName value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          name_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Resource name.
         * </pre>
         *
         * <code>.flyteidl.core.Resources.ResourceName name = 1;</code>
         */
        public Builder clearName() {
          
          name_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object value_ = "";
        /**
         * <pre>
         * Value must be a valid k8s quantity. See
         * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
         * </pre>
         *
         * <code>string value = 2;</code>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Value must be a valid k8s quantity. See
         * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
         * </pre>
         *
         * <code>string value = 2;</code>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Value must be a valid k8s quantity. See
         * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
         * </pre>
         *
         * <code>string value = 2;</code>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Value must be a valid k8s quantity. See
         * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
         * </pre>
         *
         * <code>string value = 2;</code>
         */
        public Builder clearValue() {
          
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Value must be a valid k8s quantity. See
         * https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
         * </pre>
         *
         * <code>string value = 2;</code>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          value_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:flyteidl.core.Resources.ResourceEntry)
      }

      // @@protoc_insertion_point(class_scope:flyteidl.core.Resources.ResourceEntry)
      private static final flyteidl.core.Tasks.Resources.ResourceEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new flyteidl.core.Tasks.Resources.ResourceEntry();
      }

      public static flyteidl.core.Tasks.Resources.ResourceEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ResourceEntry>
          PARSER = new com.google.protobuf.AbstractParser<ResourceEntry>() {
        @java.lang.Override
        public ResourceEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResourceEntry(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ResourceEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ResourceEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Resources.ResourceEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int REQUESTS_FIELD_NUMBER = 1;
    private java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> requests_;
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    public java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> getRequestsList() {
      return requests_;
    }
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    public java.util.List<? extends flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
        getRequestsOrBuilderList() {
      return requests_;
    }
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    public int getRequestsCount() {
      return requests_.size();
    }
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    public flyteidl.core.Tasks.Resources.ResourceEntry getRequests(int index) {
      return requests_.get(index);
    }
    /**
     * <pre>
     * The desired set of resources requested. ResourceNames must be unique within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
     */
    public flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder getRequestsOrBuilder(
        int index) {
      return requests_.get(index);
    }

    public static final int LIMITS_FIELD_NUMBER = 2;
    private java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> limits_;
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    public java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> getLimitsList() {
      return limits_;
    }
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    public java.util.List<? extends flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
        getLimitsOrBuilderList() {
      return limits_;
    }
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    public int getLimitsCount() {
      return limits_.size();
    }
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    public flyteidl.core.Tasks.Resources.ResourceEntry getLimits(int index) {
      return limits_.get(index);
    }
    /**
     * <pre>
     * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
     * within the list.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
     */
    public flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder getLimitsOrBuilder(
        int index) {
      return limits_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < requests_.size(); i++) {
        output.writeMessage(1, requests_.get(i));
      }
      for (int i = 0; i < limits_.size(); i++) {
        output.writeMessage(2, limits_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < requests_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, requests_.get(i));
      }
      for (int i = 0; i < limits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, limits_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.Resources)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.Resources other = (flyteidl.core.Tasks.Resources) obj;

      if (!getRequestsList()
          .equals(other.getRequestsList())) return false;
      if (!getLimitsList()
          .equals(other.getLimitsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRequestsCount() > 0) {
        hash = (37 * hash) + REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + getRequestsList().hashCode();
      }
      if (getLimitsCount() > 0) {
        hash = (37 * hash) + LIMITS_FIELD_NUMBER;
        hash = (53 * hash) + getLimitsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.Resources parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Resources parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Resources parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Resources parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.Resources prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A customizable interface to convey resources requested for a container. This can be interpreted differently for different
     * container engines.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.Resources}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.Resources)
        flyteidl.core.Tasks.ResourcesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.Resources.class, flyteidl.core.Tasks.Resources.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.Resources.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestsFieldBuilder();
          getLimitsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (requestsBuilder_ == null) {
          requests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          requestsBuilder_.clear();
        }
        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          limitsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Resources_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Resources getDefaultInstanceForType() {
        return flyteidl.core.Tasks.Resources.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Resources build() {
        flyteidl.core.Tasks.Resources result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Resources buildPartial() {
        flyteidl.core.Tasks.Resources result = new flyteidl.core.Tasks.Resources(this);
        int from_bitField0_ = bitField0_;
        if (requestsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            requests_ = java.util.Collections.unmodifiableList(requests_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.requests_ = requests_;
        } else {
          result.requests_ = requestsBuilder_.build();
        }
        if (limitsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            limits_ = java.util.Collections.unmodifiableList(limits_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.limits_ = limits_;
        } else {
          result.limits_ = limitsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.Resources) {
          return mergeFrom((flyteidl.core.Tasks.Resources)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.Resources other) {
        if (other == flyteidl.core.Tasks.Resources.getDefaultInstance()) return this;
        if (requestsBuilder_ == null) {
          if (!other.requests_.isEmpty()) {
            if (requests_.isEmpty()) {
              requests_ = other.requests_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRequestsIsMutable();
              requests_.addAll(other.requests_);
            }
            onChanged();
          }
        } else {
          if (!other.requests_.isEmpty()) {
            if (requestsBuilder_.isEmpty()) {
              requestsBuilder_.dispose();
              requestsBuilder_ = null;
              requests_ = other.requests_;
              bitField0_ = (bitField0_ & ~0x00000001);
              requestsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRequestsFieldBuilder() : null;
            } else {
              requestsBuilder_.addAllMessages(other.requests_);
            }
          }
        }
        if (limitsBuilder_ == null) {
          if (!other.limits_.isEmpty()) {
            if (limits_.isEmpty()) {
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLimitsIsMutable();
              limits_.addAll(other.limits_);
            }
            onChanged();
          }
        } else {
          if (!other.limits_.isEmpty()) {
            if (limitsBuilder_.isEmpty()) {
              limitsBuilder_.dispose();
              limitsBuilder_ = null;
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000002);
              limitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLimitsFieldBuilder() : null;
            } else {
              limitsBuilder_.addAllMessages(other.limits_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.Resources parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.Resources) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> requests_ =
        java.util.Collections.emptyList();
      private void ensureRequestsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          requests_ = new java.util.ArrayList<flyteidl.core.Tasks.Resources.ResourceEntry>(requests_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Tasks.Resources.ResourceEntry, flyteidl.core.Tasks.Resources.ResourceEntry.Builder, flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> requestsBuilder_;

      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> getRequestsList() {
        if (requestsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(requests_);
        } else {
          return requestsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public int getRequestsCount() {
        if (requestsBuilder_ == null) {
          return requests_.size();
        } else {
          return requestsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry getRequests(int index) {
        if (requestsBuilder_ == null) {
          return requests_.get(index);
        } else {
          return requestsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder setRequests(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.set(index, value);
          onChanged();
        } else {
          requestsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder setRequests(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.set(index, builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder addRequests(flyteidl.core.Tasks.Resources.ResourceEntry value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.add(value);
          onChanged();
        } else {
          requestsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder addRequests(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry value) {
        if (requestsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestsIsMutable();
          requests_.add(index, value);
          onChanged();
        } else {
          requestsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder addRequests(
          flyteidl.core.Tasks.Resources.ResourceEntry.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.add(builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder addRequests(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry.Builder builderForValue) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.add(index, builderForValue.build());
          onChanged();
        } else {
          requestsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder addAllRequests(
          java.lang.Iterable<? extends flyteidl.core.Tasks.Resources.ResourceEntry> values) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, requests_);
          onChanged();
        } else {
          requestsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder clearRequests() {
        if (requestsBuilder_ == null) {
          requests_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          requestsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public Builder removeRequests(int index) {
        if (requestsBuilder_ == null) {
          ensureRequestsIsMutable();
          requests_.remove(index);
          onChanged();
        } else {
          requestsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry.Builder getRequestsBuilder(
          int index) {
        return getRequestsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder getRequestsOrBuilder(
          int index) {
        if (requestsBuilder_ == null) {
          return requests_.get(index);  } else {
          return requestsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public java.util.List<? extends flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
           getRequestsOrBuilderList() {
        if (requestsBuilder_ != null) {
          return requestsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(requests_);
        }
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry.Builder addRequestsBuilder() {
        return getRequestsFieldBuilder().addBuilder(
            flyteidl.core.Tasks.Resources.ResourceEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry.Builder addRequestsBuilder(
          int index) {
        return getRequestsFieldBuilder().addBuilder(
            index, flyteidl.core.Tasks.Resources.ResourceEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * The desired set of resources requested. ResourceNames must be unique within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry requests = 1;</code>
       */
      public java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry.Builder> 
           getRequestsBuilderList() {
        return getRequestsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Tasks.Resources.ResourceEntry, flyteidl.core.Tasks.Resources.ResourceEntry.Builder, flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
          getRequestsFieldBuilder() {
        if (requestsBuilder_ == null) {
          requestsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              flyteidl.core.Tasks.Resources.ResourceEntry, flyteidl.core.Tasks.Resources.ResourceEntry.Builder, flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder>(
                  requests_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          requests_ = null;
        }
        return requestsBuilder_;
      }

      private java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> limits_ =
        java.util.Collections.emptyList();
      private void ensureLimitsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          limits_ = new java.util.ArrayList<flyteidl.core.Tasks.Resources.ResourceEntry>(limits_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Tasks.Resources.ResourceEntry, flyteidl.core.Tasks.Resources.ResourceEntry.Builder, flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> limitsBuilder_;

      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry> getLimitsList() {
        if (limitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(limits_);
        } else {
          return limitsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public int getLimitsCount() {
        if (limitsBuilder_ == null) {
          return limits_.size();
        } else {
          return limitsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry getLimits(int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);
        } else {
          return limitsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder setLimits(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.set(index, value);
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder setLimits(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.set(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder addLimits(flyteidl.core.Tasks.Resources.ResourceEntry value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder addLimits(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(index, value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder addLimits(
          flyteidl.core.Tasks.Resources.ResourceEntry.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder addLimits(
          int index, flyteidl.core.Tasks.Resources.ResourceEntry.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder addAllLimits(
          java.lang.Iterable<? extends flyteidl.core.Tasks.Resources.ResourceEntry> values) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, limits_);
          onChanged();
        } else {
          limitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder clearLimits() {
        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          limitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public Builder removeLimits(int index) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.remove(index);
          onChanged();
        } else {
          limitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry.Builder getLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder getLimitsOrBuilder(
          int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);  } else {
          return limitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public java.util.List<? extends flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
           getLimitsOrBuilderList() {
        if (limitsBuilder_ != null) {
          return limitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(limits_);
        }
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry.Builder addLimitsBuilder() {
        return getLimitsFieldBuilder().addBuilder(
            flyteidl.core.Tasks.Resources.ResourceEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public flyteidl.core.Tasks.Resources.ResourceEntry.Builder addLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().addBuilder(
            index, flyteidl.core.Tasks.Resources.ResourceEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
       * within the list.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Resources.ResourceEntry limits = 2;</code>
       */
      public java.util.List<flyteidl.core.Tasks.Resources.ResourceEntry.Builder> 
           getLimitsBuilderList() {
        return getLimitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Tasks.Resources.ResourceEntry, flyteidl.core.Tasks.Resources.ResourceEntry.Builder, flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder> 
          getLimitsFieldBuilder() {
        if (limitsBuilder_ == null) {
          limitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              flyteidl.core.Tasks.Resources.ResourceEntry, flyteidl.core.Tasks.Resources.ResourceEntry.Builder, flyteidl.core.Tasks.Resources.ResourceEntryOrBuilder>(
                  limits_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          limits_ = null;
        }
        return limitsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.Resources)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.Resources)
    private static final flyteidl.core.Tasks.Resources DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.Resources();
    }

    public static flyteidl.core.Tasks.Resources getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Resources>
        PARSER = new com.google.protobuf.AbstractParser<Resources>() {
      @java.lang.Override
      public Resources parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Resources(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Resources> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Resources> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.Resources getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RuntimeMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.RuntimeMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of runtime.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Type of runtime.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
     */
    flyteidl.core.Tasks.RuntimeMetadata.RuntimeType getType();

    /**
     * <pre>
     * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
     * checks to ensure tighter validation or setting expectations.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
     * checks to ensure tighter validation or setting expectations.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
     * </pre>
     *
     * <code>string flavor = 3;</code>
     */
    java.lang.String getFlavor();
    /**
     * <pre>
     *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
     * </pre>
     *
     * <code>string flavor = 3;</code>
     */
    com.google.protobuf.ByteString
        getFlavorBytes();
  }
  /**
   * <pre>
   * Runtime information. This is loosely defined to allow for extensibility.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.RuntimeMetadata}
   */
  public  static final class RuntimeMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.RuntimeMetadata)
      RuntimeMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RuntimeMetadata.newBuilder() to construct.
    private RuntimeMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RuntimeMetadata() {
      type_ = 0;
      version_ = "";
      flavor_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RuntimeMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              flavor_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_RuntimeMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_RuntimeMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.RuntimeMetadata.class, flyteidl.core.Tasks.RuntimeMetadata.Builder.class);
    }

    /**
     * Protobuf enum {@code flyteidl.core.RuntimeMetadata.RuntimeType}
     */
    public enum RuntimeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OTHER = 0;</code>
       */
      OTHER(0),
      /**
       * <code>FLYTE_SDK = 1;</code>
       */
      FLYTE_SDK(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>OTHER = 0;</code>
       */
      public static final int OTHER_VALUE = 0;
      /**
       * <code>FLYTE_SDK = 1;</code>
       */
      public static final int FLYTE_SDK_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RuntimeType valueOf(int value) {
        return forNumber(value);
      }

      public static RuntimeType forNumber(int value) {
        switch (value) {
          case 0: return OTHER;
          case 1: return FLYTE_SDK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RuntimeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RuntimeType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RuntimeType>() {
              public RuntimeType findValueByNumber(int number) {
                return RuntimeType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Tasks.RuntimeMetadata.getDescriptor().getEnumTypes().get(0);
      }

      private static final RuntimeType[] VALUES = values();

      public static RuntimeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RuntimeType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.RuntimeMetadata.RuntimeType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type of runtime.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Type of runtime.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
     */
    public flyteidl.core.Tasks.RuntimeMetadata.RuntimeType getType() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Tasks.RuntimeMetadata.RuntimeType result = flyteidl.core.Tasks.RuntimeMetadata.RuntimeType.valueOf(type_);
      return result == null ? flyteidl.core.Tasks.RuntimeMetadata.RuntimeType.UNRECOGNIZED : result;
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
     * checks to ensure tighter validation or setting expectations.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
     * checks to ensure tighter validation or setting expectations.
     * </pre>
     *
     * <code>string version = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLAVOR_FIELD_NUMBER = 3;
    private volatile java.lang.Object flavor_;
    /**
     * <pre>
     *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
     * </pre>
     *
     * <code>string flavor = 3;</code>
     */
    public java.lang.String getFlavor() {
      java.lang.Object ref = flavor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flavor_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
     * </pre>
     *
     * <code>string flavor = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFlavorBytes() {
      java.lang.Object ref = flavor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flavor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != flyteidl.core.Tasks.RuntimeMetadata.RuntimeType.OTHER.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!getVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, version_);
      }
      if (!getFlavorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, flavor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != flyteidl.core.Tasks.RuntimeMetadata.RuntimeType.OTHER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!getVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, version_);
      }
      if (!getFlavorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, flavor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.RuntimeMetadata)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.RuntimeMetadata other = (flyteidl.core.Tasks.RuntimeMetadata) obj;

      if (type_ != other.type_) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getFlavor()
          .equals(other.getFlavor())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + FLAVOR_FIELD_NUMBER;
      hash = (53 * hash) + getFlavor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.RuntimeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.RuntimeMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Runtime information. This is loosely defined to allow for extensibility.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.RuntimeMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.RuntimeMetadata)
        flyteidl.core.Tasks.RuntimeMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_RuntimeMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_RuntimeMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.RuntimeMetadata.class, flyteidl.core.Tasks.RuntimeMetadata.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.RuntimeMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        version_ = "";

        flavor_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_RuntimeMetadata_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.RuntimeMetadata getDefaultInstanceForType() {
        return flyteidl.core.Tasks.RuntimeMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.RuntimeMetadata build() {
        flyteidl.core.Tasks.RuntimeMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.RuntimeMetadata buildPartial() {
        flyteidl.core.Tasks.RuntimeMetadata result = new flyteidl.core.Tasks.RuntimeMetadata(this);
        result.type_ = type_;
        result.version_ = version_;
        result.flavor_ = flavor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.RuntimeMetadata) {
          return mergeFrom((flyteidl.core.Tasks.RuntimeMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.RuntimeMetadata other) {
        if (other == flyteidl.core.Tasks.RuntimeMetadata.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        if (!other.getFlavor().isEmpty()) {
          flavor_ = other.flavor_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.RuntimeMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.RuntimeMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Type of runtime.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Type of runtime.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of runtime.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
       */
      public flyteidl.core.Tasks.RuntimeMetadata.RuntimeType getType() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Tasks.RuntimeMetadata.RuntimeType result = flyteidl.core.Tasks.RuntimeMetadata.RuntimeType.valueOf(type_);
        return result == null ? flyteidl.core.Tasks.RuntimeMetadata.RuntimeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Type of runtime.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
       */
      public Builder setType(flyteidl.core.Tasks.RuntimeMetadata.RuntimeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of runtime.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata.RuntimeType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
       * checks to ensure tighter validation or setting expectations.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
       * checks to ensure tighter validation or setting expectations.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
       * checks to ensure tighter validation or setting expectations.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
       * checks to ensure tighter validation or setting expectations.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Version of the runtime. All versions should be backward compatible. However, certain cases call for version
       * checks to ensure tighter validation or setting expectations.
       * </pre>
       *
       * <code>string version = 2;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object flavor_ = "";
      /**
       * <pre>
       *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
       * </pre>
       *
       * <code>string flavor = 3;</code>
       */
      public java.lang.String getFlavor() {
        java.lang.Object ref = flavor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flavor_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
       * </pre>
       *
       * <code>string flavor = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFlavorBytes() {
        java.lang.Object ref = flavor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flavor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
       * </pre>
       *
       * <code>string flavor = 3;</code>
       */
      public Builder setFlavor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        flavor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
       * </pre>
       *
       * <code>string flavor = 3;</code>
       */
      public Builder clearFlavor() {
        
        flavor_ = getDefaultInstance().getFlavor();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *+optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
       * </pre>
       *
       * <code>string flavor = 3;</code>
       */
      public Builder setFlavorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        flavor_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.RuntimeMetadata)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.RuntimeMetadata)
    private static final flyteidl.core.Tasks.RuntimeMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.RuntimeMetadata();
    }

    public static flyteidl.core.Tasks.RuntimeMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RuntimeMetadata>
        PARSER = new com.google.protobuf.AbstractParser<RuntimeMetadata>() {
      @java.lang.Override
      public RuntimeMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RuntimeMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RuntimeMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RuntimeMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.RuntimeMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TaskMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.TaskMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
     * </pre>
     *
     * <code>bool discoverable = 1;</code>
     */
    boolean getDiscoverable();

    /**
     * <pre>
     * Runtime information about the task.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
     */
    boolean hasRuntime();
    /**
     * <pre>
     * Runtime information about the task.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
     */
    flyteidl.core.Tasks.RuntimeMetadata getRuntime();
    /**
     * <pre>
     * Runtime information about the task.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
     */
    flyteidl.core.Tasks.RuntimeMetadataOrBuilder getRuntimeOrBuilder();

    /**
     * <pre>
     * The overall timeout of a task including user-triggered retries.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    boolean hasTimeout();
    /**
     * <pre>
     * The overall timeout of a task including user-triggered retries.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    com.google.protobuf.Duration getTimeout();
    /**
     * <pre>
     * The overall timeout of a task including user-triggered retries.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
     */
    boolean hasRetries();
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
     */
    flyteidl.core.Literals.RetryStrategy getRetries();
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
     */
    flyteidl.core.Literals.RetryStrategyOrBuilder getRetriesOrBuilder();

    /**
     * <pre>
     * Indicates a logical version to apply to this task for the purpose of discovery.
     * </pre>
     *
     * <code>string discovery_version = 6;</code>
     */
    java.lang.String getDiscoveryVersion();
    /**
     * <pre>
     * Indicates a logical version to apply to this task for the purpose of discovery.
     * </pre>
     *
     * <code>string discovery_version = 6;</code>
     */
    com.google.protobuf.ByteString
        getDiscoveryVersionBytes();

    /**
     * <pre>
     * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
     * of the ending of support for a given task.
     * </pre>
     *
     * <code>string deprecated_error_message = 7;</code>
     */
    java.lang.String getDeprecatedErrorMessage();
    /**
     * <pre>
     * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
     * of the ending of support for a given task.
     * </pre>
     *
     * <code>string deprecated_error_message = 7;</code>
     */
    com.google.protobuf.ByteString
        getDeprecatedErrorMessageBytes();

    /**
     * <code>bool interruptible = 8;</code>
     */
    boolean getInterruptible();

    /**
     * <pre>
     * Indicates whether the system should attempt to execute discoverable instances in serial to avoid duplicate work
     * </pre>
     *
     * <code>bool cache_serializable = 9;</code>
     */
    boolean getCacheSerializable();

    /**
     * <pre>
     * Indicates whether the task will generate a Deck URI when it finishes executing.
     * </pre>
     *
     * <code>bool generates_deck = 10;</code>
     */
    boolean getGeneratesDeck();

    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */
    int getTagsCount();
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */
    boolean containsTags(
        java.lang.String key);
    /**
     * Use {@link #getTagsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getTags();
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getTagsMap();
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */

    java.lang.String getTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */

    java.lang.String getTagsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
     * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
     * identically as, the default PodTemplate configured in FlytePropeller.
     * </pre>
     *
     * <code>string pod_template_name = 12;</code>
     */
    java.lang.String getPodTemplateName();
    /**
     * <pre>
     * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
     * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
     * identically as, the default PodTemplate configured in FlytePropeller.
     * </pre>
     *
     * <code>string pod_template_name = 12;</code>
     */
    com.google.protobuf.ByteString
        getPodTemplateNameBytes();

    public flyteidl.core.Tasks.TaskMetadata.InterruptibleValueCase getInterruptibleValueCase();
  }
  /**
   * <pre>
   * Task Metadata
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.TaskMetadata}
   */
  public  static final class TaskMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.TaskMetadata)
      TaskMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TaskMetadata.newBuilder() to construct.
    private TaskMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskMetadata() {
      discoveryVersion_ = "";
      deprecatedErrorMessage_ = "";
      podTemplateName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TaskMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              discoverable_ = input.readBool();
              break;
            }
            case 18: {
              flyteidl.core.Tasks.RuntimeMetadata.Builder subBuilder = null;
              if (runtime_ != null) {
                subBuilder = runtime_.toBuilder();
              }
              runtime_ = input.readMessage(flyteidl.core.Tasks.RuntimeMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(runtime_);
                runtime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (timeout_ != null) {
                subBuilder = timeout_.toBuilder();
              }
              timeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeout_);
                timeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              flyteidl.core.Literals.RetryStrategy.Builder subBuilder = null;
              if (retries_ != null) {
                subBuilder = retries_.toBuilder();
              }
              retries_ = input.readMessage(flyteidl.core.Literals.RetryStrategy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(retries_);
                retries_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              discoveryVersion_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              deprecatedErrorMessage_ = s;
              break;
            }
            case 64: {
              interruptibleValueCase_ = 8;
              interruptibleValue_ = input.readBool();
              break;
            }
            case 72: {

              cacheSerializable_ = input.readBool();
              break;
            }
            case 80: {

              generatesDeck_ = input.readBool();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                tags_ = com.google.protobuf.MapField.newMapField(
                    TagsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              tags__ = input.readMessage(
                  TagsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              tags_.getMutableMap().put(
                  tags__.getKey(), tags__.getValue());
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              podTemplateName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskMetadata_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetTags();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.TaskMetadata.class, flyteidl.core.Tasks.TaskMetadata.Builder.class);
    }

    private int bitField0_;
    private int interruptibleValueCase_ = 0;
    private java.lang.Object interruptibleValue_;
    public enum InterruptibleValueCase
        implements com.google.protobuf.Internal.EnumLite {
      INTERRUPTIBLE(8),
      INTERRUPTIBLEVALUE_NOT_SET(0);
      private final int value;
      private InterruptibleValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static InterruptibleValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static InterruptibleValueCase forNumber(int value) {
        switch (value) {
          case 8: return INTERRUPTIBLE;
          case 0: return INTERRUPTIBLEVALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public InterruptibleValueCase
    getInterruptibleValueCase() {
      return InterruptibleValueCase.forNumber(
          interruptibleValueCase_);
    }

    public static final int DISCOVERABLE_FIELD_NUMBER = 1;
    private boolean discoverable_;
    /**
     * <pre>
     * Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
     * </pre>
     *
     * <code>bool discoverable = 1;</code>
     */
    public boolean getDiscoverable() {
      return discoverable_;
    }

    public static final int RUNTIME_FIELD_NUMBER = 2;
    private flyteidl.core.Tasks.RuntimeMetadata runtime_;
    /**
     * <pre>
     * Runtime information about the task.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
     */
    public boolean hasRuntime() {
      return runtime_ != null;
    }
    /**
     * <pre>
     * Runtime information about the task.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
     */
    public flyteidl.core.Tasks.RuntimeMetadata getRuntime() {
      return runtime_ == null ? flyteidl.core.Tasks.RuntimeMetadata.getDefaultInstance() : runtime_;
    }
    /**
     * <pre>
     * Runtime information about the task.
     * </pre>
     *
     * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
     */
    public flyteidl.core.Tasks.RuntimeMetadataOrBuilder getRuntimeOrBuilder() {
      return getRuntime();
    }

    public static final int TIMEOUT_FIELD_NUMBER = 4;
    private com.google.protobuf.Duration timeout_;
    /**
     * <pre>
     * The overall timeout of a task including user-triggered retries.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public boolean hasTimeout() {
      return timeout_ != null;
    }
    /**
     * <pre>
     * The overall timeout of a task including user-triggered retries.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public com.google.protobuf.Duration getTimeout() {
      return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
    }
    /**
     * <pre>
     * The overall timeout of a task including user-triggered retries.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
      return getTimeout();
    }

    public static final int RETRIES_FIELD_NUMBER = 5;
    private flyteidl.core.Literals.RetryStrategy retries_;
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
     */
    public boolean hasRetries() {
      return retries_ != null;
    }
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
     */
    public flyteidl.core.Literals.RetryStrategy getRetries() {
      return retries_ == null ? flyteidl.core.Literals.RetryStrategy.getDefaultInstance() : retries_;
    }
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
     */
    public flyteidl.core.Literals.RetryStrategyOrBuilder getRetriesOrBuilder() {
      return getRetries();
    }

    public static final int DISCOVERY_VERSION_FIELD_NUMBER = 6;
    private volatile java.lang.Object discoveryVersion_;
    /**
     * <pre>
     * Indicates a logical version to apply to this task for the purpose of discovery.
     * </pre>
     *
     * <code>string discovery_version = 6;</code>
     */
    public java.lang.String getDiscoveryVersion() {
      java.lang.Object ref = discoveryVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        discoveryVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Indicates a logical version to apply to this task for the purpose of discovery.
     * </pre>
     *
     * <code>string discovery_version = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDiscoveryVersionBytes() {
      java.lang.Object ref = discoveryVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        discoveryVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEPRECATED_ERROR_MESSAGE_FIELD_NUMBER = 7;
    private volatile java.lang.Object deprecatedErrorMessage_;
    /**
     * <pre>
     * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
     * of the ending of support for a given task.
     * </pre>
     *
     * <code>string deprecated_error_message = 7;</code>
     */
    public java.lang.String getDeprecatedErrorMessage() {
      java.lang.Object ref = deprecatedErrorMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deprecatedErrorMessage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
     * of the ending of support for a given task.
     * </pre>
     *
     * <code>string deprecated_error_message = 7;</code>
     */
    public com.google.protobuf.ByteString
        getDeprecatedErrorMessageBytes() {
      java.lang.Object ref = deprecatedErrorMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deprecatedErrorMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERRUPTIBLE_FIELD_NUMBER = 8;
    /**
     * <code>bool interruptible = 8;</code>
     */
    public boolean getInterruptible() {
      if (interruptibleValueCase_ == 8) {
        return (java.lang.Boolean) interruptibleValue_;
      }
      return false;
    }

    public static final int CACHE_SERIALIZABLE_FIELD_NUMBER = 9;
    private boolean cacheSerializable_;
    /**
     * <pre>
     * Indicates whether the system should attempt to execute discoverable instances in serial to avoid duplicate work
     * </pre>
     *
     * <code>bool cache_serializable = 9;</code>
     */
    public boolean getCacheSerializable() {
      return cacheSerializable_;
    }

    public static final int GENERATES_DECK_FIELD_NUMBER = 10;
    private boolean generatesDeck_;
    /**
     * <pre>
     * Indicates whether the task will generate a Deck URI when it finishes executing.
     * </pre>
     *
     * <code>bool generates_deck = 10;</code>
     */
    public boolean getGeneratesDeck() {
      return generatesDeck_;
    }

    public static final int TAGS_FIELD_NUMBER = 11;
    private static final class TagsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  flyteidl.core.Tasks.internal_static_flyteidl_core_TaskMetadata_TagsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> tags_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetTags() {
      if (tags_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TagsDefaultEntryHolder.defaultEntry);
      }
      return tags_;
    }

    public int getTagsCount() {
      return internalGetTags().getMap().size();
    }
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */

    public boolean containsTags(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTags().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTagsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTags() {
      return getTagsMap();
    }
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
      return internalGetTags().getMap();
    }
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */

    public java.lang.String getTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Arbitrary tags that allow users and the platform to store small but arbitrary labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 11;</code>
     */

    public java.lang.String getTagsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int POD_TEMPLATE_NAME_FIELD_NUMBER = 12;
    private volatile java.lang.Object podTemplateName_;
    /**
     * <pre>
     * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
     * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
     * identically as, the default PodTemplate configured in FlytePropeller.
     * </pre>
     *
     * <code>string pod_template_name = 12;</code>
     */
    public java.lang.String getPodTemplateName() {
      java.lang.Object ref = podTemplateName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        podTemplateName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
     * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
     * identically as, the default PodTemplate configured in FlytePropeller.
     * </pre>
     *
     * <code>string pod_template_name = 12;</code>
     */
    public com.google.protobuf.ByteString
        getPodTemplateNameBytes() {
      java.lang.Object ref = podTemplateName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        podTemplateName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (discoverable_ != false) {
        output.writeBool(1, discoverable_);
      }
      if (runtime_ != null) {
        output.writeMessage(2, getRuntime());
      }
      if (timeout_ != null) {
        output.writeMessage(4, getTimeout());
      }
      if (retries_ != null) {
        output.writeMessage(5, getRetries());
      }
      if (!getDiscoveryVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, discoveryVersion_);
      }
      if (!getDeprecatedErrorMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, deprecatedErrorMessage_);
      }
      if (interruptibleValueCase_ == 8) {
        output.writeBool(
            8, (boolean)((java.lang.Boolean) interruptibleValue_));
      }
      if (cacheSerializable_ != false) {
        output.writeBool(9, cacheSerializable_);
      }
      if (generatesDeck_ != false) {
        output.writeBool(10, generatesDeck_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTags(),
          TagsDefaultEntryHolder.defaultEntry,
          11);
      if (!getPodTemplateNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, podTemplateName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (discoverable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, discoverable_);
      }
      if (runtime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRuntime());
      }
      if (timeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTimeout());
      }
      if (retries_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRetries());
      }
      if (!getDiscoveryVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, discoveryVersion_);
      }
      if (!getDeprecatedErrorMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, deprecatedErrorMessage_);
      }
      if (interruptibleValueCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              8, (boolean)((java.lang.Boolean) interruptibleValue_));
      }
      if (cacheSerializable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, cacheSerializable_);
      }
      if (generatesDeck_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, generatesDeck_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetTags().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        tags__ = TagsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, tags__);
      }
      if (!getPodTemplateNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, podTemplateName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.TaskMetadata)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.TaskMetadata other = (flyteidl.core.Tasks.TaskMetadata) obj;

      if (getDiscoverable()
          != other.getDiscoverable()) return false;
      if (hasRuntime() != other.hasRuntime()) return false;
      if (hasRuntime()) {
        if (!getRuntime()
            .equals(other.getRuntime())) return false;
      }
      if (hasTimeout() != other.hasTimeout()) return false;
      if (hasTimeout()) {
        if (!getTimeout()
            .equals(other.getTimeout())) return false;
      }
      if (hasRetries() != other.hasRetries()) return false;
      if (hasRetries()) {
        if (!getRetries()
            .equals(other.getRetries())) return false;
      }
      if (!getDiscoveryVersion()
          .equals(other.getDiscoveryVersion())) return false;
      if (!getDeprecatedErrorMessage()
          .equals(other.getDeprecatedErrorMessage())) return false;
      if (getCacheSerializable()
          != other.getCacheSerializable()) return false;
      if (getGeneratesDeck()
          != other.getGeneratesDeck()) return false;
      if (!internalGetTags().equals(
          other.internalGetTags())) return false;
      if (!getPodTemplateName()
          .equals(other.getPodTemplateName())) return false;
      if (!getInterruptibleValueCase().equals(other.getInterruptibleValueCase())) return false;
      switch (interruptibleValueCase_) {
        case 8:
          if (getInterruptible()
              != other.getInterruptible()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DISCOVERABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDiscoverable());
      if (hasRuntime()) {
        hash = (37 * hash) + RUNTIME_FIELD_NUMBER;
        hash = (53 * hash) + getRuntime().hashCode();
      }
      if (hasTimeout()) {
        hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getTimeout().hashCode();
      }
      if (hasRetries()) {
        hash = (37 * hash) + RETRIES_FIELD_NUMBER;
        hash = (53 * hash) + getRetries().hashCode();
      }
      hash = (37 * hash) + DISCOVERY_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getDiscoveryVersion().hashCode();
      hash = (37 * hash) + DEPRECATED_ERROR_MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getDeprecatedErrorMessage().hashCode();
      hash = (37 * hash) + CACHE_SERIALIZABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCacheSerializable());
      hash = (37 * hash) + GENERATES_DECK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGeneratesDeck());
      if (!internalGetTags().getMap().isEmpty()) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTags().hashCode();
      }
      hash = (37 * hash) + POD_TEMPLATE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getPodTemplateName().hashCode();
      switch (interruptibleValueCase_) {
        case 8:
          hash = (37 * hash) + INTERRUPTIBLE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getInterruptible());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.TaskMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.TaskMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Task Metadata
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.TaskMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.TaskMetadata)
        flyteidl.core.Tasks.TaskMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskMetadata_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMutableTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.TaskMetadata.class, flyteidl.core.Tasks.TaskMetadata.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.TaskMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        discoverable_ = false;

        if (runtimeBuilder_ == null) {
          runtime_ = null;
        } else {
          runtime_ = null;
          runtimeBuilder_ = null;
        }
        if (timeoutBuilder_ == null) {
          timeout_ = null;
        } else {
          timeout_ = null;
          timeoutBuilder_ = null;
        }
        if (retriesBuilder_ == null) {
          retries_ = null;
        } else {
          retries_ = null;
          retriesBuilder_ = null;
        }
        discoveryVersion_ = "";

        deprecatedErrorMessage_ = "";

        cacheSerializable_ = false;

        generatesDeck_ = false;

        internalGetMutableTags().clear();
        podTemplateName_ = "";

        interruptibleValueCase_ = 0;
        interruptibleValue_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskMetadata_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.TaskMetadata getDefaultInstanceForType() {
        return flyteidl.core.Tasks.TaskMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.TaskMetadata build() {
        flyteidl.core.Tasks.TaskMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.TaskMetadata buildPartial() {
        flyteidl.core.Tasks.TaskMetadata result = new flyteidl.core.Tasks.TaskMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.discoverable_ = discoverable_;
        if (runtimeBuilder_ == null) {
          result.runtime_ = runtime_;
        } else {
          result.runtime_ = runtimeBuilder_.build();
        }
        if (timeoutBuilder_ == null) {
          result.timeout_ = timeout_;
        } else {
          result.timeout_ = timeoutBuilder_.build();
        }
        if (retriesBuilder_ == null) {
          result.retries_ = retries_;
        } else {
          result.retries_ = retriesBuilder_.build();
        }
        result.discoveryVersion_ = discoveryVersion_;
        result.deprecatedErrorMessage_ = deprecatedErrorMessage_;
        if (interruptibleValueCase_ == 8) {
          result.interruptibleValue_ = interruptibleValue_;
        }
        result.cacheSerializable_ = cacheSerializable_;
        result.generatesDeck_ = generatesDeck_;
        result.tags_ = internalGetTags();
        result.tags_.makeImmutable();
        result.podTemplateName_ = podTemplateName_;
        result.bitField0_ = to_bitField0_;
        result.interruptibleValueCase_ = interruptibleValueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.TaskMetadata) {
          return mergeFrom((flyteidl.core.Tasks.TaskMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.TaskMetadata other) {
        if (other == flyteidl.core.Tasks.TaskMetadata.getDefaultInstance()) return this;
        if (other.getDiscoverable() != false) {
          setDiscoverable(other.getDiscoverable());
        }
        if (other.hasRuntime()) {
          mergeRuntime(other.getRuntime());
        }
        if (other.hasTimeout()) {
          mergeTimeout(other.getTimeout());
        }
        if (other.hasRetries()) {
          mergeRetries(other.getRetries());
        }
        if (!other.getDiscoveryVersion().isEmpty()) {
          discoveryVersion_ = other.discoveryVersion_;
          onChanged();
        }
        if (!other.getDeprecatedErrorMessage().isEmpty()) {
          deprecatedErrorMessage_ = other.deprecatedErrorMessage_;
          onChanged();
        }
        if (other.getCacheSerializable() != false) {
          setCacheSerializable(other.getCacheSerializable());
        }
        if (other.getGeneratesDeck() != false) {
          setGeneratesDeck(other.getGeneratesDeck());
        }
        internalGetMutableTags().mergeFrom(
            other.internalGetTags());
        if (!other.getPodTemplateName().isEmpty()) {
          podTemplateName_ = other.podTemplateName_;
          onChanged();
        }
        switch (other.getInterruptibleValueCase()) {
          case INTERRUPTIBLE: {
            setInterruptible(other.getInterruptible());
            break;
          }
          case INTERRUPTIBLEVALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.TaskMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.TaskMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int interruptibleValueCase_ = 0;
      private java.lang.Object interruptibleValue_;
      public InterruptibleValueCase
          getInterruptibleValueCase() {
        return InterruptibleValueCase.forNumber(
            interruptibleValueCase_);
      }

      public Builder clearInterruptibleValue() {
        interruptibleValueCase_ = 0;
        interruptibleValue_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private boolean discoverable_ ;
      /**
       * <pre>
       * Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
       * </pre>
       *
       * <code>bool discoverable = 1;</code>
       */
      public boolean getDiscoverable() {
        return discoverable_;
      }
      /**
       * <pre>
       * Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
       * </pre>
       *
       * <code>bool discoverable = 1;</code>
       */
      public Builder setDiscoverable(boolean value) {
        
        discoverable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
       * </pre>
       *
       * <code>bool discoverable = 1;</code>
       */
      public Builder clearDiscoverable() {
        
        discoverable_ = false;
        onChanged();
        return this;
      }

      private flyteidl.core.Tasks.RuntimeMetadata runtime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.RuntimeMetadata, flyteidl.core.Tasks.RuntimeMetadata.Builder, flyteidl.core.Tasks.RuntimeMetadataOrBuilder> runtimeBuilder_;
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public boolean hasRuntime() {
        return runtimeBuilder_ != null || runtime_ != null;
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public flyteidl.core.Tasks.RuntimeMetadata getRuntime() {
        if (runtimeBuilder_ == null) {
          return runtime_ == null ? flyteidl.core.Tasks.RuntimeMetadata.getDefaultInstance() : runtime_;
        } else {
          return runtimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public Builder setRuntime(flyteidl.core.Tasks.RuntimeMetadata value) {
        if (runtimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          runtime_ = value;
          onChanged();
        } else {
          runtimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public Builder setRuntime(
          flyteidl.core.Tasks.RuntimeMetadata.Builder builderForValue) {
        if (runtimeBuilder_ == null) {
          runtime_ = builderForValue.build();
          onChanged();
        } else {
          runtimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public Builder mergeRuntime(flyteidl.core.Tasks.RuntimeMetadata value) {
        if (runtimeBuilder_ == null) {
          if (runtime_ != null) {
            runtime_ =
              flyteidl.core.Tasks.RuntimeMetadata.newBuilder(runtime_).mergeFrom(value).buildPartial();
          } else {
            runtime_ = value;
          }
          onChanged();
        } else {
          runtimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public Builder clearRuntime() {
        if (runtimeBuilder_ == null) {
          runtime_ = null;
          onChanged();
        } else {
          runtime_ = null;
          runtimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public flyteidl.core.Tasks.RuntimeMetadata.Builder getRuntimeBuilder() {
        
        onChanged();
        return getRuntimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      public flyteidl.core.Tasks.RuntimeMetadataOrBuilder getRuntimeOrBuilder() {
        if (runtimeBuilder_ != null) {
          return runtimeBuilder_.getMessageOrBuilder();
        } else {
          return runtime_ == null ?
              flyteidl.core.Tasks.RuntimeMetadata.getDefaultInstance() : runtime_;
        }
      }
      /**
       * <pre>
       * Runtime information about the task.
       * </pre>
       *
       * <code>.flyteidl.core.RuntimeMetadata runtime = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.RuntimeMetadata, flyteidl.core.Tasks.RuntimeMetadata.Builder, flyteidl.core.Tasks.RuntimeMetadataOrBuilder> 
          getRuntimeFieldBuilder() {
        if (runtimeBuilder_ == null) {
          runtimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.RuntimeMetadata, flyteidl.core.Tasks.RuntimeMetadata.Builder, flyteidl.core.Tasks.RuntimeMetadataOrBuilder>(
                  getRuntime(),
                  getParentForChildren(),
                  isClean());
          runtime_ = null;
        }
        return runtimeBuilder_;
      }

      private com.google.protobuf.Duration timeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeoutBuilder_;
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public boolean hasTimeout() {
        return timeoutBuilder_ != null || timeout_ != null;
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public com.google.protobuf.Duration getTimeout() {
        if (timeoutBuilder_ == null) {
          return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
        } else {
          return timeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public Builder setTimeout(com.google.protobuf.Duration value) {
        if (timeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeout_ = value;
          onChanged();
        } else {
          timeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public Builder setTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (timeoutBuilder_ == null) {
          timeout_ = builderForValue.build();
          onChanged();
        } else {
          timeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public Builder mergeTimeout(com.google.protobuf.Duration value) {
        if (timeoutBuilder_ == null) {
          if (timeout_ != null) {
            timeout_ =
              com.google.protobuf.Duration.newBuilder(timeout_).mergeFrom(value).buildPartial();
          } else {
            timeout_ = value;
          }
          onChanged();
        } else {
          timeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public Builder clearTimeout() {
        if (timeoutBuilder_ == null) {
          timeout_ = null;
          onChanged();
        } else {
          timeout_ = null;
          timeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public com.google.protobuf.Duration.Builder getTimeoutBuilder() {
        
        onChanged();
        return getTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
        if (timeoutBuilder_ != null) {
          return timeoutBuilder_.getMessageOrBuilder();
        } else {
          return timeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : timeout_;
        }
      }
      /**
       * <pre>
       * The overall timeout of a task including user-triggered retries.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getTimeoutFieldBuilder() {
        if (timeoutBuilder_ == null) {
          timeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getTimeout(),
                  getParentForChildren(),
                  isClean());
          timeout_ = null;
        }
        return timeoutBuilder_;
      }

      private flyteidl.core.Literals.RetryStrategy retries_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Literals.RetryStrategy, flyteidl.core.Literals.RetryStrategy.Builder, flyteidl.core.Literals.RetryStrategyOrBuilder> retriesBuilder_;
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public boolean hasRetries() {
        return retriesBuilder_ != null || retries_ != null;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public flyteidl.core.Literals.RetryStrategy getRetries() {
        if (retriesBuilder_ == null) {
          return retries_ == null ? flyteidl.core.Literals.RetryStrategy.getDefaultInstance() : retries_;
        } else {
          return retriesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public Builder setRetries(flyteidl.core.Literals.RetryStrategy value) {
        if (retriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          retries_ = value;
          onChanged();
        } else {
          retriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public Builder setRetries(
          flyteidl.core.Literals.RetryStrategy.Builder builderForValue) {
        if (retriesBuilder_ == null) {
          retries_ = builderForValue.build();
          onChanged();
        } else {
          retriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public Builder mergeRetries(flyteidl.core.Literals.RetryStrategy value) {
        if (retriesBuilder_ == null) {
          if (retries_ != null) {
            retries_ =
              flyteidl.core.Literals.RetryStrategy.newBuilder(retries_).mergeFrom(value).buildPartial();
          } else {
            retries_ = value;
          }
          onChanged();
        } else {
          retriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public Builder clearRetries() {
        if (retriesBuilder_ == null) {
          retries_ = null;
          onChanged();
        } else {
          retries_ = null;
          retriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public flyteidl.core.Literals.RetryStrategy.Builder getRetriesBuilder() {
        
        onChanged();
        return getRetriesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      public flyteidl.core.Literals.RetryStrategyOrBuilder getRetriesOrBuilder() {
        if (retriesBuilder_ != null) {
          return retriesBuilder_.getMessageOrBuilder();
        } else {
          return retries_ == null ?
              flyteidl.core.Literals.RetryStrategy.getDefaultInstance() : retries_;
        }
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Literals.RetryStrategy, flyteidl.core.Literals.RetryStrategy.Builder, flyteidl.core.Literals.RetryStrategyOrBuilder> 
          getRetriesFieldBuilder() {
        if (retriesBuilder_ == null) {
          retriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Literals.RetryStrategy, flyteidl.core.Literals.RetryStrategy.Builder, flyteidl.core.Literals.RetryStrategyOrBuilder>(
                  getRetries(),
                  getParentForChildren(),
                  isClean());
          retries_ = null;
        }
        return retriesBuilder_;
      }

      private java.lang.Object discoveryVersion_ = "";
      /**
       * <pre>
       * Indicates a logical version to apply to this task for the purpose of discovery.
       * </pre>
       *
       * <code>string discovery_version = 6;</code>
       */
      public java.lang.String getDiscoveryVersion() {
        java.lang.Object ref = discoveryVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          discoveryVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Indicates a logical version to apply to this task for the purpose of discovery.
       * </pre>
       *
       * <code>string discovery_version = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDiscoveryVersionBytes() {
        java.lang.Object ref = discoveryVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          discoveryVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Indicates a logical version to apply to this task for the purpose of discovery.
       * </pre>
       *
       * <code>string discovery_version = 6;</code>
       */
      public Builder setDiscoveryVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        discoveryVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates a logical version to apply to this task for the purpose of discovery.
       * </pre>
       *
       * <code>string discovery_version = 6;</code>
       */
      public Builder clearDiscoveryVersion() {
        
        discoveryVersion_ = getDefaultInstance().getDiscoveryVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates a logical version to apply to this task for the purpose of discovery.
       * </pre>
       *
       * <code>string discovery_version = 6;</code>
       */
      public Builder setDiscoveryVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        discoveryVersion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object deprecatedErrorMessage_ = "";
      /**
       * <pre>
       * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
       * of the ending of support for a given task.
       * </pre>
       *
       * <code>string deprecated_error_message = 7;</code>
       */
      public java.lang.String getDeprecatedErrorMessage() {
        java.lang.Object ref = deprecatedErrorMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deprecatedErrorMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
       * of the ending of support for a given task.
       * </pre>
       *
       * <code>string deprecated_error_message = 7;</code>
       */
      public com.google.protobuf.ByteString
          getDeprecatedErrorMessageBytes() {
        java.lang.Object ref = deprecatedErrorMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deprecatedErrorMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
       * of the ending of support for a given task.
       * </pre>
       *
       * <code>string deprecated_error_message = 7;</code>
       */
      public Builder setDeprecatedErrorMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deprecatedErrorMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
       * of the ending of support for a given task.
       * </pre>
       *
       * <code>string deprecated_error_message = 7;</code>
       */
      public Builder clearDeprecatedErrorMessage() {
        
        deprecatedErrorMessage_ = getDefaultInstance().getDeprecatedErrorMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
       * of the ending of support for a given task.
       * </pre>
       *
       * <code>string deprecated_error_message = 7;</code>
       */
      public Builder setDeprecatedErrorMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deprecatedErrorMessage_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>bool interruptible = 8;</code>
       */
      public boolean getInterruptible() {
        if (interruptibleValueCase_ == 8) {
          return (java.lang.Boolean) interruptibleValue_;
        }
        return false;
      }
      /**
       * <code>bool interruptible = 8;</code>
       */
      public Builder setInterruptible(boolean value) {
        interruptibleValueCase_ = 8;
        interruptibleValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool interruptible = 8;</code>
       */
      public Builder clearInterruptible() {
        if (interruptibleValueCase_ == 8) {
          interruptibleValueCase_ = 0;
          interruptibleValue_ = null;
          onChanged();
        }
        return this;
      }

      private boolean cacheSerializable_ ;
      /**
       * <pre>
       * Indicates whether the system should attempt to execute discoverable instances in serial to avoid duplicate work
       * </pre>
       *
       * <code>bool cache_serializable = 9;</code>
       */
      public boolean getCacheSerializable() {
        return cacheSerializable_;
      }
      /**
       * <pre>
       * Indicates whether the system should attempt to execute discoverable instances in serial to avoid duplicate work
       * </pre>
       *
       * <code>bool cache_serializable = 9;</code>
       */
      public Builder setCacheSerializable(boolean value) {
        
        cacheSerializable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the system should attempt to execute discoverable instances in serial to avoid duplicate work
       * </pre>
       *
       * <code>bool cache_serializable = 9;</code>
       */
      public Builder clearCacheSerializable() {
        
        cacheSerializable_ = false;
        onChanged();
        return this;
      }

      private boolean generatesDeck_ ;
      /**
       * <pre>
       * Indicates whether the task will generate a Deck URI when it finishes executing.
       * </pre>
       *
       * <code>bool generates_deck = 10;</code>
       */
      public boolean getGeneratesDeck() {
        return generatesDeck_;
      }
      /**
       * <pre>
       * Indicates whether the task will generate a Deck URI when it finishes executing.
       * </pre>
       *
       * <code>bool generates_deck = 10;</code>
       */
      public Builder setGeneratesDeck(boolean value) {
        
        generatesDeck_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates whether the task will generate a Deck URI when it finishes executing.
       * </pre>
       *
       * <code>bool generates_deck = 10;</code>
       */
      public Builder clearGeneratesDeck() {
        
        generatesDeck_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> tags_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetTags() {
        if (tags_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TagsDefaultEntryHolder.defaultEntry);
        }
        return tags_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableTags() {
        onChanged();;
        if (tags_ == null) {
          tags_ = com.google.protobuf.MapField.newMapField(
              TagsDefaultEntryHolder.defaultEntry);
        }
        if (!tags_.isMutable()) {
          tags_ = tags_.copy();
        }
        return tags_;
      }

      public int getTagsCount() {
        return internalGetTags().getMap().size();
      }
      /**
       * <pre>
       * Arbitrary tags that allow users and the platform to store small but arbitrary labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 11;</code>
       */

      public boolean containsTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTags().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTagsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getTags() {
        return getTagsMap();
      }
      /**
       * <pre>
       * Arbitrary tags that allow users and the platform to store small but arbitrary labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 11;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
        return internalGetTags().getMap();
      }
      /**
       * <pre>
       * Arbitrary tags that allow users and the platform to store small but arbitrary labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 11;</code>
       */

      public java.lang.String getTagsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTags().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Arbitrary tags that allow users and the platform to store small but arbitrary labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 11;</code>
       */

      public java.lang.String getTagsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTags().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTags() {
        internalGetMutableTags().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Arbitrary tags that allow users and the platform to store small but arbitrary labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 11;</code>
       */

      public Builder removeTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTags().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableTags() {
        return internalGetMutableTags().getMutableMap();
      }
      /**
       * <pre>
       * Arbitrary tags that allow users and the platform to store small but arbitrary labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 11;</code>
       */
      public Builder putTags(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTags().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Arbitrary tags that allow users and the platform to store small but arbitrary labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 11;</code>
       */

      public Builder putAllTags(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableTags().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.lang.Object podTemplateName_ = "";
      /**
       * <pre>
       * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
       * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
       * identically as, the default PodTemplate configured in FlytePropeller.
       * </pre>
       *
       * <code>string pod_template_name = 12;</code>
       */
      public java.lang.String getPodTemplateName() {
        java.lang.Object ref = podTemplateName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          podTemplateName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
       * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
       * identically as, the default PodTemplate configured in FlytePropeller.
       * </pre>
       *
       * <code>string pod_template_name = 12;</code>
       */
      public com.google.protobuf.ByteString
          getPodTemplateNameBytes() {
        java.lang.Object ref = podTemplateName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          podTemplateName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
       * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
       * identically as, the default PodTemplate configured in FlytePropeller.
       * </pre>
       *
       * <code>string pod_template_name = 12;</code>
       */
      public Builder setPodTemplateName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        podTemplateName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
       * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
       * identically as, the default PodTemplate configured in FlytePropeller.
       * </pre>
       *
       * <code>string pod_template_name = 12;</code>
       */
      public Builder clearPodTemplateName() {
        
        podTemplateName_ = getDefaultInstance().getPodTemplateName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pod_template_name is the unique name of a PodTemplate k8s resource to be used as the base configuration if this
       * task creates a k8s Pod. If this value is set, the specified PodTemplate will be used instead of, but applied
       * identically as, the default PodTemplate configured in FlytePropeller.
       * </pre>
       *
       * <code>string pod_template_name = 12;</code>
       */
      public Builder setPodTemplateNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        podTemplateName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.TaskMetadata)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.TaskMetadata)
    private static final flyteidl.core.Tasks.TaskMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.TaskMetadata();
    }

    public static flyteidl.core.Tasks.TaskMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskMetadata>
        PARSER = new com.google.protobuf.AbstractParser<TaskMetadata>() {
      @java.lang.Override
      public TaskMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TaskMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.TaskMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TaskTemplateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.TaskTemplate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1;</code>
     */
    flyteidl.core.IdentifierOuterClass.Identifier getId();
    /**
     * <pre>
     * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1;</code>
     */
    flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder getIdOrBuilder();

    /**
     * <pre>
     * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
     * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
     * implementation registered for the TaskCategory.
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
     * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
     * implementation registered for the TaskCategory.
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * Extra metadata about the task.
     * </pre>
     *
     * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Extra metadata about the task.
     * </pre>
     *
     * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
     */
    flyteidl.core.Tasks.TaskMetadata getMetadata();
    /**
     * <pre>
     * Extra metadata about the task.
     * </pre>
     *
     * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
     */
    flyteidl.core.Tasks.TaskMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
     * compile-time validation of the workflow to avoid costly runtime failures.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 4;</code>
     */
    boolean hasInterface();
    /**
     * <pre>
     * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
     * compile-time validation of the workflow to avoid costly runtime failures.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 4;</code>
     */
    flyteidl.core.Interface.TypedInterface getInterface();
    /**
     * <pre>
     * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
     * compile-time validation of the workflow to avoid costly runtime failures.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 4;</code>
     */
    flyteidl.core.Interface.TypedInterfaceOrBuilder getInterfaceOrBuilder();

    /**
     * <pre>
     * Custom data about the task. This is extensible to allow various plugins in the system.
     * </pre>
     *
     * <code>.google.protobuf.Struct custom = 5;</code>
     */
    boolean hasCustom();
    /**
     * <pre>
     * Custom data about the task. This is extensible to allow various plugins in the system.
     * </pre>
     *
     * <code>.google.protobuf.Struct custom = 5;</code>
     */
    com.google.protobuf.Struct getCustom();
    /**
     * <pre>
     * Custom data about the task. This is extensible to allow various plugins in the system.
     * </pre>
     *
     * <code>.google.protobuf.Struct custom = 5;</code>
     */
    com.google.protobuf.StructOrBuilder getCustomOrBuilder();

    /**
     * <code>.flyteidl.core.Container container = 6;</code>
     */
    boolean hasContainer();
    /**
     * <code>.flyteidl.core.Container container = 6;</code>
     */
    flyteidl.core.Tasks.Container getContainer();
    /**
     * <code>.flyteidl.core.Container container = 6;</code>
     */
    flyteidl.core.Tasks.ContainerOrBuilder getContainerOrBuilder();

    /**
     * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
     */
    boolean hasK8SPod();
    /**
     * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
     */
    flyteidl.core.Tasks.K8sPod getK8SPod();
    /**
     * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
     */
    flyteidl.core.Tasks.K8sPodOrBuilder getK8SPodOrBuilder();

    /**
     * <code>.flyteidl.core.Sql sql = 18;</code>
     */
    boolean hasSql();
    /**
     * <code>.flyteidl.core.Sql sql = 18;</code>
     */
    flyteidl.core.Tasks.Sql getSql();
    /**
     * <code>.flyteidl.core.Sql sql = 18;</code>
     */
    flyteidl.core.Tasks.SqlOrBuilder getSqlOrBuilder();

    /**
     * <pre>
     * This can be used to customize task handling at execution time for the same task type.
     * </pre>
     *
     * <code>int32 task_type_version = 7;</code>
     */
    int getTaskTypeVersion();

    /**
     * <pre>
     * security_context encapsulates security attributes requested to run this task.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
     */
    boolean hasSecurityContext();
    /**
     * <pre>
     * security_context encapsulates security attributes requested to run this task.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
     */
    flyteidl.core.Security.SecurityContext getSecurityContext();
    /**
     * <pre>
     * security_context encapsulates security attributes requested to run this task.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
     */
    flyteidl.core.Security.SecurityContextOrBuilder getSecurityContextOrBuilder();

    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */
    int getConfigCount();
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */
    boolean containsConfig(
        java.lang.String key);
    /**
     * Use {@link #getConfigMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getConfig();
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getConfigMap();
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */

    java.lang.String getConfigOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */

    java.lang.String getConfigOrThrow(
        java.lang.String key);

    public flyteidl.core.Tasks.TaskTemplate.TargetCase getTargetCase();
  }
  /**
   * <pre>
   * A Task structure that uniquely identifies a task in the system
   * Tasks are registered as a first step in the system.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.TaskTemplate}
   */
  public  static final class TaskTemplate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.TaskTemplate)
      TaskTemplateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TaskTemplate.newBuilder() to construct.
    private TaskTemplate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskTemplate() {
      type_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TaskTemplate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              flyteidl.core.IdentifierOuterClass.Identifier.Builder subBuilder = null;
              if (id_ != null) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(flyteidl.core.IdentifierOuterClass.Identifier.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 26: {
              flyteidl.core.Tasks.TaskMetadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(flyteidl.core.Tasks.TaskMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              flyteidl.core.Interface.TypedInterface.Builder subBuilder = null;
              if (interface_ != null) {
                subBuilder = interface_.toBuilder();
              }
              interface_ = input.readMessage(flyteidl.core.Interface.TypedInterface.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(interface_);
                interface_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.Struct.Builder subBuilder = null;
              if (custom_ != null) {
                subBuilder = custom_.toBuilder();
              }
              custom_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(custom_);
                custom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              flyteidl.core.Tasks.Container.Builder subBuilder = null;
              if (targetCase_ == 6) {
                subBuilder = ((flyteidl.core.Tasks.Container) target_).toBuilder();
              }
              target_ =
                  input.readMessage(flyteidl.core.Tasks.Container.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.core.Tasks.Container) target_);
                target_ = subBuilder.buildPartial();
              }
              targetCase_ = 6;
              break;
            }
            case 56: {

              taskTypeVersion_ = input.readInt32();
              break;
            }
            case 66: {
              flyteidl.core.Security.SecurityContext.Builder subBuilder = null;
              if (securityContext_ != null) {
                subBuilder = securityContext_.toBuilder();
              }
              securityContext_ = input.readMessage(flyteidl.core.Security.SecurityContext.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(securityContext_);
                securityContext_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                config_ = com.google.protobuf.MapField.newMapField(
                    ConfigDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              config__ = input.readMessage(
                  ConfigDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              config_.getMutableMap().put(
                  config__.getKey(), config__.getValue());
              break;
            }
            case 138: {
              flyteidl.core.Tasks.K8sPod.Builder subBuilder = null;
              if (targetCase_ == 17) {
                subBuilder = ((flyteidl.core.Tasks.K8sPod) target_).toBuilder();
              }
              target_ =
                  input.readMessage(flyteidl.core.Tasks.K8sPod.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.core.Tasks.K8sPod) target_);
                target_ = subBuilder.buildPartial();
              }
              targetCase_ = 17;
              break;
            }
            case 146: {
              flyteidl.core.Tasks.Sql.Builder subBuilder = null;
              if (targetCase_ == 18) {
                subBuilder = ((flyteidl.core.Tasks.Sql) target_).toBuilder();
              }
              target_ =
                  input.readMessage(flyteidl.core.Tasks.Sql.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.core.Tasks.Sql) target_);
                target_ = subBuilder.buildPartial();
              }
              targetCase_ = 18;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskTemplate_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 16:
          return internalGetConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskTemplate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.TaskTemplate.class, flyteidl.core.Tasks.TaskTemplate.Builder.class);
    }

    private int bitField0_;
    private int targetCase_ = 0;
    private java.lang.Object target_;
    public enum TargetCase
        implements com.google.protobuf.Internal.EnumLite {
      CONTAINER(6),
      K8S_POD(17),
      SQL(18),
      TARGET_NOT_SET(0);
      private final int value;
      private TargetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TargetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TargetCase forNumber(int value) {
        switch (value) {
          case 6: return CONTAINER;
          case 17: return K8S_POD;
          case 18: return SQL;
          case 0: return TARGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TargetCase
    getTargetCase() {
      return TargetCase.forNumber(
          targetCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private flyteidl.core.IdentifierOuterClass.Identifier id_;
    /**
     * <pre>
     * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1;</code>
     */
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <pre>
     * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1;</code>
     */
    public flyteidl.core.IdentifierOuterClass.Identifier getId() {
      return id_ == null ? flyteidl.core.IdentifierOuterClass.Identifier.getDefaultInstance() : id_;
    }
    /**
     * <pre>
     * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1;</code>
     */
    public flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder getIdOrBuilder() {
      return getId();
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
     * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
     * implementation registered for the TaskCategory.
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
     * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
     * implementation registered for the TaskCategory.
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METADATA_FIELD_NUMBER = 3;
    private flyteidl.core.Tasks.TaskMetadata metadata_;
    /**
     * <pre>
     * Extra metadata about the task.
     * </pre>
     *
     * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <pre>
     * Extra metadata about the task.
     * </pre>
     *
     * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
     */
    public flyteidl.core.Tasks.TaskMetadata getMetadata() {
      return metadata_ == null ? flyteidl.core.Tasks.TaskMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Extra metadata about the task.
     * </pre>
     *
     * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
     */
    public flyteidl.core.Tasks.TaskMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int INTERFACE_FIELD_NUMBER = 4;
    private flyteidl.core.Interface.TypedInterface interface_;
    /**
     * <pre>
     * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
     * compile-time validation of the workflow to avoid costly runtime failures.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 4;</code>
     */
    public boolean hasInterface() {
      return interface_ != null;
    }
    /**
     * <pre>
     * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
     * compile-time validation of the workflow to avoid costly runtime failures.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 4;</code>
     */
    public flyteidl.core.Interface.TypedInterface getInterface() {
      return interface_ == null ? flyteidl.core.Interface.TypedInterface.getDefaultInstance() : interface_;
    }
    /**
     * <pre>
     * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
     * compile-time validation of the workflow to avoid costly runtime failures.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 4;</code>
     */
    public flyteidl.core.Interface.TypedInterfaceOrBuilder getInterfaceOrBuilder() {
      return getInterface();
    }

    public static final int CUSTOM_FIELD_NUMBER = 5;
    private com.google.protobuf.Struct custom_;
    /**
     * <pre>
     * Custom data about the task. This is extensible to allow various plugins in the system.
     * </pre>
     *
     * <code>.google.protobuf.Struct custom = 5;</code>
     */
    public boolean hasCustom() {
      return custom_ != null;
    }
    /**
     * <pre>
     * Custom data about the task. This is extensible to allow various plugins in the system.
     * </pre>
     *
     * <code>.google.protobuf.Struct custom = 5;</code>
     */
    public com.google.protobuf.Struct getCustom() {
      return custom_ == null ? com.google.protobuf.Struct.getDefaultInstance() : custom_;
    }
    /**
     * <pre>
     * Custom data about the task. This is extensible to allow various plugins in the system.
     * </pre>
     *
     * <code>.google.protobuf.Struct custom = 5;</code>
     */
    public com.google.protobuf.StructOrBuilder getCustomOrBuilder() {
      return getCustom();
    }

    public static final int CONTAINER_FIELD_NUMBER = 6;
    /**
     * <code>.flyteidl.core.Container container = 6;</code>
     */
    public boolean hasContainer() {
      return targetCase_ == 6;
    }
    /**
     * <code>.flyteidl.core.Container container = 6;</code>
     */
    public flyteidl.core.Tasks.Container getContainer() {
      if (targetCase_ == 6) {
         return (flyteidl.core.Tasks.Container) target_;
      }
      return flyteidl.core.Tasks.Container.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.core.Container container = 6;</code>
     */
    public flyteidl.core.Tasks.ContainerOrBuilder getContainerOrBuilder() {
      if (targetCase_ == 6) {
         return (flyteidl.core.Tasks.Container) target_;
      }
      return flyteidl.core.Tasks.Container.getDefaultInstance();
    }

    public static final int K8S_POD_FIELD_NUMBER = 17;
    /**
     * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
     */
    public boolean hasK8SPod() {
      return targetCase_ == 17;
    }
    /**
     * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
     */
    public flyteidl.core.Tasks.K8sPod getK8SPod() {
      if (targetCase_ == 17) {
         return (flyteidl.core.Tasks.K8sPod) target_;
      }
      return flyteidl.core.Tasks.K8sPod.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
     */
    public flyteidl.core.Tasks.K8sPodOrBuilder getK8SPodOrBuilder() {
      if (targetCase_ == 17) {
         return (flyteidl.core.Tasks.K8sPod) target_;
      }
      return flyteidl.core.Tasks.K8sPod.getDefaultInstance();
    }

    public static final int SQL_FIELD_NUMBER = 18;
    /**
     * <code>.flyteidl.core.Sql sql = 18;</code>
     */
    public boolean hasSql() {
      return targetCase_ == 18;
    }
    /**
     * <code>.flyteidl.core.Sql sql = 18;</code>
     */
    public flyteidl.core.Tasks.Sql getSql() {
      if (targetCase_ == 18) {
         return (flyteidl.core.Tasks.Sql) target_;
      }
      return flyteidl.core.Tasks.Sql.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.core.Sql sql = 18;</code>
     */
    public flyteidl.core.Tasks.SqlOrBuilder getSqlOrBuilder() {
      if (targetCase_ == 18) {
         return (flyteidl.core.Tasks.Sql) target_;
      }
      return flyteidl.core.Tasks.Sql.getDefaultInstance();
    }

    public static final int TASK_TYPE_VERSION_FIELD_NUMBER = 7;
    private int taskTypeVersion_;
    /**
     * <pre>
     * This can be used to customize task handling at execution time for the same task type.
     * </pre>
     *
     * <code>int32 task_type_version = 7;</code>
     */
    public int getTaskTypeVersion() {
      return taskTypeVersion_;
    }

    public static final int SECURITY_CONTEXT_FIELD_NUMBER = 8;
    private flyteidl.core.Security.SecurityContext securityContext_;
    /**
     * <pre>
     * security_context encapsulates security attributes requested to run this task.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
     */
    public boolean hasSecurityContext() {
      return securityContext_ != null;
    }
    /**
     * <pre>
     * security_context encapsulates security attributes requested to run this task.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
     */
    public flyteidl.core.Security.SecurityContext getSecurityContext() {
      return securityContext_ == null ? flyteidl.core.Security.SecurityContext.getDefaultInstance() : securityContext_;
    }
    /**
     * <pre>
     * security_context encapsulates security attributes requested to run this task.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
     */
    public flyteidl.core.Security.SecurityContextOrBuilder getSecurityContextOrBuilder() {
      return getSecurityContext();
    }

    public static final int CONFIG_FIELD_NUMBER = 16;
    private static final class ConfigDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  flyteidl.core.Tasks.internal_static_flyteidl_core_TaskTemplate_ConfigEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> config_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetConfig() {
      if (config_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConfigDefaultEntryHolder.defaultEntry);
      }
      return config_;
    }

    public int getConfigCount() {
      return internalGetConfig().getMap().size();
    }
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */

    public boolean containsConfig(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetConfig().getMap().containsKey(key);
    }
    /**
     * Use {@link #getConfigMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getConfig() {
      return getConfigMap();
    }
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getConfigMap() {
      return internalGetConfig().getMap();
    }
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */

    public java.lang.String getConfigOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetConfig().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
     * to use as required.
     * reserve the field numbers 1 through 15 for very frequently occurring message elements
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 16;</code>
     */

    public java.lang.String getConfigOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetConfig().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != null) {
        output.writeMessage(1, getId());
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (metadata_ != null) {
        output.writeMessage(3, getMetadata());
      }
      if (interface_ != null) {
        output.writeMessage(4, getInterface());
      }
      if (custom_ != null) {
        output.writeMessage(5, getCustom());
      }
      if (targetCase_ == 6) {
        output.writeMessage(6, (flyteidl.core.Tasks.Container) target_);
      }
      if (taskTypeVersion_ != 0) {
        output.writeInt32(7, taskTypeVersion_);
      }
      if (securityContext_ != null) {
        output.writeMessage(8, getSecurityContext());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetConfig(),
          ConfigDefaultEntryHolder.defaultEntry,
          16);
      if (targetCase_ == 17) {
        output.writeMessage(17, (flyteidl.core.Tasks.K8sPod) target_);
      }
      if (targetCase_ == 18) {
        output.writeMessage(18, (flyteidl.core.Tasks.Sql) target_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMetadata());
      }
      if (interface_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getInterface());
      }
      if (custom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getCustom());
      }
      if (targetCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (flyteidl.core.Tasks.Container) target_);
      }
      if (taskTypeVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, taskTypeVersion_);
      }
      if (securityContext_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getSecurityContext());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetConfig().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        config__ = ConfigDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, config__);
      }
      if (targetCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, (flyteidl.core.Tasks.K8sPod) target_);
      }
      if (targetCase_ == 18) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, (flyteidl.core.Tasks.Sql) target_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.TaskTemplate)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.TaskTemplate other = (flyteidl.core.Tasks.TaskTemplate) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (!getType()
          .equals(other.getType())) return false;
      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasInterface() != other.hasInterface()) return false;
      if (hasInterface()) {
        if (!getInterface()
            .equals(other.getInterface())) return false;
      }
      if (hasCustom() != other.hasCustom()) return false;
      if (hasCustom()) {
        if (!getCustom()
            .equals(other.getCustom())) return false;
      }
      if (getTaskTypeVersion()
          != other.getTaskTypeVersion()) return false;
      if (hasSecurityContext() != other.hasSecurityContext()) return false;
      if (hasSecurityContext()) {
        if (!getSecurityContext()
            .equals(other.getSecurityContext())) return false;
      }
      if (!internalGetConfig().equals(
          other.internalGetConfig())) return false;
      if (!getTargetCase().equals(other.getTargetCase())) return false;
      switch (targetCase_) {
        case 6:
          if (!getContainer()
              .equals(other.getContainer())) return false;
          break;
        case 17:
          if (!getK8SPod()
              .equals(other.getK8SPod())) return false;
          break;
        case 18:
          if (!getSql()
              .equals(other.getSql())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasInterface()) {
        hash = (37 * hash) + INTERFACE_FIELD_NUMBER;
        hash = (53 * hash) + getInterface().hashCode();
      }
      if (hasCustom()) {
        hash = (37 * hash) + CUSTOM_FIELD_NUMBER;
        hash = (53 * hash) + getCustom().hashCode();
      }
      hash = (37 * hash) + TASK_TYPE_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getTaskTypeVersion();
      if (hasSecurityContext()) {
        hash = (37 * hash) + SECURITY_CONTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getSecurityContext().hashCode();
      }
      if (!internalGetConfig().getMap().isEmpty()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + internalGetConfig().hashCode();
      }
      switch (targetCase_) {
        case 6:
          hash = (37 * hash) + CONTAINER_FIELD_NUMBER;
          hash = (53 * hash) + getContainer().hashCode();
          break;
        case 17:
          hash = (37 * hash) + K8S_POD_FIELD_NUMBER;
          hash = (53 * hash) + getK8SPod().hashCode();
          break;
        case 18:
          hash = (37 * hash) + SQL_FIELD_NUMBER;
          hash = (53 * hash) + getSql().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.TaskTemplate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.TaskTemplate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Task structure that uniquely identifies a task in the system
     * Tasks are registered as a first step in the system.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.TaskTemplate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.TaskTemplate)
        flyteidl.core.Tasks.TaskTemplateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskTemplate_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 16:
            return internalGetConfig();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 16:
            return internalGetMutableConfig();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskTemplate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.TaskTemplate.class, flyteidl.core.Tasks.TaskTemplate.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.TaskTemplate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          id_ = null;
          idBuilder_ = null;
        }
        type_ = "";

        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (interfaceBuilder_ == null) {
          interface_ = null;
        } else {
          interface_ = null;
          interfaceBuilder_ = null;
        }
        if (customBuilder_ == null) {
          custom_ = null;
        } else {
          custom_ = null;
          customBuilder_ = null;
        }
        taskTypeVersion_ = 0;

        if (securityContextBuilder_ == null) {
          securityContext_ = null;
        } else {
          securityContext_ = null;
          securityContextBuilder_ = null;
        }
        internalGetMutableConfig().clear();
        targetCase_ = 0;
        target_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_TaskTemplate_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.TaskTemplate getDefaultInstanceForType() {
        return flyteidl.core.Tasks.TaskTemplate.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.TaskTemplate build() {
        flyteidl.core.Tasks.TaskTemplate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.TaskTemplate buildPartial() {
        flyteidl.core.Tasks.TaskTemplate result = new flyteidl.core.Tasks.TaskTemplate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        result.type_ = type_;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (interfaceBuilder_ == null) {
          result.interface_ = interface_;
        } else {
          result.interface_ = interfaceBuilder_.build();
        }
        if (customBuilder_ == null) {
          result.custom_ = custom_;
        } else {
          result.custom_ = customBuilder_.build();
        }
        if (targetCase_ == 6) {
          if (containerBuilder_ == null) {
            result.target_ = target_;
          } else {
            result.target_ = containerBuilder_.build();
          }
        }
        if (targetCase_ == 17) {
          if (k8SPodBuilder_ == null) {
            result.target_ = target_;
          } else {
            result.target_ = k8SPodBuilder_.build();
          }
        }
        if (targetCase_ == 18) {
          if (sqlBuilder_ == null) {
            result.target_ = target_;
          } else {
            result.target_ = sqlBuilder_.build();
          }
        }
        result.taskTypeVersion_ = taskTypeVersion_;
        if (securityContextBuilder_ == null) {
          result.securityContext_ = securityContext_;
        } else {
          result.securityContext_ = securityContextBuilder_.build();
        }
        result.config_ = internalGetConfig();
        result.config_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        result.targetCase_ = targetCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.TaskTemplate) {
          return mergeFrom((flyteidl.core.Tasks.TaskTemplate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.TaskTemplate other) {
        if (other == flyteidl.core.Tasks.TaskTemplate.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasInterface()) {
          mergeInterface(other.getInterface());
        }
        if (other.hasCustom()) {
          mergeCustom(other.getCustom());
        }
        if (other.getTaskTypeVersion() != 0) {
          setTaskTypeVersion(other.getTaskTypeVersion());
        }
        if (other.hasSecurityContext()) {
          mergeSecurityContext(other.getSecurityContext());
        }
        internalGetMutableConfig().mergeFrom(
            other.internalGetConfig());
        switch (other.getTargetCase()) {
          case CONTAINER: {
            mergeContainer(other.getContainer());
            break;
          }
          case K8S_POD: {
            mergeK8SPod(other.getK8SPod());
            break;
          }
          case SQL: {
            mergeSql(other.getSql());
            break;
          }
          case TARGET_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.TaskTemplate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.TaskTemplate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int targetCase_ = 0;
      private java.lang.Object target_;
      public TargetCase
          getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public Builder clearTarget() {
        targetCase_ = 0;
        target_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private flyteidl.core.IdentifierOuterClass.Identifier id_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.IdentifierOuterClass.Identifier, flyteidl.core.IdentifierOuterClass.Identifier.Builder, flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder> idBuilder_;
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public boolean hasId() {
        return idBuilder_ != null || id_ != null;
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public flyteidl.core.IdentifierOuterClass.Identifier getId() {
        if (idBuilder_ == null) {
          return id_ == null ? flyteidl.core.IdentifierOuterClass.Identifier.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public Builder setId(flyteidl.core.IdentifierOuterClass.Identifier value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public Builder setId(
          flyteidl.core.IdentifierOuterClass.Identifier.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public Builder mergeId(flyteidl.core.IdentifierOuterClass.Identifier value) {
        if (idBuilder_ == null) {
          if (id_ != null) {
            id_ =
              flyteidl.core.IdentifierOuterClass.Identifier.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          id_ = null;
          idBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public flyteidl.core.IdentifierOuterClass.Identifier.Builder getIdBuilder() {
        
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      public flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              flyteidl.core.IdentifierOuterClass.Identifier.getDefaultInstance() : id_;
        }
      }
      /**
       * <pre>
       * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.IdentifierOuterClass.Identifier, flyteidl.core.IdentifierOuterClass.Identifier.Builder, flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.IdentifierOuterClass.Identifier, flyteidl.core.IdentifierOuterClass.Identifier.Builder, flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
       * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
       * implementation registered for the TaskCategory.
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
       * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
       * implementation registered for the TaskCategory.
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
       * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
       * implementation registered for the TaskCategory.
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
       * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
       * implementation registered for the TaskCategory.
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
       * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
       * implementation registered for the TaskCategory.
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private flyteidl.core.Tasks.TaskMetadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.TaskMetadata, flyteidl.core.Tasks.TaskMetadata.Builder, flyteidl.core.Tasks.TaskMetadataOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public flyteidl.core.Tasks.TaskMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? flyteidl.core.Tasks.TaskMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public Builder setMetadata(flyteidl.core.Tasks.TaskMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public Builder setMetadata(
          flyteidl.core.Tasks.TaskMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public Builder mergeMetadata(flyteidl.core.Tasks.TaskMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              flyteidl.core.Tasks.TaskMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public flyteidl.core.Tasks.TaskMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      public flyteidl.core.Tasks.TaskMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              flyteidl.core.Tasks.TaskMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Extra metadata about the task.
       * </pre>
       *
       * <code>.flyteidl.core.TaskMetadata metadata = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.TaskMetadata, flyteidl.core.Tasks.TaskMetadata.Builder, flyteidl.core.Tasks.TaskMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.TaskMetadata, flyteidl.core.Tasks.TaskMetadata.Builder, flyteidl.core.Tasks.TaskMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private flyteidl.core.Interface.TypedInterface interface_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Interface.TypedInterface, flyteidl.core.Interface.TypedInterface.Builder, flyteidl.core.Interface.TypedInterfaceOrBuilder> interfaceBuilder_;
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public boolean hasInterface() {
        return interfaceBuilder_ != null || interface_ != null;
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public flyteidl.core.Interface.TypedInterface getInterface() {
        if (interfaceBuilder_ == null) {
          return interface_ == null ? flyteidl.core.Interface.TypedInterface.getDefaultInstance() : interface_;
        } else {
          return interfaceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public Builder setInterface(flyteidl.core.Interface.TypedInterface value) {
        if (interfaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          interface_ = value;
          onChanged();
        } else {
          interfaceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public Builder setInterface(
          flyteidl.core.Interface.TypedInterface.Builder builderForValue) {
        if (interfaceBuilder_ == null) {
          interface_ = builderForValue.build();
          onChanged();
        } else {
          interfaceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public Builder mergeInterface(flyteidl.core.Interface.TypedInterface value) {
        if (interfaceBuilder_ == null) {
          if (interface_ != null) {
            interface_ =
              flyteidl.core.Interface.TypedInterface.newBuilder(interface_).mergeFrom(value).buildPartial();
          } else {
            interface_ = value;
          }
          onChanged();
        } else {
          interfaceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public Builder clearInterface() {
        if (interfaceBuilder_ == null) {
          interface_ = null;
          onChanged();
        } else {
          interface_ = null;
          interfaceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public flyteidl.core.Interface.TypedInterface.Builder getInterfaceBuilder() {
        
        onChanged();
        return getInterfaceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      public flyteidl.core.Interface.TypedInterfaceOrBuilder getInterfaceOrBuilder() {
        if (interfaceBuilder_ != null) {
          return interfaceBuilder_.getMessageOrBuilder();
        } else {
          return interface_ == null ?
              flyteidl.core.Interface.TypedInterface.getDefaultInstance() : interface_;
        }
      }
      /**
       * <pre>
       * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
       * compile-time validation of the workflow to avoid costly runtime failures.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Interface.TypedInterface, flyteidl.core.Interface.TypedInterface.Builder, flyteidl.core.Interface.TypedInterfaceOrBuilder> 
          getInterfaceFieldBuilder() {
        if (interfaceBuilder_ == null) {
          interfaceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Interface.TypedInterface, flyteidl.core.Interface.TypedInterface.Builder, flyteidl.core.Interface.TypedInterfaceOrBuilder>(
                  getInterface(),
                  getParentForChildren(),
                  isClean());
          interface_ = null;
        }
        return interfaceBuilder_;
      }

      private com.google.protobuf.Struct custom_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> customBuilder_;
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public boolean hasCustom() {
        return customBuilder_ != null || custom_ != null;
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public com.google.protobuf.Struct getCustom() {
        if (customBuilder_ == null) {
          return custom_ == null ? com.google.protobuf.Struct.getDefaultInstance() : custom_;
        } else {
          return customBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public Builder setCustom(com.google.protobuf.Struct value) {
        if (customBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          custom_ = value;
          onChanged();
        } else {
          customBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public Builder setCustom(
          com.google.protobuf.Struct.Builder builderForValue) {
        if (customBuilder_ == null) {
          custom_ = builderForValue.build();
          onChanged();
        } else {
          customBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public Builder mergeCustom(com.google.protobuf.Struct value) {
        if (customBuilder_ == null) {
          if (custom_ != null) {
            custom_ =
              com.google.protobuf.Struct.newBuilder(custom_).mergeFrom(value).buildPartial();
          } else {
            custom_ = value;
          }
          onChanged();
        } else {
          customBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public Builder clearCustom() {
        if (customBuilder_ == null) {
          custom_ = null;
          onChanged();
        } else {
          custom_ = null;
          customBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public com.google.protobuf.Struct.Builder getCustomBuilder() {
        
        onChanged();
        return getCustomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      public com.google.protobuf.StructOrBuilder getCustomOrBuilder() {
        if (customBuilder_ != null) {
          return customBuilder_.getMessageOrBuilder();
        } else {
          return custom_ == null ?
              com.google.protobuf.Struct.getDefaultInstance() : custom_;
        }
      }
      /**
       * <pre>
       * Custom data about the task. This is extensible to allow various plugins in the system.
       * </pre>
       *
       * <code>.google.protobuf.Struct custom = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
          getCustomFieldBuilder() {
        if (customBuilder_ == null) {
          customBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                  getCustom(),
                  getParentForChildren(),
                  isClean());
          custom_ = null;
        }
        return customBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Container, flyteidl.core.Tasks.Container.Builder, flyteidl.core.Tasks.ContainerOrBuilder> containerBuilder_;
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public boolean hasContainer() {
        return targetCase_ == 6;
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public flyteidl.core.Tasks.Container getContainer() {
        if (containerBuilder_ == null) {
          if (targetCase_ == 6) {
            return (flyteidl.core.Tasks.Container) target_;
          }
          return flyteidl.core.Tasks.Container.getDefaultInstance();
        } else {
          if (targetCase_ == 6) {
            return containerBuilder_.getMessage();
          }
          return flyteidl.core.Tasks.Container.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public Builder setContainer(flyteidl.core.Tasks.Container value) {
        if (containerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          containerBuilder_.setMessage(value);
        }
        targetCase_ = 6;
        return this;
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public Builder setContainer(
          flyteidl.core.Tasks.Container.Builder builderForValue) {
        if (containerBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          containerBuilder_.setMessage(builderForValue.build());
        }
        targetCase_ = 6;
        return this;
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public Builder mergeContainer(flyteidl.core.Tasks.Container value) {
        if (containerBuilder_ == null) {
          if (targetCase_ == 6 &&
              target_ != flyteidl.core.Tasks.Container.getDefaultInstance()) {
            target_ = flyteidl.core.Tasks.Container.newBuilder((flyteidl.core.Tasks.Container) target_)
                .mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          if (targetCase_ == 6) {
            containerBuilder_.mergeFrom(value);
          }
          containerBuilder_.setMessage(value);
        }
        targetCase_ = 6;
        return this;
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public Builder clearContainer() {
        if (containerBuilder_ == null) {
          if (targetCase_ == 6) {
            targetCase_ = 0;
            target_ = null;
            onChanged();
          }
        } else {
          if (targetCase_ == 6) {
            targetCase_ = 0;
            target_ = null;
          }
          containerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public flyteidl.core.Tasks.Container.Builder getContainerBuilder() {
        return getContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      public flyteidl.core.Tasks.ContainerOrBuilder getContainerOrBuilder() {
        if ((targetCase_ == 6) && (containerBuilder_ != null)) {
          return containerBuilder_.getMessageOrBuilder();
        } else {
          if (targetCase_ == 6) {
            return (flyteidl.core.Tasks.Container) target_;
          }
          return flyteidl.core.Tasks.Container.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.Container container = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Container, flyteidl.core.Tasks.Container.Builder, flyteidl.core.Tasks.ContainerOrBuilder> 
          getContainerFieldBuilder() {
        if (containerBuilder_ == null) {
          if (!(targetCase_ == 6)) {
            target_ = flyteidl.core.Tasks.Container.getDefaultInstance();
          }
          containerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.Container, flyteidl.core.Tasks.Container.Builder, flyteidl.core.Tasks.ContainerOrBuilder>(
                  (flyteidl.core.Tasks.Container) target_,
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        targetCase_ = 6;
        onChanged();;
        return containerBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.K8sPod, flyteidl.core.Tasks.K8sPod.Builder, flyteidl.core.Tasks.K8sPodOrBuilder> k8SPodBuilder_;
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public boolean hasK8SPod() {
        return targetCase_ == 17;
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public flyteidl.core.Tasks.K8sPod getK8SPod() {
        if (k8SPodBuilder_ == null) {
          if (targetCase_ == 17) {
            return (flyteidl.core.Tasks.K8sPod) target_;
          }
          return flyteidl.core.Tasks.K8sPod.getDefaultInstance();
        } else {
          if (targetCase_ == 17) {
            return k8SPodBuilder_.getMessage();
          }
          return flyteidl.core.Tasks.K8sPod.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public Builder setK8SPod(flyteidl.core.Tasks.K8sPod value) {
        if (k8SPodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          k8SPodBuilder_.setMessage(value);
        }
        targetCase_ = 17;
        return this;
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public Builder setK8SPod(
          flyteidl.core.Tasks.K8sPod.Builder builderForValue) {
        if (k8SPodBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          k8SPodBuilder_.setMessage(builderForValue.build());
        }
        targetCase_ = 17;
        return this;
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public Builder mergeK8SPod(flyteidl.core.Tasks.K8sPod value) {
        if (k8SPodBuilder_ == null) {
          if (targetCase_ == 17 &&
              target_ != flyteidl.core.Tasks.K8sPod.getDefaultInstance()) {
            target_ = flyteidl.core.Tasks.K8sPod.newBuilder((flyteidl.core.Tasks.K8sPod) target_)
                .mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          if (targetCase_ == 17) {
            k8SPodBuilder_.mergeFrom(value);
          }
          k8SPodBuilder_.setMessage(value);
        }
        targetCase_ = 17;
        return this;
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public Builder clearK8SPod() {
        if (k8SPodBuilder_ == null) {
          if (targetCase_ == 17) {
            targetCase_ = 0;
            target_ = null;
            onChanged();
          }
        } else {
          if (targetCase_ == 17) {
            targetCase_ = 0;
            target_ = null;
          }
          k8SPodBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public flyteidl.core.Tasks.K8sPod.Builder getK8SPodBuilder() {
        return getK8SPodFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      public flyteidl.core.Tasks.K8sPodOrBuilder getK8SPodOrBuilder() {
        if ((targetCase_ == 17) && (k8SPodBuilder_ != null)) {
          return k8SPodBuilder_.getMessageOrBuilder();
        } else {
          if (targetCase_ == 17) {
            return (flyteidl.core.Tasks.K8sPod) target_;
          }
          return flyteidl.core.Tasks.K8sPod.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.K8sPod k8s_pod = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.K8sPod, flyteidl.core.Tasks.K8sPod.Builder, flyteidl.core.Tasks.K8sPodOrBuilder> 
          getK8SPodFieldBuilder() {
        if (k8SPodBuilder_ == null) {
          if (!(targetCase_ == 17)) {
            target_ = flyteidl.core.Tasks.K8sPod.getDefaultInstance();
          }
          k8SPodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.K8sPod, flyteidl.core.Tasks.K8sPod.Builder, flyteidl.core.Tasks.K8sPodOrBuilder>(
                  (flyteidl.core.Tasks.K8sPod) target_,
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        targetCase_ = 17;
        onChanged();;
        return k8SPodBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Sql, flyteidl.core.Tasks.Sql.Builder, flyteidl.core.Tasks.SqlOrBuilder> sqlBuilder_;
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public boolean hasSql() {
        return targetCase_ == 18;
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public flyteidl.core.Tasks.Sql getSql() {
        if (sqlBuilder_ == null) {
          if (targetCase_ == 18) {
            return (flyteidl.core.Tasks.Sql) target_;
          }
          return flyteidl.core.Tasks.Sql.getDefaultInstance();
        } else {
          if (targetCase_ == 18) {
            return sqlBuilder_.getMessage();
          }
          return flyteidl.core.Tasks.Sql.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public Builder setSql(flyteidl.core.Tasks.Sql value) {
        if (sqlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          sqlBuilder_.setMessage(value);
        }
        targetCase_ = 18;
        return this;
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public Builder setSql(
          flyteidl.core.Tasks.Sql.Builder builderForValue) {
        if (sqlBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          sqlBuilder_.setMessage(builderForValue.build());
        }
        targetCase_ = 18;
        return this;
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public Builder mergeSql(flyteidl.core.Tasks.Sql value) {
        if (sqlBuilder_ == null) {
          if (targetCase_ == 18 &&
              target_ != flyteidl.core.Tasks.Sql.getDefaultInstance()) {
            target_ = flyteidl.core.Tasks.Sql.newBuilder((flyteidl.core.Tasks.Sql) target_)
                .mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          if (targetCase_ == 18) {
            sqlBuilder_.mergeFrom(value);
          }
          sqlBuilder_.setMessage(value);
        }
        targetCase_ = 18;
        return this;
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public Builder clearSql() {
        if (sqlBuilder_ == null) {
          if (targetCase_ == 18) {
            targetCase_ = 0;
            target_ = null;
            onChanged();
          }
        } else {
          if (targetCase_ == 18) {
            targetCase_ = 0;
            target_ = null;
          }
          sqlBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public flyteidl.core.Tasks.Sql.Builder getSqlBuilder() {
        return getSqlFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      public flyteidl.core.Tasks.SqlOrBuilder getSqlOrBuilder() {
        if ((targetCase_ == 18) && (sqlBuilder_ != null)) {
          return sqlBuilder_.getMessageOrBuilder();
        } else {
          if (targetCase_ == 18) {
            return (flyteidl.core.Tasks.Sql) target_;
          }
          return flyteidl.core.Tasks.Sql.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.Sql sql = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Sql, flyteidl.core.Tasks.Sql.Builder, flyteidl.core.Tasks.SqlOrBuilder> 
          getSqlFieldBuilder() {
        if (sqlBuilder_ == null) {
          if (!(targetCase_ == 18)) {
            target_ = flyteidl.core.Tasks.Sql.getDefaultInstance();
          }
          sqlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.Sql, flyteidl.core.Tasks.Sql.Builder, flyteidl.core.Tasks.SqlOrBuilder>(
                  (flyteidl.core.Tasks.Sql) target_,
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        targetCase_ = 18;
        onChanged();;
        return sqlBuilder_;
      }

      private int taskTypeVersion_ ;
      /**
       * <pre>
       * This can be used to customize task handling at execution time for the same task type.
       * </pre>
       *
       * <code>int32 task_type_version = 7;</code>
       */
      public int getTaskTypeVersion() {
        return taskTypeVersion_;
      }
      /**
       * <pre>
       * This can be used to customize task handling at execution time for the same task type.
       * </pre>
       *
       * <code>int32 task_type_version = 7;</code>
       */
      public Builder setTaskTypeVersion(int value) {
        
        taskTypeVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This can be used to customize task handling at execution time for the same task type.
       * </pre>
       *
       * <code>int32 task_type_version = 7;</code>
       */
      public Builder clearTaskTypeVersion() {
        
        taskTypeVersion_ = 0;
        onChanged();
        return this;
      }

      private flyteidl.core.Security.SecurityContext securityContext_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Security.SecurityContext, flyteidl.core.Security.SecurityContext.Builder, flyteidl.core.Security.SecurityContextOrBuilder> securityContextBuilder_;
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public boolean hasSecurityContext() {
        return securityContextBuilder_ != null || securityContext_ != null;
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public flyteidl.core.Security.SecurityContext getSecurityContext() {
        if (securityContextBuilder_ == null) {
          return securityContext_ == null ? flyteidl.core.Security.SecurityContext.getDefaultInstance() : securityContext_;
        } else {
          return securityContextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public Builder setSecurityContext(flyteidl.core.Security.SecurityContext value) {
        if (securityContextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          securityContext_ = value;
          onChanged();
        } else {
          securityContextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public Builder setSecurityContext(
          flyteidl.core.Security.SecurityContext.Builder builderForValue) {
        if (securityContextBuilder_ == null) {
          securityContext_ = builderForValue.build();
          onChanged();
        } else {
          securityContextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public Builder mergeSecurityContext(flyteidl.core.Security.SecurityContext value) {
        if (securityContextBuilder_ == null) {
          if (securityContext_ != null) {
            securityContext_ =
              flyteidl.core.Security.SecurityContext.newBuilder(securityContext_).mergeFrom(value).buildPartial();
          } else {
            securityContext_ = value;
          }
          onChanged();
        } else {
          securityContextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public Builder clearSecurityContext() {
        if (securityContextBuilder_ == null) {
          securityContext_ = null;
          onChanged();
        } else {
          securityContext_ = null;
          securityContextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public flyteidl.core.Security.SecurityContext.Builder getSecurityContextBuilder() {
        
        onChanged();
        return getSecurityContextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      public flyteidl.core.Security.SecurityContextOrBuilder getSecurityContextOrBuilder() {
        if (securityContextBuilder_ != null) {
          return securityContextBuilder_.getMessageOrBuilder();
        } else {
          return securityContext_ == null ?
              flyteidl.core.Security.SecurityContext.getDefaultInstance() : securityContext_;
        }
      }
      /**
       * <pre>
       * security_context encapsulates security attributes requested to run this task.
       * </pre>
       *
       * <code>.flyteidl.core.SecurityContext security_context = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Security.SecurityContext, flyteidl.core.Security.SecurityContext.Builder, flyteidl.core.Security.SecurityContextOrBuilder> 
          getSecurityContextFieldBuilder() {
        if (securityContextBuilder_ == null) {
          securityContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Security.SecurityContext, flyteidl.core.Security.SecurityContext.Builder, flyteidl.core.Security.SecurityContextOrBuilder>(
                  getSecurityContext(),
                  getParentForChildren(),
                  isClean());
          securityContext_ = null;
        }
        return securityContextBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> config_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetConfig() {
        if (config_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ConfigDefaultEntryHolder.defaultEntry);
        }
        return config_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableConfig() {
        onChanged();;
        if (config_ == null) {
          config_ = com.google.protobuf.MapField.newMapField(
              ConfigDefaultEntryHolder.defaultEntry);
        }
        if (!config_.isMutable()) {
          config_ = config_.copy();
        }
        return config_;
      }

      public int getConfigCount() {
        return internalGetConfig().getMap().size();
      }
      /**
       * <pre>
       * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
       * to use as required.
       * reserve the field numbers 1 through 15 for very frequently occurring message elements
       * </pre>
       *
       * <code>map&lt;string, string&gt; config = 16;</code>
       */

      public boolean containsConfig(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetConfig().getMap().containsKey(key);
      }
      /**
       * Use {@link #getConfigMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getConfig() {
        return getConfigMap();
      }
      /**
       * <pre>
       * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
       * to use as required.
       * reserve the field numbers 1 through 15 for very frequently occurring message elements
       * </pre>
       *
       * <code>map&lt;string, string&gt; config = 16;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getConfigMap() {
        return internalGetConfig().getMap();
      }
      /**
       * <pre>
       * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
       * to use as required.
       * reserve the field numbers 1 through 15 for very frequently occurring message elements
       * </pre>
       *
       * <code>map&lt;string, string&gt; config = 16;</code>
       */

      public java.lang.String getConfigOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetConfig().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
       * to use as required.
       * reserve the field numbers 1 through 15 for very frequently occurring message elements
       * </pre>
       *
       * <code>map&lt;string, string&gt; config = 16;</code>
       */

      public java.lang.String getConfigOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetConfig().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearConfig() {
        internalGetMutableConfig().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
       * to use as required.
       * reserve the field numbers 1 through 15 for very frequently occurring message elements
       * </pre>
       *
       * <code>map&lt;string, string&gt; config = 16;</code>
       */

      public Builder removeConfig(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConfig().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableConfig() {
        return internalGetMutableConfig().getMutableMap();
      }
      /**
       * <pre>
       * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
       * to use as required.
       * reserve the field numbers 1 through 15 for very frequently occurring message elements
       * </pre>
       *
       * <code>map&lt;string, string&gt; config = 16;</code>
       */
      public Builder putConfig(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConfig().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
       * to use as required.
       * reserve the field numbers 1 through 15 for very frequently occurring message elements
       * </pre>
       *
       * <code>map&lt;string, string&gt; config = 16;</code>
       */

      public Builder putAllConfig(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableConfig().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.TaskTemplate)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.TaskTemplate)
    private static final flyteidl.core.Tasks.TaskTemplate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.TaskTemplate();
    }

    public static flyteidl.core.Tasks.TaskTemplate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskTemplate>
        PARSER = new com.google.protobuf.AbstractParser<TaskTemplate>() {
      @java.lang.Override
      public TaskTemplate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskTemplate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TaskTemplate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskTemplate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.TaskTemplate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContainerPortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.ContainerPort)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of port to expose on the pod's IP address.
     * This must be a valid port number, 0 &lt; x &lt; 65536.
     * </pre>
     *
     * <code>uint32 container_port = 1;</code>
     */
    int getContainerPort();
  }
  /**
   * <pre>
   * Defines port properties for a container.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.ContainerPort}
   */
  public  static final class ContainerPort extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.ContainerPort)
      ContainerPortOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContainerPort.newBuilder() to construct.
    private ContainerPort(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContainerPort() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContainerPort(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              containerPort_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_ContainerPort_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_ContainerPort_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.ContainerPort.class, flyteidl.core.Tasks.ContainerPort.Builder.class);
    }

    public static final int CONTAINER_PORT_FIELD_NUMBER = 1;
    private int containerPort_;
    /**
     * <pre>
     * Number of port to expose on the pod's IP address.
     * This must be a valid port number, 0 &lt; x &lt; 65536.
     * </pre>
     *
     * <code>uint32 container_port = 1;</code>
     */
    public int getContainerPort() {
      return containerPort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (containerPort_ != 0) {
        output.writeUInt32(1, containerPort_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (containerPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, containerPort_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.ContainerPort)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.ContainerPort other = (flyteidl.core.Tasks.ContainerPort) obj;

      if (getContainerPort()
          != other.getContainerPort()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONTAINER_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getContainerPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.ContainerPort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.ContainerPort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.ContainerPort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.ContainerPort prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines port properties for a container.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.ContainerPort}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.ContainerPort)
        flyteidl.core.Tasks.ContainerPortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_ContainerPort_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_ContainerPort_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.ContainerPort.class, flyteidl.core.Tasks.ContainerPort.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.ContainerPort.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        containerPort_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_ContainerPort_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.ContainerPort getDefaultInstanceForType() {
        return flyteidl.core.Tasks.ContainerPort.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.ContainerPort build() {
        flyteidl.core.Tasks.ContainerPort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.ContainerPort buildPartial() {
        flyteidl.core.Tasks.ContainerPort result = new flyteidl.core.Tasks.ContainerPort(this);
        result.containerPort_ = containerPort_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.ContainerPort) {
          return mergeFrom((flyteidl.core.Tasks.ContainerPort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.ContainerPort other) {
        if (other == flyteidl.core.Tasks.ContainerPort.getDefaultInstance()) return this;
        if (other.getContainerPort() != 0) {
          setContainerPort(other.getContainerPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.ContainerPort parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.ContainerPort) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int containerPort_ ;
      /**
       * <pre>
       * Number of port to expose on the pod's IP address.
       * This must be a valid port number, 0 &lt; x &lt; 65536.
       * </pre>
       *
       * <code>uint32 container_port = 1;</code>
       */
      public int getContainerPort() {
        return containerPort_;
      }
      /**
       * <pre>
       * Number of port to expose on the pod's IP address.
       * This must be a valid port number, 0 &lt; x &lt; 65536.
       * </pre>
       *
       * <code>uint32 container_port = 1;</code>
       */
      public Builder setContainerPort(int value) {
        
        containerPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of port to expose on the pod's IP address.
       * This must be a valid port number, 0 &lt; x &lt; 65536.
       * </pre>
       *
       * <code>uint32 container_port = 1;</code>
       */
      public Builder clearContainerPort() {
        
        containerPort_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.ContainerPort)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.ContainerPort)
    private static final flyteidl.core.Tasks.ContainerPort DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.ContainerPort();
    }

    public static flyteidl.core.Tasks.ContainerPort getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContainerPort>
        PARSER = new com.google.protobuf.AbstractParser<ContainerPort>() {
      @java.lang.Override
      public ContainerPort parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContainerPort(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContainerPort> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContainerPort> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.ContainerPort getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.Container)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Container image url. Eg: docker/redis:latest
     * </pre>
     *
     * <code>string image = 1;</code>
     */
    java.lang.String getImage();
    /**
     * <pre>
     * Container image url. Eg: docker/redis:latest
     * </pre>
     *
     * <code>string image = 1;</code>
     */
    com.google.protobuf.ByteString
        getImageBytes();

    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    java.util.List<java.lang.String>
        getCommandList();
    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    int getCommandCount();
    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    java.lang.String getCommand(int index);
    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    com.google.protobuf.ByteString
        getCommandBytes(int index);

    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    java.util.List<java.lang.String>
        getArgsList();
    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    int getArgsCount();
    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    java.lang.String getArgs(int index);
    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    com.google.protobuf.ByteString
        getArgsBytes(int index);

    /**
     * <pre>
     * Container resources requirement as specified by the container engine.
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 4;</code>
     */
    boolean hasResources();
    /**
     * <pre>
     * Container resources requirement as specified by the container engine.
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 4;</code>
     */
    flyteidl.core.Tasks.Resources getResources();
    /**
     * <pre>
     * Container resources requirement as specified by the container engine.
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 4;</code>
     */
    flyteidl.core.Tasks.ResourcesOrBuilder getResourcesOrBuilder();

    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    java.util.List<flyteidl.core.Literals.KeyValuePair> 
        getEnvList();
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    flyteidl.core.Literals.KeyValuePair getEnv(int index);
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    int getEnvCount();
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    java.util.List<? extends flyteidl.core.Literals.KeyValuePairOrBuilder> 
        getEnvOrBuilderList();
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    flyteidl.core.Literals.KeyValuePairOrBuilder getEnvOrBuilder(
        int index);

    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<flyteidl.core.Literals.KeyValuePair> 
        getConfigList();
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated flyteidl.core.Literals.KeyValuePair getConfig(int index);
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated int getConfigCount();
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.util.List<? extends flyteidl.core.Literals.KeyValuePairOrBuilder> 
        getConfigOrBuilderList();
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated flyteidl.core.Literals.KeyValuePairOrBuilder getConfigOrBuilder(
        int index);

    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    java.util.List<flyteidl.core.Tasks.ContainerPort> 
        getPortsList();
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    flyteidl.core.Tasks.ContainerPort getPorts(int index);
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    int getPortsCount();
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    java.util.List<? extends flyteidl.core.Tasks.ContainerPortOrBuilder> 
        getPortsOrBuilderList();
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    flyteidl.core.Tasks.ContainerPortOrBuilder getPortsOrBuilder(
        int index);

    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
     */
    boolean hasDataConfig();
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
     */
    flyteidl.core.Tasks.DataLoadingConfig getDataConfig();
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
     */
    flyteidl.core.Tasks.DataLoadingConfigOrBuilder getDataConfigOrBuilder();

    /**
     * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
     */
    int getArchitectureValue();
    /**
     * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
     */
    flyteidl.core.Tasks.Container.Architecture getArchitecture();
  }
  /**
   * Protobuf type {@code flyteidl.core.Container}
   */
  public  static final class Container extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.Container)
      ContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Container.newBuilder() to construct.
    private Container(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Container() {
      image_ = "";
      command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      env_ = java.util.Collections.emptyList();
      config_ = java.util.Collections.emptyList();
      ports_ = java.util.Collections.emptyList();
      architecture_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Container(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              image_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                command_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              command_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                args_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              args_.add(s);
              break;
            }
            case 34: {
              flyteidl.core.Tasks.Resources.Builder subBuilder = null;
              if (resources_ != null) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(flyteidl.core.Tasks.Resources.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                env_ = new java.util.ArrayList<flyteidl.core.Literals.KeyValuePair>();
                mutable_bitField0_ |= 0x00000010;
              }
              env_.add(
                  input.readMessage(flyteidl.core.Literals.KeyValuePair.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                config_ = new java.util.ArrayList<flyteidl.core.Literals.KeyValuePair>();
                mutable_bitField0_ |= 0x00000020;
              }
              config_.add(
                  input.readMessage(flyteidl.core.Literals.KeyValuePair.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                ports_ = new java.util.ArrayList<flyteidl.core.Tasks.ContainerPort>();
                mutable_bitField0_ |= 0x00000040;
              }
              ports_.add(
                  input.readMessage(flyteidl.core.Tasks.ContainerPort.parser(), extensionRegistry));
              break;
            }
            case 74: {
              flyteidl.core.Tasks.DataLoadingConfig.Builder subBuilder = null;
              if (dataConfig_ != null) {
                subBuilder = dataConfig_.toBuilder();
              }
              dataConfig_ = input.readMessage(flyteidl.core.Tasks.DataLoadingConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataConfig_);
                dataConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              architecture_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          command_ = command_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          args_ = args_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          env_ = java.util.Collections.unmodifiableList(env_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          config_ = java.util.Collections.unmodifiableList(config_);
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          ports_ = java.util.Collections.unmodifiableList(ports_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_Container_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_Container_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.Container.class, flyteidl.core.Tasks.Container.Builder.class);
    }

    /**
     * <pre>
     * Architecture-type the container image supports.
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.Container.Architecture}
     */
    public enum Architecture
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>AMD64 = 1;</code>
       */
      AMD64(1),
      /**
       * <code>ARM64 = 2;</code>
       */
      ARM64(2),
      /**
       * <code>ARM_V6 = 3;</code>
       */
      ARM_V6(3),
      /**
       * <code>ARM_V7 = 4;</code>
       */
      ARM_V7(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>AMD64 = 1;</code>
       */
      public static final int AMD64_VALUE = 1;
      /**
       * <code>ARM64 = 2;</code>
       */
      public static final int ARM64_VALUE = 2;
      /**
       * <code>ARM_V6 = 3;</code>
       */
      public static final int ARM_V6_VALUE = 3;
      /**
       * <code>ARM_V7 = 4;</code>
       */
      public static final int ARM_V7_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Architecture valueOf(int value) {
        return forNumber(value);
      }

      public static Architecture forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return AMD64;
          case 2: return ARM64;
          case 3: return ARM_V6;
          case 4: return ARM_V7;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Architecture>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Architecture> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Architecture>() {
              public Architecture findValueByNumber(int number) {
                return Architecture.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Tasks.Container.getDescriptor().getEnumTypes().get(0);
      }

      private static final Architecture[] VALUES = values();

      public static Architecture valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Architecture(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.Container.Architecture)
    }

    private int bitField0_;
    public static final int IMAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object image_;
    /**
     * <pre>
     * Container image url. Eg: docker/redis:latest
     * </pre>
     *
     * <code>string image = 1;</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        image_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Container image url. Eg: docker/redis:latest
     * </pre>
     *
     * <code>string image = 1;</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMAND_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList command_;
    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getCommandList() {
      return command_;
    }
    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    public int getCommandCount() {
      return command_.size();
    }
    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    public java.lang.String getCommand(int index) {
      return command_.get(index);
    }
    /**
     * <pre>
     * Command to be executed, if not provided, the default entrypoint in the container image will be used.
     * </pre>
     *
     * <code>repeated string command = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCommandBytes(int index) {
      return command_.getByteString(index);
    }

    public static final int ARGS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList args_;
    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getArgsList() {
      return args_;
    }
    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    public int getArgsCount() {
      return args_.size();
    }
    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    public java.lang.String getArgs(int index) {
      return args_.get(index);
    }
    /**
     * <pre>
     * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
     * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
     * system will populate these before executing the container.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    public com.google.protobuf.ByteString
        getArgsBytes(int index) {
      return args_.getByteString(index);
    }

    public static final int RESOURCES_FIELD_NUMBER = 4;
    private flyteidl.core.Tasks.Resources resources_;
    /**
     * <pre>
     * Container resources requirement as specified by the container engine.
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 4;</code>
     */
    public boolean hasResources() {
      return resources_ != null;
    }
    /**
     * <pre>
     * Container resources requirement as specified by the container engine.
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 4;</code>
     */
    public flyteidl.core.Tasks.Resources getResources() {
      return resources_ == null ? flyteidl.core.Tasks.Resources.getDefaultInstance() : resources_;
    }
    /**
     * <pre>
     * Container resources requirement as specified by the container engine.
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 4;</code>
     */
    public flyteidl.core.Tasks.ResourcesOrBuilder getResourcesOrBuilder() {
      return getResources();
    }

    public static final int ENV_FIELD_NUMBER = 5;
    private java.util.List<flyteidl.core.Literals.KeyValuePair> env_;
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    public java.util.List<flyteidl.core.Literals.KeyValuePair> getEnvList() {
      return env_;
    }
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    public java.util.List<? extends flyteidl.core.Literals.KeyValuePairOrBuilder> 
        getEnvOrBuilderList() {
      return env_;
    }
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    public int getEnvCount() {
      return env_.size();
    }
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    public flyteidl.core.Literals.KeyValuePair getEnv(int index) {
      return env_.get(index);
    }
    /**
     * <pre>
     * Environment variables will be set as the container is starting up.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
     */
    public flyteidl.core.Literals.KeyValuePairOrBuilder getEnvOrBuilder(
        int index) {
      return env_.get(index);
    }

    public static final int CONFIG_FIELD_NUMBER = 6;
    private java.util.List<flyteidl.core.Literals.KeyValuePair> config_;
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<flyteidl.core.Literals.KeyValuePair> getConfigList() {
      return config_;
    }
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends flyteidl.core.Literals.KeyValuePairOrBuilder> 
        getConfigOrBuilderList() {
      return config_;
    }
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getConfigCount() {
      return config_.size();
    }
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public flyteidl.core.Literals.KeyValuePair getConfig(int index) {
      return config_.get(index);
    }
    /**
     * <pre>
     * Allows extra configs to be available for the container.
     * TODO: elaborate on how configs will become available.
     * Deprecated, please use TaskTemplate.config instead.
     * </pre>
     *
     * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
     */
    @java.lang.Deprecated public flyteidl.core.Literals.KeyValuePairOrBuilder getConfigOrBuilder(
        int index) {
      return config_.get(index);
    }

    public static final int PORTS_FIELD_NUMBER = 7;
    private java.util.List<flyteidl.core.Tasks.ContainerPort> ports_;
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    public java.util.List<flyteidl.core.Tasks.ContainerPort> getPortsList() {
      return ports_;
    }
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    public java.util.List<? extends flyteidl.core.Tasks.ContainerPortOrBuilder> 
        getPortsOrBuilderList() {
      return ports_;
    }
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    public int getPortsCount() {
      return ports_.size();
    }
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    public flyteidl.core.Tasks.ContainerPort getPorts(int index) {
      return ports_.get(index);
    }
    /**
     * <pre>
     * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
     * not supported on AWS Batch)
     * Only K8s
     * </pre>
     *
     * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
     */
    public flyteidl.core.Tasks.ContainerPortOrBuilder getPortsOrBuilder(
        int index) {
      return ports_.get(index);
    }

    public static final int DATA_CONFIG_FIELD_NUMBER = 9;
    private flyteidl.core.Tasks.DataLoadingConfig dataConfig_;
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
     */
    public boolean hasDataConfig() {
      return dataConfig_ != null;
    }
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
     */
    public flyteidl.core.Tasks.DataLoadingConfig getDataConfig() {
      return dataConfig_ == null ? flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance() : dataConfig_;
    }
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
     */
    public flyteidl.core.Tasks.DataLoadingConfigOrBuilder getDataConfigOrBuilder() {
      return getDataConfig();
    }

    public static final int ARCHITECTURE_FIELD_NUMBER = 10;
    private int architecture_;
    /**
     * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
     */
    public int getArchitectureValue() {
      return architecture_;
    }
    /**
     * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
     */
    public flyteidl.core.Tasks.Container.Architecture getArchitecture() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Tasks.Container.Architecture result = flyteidl.core.Tasks.Container.Architecture.valueOf(architecture_);
      return result == null ? flyteidl.core.Tasks.Container.Architecture.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getImageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, image_);
      }
      for (int i = 0; i < command_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, command_.getRaw(i));
      }
      for (int i = 0; i < args_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, args_.getRaw(i));
      }
      if (resources_ != null) {
        output.writeMessage(4, getResources());
      }
      for (int i = 0; i < env_.size(); i++) {
        output.writeMessage(5, env_.get(i));
      }
      for (int i = 0; i < config_.size(); i++) {
        output.writeMessage(6, config_.get(i));
      }
      for (int i = 0; i < ports_.size(); i++) {
        output.writeMessage(7, ports_.get(i));
      }
      if (dataConfig_ != null) {
        output.writeMessage(9, getDataConfig());
      }
      if (architecture_ != flyteidl.core.Tasks.Container.Architecture.UNKNOWN.getNumber()) {
        output.writeEnum(10, architecture_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getImageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, image_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < command_.size(); i++) {
          dataSize += computeStringSizeNoTag(command_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCommandList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < args_.size(); i++) {
          dataSize += computeStringSizeNoTag(args_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getArgsList().size();
      }
      if (resources_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getResources());
      }
      for (int i = 0; i < env_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, env_.get(i));
      }
      for (int i = 0; i < config_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, config_.get(i));
      }
      for (int i = 0; i < ports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, ports_.get(i));
      }
      if (dataConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getDataConfig());
      }
      if (architecture_ != flyteidl.core.Tasks.Container.Architecture.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, architecture_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.Container)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.Container other = (flyteidl.core.Tasks.Container) obj;

      if (!getImage()
          .equals(other.getImage())) return false;
      if (!getCommandList()
          .equals(other.getCommandList())) return false;
      if (!getArgsList()
          .equals(other.getArgsList())) return false;
      if (hasResources() != other.hasResources()) return false;
      if (hasResources()) {
        if (!getResources()
            .equals(other.getResources())) return false;
      }
      if (!getEnvList()
          .equals(other.getEnvList())) return false;
      if (!getConfigList()
          .equals(other.getConfigList())) return false;
      if (!getPortsList()
          .equals(other.getPortsList())) return false;
      if (hasDataConfig() != other.hasDataConfig()) return false;
      if (hasDataConfig()) {
        if (!getDataConfig()
            .equals(other.getDataConfig())) return false;
      }
      if (architecture_ != other.architecture_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getImage().hashCode();
      if (getCommandCount() > 0) {
        hash = (37 * hash) + COMMAND_FIELD_NUMBER;
        hash = (53 * hash) + getCommandList().hashCode();
      }
      if (getArgsCount() > 0) {
        hash = (37 * hash) + ARGS_FIELD_NUMBER;
        hash = (53 * hash) + getArgsList().hashCode();
      }
      if (hasResources()) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResources().hashCode();
      }
      if (getEnvCount() > 0) {
        hash = (37 * hash) + ENV_FIELD_NUMBER;
        hash = (53 * hash) + getEnvList().hashCode();
      }
      if (getConfigCount() > 0) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfigList().hashCode();
      }
      if (getPortsCount() > 0) {
        hash = (37 * hash) + PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getPortsList().hashCode();
      }
      if (hasDataConfig()) {
        hash = (37 * hash) + DATA_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDataConfig().hashCode();
      }
      hash = (37 * hash) + ARCHITECTURE_FIELD_NUMBER;
      hash = (53 * hash) + architecture_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.Container parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Container parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Container parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Container parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Container parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Container parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Container parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Container parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Container parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Container parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Container parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Container parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.Container prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flyteidl.core.Container}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.Container)
        flyteidl.core.Tasks.ContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Container_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Container_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.Container.class, flyteidl.core.Tasks.Container.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.Container.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEnvFieldBuilder();
          getConfigFieldBuilder();
          getPortsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        image_ = "";

        command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (resourcesBuilder_ == null) {
          resources_ = null;
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }
        if (envBuilder_ == null) {
          env_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          envBuilder_.clear();
        }
        if (configBuilder_ == null) {
          config_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          configBuilder_.clear();
        }
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          portsBuilder_.clear();
        }
        if (dataConfigBuilder_ == null) {
          dataConfig_ = null;
        } else {
          dataConfig_ = null;
          dataConfigBuilder_ = null;
        }
        architecture_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Container_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Container getDefaultInstanceForType() {
        return flyteidl.core.Tasks.Container.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Container build() {
        flyteidl.core.Tasks.Container result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Container buildPartial() {
        flyteidl.core.Tasks.Container result = new flyteidl.core.Tasks.Container(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.image_ = image_;
        if (((bitField0_ & 0x00000002) != 0)) {
          command_ = command_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.command_ = command_;
        if (((bitField0_ & 0x00000004) != 0)) {
          args_ = args_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.args_ = args_;
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        if (envBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            env_ = java.util.Collections.unmodifiableList(env_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.env_ = env_;
        } else {
          result.env_ = envBuilder_.build();
        }
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            config_ = java.util.Collections.unmodifiableList(config_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        if (portsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            ports_ = java.util.Collections.unmodifiableList(ports_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.ports_ = ports_;
        } else {
          result.ports_ = portsBuilder_.build();
        }
        if (dataConfigBuilder_ == null) {
          result.dataConfig_ = dataConfig_;
        } else {
          result.dataConfig_ = dataConfigBuilder_.build();
        }
        result.architecture_ = architecture_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.Container) {
          return mergeFrom((flyteidl.core.Tasks.Container)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.Container other) {
        if (other == flyteidl.core.Tasks.Container.getDefaultInstance()) return this;
        if (!other.getImage().isEmpty()) {
          image_ = other.image_;
          onChanged();
        }
        if (!other.command_.isEmpty()) {
          if (command_.isEmpty()) {
            command_ = other.command_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCommandIsMutable();
            command_.addAll(other.command_);
          }
          onChanged();
        }
        if (!other.args_.isEmpty()) {
          if (args_.isEmpty()) {
            args_ = other.args_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureArgsIsMutable();
            args_.addAll(other.args_);
          }
          onChanged();
        }
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        if (envBuilder_ == null) {
          if (!other.env_.isEmpty()) {
            if (env_.isEmpty()) {
              env_ = other.env_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureEnvIsMutable();
              env_.addAll(other.env_);
            }
            onChanged();
          }
        } else {
          if (!other.env_.isEmpty()) {
            if (envBuilder_.isEmpty()) {
              envBuilder_.dispose();
              envBuilder_ = null;
              env_ = other.env_;
              bitField0_ = (bitField0_ & ~0x00000010);
              envBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEnvFieldBuilder() : null;
            } else {
              envBuilder_.addAllMessages(other.env_);
            }
          }
        }
        if (configBuilder_ == null) {
          if (!other.config_.isEmpty()) {
            if (config_.isEmpty()) {
              config_ = other.config_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureConfigIsMutable();
              config_.addAll(other.config_);
            }
            onChanged();
          }
        } else {
          if (!other.config_.isEmpty()) {
            if (configBuilder_.isEmpty()) {
              configBuilder_.dispose();
              configBuilder_ = null;
              config_ = other.config_;
              bitField0_ = (bitField0_ & ~0x00000020);
              configBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getConfigFieldBuilder() : null;
            } else {
              configBuilder_.addAllMessages(other.config_);
            }
          }
        }
        if (portsBuilder_ == null) {
          if (!other.ports_.isEmpty()) {
            if (ports_.isEmpty()) {
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePortsIsMutable();
              ports_.addAll(other.ports_);
            }
            onChanged();
          }
        } else {
          if (!other.ports_.isEmpty()) {
            if (portsBuilder_.isEmpty()) {
              portsBuilder_.dispose();
              portsBuilder_ = null;
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000040);
              portsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPortsFieldBuilder() : null;
            } else {
              portsBuilder_.addAllMessages(other.ports_);
            }
          }
        }
        if (other.hasDataConfig()) {
          mergeDataConfig(other.getDataConfig());
        }
        if (other.architecture_ != 0) {
          setArchitectureValue(other.getArchitectureValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.Container parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.Container) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object image_ = "";
      /**
       * <pre>
       * Container image url. Eg: docker/redis:latest
       * </pre>
       *
       * <code>string image = 1;</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          image_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Container image url. Eg: docker/redis:latest
       * </pre>
       *
       * <code>string image = 1;</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Container image url. Eg: docker/redis:latest
       * </pre>
       *
       * <code>string image = 1;</code>
       */
      public Builder setImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        image_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Container image url. Eg: docker/redis:latest
       * </pre>
       *
       * <code>string image = 1;</code>
       */
      public Builder clearImage() {
        
        image_ = getDefaultInstance().getImage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Container image url. Eg: docker/redis:latest
       * </pre>
       *
       * <code>string image = 1;</code>
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        image_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCommandIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          command_ = new com.google.protobuf.LazyStringArrayList(command_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getCommandList() {
        return command_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public int getCommandCount() {
        return command_.size();
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public java.lang.String getCommand(int index) {
        return command_.get(index);
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCommandBytes(int index) {
        return command_.getByteString(index);
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public Builder setCommand(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public Builder addCommand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public Builder addAllCommand(
          java.lang.Iterable<java.lang.String> values) {
        ensureCommandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, command_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public Builder clearCommand() {
        command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Command to be executed, if not provided, the default entrypoint in the container image will be used.
       * </pre>
       *
       * <code>repeated string command = 2;</code>
       */
      public Builder addCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCommandIsMutable();
        command_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureArgsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          args_ = new com.google.protobuf.LazyStringArrayList(args_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getArgsList() {
        return args_.getUnmodifiableView();
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public int getArgsCount() {
        return args_.size();
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public java.lang.String getArgs(int index) {
        return args_.get(index);
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public com.google.protobuf.ByteString
          getArgsBytes(int index) {
        return args_.getByteString(index);
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public Builder setArgs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgsIsMutable();
        args_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public Builder addArgs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgsIsMutable();
        args_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public Builder addAllArgs(
          java.lang.Iterable<java.lang.String> values) {
        ensureArgsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, args_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public Builder clearArgs() {
        args_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
       * needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
       * system will populate these before executing the container.
       * </pre>
       *
       * <code>repeated string args = 3;</code>
       */
      public Builder addArgsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureArgsIsMutable();
        args_.add(value);
        onChanged();
        return this;
      }

      private flyteidl.core.Tasks.Resources resources_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Resources, flyteidl.core.Tasks.Resources.Builder, flyteidl.core.Tasks.ResourcesOrBuilder> resourcesBuilder_;
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public boolean hasResources() {
        return resourcesBuilder_ != null || resources_ != null;
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public flyteidl.core.Tasks.Resources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_ == null ? flyteidl.core.Tasks.Resources.getDefaultInstance() : resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public Builder setResources(flyteidl.core.Tasks.Resources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public Builder setResources(
          flyteidl.core.Tasks.Resources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public Builder mergeResources(flyteidl.core.Tasks.Resources value) {
        if (resourcesBuilder_ == null) {
          if (resources_ != null) {
            resources_ =
              flyteidl.core.Tasks.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = null;
          onChanged();
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public flyteidl.core.Tasks.Resources.Builder getResourcesBuilder() {
        
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      public flyteidl.core.Tasks.ResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_ == null ?
              flyteidl.core.Tasks.Resources.getDefaultInstance() : resources_;
        }
      }
      /**
       * <pre>
       * Container resources requirement as specified by the container engine.
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Resources, flyteidl.core.Tasks.Resources.Builder, flyteidl.core.Tasks.ResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.Resources, flyteidl.core.Tasks.Resources.Builder, flyteidl.core.Tasks.ResourcesOrBuilder>(
                  getResources(),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      private java.util.List<flyteidl.core.Literals.KeyValuePair> env_ =
        java.util.Collections.emptyList();
      private void ensureEnvIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          env_ = new java.util.ArrayList<flyteidl.core.Literals.KeyValuePair>(env_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Literals.KeyValuePair, flyteidl.core.Literals.KeyValuePair.Builder, flyteidl.core.Literals.KeyValuePairOrBuilder> envBuilder_;

      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public java.util.List<flyteidl.core.Literals.KeyValuePair> getEnvList() {
        if (envBuilder_ == null) {
          return java.util.Collections.unmodifiableList(env_);
        } else {
          return envBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public int getEnvCount() {
        if (envBuilder_ == null) {
          return env_.size();
        } else {
          return envBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public flyteidl.core.Literals.KeyValuePair getEnv(int index) {
        if (envBuilder_ == null) {
          return env_.get(index);
        } else {
          return envBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder setEnv(
          int index, flyteidl.core.Literals.KeyValuePair value) {
        if (envBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnvIsMutable();
          env_.set(index, value);
          onChanged();
        } else {
          envBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder setEnv(
          int index, flyteidl.core.Literals.KeyValuePair.Builder builderForValue) {
        if (envBuilder_ == null) {
          ensureEnvIsMutable();
          env_.set(index, builderForValue.build());
          onChanged();
        } else {
          envBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder addEnv(flyteidl.core.Literals.KeyValuePair value) {
        if (envBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnvIsMutable();
          env_.add(value);
          onChanged();
        } else {
          envBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder addEnv(
          int index, flyteidl.core.Literals.KeyValuePair value) {
        if (envBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnvIsMutable();
          env_.add(index, value);
          onChanged();
        } else {
          envBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder addEnv(
          flyteidl.core.Literals.KeyValuePair.Builder builderForValue) {
        if (envBuilder_ == null) {
          ensureEnvIsMutable();
          env_.add(builderForValue.build());
          onChanged();
        } else {
          envBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder addEnv(
          int index, flyteidl.core.Literals.KeyValuePair.Builder builderForValue) {
        if (envBuilder_ == null) {
          ensureEnvIsMutable();
          env_.add(index, builderForValue.build());
          onChanged();
        } else {
          envBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder addAllEnv(
          java.lang.Iterable<? extends flyteidl.core.Literals.KeyValuePair> values) {
        if (envBuilder_ == null) {
          ensureEnvIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, env_);
          onChanged();
        } else {
          envBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder clearEnv() {
        if (envBuilder_ == null) {
          env_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          envBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public Builder removeEnv(int index) {
        if (envBuilder_ == null) {
          ensureEnvIsMutable();
          env_.remove(index);
          onChanged();
        } else {
          envBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public flyteidl.core.Literals.KeyValuePair.Builder getEnvBuilder(
          int index) {
        return getEnvFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public flyteidl.core.Literals.KeyValuePairOrBuilder getEnvOrBuilder(
          int index) {
        if (envBuilder_ == null) {
          return env_.get(index);  } else {
          return envBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public java.util.List<? extends flyteidl.core.Literals.KeyValuePairOrBuilder> 
           getEnvOrBuilderList() {
        if (envBuilder_ != null) {
          return envBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(env_);
        }
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public flyteidl.core.Literals.KeyValuePair.Builder addEnvBuilder() {
        return getEnvFieldBuilder().addBuilder(
            flyteidl.core.Literals.KeyValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public flyteidl.core.Literals.KeyValuePair.Builder addEnvBuilder(
          int index) {
        return getEnvFieldBuilder().addBuilder(
            index, flyteidl.core.Literals.KeyValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * Environment variables will be set as the container is starting up.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair env = 5;</code>
       */
      public java.util.List<flyteidl.core.Literals.KeyValuePair.Builder> 
           getEnvBuilderList() {
        return getEnvFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Literals.KeyValuePair, flyteidl.core.Literals.KeyValuePair.Builder, flyteidl.core.Literals.KeyValuePairOrBuilder> 
          getEnvFieldBuilder() {
        if (envBuilder_ == null) {
          envBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              flyteidl.core.Literals.KeyValuePair, flyteidl.core.Literals.KeyValuePair.Builder, flyteidl.core.Literals.KeyValuePairOrBuilder>(
                  env_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          env_ = null;
        }
        return envBuilder_;
      }

      private java.util.List<flyteidl.core.Literals.KeyValuePair> config_ =
        java.util.Collections.emptyList();
      private void ensureConfigIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          config_ = new java.util.ArrayList<flyteidl.core.Literals.KeyValuePair>(config_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Literals.KeyValuePair, flyteidl.core.Literals.KeyValuePair.Builder, flyteidl.core.Literals.KeyValuePairOrBuilder> configBuilder_;

      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<flyteidl.core.Literals.KeyValuePair> getConfigList() {
        if (configBuilder_ == null) {
          return java.util.Collections.unmodifiableList(config_);
        } else {
          return configBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public int getConfigCount() {
        if (configBuilder_ == null) {
          return config_.size();
        } else {
          return configBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public flyteidl.core.Literals.KeyValuePair getConfig(int index) {
        if (configBuilder_ == null) {
          return config_.get(index);
        } else {
          return configBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setConfig(
          int index, flyteidl.core.Literals.KeyValuePair value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigIsMutable();
          config_.set(index, value);
          onChanged();
        } else {
          configBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setConfig(
          int index, flyteidl.core.Literals.KeyValuePair.Builder builderForValue) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.set(index, builderForValue.build());
          onChanged();
        } else {
          configBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addConfig(flyteidl.core.Literals.KeyValuePair value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigIsMutable();
          config_.add(value);
          onChanged();
        } else {
          configBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addConfig(
          int index, flyteidl.core.Literals.KeyValuePair value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigIsMutable();
          config_.add(index, value);
          onChanged();
        } else {
          configBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addConfig(
          flyteidl.core.Literals.KeyValuePair.Builder builderForValue) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.add(builderForValue.build());
          onChanged();
        } else {
          configBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addConfig(
          int index, flyteidl.core.Literals.KeyValuePair.Builder builderForValue) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.add(index, builderForValue.build());
          onChanged();
        } else {
          configBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder addAllConfig(
          java.lang.Iterable<? extends flyteidl.core.Literals.KeyValuePair> values) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, config_);
          onChanged();
        } else {
          configBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          configBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder removeConfig(int index) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.remove(index);
          onChanged();
        } else {
          configBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public flyteidl.core.Literals.KeyValuePair.Builder getConfigBuilder(
          int index) {
        return getConfigFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public flyteidl.core.Literals.KeyValuePairOrBuilder getConfigOrBuilder(
          int index) {
        if (configBuilder_ == null) {
          return config_.get(index);  } else {
          return configBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<? extends flyteidl.core.Literals.KeyValuePairOrBuilder> 
           getConfigOrBuilderList() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(config_);
        }
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public flyteidl.core.Literals.KeyValuePair.Builder addConfigBuilder() {
        return getConfigFieldBuilder().addBuilder(
            flyteidl.core.Literals.KeyValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public flyteidl.core.Literals.KeyValuePair.Builder addConfigBuilder(
          int index) {
        return getConfigFieldBuilder().addBuilder(
            index, flyteidl.core.Literals.KeyValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * Allows extra configs to be available for the container.
       * TODO: elaborate on how configs will become available.
       * Deprecated, please use TaskTemplate.config instead.
       * </pre>
       *
       * <code>repeated .flyteidl.core.KeyValuePair config = 6 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.util.List<flyteidl.core.Literals.KeyValuePair.Builder> 
           getConfigBuilderList() {
        return getConfigFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Literals.KeyValuePair, flyteidl.core.Literals.KeyValuePair.Builder, flyteidl.core.Literals.KeyValuePairOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              flyteidl.core.Literals.KeyValuePair, flyteidl.core.Literals.KeyValuePair.Builder, flyteidl.core.Literals.KeyValuePairOrBuilder>(
                  config_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private java.util.List<flyteidl.core.Tasks.ContainerPort> ports_ =
        java.util.Collections.emptyList();
      private void ensurePortsIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          ports_ = new java.util.ArrayList<flyteidl.core.Tasks.ContainerPort>(ports_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Tasks.ContainerPort, flyteidl.core.Tasks.ContainerPort.Builder, flyteidl.core.Tasks.ContainerPortOrBuilder> portsBuilder_;

      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public java.util.List<flyteidl.core.Tasks.ContainerPort> getPortsList() {
        if (portsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ports_);
        } else {
          return portsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public int getPortsCount() {
        if (portsBuilder_ == null) {
          return ports_.size();
        } else {
          return portsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public flyteidl.core.Tasks.ContainerPort getPorts(int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);
        } else {
          return portsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder setPorts(
          int index, flyteidl.core.Tasks.ContainerPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.set(index, value);
          onChanged();
        } else {
          portsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder setPorts(
          int index, flyteidl.core.Tasks.ContainerPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.set(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder addPorts(flyteidl.core.Tasks.ContainerPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(value);
          onChanged();
        } else {
          portsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder addPorts(
          int index, flyteidl.core.Tasks.ContainerPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(index, value);
          onChanged();
        } else {
          portsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder addPorts(
          flyteidl.core.Tasks.ContainerPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder addPorts(
          int index, flyteidl.core.Tasks.ContainerPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder addAllPorts(
          java.lang.Iterable<? extends flyteidl.core.Tasks.ContainerPort> values) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ports_);
          onChanged();
        } else {
          portsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder clearPorts() {
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          portsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public Builder removePorts(int index) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.remove(index);
          onChanged();
        } else {
          portsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public flyteidl.core.Tasks.ContainerPort.Builder getPortsBuilder(
          int index) {
        return getPortsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public flyteidl.core.Tasks.ContainerPortOrBuilder getPortsOrBuilder(
          int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);  } else {
          return portsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public java.util.List<? extends flyteidl.core.Tasks.ContainerPortOrBuilder> 
           getPortsOrBuilderList() {
        if (portsBuilder_ != null) {
          return portsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ports_);
        }
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public flyteidl.core.Tasks.ContainerPort.Builder addPortsBuilder() {
        return getPortsFieldBuilder().addBuilder(
            flyteidl.core.Tasks.ContainerPort.getDefaultInstance());
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public flyteidl.core.Tasks.ContainerPort.Builder addPortsBuilder(
          int index) {
        return getPortsFieldBuilder().addBuilder(
            index, flyteidl.core.Tasks.ContainerPort.getDefaultInstance());
      }
      /**
       * <pre>
       * Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
       * not supported on AWS Batch)
       * Only K8s
       * </pre>
       *
       * <code>repeated .flyteidl.core.ContainerPort ports = 7;</code>
       */
      public java.util.List<flyteidl.core.Tasks.ContainerPort.Builder> 
           getPortsBuilderList() {
        return getPortsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.core.Tasks.ContainerPort, flyteidl.core.Tasks.ContainerPort.Builder, flyteidl.core.Tasks.ContainerPortOrBuilder> 
          getPortsFieldBuilder() {
        if (portsBuilder_ == null) {
          portsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              flyteidl.core.Tasks.ContainerPort, flyteidl.core.Tasks.ContainerPort.Builder, flyteidl.core.Tasks.ContainerPortOrBuilder>(
                  ports_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          ports_ = null;
        }
        return portsBuilder_;
      }

      private flyteidl.core.Tasks.DataLoadingConfig dataConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.DataLoadingConfig, flyteidl.core.Tasks.DataLoadingConfig.Builder, flyteidl.core.Tasks.DataLoadingConfigOrBuilder> dataConfigBuilder_;
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public boolean hasDataConfig() {
        return dataConfigBuilder_ != null || dataConfig_ != null;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public flyteidl.core.Tasks.DataLoadingConfig getDataConfig() {
        if (dataConfigBuilder_ == null) {
          return dataConfig_ == null ? flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance() : dataConfig_;
        } else {
          return dataConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public Builder setDataConfig(flyteidl.core.Tasks.DataLoadingConfig value) {
        if (dataConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataConfig_ = value;
          onChanged();
        } else {
          dataConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public Builder setDataConfig(
          flyteidl.core.Tasks.DataLoadingConfig.Builder builderForValue) {
        if (dataConfigBuilder_ == null) {
          dataConfig_ = builderForValue.build();
          onChanged();
        } else {
          dataConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public Builder mergeDataConfig(flyteidl.core.Tasks.DataLoadingConfig value) {
        if (dataConfigBuilder_ == null) {
          if (dataConfig_ != null) {
            dataConfig_ =
              flyteidl.core.Tasks.DataLoadingConfig.newBuilder(dataConfig_).mergeFrom(value).buildPartial();
          } else {
            dataConfig_ = value;
          }
          onChanged();
        } else {
          dataConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public Builder clearDataConfig() {
        if (dataConfigBuilder_ == null) {
          dataConfig_ = null;
          onChanged();
        } else {
          dataConfig_ = null;
          dataConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public flyteidl.core.Tasks.DataLoadingConfig.Builder getDataConfigBuilder() {
        
        onChanged();
        return getDataConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      public flyteidl.core.Tasks.DataLoadingConfigOrBuilder getDataConfigOrBuilder() {
        if (dataConfigBuilder_ != null) {
          return dataConfigBuilder_.getMessageOrBuilder();
        } else {
          return dataConfig_ == null ?
              flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance() : dataConfig_;
        }
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flyteidl. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.DataLoadingConfig, flyteidl.core.Tasks.DataLoadingConfig.Builder, flyteidl.core.Tasks.DataLoadingConfigOrBuilder> 
          getDataConfigFieldBuilder() {
        if (dataConfigBuilder_ == null) {
          dataConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.DataLoadingConfig, flyteidl.core.Tasks.DataLoadingConfig.Builder, flyteidl.core.Tasks.DataLoadingConfigOrBuilder>(
                  getDataConfig(),
                  getParentForChildren(),
                  isClean());
          dataConfig_ = null;
        }
        return dataConfigBuilder_;
      }

      private int architecture_ = 0;
      /**
       * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
       */
      public int getArchitectureValue() {
        return architecture_;
      }
      /**
       * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
       */
      public Builder setArchitectureValue(int value) {
        architecture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
       */
      public flyteidl.core.Tasks.Container.Architecture getArchitecture() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Tasks.Container.Architecture result = flyteidl.core.Tasks.Container.Architecture.valueOf(architecture_);
        return result == null ? flyteidl.core.Tasks.Container.Architecture.UNRECOGNIZED : result;
      }
      /**
       * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
       */
      public Builder setArchitecture(flyteidl.core.Tasks.Container.Architecture value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        architecture_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.Container.Architecture architecture = 10;</code>
       */
      public Builder clearArchitecture() {
        
        architecture_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.Container)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.Container)
    private static final flyteidl.core.Tasks.Container DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.Container();
    }

    public static flyteidl.core.Tasks.Container getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Container>
        PARSER = new com.google.protobuf.AbstractParser<Container>() {
      @java.lang.Override
      public Container parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Container(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Container> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Container> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.Container getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IOStrategyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.IOStrategy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Mode to use to manage downloads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
     */
    int getDownloadModeValue();
    /**
     * <pre>
     * Mode to use to manage downloads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
     */
    flyteidl.core.Tasks.IOStrategy.DownloadMode getDownloadMode();

    /**
     * <pre>
     * Mode to use to manage uploads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
     */
    int getUploadModeValue();
    /**
     * <pre>
     * Mode to use to manage uploads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
     */
    flyteidl.core.Tasks.IOStrategy.UploadMode getUploadMode();
  }
  /**
   * <pre>
   * Strategy to use when dealing with Blob, Schema, or multipart blob data (large datasets)
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.IOStrategy}
   */
  public  static final class IOStrategy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.IOStrategy)
      IOStrategyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IOStrategy.newBuilder() to construct.
    private IOStrategy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IOStrategy() {
      downloadMode_ = 0;
      uploadMode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IOStrategy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              downloadMode_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              uploadMode_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_IOStrategy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_IOStrategy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.IOStrategy.class, flyteidl.core.Tasks.IOStrategy.Builder.class);
    }

    /**
     * <pre>
     * Mode to use for downloading
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.IOStrategy.DownloadMode}
     */
    public enum DownloadMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * All data will be downloaded before the main container is executed
       * </pre>
       *
       * <code>DOWNLOAD_EAGER = 0;</code>
       */
      DOWNLOAD_EAGER(0),
      /**
       * <pre>
       * Data will be downloaded as a stream and an End-Of-Stream marker will be written to indicate all data has been downloaded. Refer to protocol for details
       * </pre>
       *
       * <code>DOWNLOAD_STREAM = 1;</code>
       */
      DOWNLOAD_STREAM(1),
      /**
       * <pre>
       * Large objects (offloaded) will not be downloaded
       * </pre>
       *
       * <code>DO_NOT_DOWNLOAD = 2;</code>
       */
      DO_NOT_DOWNLOAD(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * All data will be downloaded before the main container is executed
       * </pre>
       *
       * <code>DOWNLOAD_EAGER = 0;</code>
       */
      public static final int DOWNLOAD_EAGER_VALUE = 0;
      /**
       * <pre>
       * Data will be downloaded as a stream and an End-Of-Stream marker will be written to indicate all data has been downloaded. Refer to protocol for details
       * </pre>
       *
       * <code>DOWNLOAD_STREAM = 1;</code>
       */
      public static final int DOWNLOAD_STREAM_VALUE = 1;
      /**
       * <pre>
       * Large objects (offloaded) will not be downloaded
       * </pre>
       *
       * <code>DO_NOT_DOWNLOAD = 2;</code>
       */
      public static final int DO_NOT_DOWNLOAD_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DownloadMode valueOf(int value) {
        return forNumber(value);
      }

      public static DownloadMode forNumber(int value) {
        switch (value) {
          case 0: return DOWNLOAD_EAGER;
          case 1: return DOWNLOAD_STREAM;
          case 2: return DO_NOT_DOWNLOAD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DownloadMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DownloadMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DownloadMode>() {
              public DownloadMode findValueByNumber(int number) {
                return DownloadMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Tasks.IOStrategy.getDescriptor().getEnumTypes().get(0);
      }

      private static final DownloadMode[] VALUES = values();

      public static DownloadMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DownloadMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.IOStrategy.DownloadMode)
    }

    /**
     * <pre>
     * Mode to use for uploading
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.IOStrategy.UploadMode}
     */
    public enum UploadMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * All data will be uploaded after the main container exits
       * </pre>
       *
       * <code>UPLOAD_ON_EXIT = 0;</code>
       */
      UPLOAD_ON_EXIT(0),
      /**
       * <pre>
       * Data will be uploaded as it appears. Refer to protocol specification for details
       * </pre>
       *
       * <code>UPLOAD_EAGER = 1;</code>
       */
      UPLOAD_EAGER(1),
      /**
       * <pre>
       * Data will not be uploaded, only references will be written
       * </pre>
       *
       * <code>DO_NOT_UPLOAD = 2;</code>
       */
      DO_NOT_UPLOAD(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * All data will be uploaded after the main container exits
       * </pre>
       *
       * <code>UPLOAD_ON_EXIT = 0;</code>
       */
      public static final int UPLOAD_ON_EXIT_VALUE = 0;
      /**
       * <pre>
       * Data will be uploaded as it appears. Refer to protocol specification for details
       * </pre>
       *
       * <code>UPLOAD_EAGER = 1;</code>
       */
      public static final int UPLOAD_EAGER_VALUE = 1;
      /**
       * <pre>
       * Data will not be uploaded, only references will be written
       * </pre>
       *
       * <code>DO_NOT_UPLOAD = 2;</code>
       */
      public static final int DO_NOT_UPLOAD_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static UploadMode valueOf(int value) {
        return forNumber(value);
      }

      public static UploadMode forNumber(int value) {
        switch (value) {
          case 0: return UPLOAD_ON_EXIT;
          case 1: return UPLOAD_EAGER;
          case 2: return DO_NOT_UPLOAD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<UploadMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          UploadMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<UploadMode>() {
              public UploadMode findValueByNumber(int number) {
                return UploadMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Tasks.IOStrategy.getDescriptor().getEnumTypes().get(1);
      }

      private static final UploadMode[] VALUES = values();

      public static UploadMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private UploadMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.IOStrategy.UploadMode)
    }

    public static final int DOWNLOAD_MODE_FIELD_NUMBER = 1;
    private int downloadMode_;
    /**
     * <pre>
     * Mode to use to manage downloads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
     */
    public int getDownloadModeValue() {
      return downloadMode_;
    }
    /**
     * <pre>
     * Mode to use to manage downloads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
     */
    public flyteidl.core.Tasks.IOStrategy.DownloadMode getDownloadMode() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Tasks.IOStrategy.DownloadMode result = flyteidl.core.Tasks.IOStrategy.DownloadMode.valueOf(downloadMode_);
      return result == null ? flyteidl.core.Tasks.IOStrategy.DownloadMode.UNRECOGNIZED : result;
    }

    public static final int UPLOAD_MODE_FIELD_NUMBER = 2;
    private int uploadMode_;
    /**
     * <pre>
     * Mode to use to manage uploads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
     */
    public int getUploadModeValue() {
      return uploadMode_;
    }
    /**
     * <pre>
     * Mode to use to manage uploads
     * </pre>
     *
     * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
     */
    public flyteidl.core.Tasks.IOStrategy.UploadMode getUploadMode() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Tasks.IOStrategy.UploadMode result = flyteidl.core.Tasks.IOStrategy.UploadMode.valueOf(uploadMode_);
      return result == null ? flyteidl.core.Tasks.IOStrategy.UploadMode.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (downloadMode_ != flyteidl.core.Tasks.IOStrategy.DownloadMode.DOWNLOAD_EAGER.getNumber()) {
        output.writeEnum(1, downloadMode_);
      }
      if (uploadMode_ != flyteidl.core.Tasks.IOStrategy.UploadMode.UPLOAD_ON_EXIT.getNumber()) {
        output.writeEnum(2, uploadMode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (downloadMode_ != flyteidl.core.Tasks.IOStrategy.DownloadMode.DOWNLOAD_EAGER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, downloadMode_);
      }
      if (uploadMode_ != flyteidl.core.Tasks.IOStrategy.UploadMode.UPLOAD_ON_EXIT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, uploadMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.IOStrategy)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.IOStrategy other = (flyteidl.core.Tasks.IOStrategy) obj;

      if (downloadMode_ != other.downloadMode_) return false;
      if (uploadMode_ != other.uploadMode_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOWNLOAD_MODE_FIELD_NUMBER;
      hash = (53 * hash) + downloadMode_;
      hash = (37 * hash) + UPLOAD_MODE_FIELD_NUMBER;
      hash = (53 * hash) + uploadMode_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.IOStrategy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.IOStrategy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.IOStrategy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.IOStrategy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Strategy to use when dealing with Blob, Schema, or multipart blob data (large datasets)
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.IOStrategy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.IOStrategy)
        flyteidl.core.Tasks.IOStrategyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_IOStrategy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_IOStrategy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.IOStrategy.class, flyteidl.core.Tasks.IOStrategy.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.IOStrategy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        downloadMode_ = 0;

        uploadMode_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_IOStrategy_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.IOStrategy getDefaultInstanceForType() {
        return flyteidl.core.Tasks.IOStrategy.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.IOStrategy build() {
        flyteidl.core.Tasks.IOStrategy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.IOStrategy buildPartial() {
        flyteidl.core.Tasks.IOStrategy result = new flyteidl.core.Tasks.IOStrategy(this);
        result.downloadMode_ = downloadMode_;
        result.uploadMode_ = uploadMode_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.IOStrategy) {
          return mergeFrom((flyteidl.core.Tasks.IOStrategy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.IOStrategy other) {
        if (other == flyteidl.core.Tasks.IOStrategy.getDefaultInstance()) return this;
        if (other.downloadMode_ != 0) {
          setDownloadModeValue(other.getDownloadModeValue());
        }
        if (other.uploadMode_ != 0) {
          setUploadModeValue(other.getUploadModeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.IOStrategy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.IOStrategy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int downloadMode_ = 0;
      /**
       * <pre>
       * Mode to use to manage downloads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
       */
      public int getDownloadModeValue() {
        return downloadMode_;
      }
      /**
       * <pre>
       * Mode to use to manage downloads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
       */
      public Builder setDownloadModeValue(int value) {
        downloadMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mode to use to manage downloads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
       */
      public flyteidl.core.Tasks.IOStrategy.DownloadMode getDownloadMode() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Tasks.IOStrategy.DownloadMode result = flyteidl.core.Tasks.IOStrategy.DownloadMode.valueOf(downloadMode_);
        return result == null ? flyteidl.core.Tasks.IOStrategy.DownloadMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Mode to use to manage downloads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
       */
      public Builder setDownloadMode(flyteidl.core.Tasks.IOStrategy.DownloadMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        downloadMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mode to use to manage downloads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.DownloadMode download_mode = 1;</code>
       */
      public Builder clearDownloadMode() {
        
        downloadMode_ = 0;
        onChanged();
        return this;
      }

      private int uploadMode_ = 0;
      /**
       * <pre>
       * Mode to use to manage uploads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
       */
      public int getUploadModeValue() {
        return uploadMode_;
      }
      /**
       * <pre>
       * Mode to use to manage uploads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
       */
      public Builder setUploadModeValue(int value) {
        uploadMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mode to use to manage uploads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
       */
      public flyteidl.core.Tasks.IOStrategy.UploadMode getUploadMode() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Tasks.IOStrategy.UploadMode result = flyteidl.core.Tasks.IOStrategy.UploadMode.valueOf(uploadMode_);
        return result == null ? flyteidl.core.Tasks.IOStrategy.UploadMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Mode to use to manage uploads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
       */
      public Builder setUploadMode(flyteidl.core.Tasks.IOStrategy.UploadMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        uploadMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mode to use to manage uploads
       * </pre>
       *
       * <code>.flyteidl.core.IOStrategy.UploadMode upload_mode = 2;</code>
       */
      public Builder clearUploadMode() {
        
        uploadMode_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.IOStrategy)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.IOStrategy)
    private static final flyteidl.core.Tasks.IOStrategy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.IOStrategy();
    }

    public static flyteidl.core.Tasks.IOStrategy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IOStrategy>
        PARSER = new com.google.protobuf.AbstractParser<IOStrategy>() {
      @java.lang.Override
      public IOStrategy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IOStrategy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IOStrategy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IOStrategy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.IOStrategy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataLoadingConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.DataLoadingConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Flag enables DataLoading Config. If this is not set, data loading will not be used!
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     */
    boolean getEnabled();

    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2;</code>
     */
    java.lang.String getInputPath();
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2;</code>
     */
    com.google.protobuf.ByteString
        getInputPathBytes();

    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3;</code>
     */
    java.lang.String getOutputPath();
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3;</code>
     */
    com.google.protobuf.ByteString
        getOutputPathBytes();

    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
     */
    int getFormatValue();
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
     */
    flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat getFormat();

    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
     */
    boolean hasIoStrategy();
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
     */
    flyteidl.core.Tasks.IOStrategy getIoStrategy();
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
     */
    flyteidl.core.Tasks.IOStrategyOrBuilder getIoStrategyOrBuilder();
  }
  /**
   * <pre>
   * This configuration allows executing raw containers in Flyte using the Flyte CoPilot system.
   * Flyte CoPilot, eliminates the needs of flytekit or sdk inside the container. Any inputs required by the users container are side-loaded in the input_path
   * Any outputs generated by the user container - within output_path are automatically uploaded.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.DataLoadingConfig}
   */
  public  static final class DataLoadingConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.DataLoadingConfig)
      DataLoadingConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataLoadingConfig.newBuilder() to construct.
    private DataLoadingConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataLoadingConfig() {
      inputPath_ = "";
      outputPath_ = "";
      format_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataLoadingConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              enabled_ = input.readBool();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              inputPath_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              outputPath_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              format_ = rawValue;
              break;
            }
            case 42: {
              flyteidl.core.Tasks.IOStrategy.Builder subBuilder = null;
              if (ioStrategy_ != null) {
                subBuilder = ioStrategy_.toBuilder();
              }
              ioStrategy_ = input.readMessage(flyteidl.core.Tasks.IOStrategy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ioStrategy_);
                ioStrategy_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_DataLoadingConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_DataLoadingConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.DataLoadingConfig.class, flyteidl.core.Tasks.DataLoadingConfig.Builder.class);
    }

    /**
     * <pre>
     * LiteralMapFormat decides the encoding format in which the input metadata should be made available to the containers.
     * If the user has access to the protocol buffer definitions, it is recommended to use the PROTO format.
     * JSON and YAML do not need any protobuf definitions to read it
     * All remote references in core.LiteralMap are replaced with local filesystem references (the data is downloaded to local filesystem)
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.DataLoadingConfig.LiteralMapFormat}
     */
    public enum LiteralMapFormat
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * JSON / YAML for the metadata (which contains inlined primitive values). The representation is inline with the standard json specification as specified - https://www.json.org/json-en.html
       * </pre>
       *
       * <code>JSON = 0;</code>
       */
      JSON(0),
      /**
       * <code>YAML = 1;</code>
       */
      YAML(1),
      /**
       * <pre>
       * Proto is a serialized binary of `core.LiteralMap` defined in flyteidl/core
       * </pre>
       *
       * <code>PROTO = 2;</code>
       */
      PROTO(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * JSON / YAML for the metadata (which contains inlined primitive values). The representation is inline with the standard json specification as specified - https://www.json.org/json-en.html
       * </pre>
       *
       * <code>JSON = 0;</code>
       */
      public static final int JSON_VALUE = 0;
      /**
       * <code>YAML = 1;</code>
       */
      public static final int YAML_VALUE = 1;
      /**
       * <pre>
       * Proto is a serialized binary of `core.LiteralMap` defined in flyteidl/core
       * </pre>
       *
       * <code>PROTO = 2;</code>
       */
      public static final int PROTO_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LiteralMapFormat valueOf(int value) {
        return forNumber(value);
      }

      public static LiteralMapFormat forNumber(int value) {
        switch (value) {
          case 0: return JSON;
          case 1: return YAML;
          case 2: return PROTO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LiteralMapFormat>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LiteralMapFormat> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LiteralMapFormat>() {
              public LiteralMapFormat findValueByNumber(int number) {
                return LiteralMapFormat.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Tasks.DataLoadingConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final LiteralMapFormat[] VALUES = values();

      public static LiteralMapFormat valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LiteralMapFormat(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.DataLoadingConfig.LiteralMapFormat)
    }

    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    /**
     * <pre>
     * Flag enables DataLoading Config. If this is not set, data loading will not be used!
     * </pre>
     *
     * <code>bool enabled = 1;</code>
     */
    public boolean getEnabled() {
      return enabled_;
    }

    public static final int INPUT_PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object inputPath_;
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2;</code>
     */
    public java.lang.String getInputPath() {
      java.lang.Object ref = inputPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inputPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInputPathBytes() {
      java.lang.Object ref = inputPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OUTPUT_PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object outputPath_;
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3;</code>
     */
    public java.lang.String getOutputPath() {
      java.lang.Object ref = outputPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        outputPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getOutputPathBytes() {
      java.lang.Object ref = outputPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FORMAT_FIELD_NUMBER = 4;
    private int format_;
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
     */
    public int getFormatValue() {
      return format_;
    }
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
     */
    public flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat getFormat() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat result = flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat.valueOf(format_);
      return result == null ? flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat.UNRECOGNIZED : result;
    }

    public static final int IO_STRATEGY_FIELD_NUMBER = 5;
    private flyteidl.core.Tasks.IOStrategy ioStrategy_;
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
     */
    public boolean hasIoStrategy() {
      return ioStrategy_ != null;
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
     */
    public flyteidl.core.Tasks.IOStrategy getIoStrategy() {
      return ioStrategy_ == null ? flyteidl.core.Tasks.IOStrategy.getDefaultInstance() : ioStrategy_;
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
     */
    public flyteidl.core.Tasks.IOStrategyOrBuilder getIoStrategyOrBuilder() {
      return getIoStrategy();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (enabled_ != false) {
        output.writeBool(1, enabled_);
      }
      if (!getInputPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, inputPath_);
      }
      if (!getOutputPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, outputPath_);
      }
      if (format_ != flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat.JSON.getNumber()) {
        output.writeEnum(4, format_);
      }
      if (ioStrategy_ != null) {
        output.writeMessage(5, getIoStrategy());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (enabled_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (!getInputPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, inputPath_);
      }
      if (!getOutputPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, outputPath_);
      }
      if (format_ != flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat.JSON.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, format_);
      }
      if (ioStrategy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getIoStrategy());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.DataLoadingConfig)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.DataLoadingConfig other = (flyteidl.core.Tasks.DataLoadingConfig) obj;

      if (getEnabled()
          != other.getEnabled()) return false;
      if (!getInputPath()
          .equals(other.getInputPath())) return false;
      if (!getOutputPath()
          .equals(other.getOutputPath())) return false;
      if (format_ != other.format_) return false;
      if (hasIoStrategy() != other.hasIoStrategy()) return false;
      if (hasIoStrategy()) {
        if (!getIoStrategy()
            .equals(other.getIoStrategy())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnabled());
      hash = (37 * hash) + INPUT_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getInputPath().hashCode();
      hash = (37 * hash) + OUTPUT_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getOutputPath().hashCode();
      hash = (37 * hash) + FORMAT_FIELD_NUMBER;
      hash = (53 * hash) + format_;
      if (hasIoStrategy()) {
        hash = (37 * hash) + IO_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getIoStrategy().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.DataLoadingConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.DataLoadingConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This configuration allows executing raw containers in Flyte using the Flyte CoPilot system.
     * Flyte CoPilot, eliminates the needs of flytekit or sdk inside the container. Any inputs required by the users container are side-loaded in the input_path
     * Any outputs generated by the user container - within output_path are automatically uploaded.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.DataLoadingConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.DataLoadingConfig)
        flyteidl.core.Tasks.DataLoadingConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_DataLoadingConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_DataLoadingConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.DataLoadingConfig.class, flyteidl.core.Tasks.DataLoadingConfig.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.DataLoadingConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        enabled_ = false;

        inputPath_ = "";

        outputPath_ = "";

        format_ = 0;

        if (ioStrategyBuilder_ == null) {
          ioStrategy_ = null;
        } else {
          ioStrategy_ = null;
          ioStrategyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_DataLoadingConfig_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.DataLoadingConfig getDefaultInstanceForType() {
        return flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.DataLoadingConfig build() {
        flyteidl.core.Tasks.DataLoadingConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.DataLoadingConfig buildPartial() {
        flyteidl.core.Tasks.DataLoadingConfig result = new flyteidl.core.Tasks.DataLoadingConfig(this);
        result.enabled_ = enabled_;
        result.inputPath_ = inputPath_;
        result.outputPath_ = outputPath_;
        result.format_ = format_;
        if (ioStrategyBuilder_ == null) {
          result.ioStrategy_ = ioStrategy_;
        } else {
          result.ioStrategy_ = ioStrategyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.DataLoadingConfig) {
          return mergeFrom((flyteidl.core.Tasks.DataLoadingConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.DataLoadingConfig other) {
        if (other == flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance()) return this;
        if (other.getEnabled() != false) {
          setEnabled(other.getEnabled());
        }
        if (!other.getInputPath().isEmpty()) {
          inputPath_ = other.inputPath_;
          onChanged();
        }
        if (!other.getOutputPath().isEmpty()) {
          outputPath_ = other.outputPath_;
          onChanged();
        }
        if (other.format_ != 0) {
          setFormatValue(other.getFormatValue());
        }
        if (other.hasIoStrategy()) {
          mergeIoStrategy(other.getIoStrategy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.DataLoadingConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.DataLoadingConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean enabled_ ;
      /**
       * <pre>
       * Flag enables DataLoading Config. If this is not set, data loading will not be used!
       * </pre>
       *
       * <code>bool enabled = 1;</code>
       */
      public boolean getEnabled() {
        return enabled_;
      }
      /**
       * <pre>
       * Flag enables DataLoading Config. If this is not set, data loading will not be used!
       * </pre>
       *
       * <code>bool enabled = 1;</code>
       */
      public Builder setEnabled(boolean value) {
        
        enabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flag enables DataLoading Config. If this is not set, data loading will not be used!
       * </pre>
       *
       * <code>bool enabled = 1;</code>
       */
      public Builder clearEnabled() {
        
        enabled_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object inputPath_ = "";
      /**
       * <pre>
       * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
       * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
       * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
       * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
       * /var/flyte/inputs/y -&gt; Y is a file in Binary format
       * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
       * More information about the protocol - refer to docs #TODO reference docs here
       * </pre>
       *
       * <code>string input_path = 2;</code>
       */
      public java.lang.String getInputPath() {
        java.lang.Object ref = inputPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          inputPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
       * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
       * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
       * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
       * /var/flyte/inputs/y -&gt; Y is a file in Binary format
       * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
       * More information about the protocol - refer to docs #TODO reference docs here
       * </pre>
       *
       * <code>string input_path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInputPathBytes() {
        java.lang.Object ref = inputPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inputPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
       * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
       * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
       * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
       * /var/flyte/inputs/y -&gt; Y is a file in Binary format
       * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
       * More information about the protocol - refer to docs #TODO reference docs here
       * </pre>
       *
       * <code>string input_path = 2;</code>
       */
      public Builder setInputPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        inputPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
       * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
       * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
       * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
       * /var/flyte/inputs/y -&gt; Y is a file in Binary format
       * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
       * More information about the protocol - refer to docs #TODO reference docs here
       * </pre>
       *
       * <code>string input_path = 2;</code>
       */
      public Builder clearInputPath() {
        
        inputPath_ = getDefaultInstance().getInputPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
       * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is '/var/flyte/inputs', then the file system will look like
       * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
       * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
       * /var/flyte/inputs/y -&gt; Y is a file in Binary format
       * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
       * More information about the protocol - refer to docs #TODO reference docs here
       * </pre>
       *
       * <code>string input_path = 2;</code>
       */
      public Builder setInputPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        inputPath_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object outputPath_ = "";
      /**
       * <pre>
       * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
       * </pre>
       *
       * <code>string output_path = 3;</code>
       */
      public java.lang.String getOutputPath() {
        java.lang.Object ref = outputPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          outputPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
       * </pre>
       *
       * <code>string output_path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getOutputPathBytes() {
        java.lang.Object ref = outputPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outputPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
       * </pre>
       *
       * <code>string output_path = 3;</code>
       */
      public Builder setOutputPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        outputPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
       * </pre>
       *
       * <code>string output_path = 3;</code>
       */
      public Builder clearOutputPath() {
        
        outputPath_ = getDefaultInstance().getOutputPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
       * </pre>
       *
       * <code>string output_path = 3;</code>
       */
      public Builder setOutputPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        outputPath_ = value;
        onChanged();
        return this;
      }

      private int format_ = 0;
      /**
       * <pre>
       * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
       * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
       */
      public int getFormatValue() {
        return format_;
      }
      /**
       * <pre>
       * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
       * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
       */
      public Builder setFormatValue(int value) {
        format_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
       * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
       */
      public flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat getFormat() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat result = flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat.valueOf(format_);
        return result == null ? flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
       * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
       */
      public Builder setFormat(flyteidl.core.Tasks.DataLoadingConfig.LiteralMapFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        format_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
       * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4;</code>
       */
      public Builder clearFormat() {
        
        format_ = 0;
        onChanged();
        return this;
      }

      private flyteidl.core.Tasks.IOStrategy ioStrategy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.IOStrategy, flyteidl.core.Tasks.IOStrategy.Builder, flyteidl.core.Tasks.IOStrategyOrBuilder> ioStrategyBuilder_;
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public boolean hasIoStrategy() {
        return ioStrategyBuilder_ != null || ioStrategy_ != null;
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public flyteidl.core.Tasks.IOStrategy getIoStrategy() {
        if (ioStrategyBuilder_ == null) {
          return ioStrategy_ == null ? flyteidl.core.Tasks.IOStrategy.getDefaultInstance() : ioStrategy_;
        } else {
          return ioStrategyBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public Builder setIoStrategy(flyteidl.core.Tasks.IOStrategy value) {
        if (ioStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ioStrategy_ = value;
          onChanged();
        } else {
          ioStrategyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public Builder setIoStrategy(
          flyteidl.core.Tasks.IOStrategy.Builder builderForValue) {
        if (ioStrategyBuilder_ == null) {
          ioStrategy_ = builderForValue.build();
          onChanged();
        } else {
          ioStrategyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public Builder mergeIoStrategy(flyteidl.core.Tasks.IOStrategy value) {
        if (ioStrategyBuilder_ == null) {
          if (ioStrategy_ != null) {
            ioStrategy_ =
              flyteidl.core.Tasks.IOStrategy.newBuilder(ioStrategy_).mergeFrom(value).buildPartial();
          } else {
            ioStrategy_ = value;
          }
          onChanged();
        } else {
          ioStrategyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public Builder clearIoStrategy() {
        if (ioStrategyBuilder_ == null) {
          ioStrategy_ = null;
          onChanged();
        } else {
          ioStrategy_ = null;
          ioStrategyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public flyteidl.core.Tasks.IOStrategy.Builder getIoStrategyBuilder() {
        
        onChanged();
        return getIoStrategyFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      public flyteidl.core.Tasks.IOStrategyOrBuilder getIoStrategyOrBuilder() {
        if (ioStrategyBuilder_ != null) {
          return ioStrategyBuilder_.getMessageOrBuilder();
        } else {
          return ioStrategy_ == null ?
              flyteidl.core.Tasks.IOStrategy.getDefaultInstance() : ioStrategy_;
        }
      }
      /**
       * <code>.flyteidl.core.IOStrategy io_strategy = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.IOStrategy, flyteidl.core.Tasks.IOStrategy.Builder, flyteidl.core.Tasks.IOStrategyOrBuilder> 
          getIoStrategyFieldBuilder() {
        if (ioStrategyBuilder_ == null) {
          ioStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.IOStrategy, flyteidl.core.Tasks.IOStrategy.Builder, flyteidl.core.Tasks.IOStrategyOrBuilder>(
                  getIoStrategy(),
                  getParentForChildren(),
                  isClean());
          ioStrategy_ = null;
        }
        return ioStrategyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.DataLoadingConfig)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.DataLoadingConfig)
    private static final flyteidl.core.Tasks.DataLoadingConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.DataLoadingConfig();
    }

    public static flyteidl.core.Tasks.DataLoadingConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DataLoadingConfig>
        PARSER = new com.google.protobuf.AbstractParser<DataLoadingConfig>() {
      @java.lang.Override
      public DataLoadingConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataLoadingConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataLoadingConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataLoadingConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.DataLoadingConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface K8sPodOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.K8sPod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Contains additional metadata for building a kubernetes pod.
     * </pre>
     *
     * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Contains additional metadata for building a kubernetes pod.
     * </pre>
     *
     * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
     */
    flyteidl.core.Tasks.K8sObjectMetadata getMetadata();
    /**
     * <pre>
     * Contains additional metadata for building a kubernetes pod.
     * </pre>
     *
     * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
     */
    flyteidl.core.Tasks.K8sObjectMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Defines the primary pod spec created when a task is executed.
     * This should be a JSON-marshalled pod spec, which can be defined in
     * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
     * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
     * </pre>
     *
     * <code>.google.protobuf.Struct pod_spec = 2;</code>
     */
    boolean hasPodSpec();
    /**
     * <pre>
     * Defines the primary pod spec created when a task is executed.
     * This should be a JSON-marshalled pod spec, which can be defined in
     * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
     * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
     * </pre>
     *
     * <code>.google.protobuf.Struct pod_spec = 2;</code>
     */
    com.google.protobuf.Struct getPodSpec();
    /**
     * <pre>
     * Defines the primary pod spec created when a task is executed.
     * This should be a JSON-marshalled pod spec, which can be defined in
     * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
     * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
     * </pre>
     *
     * <code>.google.protobuf.Struct pod_spec = 2;</code>
     */
    com.google.protobuf.StructOrBuilder getPodSpecOrBuilder();

    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
     */
    boolean hasDataConfig();
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
     */
    flyteidl.core.Tasks.DataLoadingConfig getDataConfig();
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
     */
    flyteidl.core.Tasks.DataLoadingConfigOrBuilder getDataConfigOrBuilder();
  }
  /**
   * <pre>
   * Defines a pod spec and additional pod metadata that is created when a task is executed.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.K8sPod}
   */
  public  static final class K8sPod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.K8sPod)
      K8sPodOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use K8sPod.newBuilder() to construct.
    private K8sPod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private K8sPod() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private K8sPod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              flyteidl.core.Tasks.K8sObjectMetadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(flyteidl.core.Tasks.K8sObjectMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Struct.Builder subBuilder = null;
              if (podSpec_ != null) {
                subBuilder = podSpec_.toBuilder();
              }
              podSpec_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(podSpec_);
                podSpec_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              flyteidl.core.Tasks.DataLoadingConfig.Builder subBuilder = null;
              if (dataConfig_ != null) {
                subBuilder = dataConfig_.toBuilder();
              }
              dataConfig_ = input.readMessage(flyteidl.core.Tasks.DataLoadingConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataConfig_);
                dataConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sPod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sPod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.K8sPod.class, flyteidl.core.Tasks.K8sPod.Builder.class);
    }

    public static final int METADATA_FIELD_NUMBER = 1;
    private flyteidl.core.Tasks.K8sObjectMetadata metadata_;
    /**
     * <pre>
     * Contains additional metadata for building a kubernetes pod.
     * </pre>
     *
     * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <pre>
     * Contains additional metadata for building a kubernetes pod.
     * </pre>
     *
     * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
     */
    public flyteidl.core.Tasks.K8sObjectMetadata getMetadata() {
      return metadata_ == null ? flyteidl.core.Tasks.K8sObjectMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Contains additional metadata for building a kubernetes pod.
     * </pre>
     *
     * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
     */
    public flyteidl.core.Tasks.K8sObjectMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int POD_SPEC_FIELD_NUMBER = 2;
    private com.google.protobuf.Struct podSpec_;
    /**
     * <pre>
     * Defines the primary pod spec created when a task is executed.
     * This should be a JSON-marshalled pod spec, which can be defined in
     * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
     * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
     * </pre>
     *
     * <code>.google.protobuf.Struct pod_spec = 2;</code>
     */
    public boolean hasPodSpec() {
      return podSpec_ != null;
    }
    /**
     * <pre>
     * Defines the primary pod spec created when a task is executed.
     * This should be a JSON-marshalled pod spec, which can be defined in
     * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
     * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
     * </pre>
     *
     * <code>.google.protobuf.Struct pod_spec = 2;</code>
     */
    public com.google.protobuf.Struct getPodSpec() {
      return podSpec_ == null ? com.google.protobuf.Struct.getDefaultInstance() : podSpec_;
    }
    /**
     * <pre>
     * Defines the primary pod spec created when a task is executed.
     * This should be a JSON-marshalled pod spec, which can be defined in
     * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
     * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
     * </pre>
     *
     * <code>.google.protobuf.Struct pod_spec = 2;</code>
     */
    public com.google.protobuf.StructOrBuilder getPodSpecOrBuilder() {
      return getPodSpec();
    }

    public static final int DATA_CONFIG_FIELD_NUMBER = 3;
    private flyteidl.core.Tasks.DataLoadingConfig dataConfig_;
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
     */
    public boolean hasDataConfig() {
      return dataConfig_ != null;
    }
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
     */
    public flyteidl.core.Tasks.DataLoadingConfig getDataConfig() {
      return dataConfig_ == null ? flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance() : dataConfig_;
    }
    /**
     * <pre>
     * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
     * This makes it possible to to run a completely portable container, that uses inputs and outputs
     * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
     * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
     * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
     * to understand the default paths.
     * Only K8s
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
     */
    public flyteidl.core.Tasks.DataLoadingConfigOrBuilder getDataConfigOrBuilder() {
      return getDataConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (podSpec_ != null) {
        output.writeMessage(2, getPodSpec());
      }
      if (dataConfig_ != null) {
        output.writeMessage(3, getDataConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (podSpec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPodSpec());
      }
      if (dataConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDataConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.K8sPod)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.K8sPod other = (flyteidl.core.Tasks.K8sPod) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasPodSpec() != other.hasPodSpec()) return false;
      if (hasPodSpec()) {
        if (!getPodSpec()
            .equals(other.getPodSpec())) return false;
      }
      if (hasDataConfig() != other.hasDataConfig()) return false;
      if (hasDataConfig()) {
        if (!getDataConfig()
            .equals(other.getDataConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasPodSpec()) {
        hash = (37 * hash) + POD_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getPodSpec().hashCode();
      }
      if (hasDataConfig()) {
        hash = (37 * hash) + DATA_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDataConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.K8sPod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sPod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.K8sPod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.K8sPod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.K8sPod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a pod spec and additional pod metadata that is created when a task is executed.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.K8sPod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.K8sPod)
        flyteidl.core.Tasks.K8sPodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sPod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sPod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.K8sPod.class, flyteidl.core.Tasks.K8sPod.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.K8sPod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (podSpecBuilder_ == null) {
          podSpec_ = null;
        } else {
          podSpec_ = null;
          podSpecBuilder_ = null;
        }
        if (dataConfigBuilder_ == null) {
          dataConfig_ = null;
        } else {
          dataConfig_ = null;
          dataConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sPod_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.K8sPod getDefaultInstanceForType() {
        return flyteidl.core.Tasks.K8sPod.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.K8sPod build() {
        flyteidl.core.Tasks.K8sPod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.K8sPod buildPartial() {
        flyteidl.core.Tasks.K8sPod result = new flyteidl.core.Tasks.K8sPod(this);
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (podSpecBuilder_ == null) {
          result.podSpec_ = podSpec_;
        } else {
          result.podSpec_ = podSpecBuilder_.build();
        }
        if (dataConfigBuilder_ == null) {
          result.dataConfig_ = dataConfig_;
        } else {
          result.dataConfig_ = dataConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.K8sPod) {
          return mergeFrom((flyteidl.core.Tasks.K8sPod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.K8sPod other) {
        if (other == flyteidl.core.Tasks.K8sPod.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasPodSpec()) {
          mergePodSpec(other.getPodSpec());
        }
        if (other.hasDataConfig()) {
          mergeDataConfig(other.getDataConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.K8sPod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.K8sPod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private flyteidl.core.Tasks.K8sObjectMetadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.K8sObjectMetadata, flyteidl.core.Tasks.K8sObjectMetadata.Builder, flyteidl.core.Tasks.K8sObjectMetadataOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public flyteidl.core.Tasks.K8sObjectMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? flyteidl.core.Tasks.K8sObjectMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public Builder setMetadata(flyteidl.core.Tasks.K8sObjectMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public Builder setMetadata(
          flyteidl.core.Tasks.K8sObjectMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public Builder mergeMetadata(flyteidl.core.Tasks.K8sObjectMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              flyteidl.core.Tasks.K8sObjectMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public flyteidl.core.Tasks.K8sObjectMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      public flyteidl.core.Tasks.K8sObjectMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              flyteidl.core.Tasks.K8sObjectMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Contains additional metadata for building a kubernetes pod.
       * </pre>
       *
       * <code>.flyteidl.core.K8sObjectMetadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.K8sObjectMetadata, flyteidl.core.Tasks.K8sObjectMetadata.Builder, flyteidl.core.Tasks.K8sObjectMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.K8sObjectMetadata, flyteidl.core.Tasks.K8sObjectMetadata.Builder, flyteidl.core.Tasks.K8sObjectMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private com.google.protobuf.Struct podSpec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> podSpecBuilder_;
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public boolean hasPodSpec() {
        return podSpecBuilder_ != null || podSpec_ != null;
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public com.google.protobuf.Struct getPodSpec() {
        if (podSpecBuilder_ == null) {
          return podSpec_ == null ? com.google.protobuf.Struct.getDefaultInstance() : podSpec_;
        } else {
          return podSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public Builder setPodSpec(com.google.protobuf.Struct value) {
        if (podSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          podSpec_ = value;
          onChanged();
        } else {
          podSpecBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public Builder setPodSpec(
          com.google.protobuf.Struct.Builder builderForValue) {
        if (podSpecBuilder_ == null) {
          podSpec_ = builderForValue.build();
          onChanged();
        } else {
          podSpecBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public Builder mergePodSpec(com.google.protobuf.Struct value) {
        if (podSpecBuilder_ == null) {
          if (podSpec_ != null) {
            podSpec_ =
              com.google.protobuf.Struct.newBuilder(podSpec_).mergeFrom(value).buildPartial();
          } else {
            podSpec_ = value;
          }
          onChanged();
        } else {
          podSpecBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public Builder clearPodSpec() {
        if (podSpecBuilder_ == null) {
          podSpec_ = null;
          onChanged();
        } else {
          podSpec_ = null;
          podSpecBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public com.google.protobuf.Struct.Builder getPodSpecBuilder() {
        
        onChanged();
        return getPodSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      public com.google.protobuf.StructOrBuilder getPodSpecOrBuilder() {
        if (podSpecBuilder_ != null) {
          return podSpecBuilder_.getMessageOrBuilder();
        } else {
          return podSpec_ == null ?
              com.google.protobuf.Struct.getDefaultInstance() : podSpec_;
        }
      }
      /**
       * <pre>
       * Defines the primary pod spec created when a task is executed.
       * This should be a JSON-marshalled pod spec, which can be defined in
       * - go, using: https://github.com/kubernetes/api/blob/release-1.21/core/v1/types.go#L2936
       * - python: using https://github.com/kubernetes-client/python/blob/release-19.0/kubernetes/client/models/v1_pod_spec.py
       * </pre>
       *
       * <code>.google.protobuf.Struct pod_spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
          getPodSpecFieldBuilder() {
        if (podSpecBuilder_ == null) {
          podSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                  getPodSpec(),
                  getParentForChildren(),
                  isClean());
          podSpec_ = null;
        }
        return podSpecBuilder_;
      }

      private flyteidl.core.Tasks.DataLoadingConfig dataConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.DataLoadingConfig, flyteidl.core.Tasks.DataLoadingConfig.Builder, flyteidl.core.Tasks.DataLoadingConfigOrBuilder> dataConfigBuilder_;
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public boolean hasDataConfig() {
        return dataConfigBuilder_ != null || dataConfig_ != null;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public flyteidl.core.Tasks.DataLoadingConfig getDataConfig() {
        if (dataConfigBuilder_ == null) {
          return dataConfig_ == null ? flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance() : dataConfig_;
        } else {
          return dataConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public Builder setDataConfig(flyteidl.core.Tasks.DataLoadingConfig value) {
        if (dataConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataConfig_ = value;
          onChanged();
        } else {
          dataConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public Builder setDataConfig(
          flyteidl.core.Tasks.DataLoadingConfig.Builder builderForValue) {
        if (dataConfigBuilder_ == null) {
          dataConfig_ = builderForValue.build();
          onChanged();
        } else {
          dataConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public Builder mergeDataConfig(flyteidl.core.Tasks.DataLoadingConfig value) {
        if (dataConfigBuilder_ == null) {
          if (dataConfig_ != null) {
            dataConfig_ =
              flyteidl.core.Tasks.DataLoadingConfig.newBuilder(dataConfig_).mergeFrom(value).buildPartial();
          } else {
            dataConfig_ = value;
          }
          onChanged();
        } else {
          dataConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public Builder clearDataConfig() {
        if (dataConfigBuilder_ == null) {
          dataConfig_ = null;
          onChanged();
        } else {
          dataConfig_ = null;
          dataConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public flyteidl.core.Tasks.DataLoadingConfig.Builder getDataConfigBuilder() {
        
        onChanged();
        return getDataConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      public flyteidl.core.Tasks.DataLoadingConfigOrBuilder getDataConfigOrBuilder() {
        if (dataConfigBuilder_ != null) {
          return dataConfigBuilder_.getMessageOrBuilder();
        } else {
          return dataConfig_ == null ?
              flyteidl.core.Tasks.DataLoadingConfig.getDefaultInstance() : dataConfig_;
        }
      }
      /**
       * <pre>
       * BETA: Optional configuration for DataLoading. If not specified, then default values are used.
       * This makes it possible to to run a completely portable container, that uses inputs and outputs
       * only from the local file-system and without having any reference to flytekit. This is supported only on K8s at the moment.
       * If data loading is enabled, then data will be mounted in accompanying directories specified in the DataLoadingConfig. If the directories
       * are not specified, inputs will be mounted onto and outputs will be uploaded from a pre-determined file-system path. Refer to the documentation
       * to understand the default paths.
       * Only K8s
       * </pre>
       *
       * <code>.flyteidl.core.DataLoadingConfig data_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.DataLoadingConfig, flyteidl.core.Tasks.DataLoadingConfig.Builder, flyteidl.core.Tasks.DataLoadingConfigOrBuilder> 
          getDataConfigFieldBuilder() {
        if (dataConfigBuilder_ == null) {
          dataConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.DataLoadingConfig, flyteidl.core.Tasks.DataLoadingConfig.Builder, flyteidl.core.Tasks.DataLoadingConfigOrBuilder>(
                  getDataConfig(),
                  getParentForChildren(),
                  isClean());
          dataConfig_ = null;
        }
        return dataConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.K8sPod)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.K8sPod)
    private static final flyteidl.core.Tasks.K8sPod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.K8sPod();
    }

    public static flyteidl.core.Tasks.K8sPod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<K8sPod>
        PARSER = new com.google.protobuf.AbstractParser<K8sPod>() {
      @java.lang.Override
      public K8sPod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new K8sPod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<K8sPod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<K8sPod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.K8sPod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface K8sObjectMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.K8sObjectMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */

    java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */

    java.lang.String getLabelsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */
    int getAnnotationsCount();
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */
    boolean containsAnnotations(
        java.lang.String key);
    /**
     * Use {@link #getAnnotationsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getAnnotations();
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getAnnotationsMap();
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */

    java.lang.String getAnnotationsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */

    java.lang.String getAnnotationsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Metadata for building a kubernetes object when a task is executed.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.K8sObjectMetadata}
   */
  public  static final class K8sObjectMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.K8sObjectMetadata)
      K8sObjectMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use K8sObjectMetadata.newBuilder() to construct.
    private K8sObjectMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private K8sObjectMetadata() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private K8sObjectMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                labels_ = com.google.protobuf.MapField.newMapField(
                    LabelsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              labels__ = input.readMessage(
                  LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labels_.getMutableMap().put(
                  labels__.getKey(), labels__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                annotations_ = com.google.protobuf.MapField.newMapField(
                    AnnotationsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              annotations__ = input.readMessage(
                  AnnotationsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              annotations_.getMutableMap().put(
                  annotations__.getKey(), annotations__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sObjectMetadata_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetLabels();
        case 2:
          return internalGetAnnotations();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sObjectMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.K8sObjectMetadata.class, flyteidl.core.Tasks.K8sObjectMetadata.Builder.class);
    }

    public static final int LABELS_FIELD_NUMBER = 1;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  flyteidl.core.Tasks.internal_static_flyteidl_core_K8sObjectMetadata_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */

    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional labels to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 1;</code>
     */

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ANNOTATIONS_FIELD_NUMBER = 2;
    private static final class AnnotationsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  flyteidl.core.Tasks.internal_static_flyteidl_core_K8sObjectMetadata_AnnotationsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> annotations_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetAnnotations() {
      if (annotations_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AnnotationsDefaultEntryHolder.defaultEntry);
      }
      return annotations_;
    }

    public int getAnnotationsCount() {
      return internalGetAnnotations().getMap().size();
    }
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */

    public boolean containsAnnotations(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAnnotations().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAnnotationsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAnnotations() {
      return getAnnotationsMap();
    }
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getAnnotationsMap() {
      return internalGetAnnotations().getMap();
    }
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */

    public java.lang.String getAnnotationsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAnnotations().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional annotations to add to the pod definition.
     * </pre>
     *
     * <code>map&lt;string, string&gt; annotations = 2;</code>
     */

    public java.lang.String getAnnotationsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAnnotations().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAnnotations(),
          AnnotationsDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, labels__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetAnnotations().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        annotations__ = AnnotationsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, annotations__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.K8sObjectMetadata)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.K8sObjectMetadata other = (flyteidl.core.Tasks.K8sObjectMetadata) obj;

      if (!internalGetLabels().equals(
          other.internalGetLabels())) return false;
      if (!internalGetAnnotations().equals(
          other.internalGetAnnotations())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      if (!internalGetAnnotations().getMap().isEmpty()) {
        hash = (37 * hash) + ANNOTATIONS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAnnotations().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.K8sObjectMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.K8sObjectMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metadata for building a kubernetes object when a task is executed.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.K8sObjectMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.K8sObjectMetadata)
        flyteidl.core.Tasks.K8sObjectMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sObjectMetadata_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetLabels();
          case 2:
            return internalGetAnnotations();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableLabels();
          case 2:
            return internalGetMutableAnnotations();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sObjectMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.K8sObjectMetadata.class, flyteidl.core.Tasks.K8sObjectMetadata.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.K8sObjectMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableLabels().clear();
        internalGetMutableAnnotations().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_K8sObjectMetadata_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.K8sObjectMetadata getDefaultInstanceForType() {
        return flyteidl.core.Tasks.K8sObjectMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.K8sObjectMetadata build() {
        flyteidl.core.Tasks.K8sObjectMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.K8sObjectMetadata buildPartial() {
        flyteidl.core.Tasks.K8sObjectMetadata result = new flyteidl.core.Tasks.K8sObjectMetadata(this);
        int from_bitField0_ = bitField0_;
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
        result.annotations_ = internalGetAnnotations();
        result.annotations_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.K8sObjectMetadata) {
          return mergeFrom((flyteidl.core.Tasks.K8sObjectMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.K8sObjectMetadata other) {
        if (other == flyteidl.core.Tasks.K8sObjectMetadata.getDefaultInstance()) return this;
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        internalGetMutableAnnotations().mergeFrom(
            other.internalGetAnnotations());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.K8sObjectMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.K8sObjectMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableLabels() {
        onChanged();;
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * Optional labels to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1;</code>
       */

      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * Optional labels to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * Optional labels to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1;</code>
       */

      public java.lang.String getLabelsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Optional labels to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1;</code>
       */

      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabels() {
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Optional labels to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1;</code>
       */

      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableLabels() {
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * Optional labels to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1;</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Optional labels to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 1;</code>
       */

      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> annotations_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetAnnotations() {
        if (annotations_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AnnotationsDefaultEntryHolder.defaultEntry);
        }
        return annotations_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableAnnotations() {
        onChanged();;
        if (annotations_ == null) {
          annotations_ = com.google.protobuf.MapField.newMapField(
              AnnotationsDefaultEntryHolder.defaultEntry);
        }
        if (!annotations_.isMutable()) {
          annotations_ = annotations_.copy();
        }
        return annotations_;
      }

      public int getAnnotationsCount() {
        return internalGetAnnotations().getMap().size();
      }
      /**
       * <pre>
       * Optional annotations to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; annotations = 2;</code>
       */

      public boolean containsAnnotations(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetAnnotations().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAnnotationsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getAnnotations() {
        return getAnnotationsMap();
      }
      /**
       * <pre>
       * Optional annotations to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; annotations = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getAnnotationsMap() {
        return internalGetAnnotations().getMap();
      }
      /**
       * <pre>
       * Optional annotations to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; annotations = 2;</code>
       */

      public java.lang.String getAnnotationsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAnnotations().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Optional annotations to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; annotations = 2;</code>
       */

      public java.lang.String getAnnotationsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetAnnotations().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAnnotations() {
        internalGetMutableAnnotations().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Optional annotations to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; annotations = 2;</code>
       */

      public Builder removeAnnotations(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAnnotations().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableAnnotations() {
        return internalGetMutableAnnotations().getMutableMap();
      }
      /**
       * <pre>
       * Optional annotations to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; annotations = 2;</code>
       */
      public Builder putAnnotations(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAnnotations().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Optional annotations to add to the pod definition.
       * </pre>
       *
       * <code>map&lt;string, string&gt; annotations = 2;</code>
       */

      public Builder putAllAnnotations(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableAnnotations().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.K8sObjectMetadata)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.K8sObjectMetadata)
    private static final flyteidl.core.Tasks.K8sObjectMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.K8sObjectMetadata();
    }

    public static flyteidl.core.Tasks.K8sObjectMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<K8sObjectMetadata>
        PARSER = new com.google.protobuf.AbstractParser<K8sObjectMetadata>() {
      @java.lang.Override
      public K8sObjectMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new K8sObjectMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<K8sObjectMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<K8sObjectMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.K8sObjectMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SqlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.Sql)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The actual query to run, the query can have templated parameters.
     * We use Flyte's Golang templating format for Query templating.
     * Refer to the templating documentation.
     * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
     * For example,
     * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
     * select *
     * from my_table
     * where ds = '{{ .Inputs.ds }}'
     * </pre>
     *
     * <code>string statement = 1;</code>
     */
    java.lang.String getStatement();
    /**
     * <pre>
     * The actual query to run, the query can have templated parameters.
     * We use Flyte's Golang templating format for Query templating.
     * Refer to the templating documentation.
     * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
     * For example,
     * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
     * select *
     * from my_table
     * where ds = '{{ .Inputs.ds }}'
     * </pre>
     *
     * <code>string statement = 1;</code>
     */
    com.google.protobuf.ByteString
        getStatementBytes();

    /**
     * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
     */
    int getDialectValue();
    /**
     * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
     */
    flyteidl.core.Tasks.Sql.Dialect getDialect();
  }
  /**
   * <pre>
   * Sql represents a generic sql workload with a statement and dialect.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.Sql}
   */
  public  static final class Sql extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.Sql)
      SqlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sql.newBuilder() to construct.
    private Sql(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sql() {
      statement_ = "";
      dialect_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Sql(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              statement_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              dialect_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_Sql_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Tasks.internal_static_flyteidl_core_Sql_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Tasks.Sql.class, flyteidl.core.Tasks.Sql.Builder.class);
    }

    /**
     * <pre>
     * The dialect of the SQL statement. This is used to validate and parse SQL statements at compilation time to avoid
     * expensive runtime operations. If set to an unsupported dialect, no validation will be done on the statement.
     * We support the following dialect: ansi, hive.
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.Sql.Dialect}
     */
    public enum Dialect
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>ANSI = 1;</code>
       */
      ANSI(1),
      /**
       * <code>HIVE = 2;</code>
       */
      HIVE(2),
      /**
       * <code>OTHER = 3;</code>
       */
      OTHER(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>ANSI = 1;</code>
       */
      public static final int ANSI_VALUE = 1;
      /**
       * <code>HIVE = 2;</code>
       */
      public static final int HIVE_VALUE = 2;
      /**
       * <code>OTHER = 3;</code>
       */
      public static final int OTHER_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Dialect valueOf(int value) {
        return forNumber(value);
      }

      public static Dialect forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return ANSI;
          case 2: return HIVE;
          case 3: return OTHER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Dialect>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Dialect> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Dialect>() {
              public Dialect findValueByNumber(int number) {
                return Dialect.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Tasks.Sql.getDescriptor().getEnumTypes().get(0);
      }

      private static final Dialect[] VALUES = values();

      public static Dialect valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Dialect(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.Sql.Dialect)
    }

    public static final int STATEMENT_FIELD_NUMBER = 1;
    private volatile java.lang.Object statement_;
    /**
     * <pre>
     * The actual query to run, the query can have templated parameters.
     * We use Flyte's Golang templating format for Query templating.
     * Refer to the templating documentation.
     * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
     * For example,
     * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
     * select *
     * from my_table
     * where ds = '{{ .Inputs.ds }}'
     * </pre>
     *
     * <code>string statement = 1;</code>
     */
    public java.lang.String getStatement() {
      java.lang.Object ref = statement_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statement_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The actual query to run, the query can have templated parameters.
     * We use Flyte's Golang templating format for Query templating.
     * Refer to the templating documentation.
     * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
     * For example,
     * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
     * select *
     * from my_table
     * where ds = '{{ .Inputs.ds }}'
     * </pre>
     *
     * <code>string statement = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStatementBytes() {
      java.lang.Object ref = statement_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIALECT_FIELD_NUMBER = 2;
    private int dialect_;
    /**
     * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
     */
    public int getDialectValue() {
      return dialect_;
    }
    /**
     * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
     */
    public flyteidl.core.Tasks.Sql.Dialect getDialect() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Tasks.Sql.Dialect result = flyteidl.core.Tasks.Sql.Dialect.valueOf(dialect_);
      return result == null ? flyteidl.core.Tasks.Sql.Dialect.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getStatementBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, statement_);
      }
      if (dialect_ != flyteidl.core.Tasks.Sql.Dialect.UNDEFINED.getNumber()) {
        output.writeEnum(2, dialect_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getStatementBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, statement_);
      }
      if (dialect_ != flyteidl.core.Tasks.Sql.Dialect.UNDEFINED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dialect_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Tasks.Sql)) {
        return super.equals(obj);
      }
      flyteidl.core.Tasks.Sql other = (flyteidl.core.Tasks.Sql) obj;

      if (!getStatement()
          .equals(other.getStatement())) return false;
      if (dialect_ != other.dialect_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getStatement().hashCode();
      hash = (37 * hash) + DIALECT_FIELD_NUMBER;
      hash = (53 * hash) + dialect_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Tasks.Sql parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Sql parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Sql parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Tasks.Sql parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Tasks.Sql prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Sql represents a generic sql workload with a statement and dialect.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.Sql}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.Sql)
        flyteidl.core.Tasks.SqlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Sql_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Sql_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Tasks.Sql.class, flyteidl.core.Tasks.Sql.Builder.class);
      }

      // Construct using flyteidl.core.Tasks.Sql.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        statement_ = "";

        dialect_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Tasks.internal_static_flyteidl_core_Sql_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Sql getDefaultInstanceForType() {
        return flyteidl.core.Tasks.Sql.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Sql build() {
        flyteidl.core.Tasks.Sql result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Tasks.Sql buildPartial() {
        flyteidl.core.Tasks.Sql result = new flyteidl.core.Tasks.Sql(this);
        result.statement_ = statement_;
        result.dialect_ = dialect_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Tasks.Sql) {
          return mergeFrom((flyteidl.core.Tasks.Sql)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Tasks.Sql other) {
        if (other == flyteidl.core.Tasks.Sql.getDefaultInstance()) return this;
        if (!other.getStatement().isEmpty()) {
          statement_ = other.statement_;
          onChanged();
        }
        if (other.dialect_ != 0) {
          setDialectValue(other.getDialectValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Tasks.Sql parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Tasks.Sql) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object statement_ = "";
      /**
       * <pre>
       * The actual query to run, the query can have templated parameters.
       * We use Flyte's Golang templating format for Query templating.
       * Refer to the templating documentation.
       * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
       * For example,
       * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
       * select *
       * from my_table
       * where ds = '{{ .Inputs.ds }}'
       * </pre>
       *
       * <code>string statement = 1;</code>
       */
      public java.lang.String getStatement() {
        java.lang.Object ref = statement_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          statement_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The actual query to run, the query can have templated parameters.
       * We use Flyte's Golang templating format for Query templating.
       * Refer to the templating documentation.
       * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
       * For example,
       * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
       * select *
       * from my_table
       * where ds = '{{ .Inputs.ds }}'
       * </pre>
       *
       * <code>string statement = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStatementBytes() {
        java.lang.Object ref = statement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          statement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The actual query to run, the query can have templated parameters.
       * We use Flyte's Golang templating format for Query templating.
       * Refer to the templating documentation.
       * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
       * For example,
       * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
       * select *
       * from my_table
       * where ds = '{{ .Inputs.ds }}'
       * </pre>
       *
       * <code>string statement = 1;</code>
       */
      public Builder setStatement(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        statement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The actual query to run, the query can have templated parameters.
       * We use Flyte's Golang templating format for Query templating.
       * Refer to the templating documentation.
       * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
       * For example,
       * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
       * select *
       * from my_table
       * where ds = '{{ .Inputs.ds }}'
       * </pre>
       *
       * <code>string statement = 1;</code>
       */
      public Builder clearStatement() {
        
        statement_ = getDefaultInstance().getStatement();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The actual query to run, the query can have templated parameters.
       * We use Flyte's Golang templating format for Query templating.
       * Refer to the templating documentation.
       * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
       * For example,
       * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
       * select *
       * from my_table
       * where ds = '{{ .Inputs.ds }}'
       * </pre>
       *
       * <code>string statement = 1;</code>
       */
      public Builder setStatementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        statement_ = value;
        onChanged();
        return this;
      }

      private int dialect_ = 0;
      /**
       * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
       */
      public int getDialectValue() {
        return dialect_;
      }
      /**
       * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
       */
      public Builder setDialectValue(int value) {
        dialect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
       */
      public flyteidl.core.Tasks.Sql.Dialect getDialect() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Tasks.Sql.Dialect result = flyteidl.core.Tasks.Sql.Dialect.valueOf(dialect_);
        return result == null ? flyteidl.core.Tasks.Sql.Dialect.UNRECOGNIZED : result;
      }
      /**
       * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
       */
      public Builder setDialect(flyteidl.core.Tasks.Sql.Dialect value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dialect_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.Sql.Dialect dialect = 2;</code>
       */
      public Builder clearDialect() {
        
        dialect_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.Sql)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.Sql)
    private static final flyteidl.core.Tasks.Sql DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Tasks.Sql();
    }

    public static flyteidl.core.Tasks.Sql getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sql>
        PARSER = new com.google.protobuf.AbstractParser<Sql>() {
      @java.lang.Override
      public Sql parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sql(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Sql> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sql> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Tasks.Sql getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_Resources_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_Resources_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_Resources_ResourceEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_Resources_ResourceEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_RuntimeMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_RuntimeMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_TaskMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_TaskMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_TaskMetadata_TagsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_TaskMetadata_TagsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_TaskTemplate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_TaskTemplate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_TaskTemplate_ConfigEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_TaskTemplate_ConfigEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_ContainerPort_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_ContainerPort_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_Container_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_Container_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_IOStrategy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_IOStrategy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_DataLoadingConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_DataLoadingConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_K8sPod_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_K8sPod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_K8sObjectMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_K8sObjectMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_K8sObjectMetadata_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_K8sObjectMetadata_LabelsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_K8sObjectMetadata_AnnotationsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_K8sObjectMetadata_AnnotationsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_Sql_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_Sql_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031flyteidl/core/tasks.proto\022\rflyteidl.co" +
      "re\032\036flyteidl/core/identifier.proto\032\035flyt" +
      "eidl/core/interface.proto\032\034flyteidl/core" +
      "/literals.proto\032\034flyteidl/core/security." +
      "proto\032\036google/protobuf/duration.proto\032\034g" +
      "oogle/protobuf/struct.proto\"\261\002\n\tResource" +
      "s\0228\n\010requests\030\001 \003(\0132&.flyteidl.core.Reso" +
      "urces.ResourceEntry\0226\n\006limits\030\002 \003(\0132&.fl" +
      "yteidl.core.Resources.ResourceEntry\032S\n\rR" +
      "esourceEntry\0223\n\004name\030\001 \001(\0162%.flyteidl.co" +
      "re.Resources.ResourceName\022\r\n\005value\030\002 \001(\t" +
      "\"]\n\014ResourceName\022\013\n\007UNKNOWN\020\000\022\007\n\003CPU\020\001\022\007" +
      "\n\003GPU\020\002\022\n\n\006MEMORY\020\003\022\013\n\007STORAGE\020\004\022\025\n\021EPHE" +
      "MERAL_STORAGE\020\005\"\225\001\n\017RuntimeMetadata\0228\n\004t" +
      "ype\030\001 \001(\0162*.flyteidl.core.RuntimeMetadat" +
      "a.RuntimeType\022\017\n\007version\030\002 \001(\t\022\016\n\006flavor" +
      "\030\003 \001(\t\"\'\n\013RuntimeType\022\t\n\005OTHER\020\000\022\r\n\tFLYT" +
      "E_SDK\020\001\"\316\003\n\014TaskMetadata\022\024\n\014discoverable" +
      "\030\001 \001(\010\022/\n\007runtime\030\002 \001(\0132\036.flyteidl.core." +
      "RuntimeMetadata\022*\n\007timeout\030\004 \001(\0132\031.googl" +
      "e.protobuf.Duration\022-\n\007retries\030\005 \001(\0132\034.f" +
      "lyteidl.core.RetryStrategy\022\031\n\021discovery_" +
      "version\030\006 \001(\t\022 \n\030deprecated_error_messag" +
      "e\030\007 \001(\t\022\027\n\rinterruptible\030\010 \001(\010H\000\022\032\n\022cach" +
      "e_serializable\030\t \001(\010\022\026\n\016generates_deck\030\n" +
      " \001(\010\0223\n\004tags\030\013 \003(\0132%.flyteidl.core.TaskM" +
      "etadata.TagsEntry\022\031\n\021pod_template_name\030\014" +
      " \001(\t\032+\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030" +
      "\002 \001(\t:\0028\001B\025\n\023interruptible_value\"\220\004\n\014Tas" +
      "kTemplate\022%\n\002id\030\001 \001(\0132\031.flyteidl.core.Id" +
      "entifier\022\014\n\004type\030\002 \001(\t\022-\n\010metadata\030\003 \001(\013" +
      "2\033.flyteidl.core.TaskMetadata\0220\n\tinterfa" +
      "ce\030\004 \001(\0132\035.flyteidl.core.TypedInterface\022" +
      "\'\n\006custom\030\005 \001(\0132\027.google.protobuf.Struct" +
      "\022-\n\tcontainer\030\006 \001(\0132\030.flyteidl.core.Cont" +
      "ainerH\000\022(\n\007k8s_pod\030\021 \001(\0132\025.flyteidl.core" +
      ".K8sPodH\000\022!\n\003sql\030\022 \001(\0132\022.flyteidl.core.S" +
      "qlH\000\022\031\n\021task_type_version\030\007 \001(\005\0228\n\020secur" +
      "ity_context\030\010 \001(\0132\036.flyteidl.core.Securi" +
      "tyContext\0227\n\006config\030\020 \003(\0132\'.flyteidl.cor" +
      "e.TaskTemplate.ConfigEntry\032-\n\013ConfigEntr" +
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\010\n\006tar" +
      "get\"\'\n\rContainerPort\022\026\n\016container_port\030\001" +
      " \001(\r\"\255\003\n\tContainer\022\r\n\005image\030\001 \001(\t\022\017\n\007com" +
      "mand\030\002 \003(\t\022\014\n\004args\030\003 \003(\t\022+\n\tresources\030\004 " +
      "\001(\0132\030.flyteidl.core.Resources\022(\n\003env\030\005 \003" +
      "(\0132\033.flyteidl.core.KeyValuePair\022/\n\006confi" +
      "g\030\006 \003(\0132\033.flyteidl.core.KeyValuePairB\002\030\001" +
      "\022+\n\005ports\030\007 \003(\0132\034.flyteidl.core.Containe" +
      "rPort\0225\n\013data_config\030\t \001(\0132 .flyteidl.co" +
      "re.DataLoadingConfig\022;\n\014architecture\030\n \001" +
      "(\0162%.flyteidl.core.Container.Architectur" +
      "e\"I\n\014Architecture\022\013\n\007UNKNOWN\020\000\022\t\n\005AMD64\020" +
      "\001\022\t\n\005ARM64\020\002\022\n\n\006ARM_V6\020\003\022\n\n\006ARM_V7\020\004\"\233\002\n" +
      "\nIOStrategy\022=\n\rdownload_mode\030\001 \001(\0162&.fly" +
      "teidl.core.IOStrategy.DownloadMode\0229\n\013up" +
      "load_mode\030\002 \001(\0162$.flyteidl.core.IOStrate" +
      "gy.UploadMode\"L\n\014DownloadMode\022\022\n\016DOWNLOA" +
      "D_EAGER\020\000\022\023\n\017DOWNLOAD_STREAM\020\001\022\023\n\017DO_NOT" +
      "_DOWNLOAD\020\002\"E\n\nUploadMode\022\022\n\016UPLOAD_ON_E" +
      "XIT\020\000\022\020\n\014UPLOAD_EAGER\020\001\022\021\n\rDO_NOT_UPLOAD" +
      "\020\002\"\363\001\n\021DataLoadingConfig\022\017\n\007enabled\030\001 \001(" +
      "\010\022\022\n\ninput_path\030\002 \001(\t\022\023\n\013output_path\030\003 \001" +
      "(\t\022A\n\006format\030\004 \001(\01621.flyteidl.core.DataL" +
      "oadingConfig.LiteralMapFormat\022.\n\013io_stra" +
      "tegy\030\005 \001(\0132\031.flyteidl.core.IOStrategy\"1\n" +
      "\020LiteralMapFormat\022\010\n\004JSON\020\000\022\010\n\004YAML\020\001\022\t\n" +
      "\005PROTO\020\002\"\236\001\n\006K8sPod\0222\n\010metadata\030\001 \001(\0132 ." +
      "flyteidl.core.K8sObjectMetadata\022)\n\010pod_s" +
      "pec\030\002 \001(\0132\027.google.protobuf.Struct\0225\n\013da" +
      "ta_config\030\003 \001(\0132 .flyteidl.core.DataLoad" +
      "ingConfig\"\374\001\n\021K8sObjectMetadata\022<\n\006label" +
      "s\030\001 \003(\0132,.flyteidl.core.K8sObjectMetadat" +
      "a.LabelsEntry\022F\n\013annotations\030\002 \003(\01321.fly" +
      "teidl.core.K8sObjectMetadata.Annotations" +
      "Entry\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val" +
      "ue\030\002 \001(\t:\0028\001\0322\n\020AnnotationsEntry\022\013\n\003key\030" +
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"~\n\003Sql\022\021\n\tstate" +
      "ment\030\001 \001(\t\022+\n\007dialect\030\002 \001(\0162\032.flyteidl.c" +
      "ore.Sql.Dialect\"7\n\007Dialect\022\r\n\tUNDEFINED\020" +
      "\000\022\010\n\004ANSI\020\001\022\010\n\004HIVE\020\002\022\t\n\005OTHER\020\003B6Z4gith" +
      "ub.com/flyteorg/flyteidl/gen/pb-go/flyte" +
      "idl/coreb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          flyteidl.core.IdentifierOuterClass.getDescriptor(),
          flyteidl.core.Interface.getDescriptor(),
          flyteidl.core.Literals.getDescriptor(),
          flyteidl.core.Security.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
        }, assigner);
    internal_static_flyteidl_core_Resources_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_core_Resources_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_Resources_descriptor,
        new java.lang.String[] { "Requests", "Limits", });
    internal_static_flyteidl_core_Resources_ResourceEntry_descriptor =
      internal_static_flyteidl_core_Resources_descriptor.getNestedTypes().get(0);
    internal_static_flyteidl_core_Resources_ResourceEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_Resources_ResourceEntry_descriptor,
        new java.lang.String[] { "Name", "Value", });
    internal_static_flyteidl_core_RuntimeMetadata_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_core_RuntimeMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_RuntimeMetadata_descriptor,
        new java.lang.String[] { "Type", "Version", "Flavor", });
    internal_static_flyteidl_core_TaskMetadata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flyteidl_core_TaskMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_TaskMetadata_descriptor,
        new java.lang.String[] { "Discoverable", "Runtime", "Timeout", "Retries", "DiscoveryVersion", "DeprecatedErrorMessage", "Interruptible", "CacheSerializable", "GeneratesDeck", "Tags", "PodTemplateName", "InterruptibleValue", });
    internal_static_flyteidl_core_TaskMetadata_TagsEntry_descriptor =
      internal_static_flyteidl_core_TaskMetadata_descriptor.getNestedTypes().get(0);
    internal_static_flyteidl_core_TaskMetadata_TagsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_TaskMetadata_TagsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_flyteidl_core_TaskTemplate_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_flyteidl_core_TaskTemplate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_TaskTemplate_descriptor,
        new java.lang.String[] { "Id", "Type", "Metadata", "Interface", "Custom", "Container", "K8SPod", "Sql", "TaskTypeVersion", "SecurityContext", "Config", "Target", });
    internal_static_flyteidl_core_TaskTemplate_ConfigEntry_descriptor =
      internal_static_flyteidl_core_TaskTemplate_descriptor.getNestedTypes().get(0);
    internal_static_flyteidl_core_TaskTemplate_ConfigEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_TaskTemplate_ConfigEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_flyteidl_core_ContainerPort_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_flyteidl_core_ContainerPort_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_ContainerPort_descriptor,
        new java.lang.String[] { "ContainerPort", });
    internal_static_flyteidl_core_Container_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_flyteidl_core_Container_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_Container_descriptor,
        new java.lang.String[] { "Image", "Command", "Args", "Resources", "Env", "Config", "Ports", "DataConfig", "Architecture", });
    internal_static_flyteidl_core_IOStrategy_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_flyteidl_core_IOStrategy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_IOStrategy_descriptor,
        new java.lang.String[] { "DownloadMode", "UploadMode", });
    internal_static_flyteidl_core_DataLoadingConfig_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_flyteidl_core_DataLoadingConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_DataLoadingConfig_descriptor,
        new java.lang.String[] { "Enabled", "InputPath", "OutputPath", "Format", "IoStrategy", });
    internal_static_flyteidl_core_K8sPod_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_flyteidl_core_K8sPod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_K8sPod_descriptor,
        new java.lang.String[] { "Metadata", "PodSpec", "DataConfig", });
    internal_static_flyteidl_core_K8sObjectMetadata_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_flyteidl_core_K8sObjectMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_K8sObjectMetadata_descriptor,
        new java.lang.String[] { "Labels", "Annotations", });
    internal_static_flyteidl_core_K8sObjectMetadata_LabelsEntry_descriptor =
      internal_static_flyteidl_core_K8sObjectMetadata_descriptor.getNestedTypes().get(0);
    internal_static_flyteidl_core_K8sObjectMetadata_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_K8sObjectMetadata_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_flyteidl_core_K8sObjectMetadata_AnnotationsEntry_descriptor =
      internal_static_flyteidl_core_K8sObjectMetadata_descriptor.getNestedTypes().get(1);
    internal_static_flyteidl_core_K8sObjectMetadata_AnnotationsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_K8sObjectMetadata_AnnotationsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_flyteidl_core_Sql_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_flyteidl_core_Sql_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_Sql_descriptor,
        new java.lang.String[] { "Statement", "Dialect", });
    flyteidl.core.IdentifierOuterClass.getDescriptor();
    flyteidl.core.Interface.getDescriptor();
    flyteidl.core.Literals.getDescriptor();
    flyteidl.core.Security.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
