// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/training_job.proto

package com.flyteidl.plugins.sagemaker;

public interface AlgorithmSpecificationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.plugins.sagemaker.AlgorithmSpecification)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The input mode can be either PIPE or FILE
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
   * @return The enum numeric value on the wire for inputMode.
   */
  int getInputModeValue();
  /**
   * <pre>
   * The input mode can be either PIPE or FILE
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
   * @return The inputMode.
   */
  com.flyteidl.plugins.sagemaker.InputMode.Value getInputMode();

  /**
   * <pre>
   * The algorithm name is used for deciding which pre-built image to point to
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
   * @return The enum numeric value on the wire for algorithmName.
   */
  int getAlgorithmNameValue();
  /**
   * <pre>
   * The algorithm name is used for deciding which pre-built image to point to
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
   * @return The algorithmName.
   */
  com.flyteidl.plugins.sagemaker.AlgorithmName.Value getAlgorithmName();

  /**
   * <pre>
   * The algorithm version field is used for deciding which pre-built image to point to
   * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
   * </pre>
   *
   * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
   * @return The algorithmVersion.
   */
  java.lang.String getAlgorithmVersion();
  /**
   * <pre>
   * The algorithm version field is used for deciding which pre-built image to point to
   * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
   * </pre>
   *
   * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
   * @return The bytes for algorithmVersion.
   */
  com.google.protobuf.ByteString
      getAlgorithmVersionBytes();

  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  java.util.List<com.flyteidl.plugins.sagemaker.MetricDefinition> 
      getMetricDefinitionsList();
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  com.flyteidl.plugins.sagemaker.MetricDefinition getMetricDefinitions(int index);
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  int getMetricDefinitionsCount();
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  java.util.List<? extends com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder> 
      getMetricDefinitionsOrBuilderList();
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder getMetricDefinitionsOrBuilder(
      int index);

  /**
   * <pre>
   * The content type of the input
   * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
   * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
   * @return The enum numeric value on the wire for inputContentType.
   */
  int getInputContentTypeValue();
  /**
   * <pre>
   * The content type of the input
   * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
   * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
   * @return The inputContentType.
   */
  com.flyteidl.plugins.sagemaker.InputContentType.Value getInputContentType();
}
