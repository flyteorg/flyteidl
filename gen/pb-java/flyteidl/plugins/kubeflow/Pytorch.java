// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/kubeflow/pytorch.proto

package flyteidl.plugins.kubeflow;

public final class Pytorch {
  private Pytorch() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ElasticConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.plugins.kubeflow.ElasticConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string rdzv_backend = 1;</code>
     */
    java.lang.String getRdzvBackend();
    /**
     * <code>string rdzv_backend = 1;</code>
     */
    com.google.protobuf.ByteString
        getRdzvBackendBytes();

    /**
     * <code>int32 min_replicas = 2;</code>
     */
    int getMinReplicas();

    /**
     * <code>int32 max_replicas = 3;</code>
     */
    int getMaxReplicas();

    /**
     * <code>int32 nproc_per_node = 4;</code>
     */
    int getNprocPerNode();

    /**
     * <pre>
     * Not using oneof for backwards compatibility
     * </pre>
     *
     * <code>string nproc_per_node_str = 6;</code>
     */
    java.lang.String getNprocPerNodeStr();
    /**
     * <pre>
     * Not using oneof for backwards compatibility
     * </pre>
     *
     * <code>string nproc_per_node_str = 6;</code>
     */
    com.google.protobuf.ByteString
        getNprocPerNodeStrBytes();

    /**
     * <code>int32 max_restarts = 5;</code>
     */
    int getMaxRestarts();
  }
  /**
   * <pre>
   * Custom proto for torch elastic config for distributed training using 
   * https://github.com/kubeflow/training-operator/blob/master/pkg/apis/kubeflow.org/v1/pytorch_types.go
   * </pre>
   *
   * Protobuf type {@code flyteidl.plugins.kubeflow.ElasticConfig}
   */
  public  static final class ElasticConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.plugins.kubeflow.ElasticConfig)
      ElasticConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ElasticConfig.newBuilder() to construct.
    private ElasticConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ElasticConfig() {
      rdzvBackend_ = "";
      nprocPerNodeStr_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ElasticConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              rdzvBackend_ = s;
              break;
            }
            case 16: {

              minReplicas_ = input.readInt32();
              break;
            }
            case 24: {

              maxReplicas_ = input.readInt32();
              break;
            }
            case 32: {

              nprocPerNode_ = input.readInt32();
              break;
            }
            case 40: {

              maxRestarts_ = input.readInt32();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              nprocPerNodeStr_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_ElasticConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_ElasticConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.class, flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder.class);
    }

    public static final int RDZV_BACKEND_FIELD_NUMBER = 1;
    private volatile java.lang.Object rdzvBackend_;
    /**
     * <code>string rdzv_backend = 1;</code>
     */
    public java.lang.String getRdzvBackend() {
      java.lang.Object ref = rdzvBackend_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rdzvBackend_ = s;
        return s;
      }
    }
    /**
     * <code>string rdzv_backend = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRdzvBackendBytes() {
      java.lang.Object ref = rdzvBackend_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rdzvBackend_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MIN_REPLICAS_FIELD_NUMBER = 2;
    private int minReplicas_;
    /**
     * <code>int32 min_replicas = 2;</code>
     */
    public int getMinReplicas() {
      return minReplicas_;
    }

    public static final int MAX_REPLICAS_FIELD_NUMBER = 3;
    private int maxReplicas_;
    /**
     * <code>int32 max_replicas = 3;</code>
     */
    public int getMaxReplicas() {
      return maxReplicas_;
    }

    public static final int NPROC_PER_NODE_FIELD_NUMBER = 4;
    private int nprocPerNode_;
    /**
     * <code>int32 nproc_per_node = 4;</code>
     */
    public int getNprocPerNode() {
      return nprocPerNode_;
    }

    public static final int NPROC_PER_NODE_STR_FIELD_NUMBER = 6;
    private volatile java.lang.Object nprocPerNodeStr_;
    /**
     * <pre>
     * Not using oneof for backwards compatibility
     * </pre>
     *
     * <code>string nproc_per_node_str = 6;</code>
     */
    public java.lang.String getNprocPerNodeStr() {
      java.lang.Object ref = nprocPerNodeStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nprocPerNodeStr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Not using oneof for backwards compatibility
     * </pre>
     *
     * <code>string nproc_per_node_str = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNprocPerNodeStrBytes() {
      java.lang.Object ref = nprocPerNodeStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nprocPerNodeStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAX_RESTARTS_FIELD_NUMBER = 5;
    private int maxRestarts_;
    /**
     * <code>int32 max_restarts = 5;</code>
     */
    public int getMaxRestarts() {
      return maxRestarts_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRdzvBackendBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rdzvBackend_);
      }
      if (minReplicas_ != 0) {
        output.writeInt32(2, minReplicas_);
      }
      if (maxReplicas_ != 0) {
        output.writeInt32(3, maxReplicas_);
      }
      if (nprocPerNode_ != 0) {
        output.writeInt32(4, nprocPerNode_);
      }
      if (maxRestarts_ != 0) {
        output.writeInt32(5, maxRestarts_);
      }
      if (!getNprocPerNodeStrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, nprocPerNodeStr_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRdzvBackendBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rdzvBackend_);
      }
      if (minReplicas_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minReplicas_);
      }
      if (maxReplicas_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxReplicas_);
      }
      if (nprocPerNode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, nprocPerNode_);
      }
      if (maxRestarts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxRestarts_);
      }
      if (!getNprocPerNodeStrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, nprocPerNodeStr_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.plugins.kubeflow.Pytorch.ElasticConfig)) {
        return super.equals(obj);
      }
      flyteidl.plugins.kubeflow.Pytorch.ElasticConfig other = (flyteidl.plugins.kubeflow.Pytorch.ElasticConfig) obj;

      if (!getRdzvBackend()
          .equals(other.getRdzvBackend())) return false;
      if (getMinReplicas()
          != other.getMinReplicas()) return false;
      if (getMaxReplicas()
          != other.getMaxReplicas()) return false;
      if (getNprocPerNode()
          != other.getNprocPerNode()) return false;
      if (!getNprocPerNodeStr()
          .equals(other.getNprocPerNodeStr())) return false;
      if (getMaxRestarts()
          != other.getMaxRestarts()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RDZV_BACKEND_FIELD_NUMBER;
      hash = (53 * hash) + getRdzvBackend().hashCode();
      hash = (37 * hash) + MIN_REPLICAS_FIELD_NUMBER;
      hash = (53 * hash) + getMinReplicas();
      hash = (37 * hash) + MAX_REPLICAS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxReplicas();
      hash = (37 * hash) + NPROC_PER_NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNprocPerNode();
      hash = (37 * hash) + NPROC_PER_NODE_STR_FIELD_NUMBER;
      hash = (53 * hash) + getNprocPerNodeStr().hashCode();
      hash = (37 * hash) + MAX_RESTARTS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxRestarts();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.plugins.kubeflow.Pytorch.ElasticConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Custom proto for torch elastic config for distributed training using 
     * https://github.com/kubeflow/training-operator/blob/master/pkg/apis/kubeflow.org/v1/pytorch_types.go
     * </pre>
     *
     * Protobuf type {@code flyteidl.plugins.kubeflow.ElasticConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.plugins.kubeflow.ElasticConfig)
        flyteidl.plugins.kubeflow.Pytorch.ElasticConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_ElasticConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_ElasticConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.class, flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder.class);
      }

      // Construct using flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        rdzvBackend_ = "";

        minReplicas_ = 0;

        maxReplicas_ = 0;

        nprocPerNode_ = 0;

        nprocPerNodeStr_ = "";

        maxRestarts_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_ElasticConfig_descriptor;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.ElasticConfig getDefaultInstanceForType() {
        return flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.ElasticConfig build() {
        flyteidl.plugins.kubeflow.Pytorch.ElasticConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.ElasticConfig buildPartial() {
        flyteidl.plugins.kubeflow.Pytorch.ElasticConfig result = new flyteidl.plugins.kubeflow.Pytorch.ElasticConfig(this);
        result.rdzvBackend_ = rdzvBackend_;
        result.minReplicas_ = minReplicas_;
        result.maxReplicas_ = maxReplicas_;
        result.nprocPerNode_ = nprocPerNode_;
        result.nprocPerNodeStr_ = nprocPerNodeStr_;
        result.maxRestarts_ = maxRestarts_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.plugins.kubeflow.Pytorch.ElasticConfig) {
          return mergeFrom((flyteidl.plugins.kubeflow.Pytorch.ElasticConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.plugins.kubeflow.Pytorch.ElasticConfig other) {
        if (other == flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.getDefaultInstance()) return this;
        if (!other.getRdzvBackend().isEmpty()) {
          rdzvBackend_ = other.rdzvBackend_;
          onChanged();
        }
        if (other.getMinReplicas() != 0) {
          setMinReplicas(other.getMinReplicas());
        }
        if (other.getMaxReplicas() != 0) {
          setMaxReplicas(other.getMaxReplicas());
        }
        if (other.getNprocPerNode() != 0) {
          setNprocPerNode(other.getNprocPerNode());
        }
        if (!other.getNprocPerNodeStr().isEmpty()) {
          nprocPerNodeStr_ = other.nprocPerNodeStr_;
          onChanged();
        }
        if (other.getMaxRestarts() != 0) {
          setMaxRestarts(other.getMaxRestarts());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.plugins.kubeflow.Pytorch.ElasticConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.plugins.kubeflow.Pytorch.ElasticConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object rdzvBackend_ = "";
      /**
       * <code>string rdzv_backend = 1;</code>
       */
      public java.lang.String getRdzvBackend() {
        java.lang.Object ref = rdzvBackend_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rdzvBackend_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string rdzv_backend = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRdzvBackendBytes() {
        java.lang.Object ref = rdzvBackend_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rdzvBackend_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string rdzv_backend = 1;</code>
       */
      public Builder setRdzvBackend(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rdzvBackend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string rdzv_backend = 1;</code>
       */
      public Builder clearRdzvBackend() {
        
        rdzvBackend_ = getDefaultInstance().getRdzvBackend();
        onChanged();
        return this;
      }
      /**
       * <code>string rdzv_backend = 1;</code>
       */
      public Builder setRdzvBackendBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rdzvBackend_ = value;
        onChanged();
        return this;
      }

      private int minReplicas_ ;
      /**
       * <code>int32 min_replicas = 2;</code>
       */
      public int getMinReplicas() {
        return minReplicas_;
      }
      /**
       * <code>int32 min_replicas = 2;</code>
       */
      public Builder setMinReplicas(int value) {
        
        minReplicas_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 min_replicas = 2;</code>
       */
      public Builder clearMinReplicas() {
        
        minReplicas_ = 0;
        onChanged();
        return this;
      }

      private int maxReplicas_ ;
      /**
       * <code>int32 max_replicas = 3;</code>
       */
      public int getMaxReplicas() {
        return maxReplicas_;
      }
      /**
       * <code>int32 max_replicas = 3;</code>
       */
      public Builder setMaxReplicas(int value) {
        
        maxReplicas_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_replicas = 3;</code>
       */
      public Builder clearMaxReplicas() {
        
        maxReplicas_ = 0;
        onChanged();
        return this;
      }

      private int nprocPerNode_ ;
      /**
       * <code>int32 nproc_per_node = 4;</code>
       */
      public int getNprocPerNode() {
        return nprocPerNode_;
      }
      /**
       * <code>int32 nproc_per_node = 4;</code>
       */
      public Builder setNprocPerNode(int value) {
        
        nprocPerNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 nproc_per_node = 4;</code>
       */
      public Builder clearNprocPerNode() {
        
        nprocPerNode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object nprocPerNodeStr_ = "";
      /**
       * <pre>
       * Not using oneof for backwards compatibility
       * </pre>
       *
       * <code>string nproc_per_node_str = 6;</code>
       */
      public java.lang.String getNprocPerNodeStr() {
        java.lang.Object ref = nprocPerNodeStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nprocPerNodeStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Not using oneof for backwards compatibility
       * </pre>
       *
       * <code>string nproc_per_node_str = 6;</code>
       */
      public com.google.protobuf.ByteString
          getNprocPerNodeStrBytes() {
        java.lang.Object ref = nprocPerNodeStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nprocPerNodeStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Not using oneof for backwards compatibility
       * </pre>
       *
       * <code>string nproc_per_node_str = 6;</code>
       */
      public Builder setNprocPerNodeStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nprocPerNodeStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not using oneof for backwards compatibility
       * </pre>
       *
       * <code>string nproc_per_node_str = 6;</code>
       */
      public Builder clearNprocPerNodeStr() {
        
        nprocPerNodeStr_ = getDefaultInstance().getNprocPerNodeStr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Not using oneof for backwards compatibility
       * </pre>
       *
       * <code>string nproc_per_node_str = 6;</code>
       */
      public Builder setNprocPerNodeStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nprocPerNodeStr_ = value;
        onChanged();
        return this;
      }

      private int maxRestarts_ ;
      /**
       * <code>int32 max_restarts = 5;</code>
       */
      public int getMaxRestarts() {
        return maxRestarts_;
      }
      /**
       * <code>int32 max_restarts = 5;</code>
       */
      public Builder setMaxRestarts(int value) {
        
        maxRestarts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_restarts = 5;</code>
       */
      public Builder clearMaxRestarts() {
        
        maxRestarts_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.plugins.kubeflow.ElasticConfig)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.plugins.kubeflow.ElasticConfig)
    private static final flyteidl.plugins.kubeflow.Pytorch.ElasticConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.plugins.kubeflow.Pytorch.ElasticConfig();
    }

    public static flyteidl.plugins.kubeflow.Pytorch.ElasticConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ElasticConfig>
        PARSER = new com.google.protobuf.AbstractParser<ElasticConfig>() {
      @java.lang.Override
      public ElasticConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ElasticConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ElasticConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ElasticConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.plugins.kubeflow.Pytorch.ElasticConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DistributedPyTorchTrainingTaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingTask)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Worker replicas spec
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
     */
    boolean hasWorkerReplicas();
    /**
     * <pre>
     * Worker replicas spec
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
     */
    flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getWorkerReplicas();
    /**
     * <pre>
     * Worker replicas spec
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
     */
    flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder getWorkerReplicasOrBuilder();

    /**
     * <pre>
     * Master replicas spec, master replicas can only have 1 replica
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
     */
    boolean hasMasterReplicas();
    /**
     * <pre>
     * Master replicas spec, master replicas can only have 1 replica
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
     */
    flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getMasterReplicas();
    /**
     * <pre>
     * Master replicas spec, master replicas can only have 1 replica
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
     */
    flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder getMasterReplicasOrBuilder();

    /**
     * <pre>
     * RunPolicy encapsulates various runtime policies of the distributed training
     * job, for example how to clean up resources and how long the job can stay
     * active.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
     */
    boolean hasRunPolicy();
    /**
     * <pre>
     * RunPolicy encapsulates various runtime policies of the distributed training
     * job, for example how to clean up resources and how long the job can stay
     * active.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
     */
    flyteidl.plugins.kubeflow.Common.RunPolicy getRunPolicy();
    /**
     * <pre>
     * RunPolicy encapsulates various runtime policies of the distributed training
     * job, for example how to clean up resources and how long the job can stay
     * active.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
     */
    flyteidl.plugins.kubeflow.Common.RunPolicyOrBuilder getRunPolicyOrBuilder();

    /**
     * <pre>
     * config for an elastic pytorch job
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
     */
    boolean hasElasticConfig();
    /**
     * <pre>
     * config for an elastic pytorch job
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
     */
    flyteidl.plugins.kubeflow.Pytorch.ElasticConfig getElasticConfig();
    /**
     * <pre>
     * config for an elastic pytorch job
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
     */
    flyteidl.plugins.kubeflow.Pytorch.ElasticConfigOrBuilder getElasticConfigOrBuilder();
  }
  /**
   * <pre>
   * Proto for plugin that enables distributed training using https://github.com/kubeflow/pytorch-operator
   * </pre>
   *
   * Protobuf type {@code flyteidl.plugins.kubeflow.DistributedPyTorchTrainingTask}
   */
  public  static final class DistributedPyTorchTrainingTask extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingTask)
      DistributedPyTorchTrainingTaskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DistributedPyTorchTrainingTask.newBuilder() to construct.
    private DistributedPyTorchTrainingTask(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DistributedPyTorchTrainingTask() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DistributedPyTorchTrainingTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder subBuilder = null;
              if (workerReplicas_ != null) {
                subBuilder = workerReplicas_.toBuilder();
              }
              workerReplicas_ = input.readMessage(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(workerReplicas_);
                workerReplicas_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder subBuilder = null;
              if (masterReplicas_ != null) {
                subBuilder = masterReplicas_.toBuilder();
              }
              masterReplicas_ = input.readMessage(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(masterReplicas_);
                masterReplicas_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              flyteidl.plugins.kubeflow.Common.RunPolicy.Builder subBuilder = null;
              if (runPolicy_ != null) {
                subBuilder = runPolicy_.toBuilder();
              }
              runPolicy_ = input.readMessage(flyteidl.plugins.kubeflow.Common.RunPolicy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(runPolicy_);
                runPolicy_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder subBuilder = null;
              if (elasticConfig_ != null) {
                subBuilder = elasticConfig_.toBuilder();
              }
              elasticConfig_ = input.readMessage(flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(elasticConfig_);
                elasticConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask.class, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask.Builder.class);
    }

    public static final int WORKER_REPLICAS_FIELD_NUMBER = 1;
    private flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec workerReplicas_;
    /**
     * <pre>
     * Worker replicas spec
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
     */
    public boolean hasWorkerReplicas() {
      return workerReplicas_ != null;
    }
    /**
     * <pre>
     * Worker replicas spec
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
     */
    public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getWorkerReplicas() {
      return workerReplicas_ == null ? flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance() : workerReplicas_;
    }
    /**
     * <pre>
     * Worker replicas spec
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
     */
    public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder getWorkerReplicasOrBuilder() {
      return getWorkerReplicas();
    }

    public static final int MASTER_REPLICAS_FIELD_NUMBER = 2;
    private flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec masterReplicas_;
    /**
     * <pre>
     * Master replicas spec, master replicas can only have 1 replica
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
     */
    public boolean hasMasterReplicas() {
      return masterReplicas_ != null;
    }
    /**
     * <pre>
     * Master replicas spec, master replicas can only have 1 replica
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
     */
    public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getMasterReplicas() {
      return masterReplicas_ == null ? flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance() : masterReplicas_;
    }
    /**
     * <pre>
     * Master replicas spec, master replicas can only have 1 replica
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
     */
    public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder getMasterReplicasOrBuilder() {
      return getMasterReplicas();
    }

    public static final int RUN_POLICY_FIELD_NUMBER = 3;
    private flyteidl.plugins.kubeflow.Common.RunPolicy runPolicy_;
    /**
     * <pre>
     * RunPolicy encapsulates various runtime policies of the distributed training
     * job, for example how to clean up resources and how long the job can stay
     * active.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
     */
    public boolean hasRunPolicy() {
      return runPolicy_ != null;
    }
    /**
     * <pre>
     * RunPolicy encapsulates various runtime policies of the distributed training
     * job, for example how to clean up resources and how long the job can stay
     * active.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
     */
    public flyteidl.plugins.kubeflow.Common.RunPolicy getRunPolicy() {
      return runPolicy_ == null ? flyteidl.plugins.kubeflow.Common.RunPolicy.getDefaultInstance() : runPolicy_;
    }
    /**
     * <pre>
     * RunPolicy encapsulates various runtime policies of the distributed training
     * job, for example how to clean up resources and how long the job can stay
     * active.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
     */
    public flyteidl.plugins.kubeflow.Common.RunPolicyOrBuilder getRunPolicyOrBuilder() {
      return getRunPolicy();
    }

    public static final int ELASTIC_CONFIG_FIELD_NUMBER = 4;
    private flyteidl.plugins.kubeflow.Pytorch.ElasticConfig elasticConfig_;
    /**
     * <pre>
     * config for an elastic pytorch job
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
     */
    public boolean hasElasticConfig() {
      return elasticConfig_ != null;
    }
    /**
     * <pre>
     * config for an elastic pytorch job
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
     */
    public flyteidl.plugins.kubeflow.Pytorch.ElasticConfig getElasticConfig() {
      return elasticConfig_ == null ? flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.getDefaultInstance() : elasticConfig_;
    }
    /**
     * <pre>
     * config for an elastic pytorch job
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
     */
    public flyteidl.plugins.kubeflow.Pytorch.ElasticConfigOrBuilder getElasticConfigOrBuilder() {
      return getElasticConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (workerReplicas_ != null) {
        output.writeMessage(1, getWorkerReplicas());
      }
      if (masterReplicas_ != null) {
        output.writeMessage(2, getMasterReplicas());
      }
      if (runPolicy_ != null) {
        output.writeMessage(3, getRunPolicy());
      }
      if (elasticConfig_ != null) {
        output.writeMessage(4, getElasticConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (workerReplicas_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getWorkerReplicas());
      }
      if (masterReplicas_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMasterReplicas());
      }
      if (runPolicy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRunPolicy());
      }
      if (elasticConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getElasticConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask)) {
        return super.equals(obj);
      }
      flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask other = (flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask) obj;

      if (hasWorkerReplicas() != other.hasWorkerReplicas()) return false;
      if (hasWorkerReplicas()) {
        if (!getWorkerReplicas()
            .equals(other.getWorkerReplicas())) return false;
      }
      if (hasMasterReplicas() != other.hasMasterReplicas()) return false;
      if (hasMasterReplicas()) {
        if (!getMasterReplicas()
            .equals(other.getMasterReplicas())) return false;
      }
      if (hasRunPolicy() != other.hasRunPolicy()) return false;
      if (hasRunPolicy()) {
        if (!getRunPolicy()
            .equals(other.getRunPolicy())) return false;
      }
      if (hasElasticConfig() != other.hasElasticConfig()) return false;
      if (hasElasticConfig()) {
        if (!getElasticConfig()
            .equals(other.getElasticConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWorkerReplicas()) {
        hash = (37 * hash) + WORKER_REPLICAS_FIELD_NUMBER;
        hash = (53 * hash) + getWorkerReplicas().hashCode();
      }
      if (hasMasterReplicas()) {
        hash = (37 * hash) + MASTER_REPLICAS_FIELD_NUMBER;
        hash = (53 * hash) + getMasterReplicas().hashCode();
      }
      if (hasRunPolicy()) {
        hash = (37 * hash) + RUN_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + getRunPolicy().hashCode();
      }
      if (hasElasticConfig()) {
        hash = (37 * hash) + ELASTIC_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getElasticConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Proto for plugin that enables distributed training using https://github.com/kubeflow/pytorch-operator
     * </pre>
     *
     * Protobuf type {@code flyteidl.plugins.kubeflow.DistributedPyTorchTrainingTask}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingTask)
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask.class, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask.Builder.class);
      }

      // Construct using flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (workerReplicasBuilder_ == null) {
          workerReplicas_ = null;
        } else {
          workerReplicas_ = null;
          workerReplicasBuilder_ = null;
        }
        if (masterReplicasBuilder_ == null) {
          masterReplicas_ = null;
        } else {
          masterReplicas_ = null;
          masterReplicasBuilder_ = null;
        }
        if (runPolicyBuilder_ == null) {
          runPolicy_ = null;
        } else {
          runPolicy_ = null;
          runPolicyBuilder_ = null;
        }
        if (elasticConfigBuilder_ == null) {
          elasticConfig_ = null;
        } else {
          elasticConfig_ = null;
          elasticConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_descriptor;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask getDefaultInstanceForType() {
        return flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask build() {
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask buildPartial() {
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask result = new flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask(this);
        if (workerReplicasBuilder_ == null) {
          result.workerReplicas_ = workerReplicas_;
        } else {
          result.workerReplicas_ = workerReplicasBuilder_.build();
        }
        if (masterReplicasBuilder_ == null) {
          result.masterReplicas_ = masterReplicas_;
        } else {
          result.masterReplicas_ = masterReplicasBuilder_.build();
        }
        if (runPolicyBuilder_ == null) {
          result.runPolicy_ = runPolicy_;
        } else {
          result.runPolicy_ = runPolicyBuilder_.build();
        }
        if (elasticConfigBuilder_ == null) {
          result.elasticConfig_ = elasticConfig_;
        } else {
          result.elasticConfig_ = elasticConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask) {
          return mergeFrom((flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask other) {
        if (other == flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask.getDefaultInstance()) return this;
        if (other.hasWorkerReplicas()) {
          mergeWorkerReplicas(other.getWorkerReplicas());
        }
        if (other.hasMasterReplicas()) {
          mergeMasterReplicas(other.getMasterReplicas());
        }
        if (other.hasRunPolicy()) {
          mergeRunPolicy(other.getRunPolicy());
        }
        if (other.hasElasticConfig()) {
          mergeElasticConfig(other.getElasticConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec workerReplicas_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder> workerReplicasBuilder_;
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public boolean hasWorkerReplicas() {
        return workerReplicasBuilder_ != null || workerReplicas_ != null;
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getWorkerReplicas() {
        if (workerReplicasBuilder_ == null) {
          return workerReplicas_ == null ? flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance() : workerReplicas_;
        } else {
          return workerReplicasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public Builder setWorkerReplicas(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec value) {
        if (workerReplicasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          workerReplicas_ = value;
          onChanged();
        } else {
          workerReplicasBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public Builder setWorkerReplicas(
          flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder builderForValue) {
        if (workerReplicasBuilder_ == null) {
          workerReplicas_ = builderForValue.build();
          onChanged();
        } else {
          workerReplicasBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public Builder mergeWorkerReplicas(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec value) {
        if (workerReplicasBuilder_ == null) {
          if (workerReplicas_ != null) {
            workerReplicas_ =
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.newBuilder(workerReplicas_).mergeFrom(value).buildPartial();
          } else {
            workerReplicas_ = value;
          }
          onChanged();
        } else {
          workerReplicasBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public Builder clearWorkerReplicas() {
        if (workerReplicasBuilder_ == null) {
          workerReplicas_ = null;
          onChanged();
        } else {
          workerReplicas_ = null;
          workerReplicasBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder getWorkerReplicasBuilder() {
        
        onChanged();
        return getWorkerReplicasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder getWorkerReplicasOrBuilder() {
        if (workerReplicasBuilder_ != null) {
          return workerReplicasBuilder_.getMessageOrBuilder();
        } else {
          return workerReplicas_ == null ?
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance() : workerReplicas_;
        }
      }
      /**
       * <pre>
       * Worker replicas spec
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec worker_replicas = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder> 
          getWorkerReplicasFieldBuilder() {
        if (workerReplicasBuilder_ == null) {
          workerReplicasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder>(
                  getWorkerReplicas(),
                  getParentForChildren(),
                  isClean());
          workerReplicas_ = null;
        }
        return workerReplicasBuilder_;
      }

      private flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec masterReplicas_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder> masterReplicasBuilder_;
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public boolean hasMasterReplicas() {
        return masterReplicasBuilder_ != null || masterReplicas_ != null;
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getMasterReplicas() {
        if (masterReplicasBuilder_ == null) {
          return masterReplicas_ == null ? flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance() : masterReplicas_;
        } else {
          return masterReplicasBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public Builder setMasterReplicas(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec value) {
        if (masterReplicasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          masterReplicas_ = value;
          onChanged();
        } else {
          masterReplicasBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public Builder setMasterReplicas(
          flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder builderForValue) {
        if (masterReplicasBuilder_ == null) {
          masterReplicas_ = builderForValue.build();
          onChanged();
        } else {
          masterReplicasBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public Builder mergeMasterReplicas(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec value) {
        if (masterReplicasBuilder_ == null) {
          if (masterReplicas_ != null) {
            masterReplicas_ =
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.newBuilder(masterReplicas_).mergeFrom(value).buildPartial();
          } else {
            masterReplicas_ = value;
          }
          onChanged();
        } else {
          masterReplicasBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public Builder clearMasterReplicas() {
        if (masterReplicasBuilder_ == null) {
          masterReplicas_ = null;
          onChanged();
        } else {
          masterReplicas_ = null;
          masterReplicasBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder getMasterReplicasBuilder() {
        
        onChanged();
        return getMasterReplicasFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder getMasterReplicasOrBuilder() {
        if (masterReplicasBuilder_ != null) {
          return masterReplicasBuilder_.getMessageOrBuilder();
        } else {
          return masterReplicas_ == null ?
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance() : masterReplicas_;
        }
      }
      /**
       * <pre>
       * Master replicas spec, master replicas can only have 1 replica
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec master_replicas = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder> 
          getMasterReplicasFieldBuilder() {
        if (masterReplicasBuilder_ == null) {
          masterReplicasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder>(
                  getMasterReplicas(),
                  getParentForChildren(),
                  isClean());
          masterReplicas_ = null;
        }
        return masterReplicasBuilder_;
      }

      private flyteidl.plugins.kubeflow.Common.RunPolicy runPolicy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Common.RunPolicy, flyteidl.plugins.kubeflow.Common.RunPolicy.Builder, flyteidl.plugins.kubeflow.Common.RunPolicyOrBuilder> runPolicyBuilder_;
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public boolean hasRunPolicy() {
        return runPolicyBuilder_ != null || runPolicy_ != null;
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public flyteidl.plugins.kubeflow.Common.RunPolicy getRunPolicy() {
        if (runPolicyBuilder_ == null) {
          return runPolicy_ == null ? flyteidl.plugins.kubeflow.Common.RunPolicy.getDefaultInstance() : runPolicy_;
        } else {
          return runPolicyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public Builder setRunPolicy(flyteidl.plugins.kubeflow.Common.RunPolicy value) {
        if (runPolicyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          runPolicy_ = value;
          onChanged();
        } else {
          runPolicyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public Builder setRunPolicy(
          flyteidl.plugins.kubeflow.Common.RunPolicy.Builder builderForValue) {
        if (runPolicyBuilder_ == null) {
          runPolicy_ = builderForValue.build();
          onChanged();
        } else {
          runPolicyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public Builder mergeRunPolicy(flyteidl.plugins.kubeflow.Common.RunPolicy value) {
        if (runPolicyBuilder_ == null) {
          if (runPolicy_ != null) {
            runPolicy_ =
              flyteidl.plugins.kubeflow.Common.RunPolicy.newBuilder(runPolicy_).mergeFrom(value).buildPartial();
          } else {
            runPolicy_ = value;
          }
          onChanged();
        } else {
          runPolicyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public Builder clearRunPolicy() {
        if (runPolicyBuilder_ == null) {
          runPolicy_ = null;
          onChanged();
        } else {
          runPolicy_ = null;
          runPolicyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public flyteidl.plugins.kubeflow.Common.RunPolicy.Builder getRunPolicyBuilder() {
        
        onChanged();
        return getRunPolicyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      public flyteidl.plugins.kubeflow.Common.RunPolicyOrBuilder getRunPolicyOrBuilder() {
        if (runPolicyBuilder_ != null) {
          return runPolicyBuilder_.getMessageOrBuilder();
        } else {
          return runPolicy_ == null ?
              flyteidl.plugins.kubeflow.Common.RunPolicy.getDefaultInstance() : runPolicy_;
        }
      }
      /**
       * <pre>
       * RunPolicy encapsulates various runtime policies of the distributed training
       * job, for example how to clean up resources and how long the job can stay
       * active.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RunPolicy run_policy = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Common.RunPolicy, flyteidl.plugins.kubeflow.Common.RunPolicy.Builder, flyteidl.plugins.kubeflow.Common.RunPolicyOrBuilder> 
          getRunPolicyFieldBuilder() {
        if (runPolicyBuilder_ == null) {
          runPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.plugins.kubeflow.Common.RunPolicy, flyteidl.plugins.kubeflow.Common.RunPolicy.Builder, flyteidl.plugins.kubeflow.Common.RunPolicyOrBuilder>(
                  getRunPolicy(),
                  getParentForChildren(),
                  isClean());
          runPolicy_ = null;
        }
        return runPolicyBuilder_;
      }

      private flyteidl.plugins.kubeflow.Pytorch.ElasticConfig elasticConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Pytorch.ElasticConfig, flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder, flyteidl.plugins.kubeflow.Pytorch.ElasticConfigOrBuilder> elasticConfigBuilder_;
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public boolean hasElasticConfig() {
        return elasticConfigBuilder_ != null || elasticConfig_ != null;
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.ElasticConfig getElasticConfig() {
        if (elasticConfigBuilder_ == null) {
          return elasticConfig_ == null ? flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.getDefaultInstance() : elasticConfig_;
        } else {
          return elasticConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public Builder setElasticConfig(flyteidl.plugins.kubeflow.Pytorch.ElasticConfig value) {
        if (elasticConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          elasticConfig_ = value;
          onChanged();
        } else {
          elasticConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public Builder setElasticConfig(
          flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder builderForValue) {
        if (elasticConfigBuilder_ == null) {
          elasticConfig_ = builderForValue.build();
          onChanged();
        } else {
          elasticConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public Builder mergeElasticConfig(flyteidl.plugins.kubeflow.Pytorch.ElasticConfig value) {
        if (elasticConfigBuilder_ == null) {
          if (elasticConfig_ != null) {
            elasticConfig_ =
              flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.newBuilder(elasticConfig_).mergeFrom(value).buildPartial();
          } else {
            elasticConfig_ = value;
          }
          onChanged();
        } else {
          elasticConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public Builder clearElasticConfig() {
        if (elasticConfigBuilder_ == null) {
          elasticConfig_ = null;
          onChanged();
        } else {
          elasticConfig_ = null;
          elasticConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder getElasticConfigBuilder() {
        
        onChanged();
        return getElasticConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      public flyteidl.plugins.kubeflow.Pytorch.ElasticConfigOrBuilder getElasticConfigOrBuilder() {
        if (elasticConfigBuilder_ != null) {
          return elasticConfigBuilder_.getMessageOrBuilder();
        } else {
          return elasticConfig_ == null ?
              flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.getDefaultInstance() : elasticConfig_;
        }
      }
      /**
       * <pre>
       * config for an elastic pytorch job
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.ElasticConfig elastic_config = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.plugins.kubeflow.Pytorch.ElasticConfig, flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder, flyteidl.plugins.kubeflow.Pytorch.ElasticConfigOrBuilder> 
          getElasticConfigFieldBuilder() {
        if (elasticConfigBuilder_ == null) {
          elasticConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.plugins.kubeflow.Pytorch.ElasticConfig, flyteidl.plugins.kubeflow.Pytorch.ElasticConfig.Builder, flyteidl.plugins.kubeflow.Pytorch.ElasticConfigOrBuilder>(
                  getElasticConfig(),
                  getParentForChildren(),
                  isClean());
          elasticConfig_ = null;
        }
        return elasticConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingTask)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingTask)
    private static final flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask();
    }

    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DistributedPyTorchTrainingTask>
        PARSER = new com.google.protobuf.AbstractParser<DistributedPyTorchTrainingTask>() {
      @java.lang.Override
      public DistributedPyTorchTrainingTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DistributedPyTorchTrainingTask(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DistributedPyTorchTrainingTask> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DistributedPyTorchTrainingTask> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingTask getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DistributedPyTorchTrainingReplicaSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of replicas
     * </pre>
     *
     * <code>int32 replicas = 1;</code>
     */
    int getReplicas();

    /**
     * <pre>
     * Image used for the replica group
     * </pre>
     *
     * <code>string image = 2;</code>
     */
    java.lang.String getImage();
    /**
     * <pre>
     * Image used for the replica group
     * </pre>
     *
     * <code>string image = 2;</code>
     */
    com.google.protobuf.ByteString
        getImageBytes();

    /**
     * <pre>
     * Resources required for the replica group
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 3;</code>
     */
    boolean hasResources();
    /**
     * <pre>
     * Resources required for the replica group
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 3;</code>
     */
    flyteidl.core.Tasks.Resources getResources();
    /**
     * <pre>
     * Resources required for the replica group
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 3;</code>
     */
    flyteidl.core.Tasks.ResourcesOrBuilder getResourcesOrBuilder();

    /**
     * <pre>
     * RestartPolicy determines whether pods will be restarted when they exit
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
     */
    int getRestartPolicyValue();
    /**
     * <pre>
     * RestartPolicy determines whether pods will be restarted when they exit
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
     */
    flyteidl.plugins.kubeflow.Common.RestartPolicy getRestartPolicy();
  }
  /**
   * Protobuf type {@code flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec}
   */
  public  static final class DistributedPyTorchTrainingReplicaSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec)
      DistributedPyTorchTrainingReplicaSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DistributedPyTorchTrainingReplicaSpec.newBuilder() to construct.
    private DistributedPyTorchTrainingReplicaSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DistributedPyTorchTrainingReplicaSpec() {
      image_ = "";
      restartPolicy_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DistributedPyTorchTrainingReplicaSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              replicas_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              image_ = s;
              break;
            }
            case 26: {
              flyteidl.core.Tasks.Resources.Builder subBuilder = null;
              if (resources_ != null) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(flyteidl.core.Tasks.Resources.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              restartPolicy_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.class, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder.class);
    }

    public static final int REPLICAS_FIELD_NUMBER = 1;
    private int replicas_;
    /**
     * <pre>
     * Number of replicas
     * </pre>
     *
     * <code>int32 replicas = 1;</code>
     */
    public int getReplicas() {
      return replicas_;
    }

    public static final int IMAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object image_;
    /**
     * <pre>
     * Image used for the replica group
     * </pre>
     *
     * <code>string image = 2;</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        image_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Image used for the replica group
     * </pre>
     *
     * <code>string image = 2;</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RESOURCES_FIELD_NUMBER = 3;
    private flyteidl.core.Tasks.Resources resources_;
    /**
     * <pre>
     * Resources required for the replica group
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 3;</code>
     */
    public boolean hasResources() {
      return resources_ != null;
    }
    /**
     * <pre>
     * Resources required for the replica group
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 3;</code>
     */
    public flyteidl.core.Tasks.Resources getResources() {
      return resources_ == null ? flyteidl.core.Tasks.Resources.getDefaultInstance() : resources_;
    }
    /**
     * <pre>
     * Resources required for the replica group
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 3;</code>
     */
    public flyteidl.core.Tasks.ResourcesOrBuilder getResourcesOrBuilder() {
      return getResources();
    }

    public static final int RESTART_POLICY_FIELD_NUMBER = 4;
    private int restartPolicy_;
    /**
     * <pre>
     * RestartPolicy determines whether pods will be restarted when they exit
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
     */
    public int getRestartPolicyValue() {
      return restartPolicy_;
    }
    /**
     * <pre>
     * RestartPolicy determines whether pods will be restarted when they exit
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
     */
    public flyteidl.plugins.kubeflow.Common.RestartPolicy getRestartPolicy() {
      @SuppressWarnings("deprecation")
      flyteidl.plugins.kubeflow.Common.RestartPolicy result = flyteidl.plugins.kubeflow.Common.RestartPolicy.valueOf(restartPolicy_);
      return result == null ? flyteidl.plugins.kubeflow.Common.RestartPolicy.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (replicas_ != 0) {
        output.writeInt32(1, replicas_);
      }
      if (!getImageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, image_);
      }
      if (resources_ != null) {
        output.writeMessage(3, getResources());
      }
      if (restartPolicy_ != flyteidl.plugins.kubeflow.Common.RestartPolicy.RESTART_POLICY_NEVER.getNumber()) {
        output.writeEnum(4, restartPolicy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (replicas_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, replicas_);
      }
      if (!getImageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, image_);
      }
      if (resources_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getResources());
      }
      if (restartPolicy_ != flyteidl.plugins.kubeflow.Common.RestartPolicy.RESTART_POLICY_NEVER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, restartPolicy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec)) {
        return super.equals(obj);
      }
      flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec other = (flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec) obj;

      if (getReplicas()
          != other.getReplicas()) return false;
      if (!getImage()
          .equals(other.getImage())) return false;
      if (hasResources() != other.hasResources()) return false;
      if (hasResources()) {
        if (!getResources()
            .equals(other.getResources())) return false;
      }
      if (restartPolicy_ != other.restartPolicy_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REPLICAS_FIELD_NUMBER;
      hash = (53 * hash) + getReplicas();
      hash = (37 * hash) + IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getImage().hashCode();
      if (hasResources()) {
        hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getResources().hashCode();
      }
      hash = (37 * hash) + RESTART_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + restartPolicy_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec)
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.class, flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.Builder.class);
      }

      // Construct using flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        replicas_ = 0;

        image_ = "";

        if (resourcesBuilder_ == null) {
          resources_ = null;
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }
        restartPolicy_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.plugins.kubeflow.Pytorch.internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_descriptor;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getDefaultInstanceForType() {
        return flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec build() {
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec buildPartial() {
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec result = new flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec(this);
        result.replicas_ = replicas_;
        result.image_ = image_;
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        result.restartPolicy_ = restartPolicy_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec) {
          return mergeFrom((flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec other) {
        if (other == flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec.getDefaultInstance()) return this;
        if (other.getReplicas() != 0) {
          setReplicas(other.getReplicas());
        }
        if (!other.getImage().isEmpty()) {
          image_ = other.image_;
          onChanged();
        }
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        if (other.restartPolicy_ != 0) {
          setRestartPolicyValue(other.getRestartPolicyValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int replicas_ ;
      /**
       * <pre>
       * Number of replicas
       * </pre>
       *
       * <code>int32 replicas = 1;</code>
       */
      public int getReplicas() {
        return replicas_;
      }
      /**
       * <pre>
       * Number of replicas
       * </pre>
       *
       * <code>int32 replicas = 1;</code>
       */
      public Builder setReplicas(int value) {
        
        replicas_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of replicas
       * </pre>
       *
       * <code>int32 replicas = 1;</code>
       */
      public Builder clearReplicas() {
        
        replicas_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object image_ = "";
      /**
       * <pre>
       * Image used for the replica group
       * </pre>
       *
       * <code>string image = 2;</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          image_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Image used for the replica group
       * </pre>
       *
       * <code>string image = 2;</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Image used for the replica group
       * </pre>
       *
       * <code>string image = 2;</code>
       */
      public Builder setImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        image_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Image used for the replica group
       * </pre>
       *
       * <code>string image = 2;</code>
       */
      public Builder clearImage() {
        
        image_ = getDefaultInstance().getImage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Image used for the replica group
       * </pre>
       *
       * <code>string image = 2;</code>
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        image_ = value;
        onChanged();
        return this;
      }

      private flyteidl.core.Tasks.Resources resources_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Resources, flyteidl.core.Tasks.Resources.Builder, flyteidl.core.Tasks.ResourcesOrBuilder> resourcesBuilder_;
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public boolean hasResources() {
        return resourcesBuilder_ != null || resources_ != null;
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public flyteidl.core.Tasks.Resources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_ == null ? flyteidl.core.Tasks.Resources.getDefaultInstance() : resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public Builder setResources(flyteidl.core.Tasks.Resources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public Builder setResources(
          flyteidl.core.Tasks.Resources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public Builder mergeResources(flyteidl.core.Tasks.Resources value) {
        if (resourcesBuilder_ == null) {
          if (resources_ != null) {
            resources_ =
              flyteidl.core.Tasks.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = null;
          onChanged();
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public flyteidl.core.Tasks.Resources.Builder getResourcesBuilder() {
        
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      public flyteidl.core.Tasks.ResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_ == null ?
              flyteidl.core.Tasks.Resources.getDefaultInstance() : resources_;
        }
      }
      /**
       * <pre>
       * Resources required for the replica group
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Tasks.Resources, flyteidl.core.Tasks.Resources.Builder, flyteidl.core.Tasks.ResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Tasks.Resources, flyteidl.core.Tasks.Resources.Builder, flyteidl.core.Tasks.ResourcesOrBuilder>(
                  getResources(),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      private int restartPolicy_ = 0;
      /**
       * <pre>
       * RestartPolicy determines whether pods will be restarted when they exit
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
       */
      public int getRestartPolicyValue() {
        return restartPolicy_;
      }
      /**
       * <pre>
       * RestartPolicy determines whether pods will be restarted when they exit
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
       */
      public Builder setRestartPolicyValue(int value) {
        restartPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RestartPolicy determines whether pods will be restarted when they exit
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
       */
      public flyteidl.plugins.kubeflow.Common.RestartPolicy getRestartPolicy() {
        @SuppressWarnings("deprecation")
        flyteidl.plugins.kubeflow.Common.RestartPolicy result = flyteidl.plugins.kubeflow.Common.RestartPolicy.valueOf(restartPolicy_);
        return result == null ? flyteidl.plugins.kubeflow.Common.RestartPolicy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * RestartPolicy determines whether pods will be restarted when they exit
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
       */
      public Builder setRestartPolicy(flyteidl.plugins.kubeflow.Common.RestartPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        restartPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RestartPolicy determines whether pods will be restarted when they exit
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.RestartPolicy restart_policy = 4;</code>
       */
      public Builder clearRestartPolicy() {
        
        restartPolicy_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.plugins.kubeflow.DistributedPyTorchTrainingReplicaSpec)
    private static final flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec();
    }

    public static flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DistributedPyTorchTrainingReplicaSpec>
        PARSER = new com.google.protobuf.AbstractParser<DistributedPyTorchTrainingReplicaSpec>() {
      @java.lang.Override
      public DistributedPyTorchTrainingReplicaSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DistributedPyTorchTrainingReplicaSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DistributedPyTorchTrainingReplicaSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DistributedPyTorchTrainingReplicaSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.plugins.kubeflow.Pytorch.DistributedPyTorchTrainingReplicaSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_plugins_kubeflow_ElasticConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_plugins_kubeflow_ElasticConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'flyteidl/plugins/kubeflow/pytorch.prot" +
      "o\022\031flyteidl.plugins.kubeflow\032\031flyteidl/c" +
      "ore/tasks.proto\032&flyteidl/plugins/kubefl" +
      "ow/common.proto\"\233\001\n\rElasticConfig\022\024\n\014rdz" +
      "v_backend\030\001 \001(\t\022\024\n\014min_replicas\030\002 \001(\005\022\024\n" +
      "\014max_replicas\030\003 \001(\005\022\026\n\016nproc_per_node\030\004 " +
      "\001(\005\022\032\n\022nproc_per_node_str\030\006 \001(\t\022\024\n\014max_r" +
      "estarts\030\005 \001(\005\"\322\002\n\036DistributedPyTorchTrai" +
      "ningTask\022Y\n\017worker_replicas\030\001 \001(\0132@.flyt" +
      "eidl.plugins.kubeflow.DistributedPyTorch" +
      "TrainingReplicaSpec\022Y\n\017master_replicas\030\002" +
      " \001(\0132@.flyteidl.plugins.kubeflow.Distrib" +
      "utedPyTorchTrainingReplicaSpec\0228\n\nrun_po" +
      "licy\030\003 \001(\0132$.flyteidl.plugins.kubeflow.R" +
      "unPolicy\022@\n\016elastic_config\030\004 \001(\0132(.flyte" +
      "idl.plugins.kubeflow.ElasticConfig\"\267\001\n%D" +
      "istributedPyTorchTrainingReplicaSpec\022\020\n\010" +
      "replicas\030\001 \001(\005\022\r\n\005image\030\002 \001(\t\022+\n\tresourc" +
      "es\030\003 \001(\0132\030.flyteidl.core.Resources\022@\n\016re" +
      "start_policy\030\004 \001(\0162(.flyteidl.plugins.ku" +
      "beflow.RestartPolicyB9Z7github.com/flyte" +
      "org/flyteidl/gen/pb-go/flyteidl/pluginsb" +
      "\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          flyteidl.core.Tasks.getDescriptor(),
          flyteidl.plugins.kubeflow.Common.getDescriptor(),
        }, assigner);
    internal_static_flyteidl_plugins_kubeflow_ElasticConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_plugins_kubeflow_ElasticConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_plugins_kubeflow_ElasticConfig_descriptor,
        new java.lang.String[] { "RdzvBackend", "MinReplicas", "MaxReplicas", "NprocPerNode", "NprocPerNodeStr", "MaxRestarts", });
    internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingTask_descriptor,
        new java.lang.String[] { "WorkerReplicas", "MasterReplicas", "RunPolicy", "ElasticConfig", });
    internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_plugins_kubeflow_DistributedPyTorchTrainingReplicaSpec_descriptor,
        new java.lang.String[] { "Replicas", "Image", "Resources", "RestartPolicy", });
    flyteidl.core.Tasks.getDescriptor();
    flyteidl.plugins.kubeflow.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
