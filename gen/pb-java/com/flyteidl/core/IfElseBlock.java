// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/workflow.proto

package com.flyteidl.core;

/**
 * <pre>
 * Defines a series of if/else blocks. The first branch whose condition evaluates to true is the one to execute.
 * If no conditions were satisfied, the else_node or the error will execute.
 * </pre>
 *
 * Protobuf type {@code flyteidl.core.IfElseBlock}
 */
public final class IfElseBlock extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.core.IfElseBlock)
    IfElseBlockOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IfElseBlock.newBuilder() to construct.
  private IfElseBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IfElseBlock() {
    other_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new IfElseBlock();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private IfElseBlock(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.flyteidl.core.IfBlock.Builder subBuilder = null;
            if (case_ != null) {
              subBuilder = case_.toBuilder();
            }
            case_ = input.readMessage(com.flyteidl.core.IfBlock.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(case_);
              case_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              other_ = new java.util.ArrayList<com.flyteidl.core.IfBlock>();
              mutable_bitField0_ |= 0x00000001;
            }
            other_.add(
                input.readMessage(com.flyteidl.core.IfBlock.parser(), extensionRegistry));
            break;
          }
          case 26: {
            com.flyteidl.core.Node.Builder subBuilder = null;
            if (defaultCase_ == 3) {
              subBuilder = ((com.flyteidl.core.Node) default_).toBuilder();
            }
            default_ =
                input.readMessage(com.flyteidl.core.Node.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.flyteidl.core.Node) default_);
              default_ = subBuilder.buildPartial();
            }
            defaultCase_ = 3;
            break;
          }
          case 34: {
            com.flyteidl.core.Error.Builder subBuilder = null;
            if (defaultCase_ == 4) {
              subBuilder = ((com.flyteidl.core.Error) default_).toBuilder();
            }
            default_ =
                input.readMessage(com.flyteidl.core.Error.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.flyteidl.core.Error) default_);
              default_ = subBuilder.buildPartial();
            }
            defaultCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        other_ = java.util.Collections.unmodifiableList(other_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.core.IfElseBlock.class, com.flyteidl.core.IfElseBlock.Builder.class);
  }

  private int defaultCase_ = 0;
  private java.lang.Object default_;
  public enum DefaultCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    ELSE_NODE(3),
    ERROR(4),
    DEFAULT_NOT_SET(0);
    private final int value;
    private DefaultCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DefaultCase valueOf(int value) {
      return forNumber(value);
    }

    public static DefaultCase forNumber(int value) {
      switch (value) {
        case 3: return ELSE_NODE;
        case 4: return ERROR;
        case 0: return DEFAULT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DefaultCase
  getDefaultCase() {
    return DefaultCase.forNumber(
        defaultCase_);
  }

  public static final int CASE_FIELD_NUMBER = 1;
  private com.flyteidl.core.IfBlock case_;
  /**
   * <pre>
   *+required. First condition to evaluate.
   * </pre>
   *
   * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
   * @return Whether the case field is set.
   */
  @java.lang.Override
  public boolean hasCase() {
    return case_ != null;
  }
  /**
   * <pre>
   *+required. First condition to evaluate.
   * </pre>
   *
   * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
   * @return The case.
   */
  @java.lang.Override
  public com.flyteidl.core.IfBlock getCase() {
    return case_ == null ? com.flyteidl.core.IfBlock.getDefaultInstance() : case_;
  }
  /**
   * <pre>
   *+required. First condition to evaluate.
   * </pre>
   *
   * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.IfBlockOrBuilder getCaseOrBuilder() {
    return getCase();
  }

  public static final int OTHER_FIELD_NUMBER = 2;
  private java.util.List<com.flyteidl.core.IfBlock> other_;
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  @java.lang.Override
  public java.util.List<com.flyteidl.core.IfBlock> getOtherList() {
    return other_;
  }
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.flyteidl.core.IfBlockOrBuilder> 
      getOtherOrBuilderList() {
    return other_;
  }
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  @java.lang.Override
  public int getOtherCount() {
    return other_.size();
  }
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.IfBlock getOther(int index) {
    return other_.get(index);
  }
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.IfBlockOrBuilder getOtherOrBuilder(
      int index) {
    return other_.get(index);
  }

  public static final int ELSE_NODE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * The node to execute in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
   * @return Whether the elseNode field is set.
   */
  @java.lang.Override
  public boolean hasElseNode() {
    return defaultCase_ == 3;
  }
  /**
   * <pre>
   * The node to execute in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
   * @return The elseNode.
   */
  @java.lang.Override
  public com.flyteidl.core.Node getElseNode() {
    if (defaultCase_ == 3) {
       return (com.flyteidl.core.Node) default_;
    }
    return com.flyteidl.core.Node.getDefaultInstance();
  }
  /**
   * <pre>
   * The node to execute in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.NodeOrBuilder getElseNodeOrBuilder() {
    if (defaultCase_ == 3) {
       return (com.flyteidl.core.Node) default_;
    }
    return com.flyteidl.core.Node.getDefaultInstance();
  }

  public static final int ERROR_FIELD_NUMBER = 4;
  /**
   * <pre>
   * An error to throw in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
   * @return Whether the error field is set.
   */
  @java.lang.Override
  public boolean hasError() {
    return defaultCase_ == 4;
  }
  /**
   * <pre>
   * An error to throw in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
   * @return The error.
   */
  @java.lang.Override
  public com.flyteidl.core.Error getError() {
    if (defaultCase_ == 4) {
       return (com.flyteidl.core.Error) default_;
    }
    return com.flyteidl.core.Error.getDefaultInstance();
  }
  /**
   * <pre>
   * An error to throw in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.ErrorOrBuilder getErrorOrBuilder() {
    if (defaultCase_ == 4) {
       return (com.flyteidl.core.Error) default_;
    }
    return com.flyteidl.core.Error.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (case_ != null) {
      output.writeMessage(1, getCase());
    }
    for (int i = 0; i < other_.size(); i++) {
      output.writeMessage(2, other_.get(i));
    }
    if (defaultCase_ == 3) {
      output.writeMessage(3, (com.flyteidl.core.Node) default_);
    }
    if (defaultCase_ == 4) {
      output.writeMessage(4, (com.flyteidl.core.Error) default_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (case_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCase());
    }
    for (int i = 0; i < other_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, other_.get(i));
    }
    if (defaultCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.flyteidl.core.Node) default_);
    }
    if (defaultCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.flyteidl.core.Error) default_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.core.IfElseBlock)) {
      return super.equals(obj);
    }
    com.flyteidl.core.IfElseBlock other = (com.flyteidl.core.IfElseBlock) obj;

    if (hasCase() != other.hasCase()) return false;
    if (hasCase()) {
      if (!getCase()
          .equals(other.getCase())) return false;
    }
    if (!getOtherList()
        .equals(other.getOtherList())) return false;
    if (!getDefaultCase().equals(other.getDefaultCase())) return false;
    switch (defaultCase_) {
      case 3:
        if (!getElseNode()
            .equals(other.getElseNode())) return false;
        break;
      case 4:
        if (!getError()
            .equals(other.getError())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCase()) {
      hash = (37 * hash) + CASE_FIELD_NUMBER;
      hash = (53 * hash) + getCase().hashCode();
    }
    if (getOtherCount() > 0) {
      hash = (37 * hash) + OTHER_FIELD_NUMBER;
      hash = (53 * hash) + getOtherList().hashCode();
    }
    switch (defaultCase_) {
      case 3:
        hash = (37 * hash) + ELSE_NODE_FIELD_NUMBER;
        hash = (53 * hash) + getElseNode().hashCode();
        break;
      case 4:
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.core.IfElseBlock parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.IfElseBlock parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.IfElseBlock parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.IfElseBlock parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.core.IfElseBlock prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines a series of if/else blocks. The first branch whose condition evaluates to true is the one to execute.
   * If no conditions were satisfied, the else_node or the error will execute.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.IfElseBlock}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.core.IfElseBlock)
      com.flyteidl.core.IfElseBlockOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.IfElseBlock.class, com.flyteidl.core.IfElseBlock.Builder.class);
    }

    // Construct using com.flyteidl.core.IfElseBlock.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getOtherFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (caseBuilder_ == null) {
        case_ = null;
      } else {
        case_ = null;
        caseBuilder_ = null;
      }
      if (otherBuilder_ == null) {
        other_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        otherBuilder_.clear();
      }
      defaultCase_ = 0;
      default_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.core.IfElseBlock getDefaultInstanceForType() {
      return com.flyteidl.core.IfElseBlock.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.core.IfElseBlock build() {
      com.flyteidl.core.IfElseBlock result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.core.IfElseBlock buildPartial() {
      com.flyteidl.core.IfElseBlock result = new com.flyteidl.core.IfElseBlock(this);
      int from_bitField0_ = bitField0_;
      if (caseBuilder_ == null) {
        result.case_ = case_;
      } else {
        result.case_ = caseBuilder_.build();
      }
      if (otherBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          other_ = java.util.Collections.unmodifiableList(other_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.other_ = other_;
      } else {
        result.other_ = otherBuilder_.build();
      }
      if (defaultCase_ == 3) {
        if (elseNodeBuilder_ == null) {
          result.default_ = default_;
        } else {
          result.default_ = elseNodeBuilder_.build();
        }
      }
      if (defaultCase_ == 4) {
        if (errorBuilder_ == null) {
          result.default_ = default_;
        } else {
          result.default_ = errorBuilder_.build();
        }
      }
      result.defaultCase_ = defaultCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.core.IfElseBlock) {
        return mergeFrom((com.flyteidl.core.IfElseBlock)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.core.IfElseBlock other) {
      if (other == com.flyteidl.core.IfElseBlock.getDefaultInstance()) return this;
      if (other.hasCase()) {
        mergeCase(other.getCase());
      }
      if (otherBuilder_ == null) {
        if (!other.other_.isEmpty()) {
          if (other_.isEmpty()) {
            other_ = other.other_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOtherIsMutable();
            other_.addAll(other.other_);
          }
          onChanged();
        }
      } else {
        if (!other.other_.isEmpty()) {
          if (otherBuilder_.isEmpty()) {
            otherBuilder_.dispose();
            otherBuilder_ = null;
            other_ = other.other_;
            bitField0_ = (bitField0_ & ~0x00000001);
            otherBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOtherFieldBuilder() : null;
          } else {
            otherBuilder_.addAllMessages(other.other_);
          }
        }
      }
      switch (other.getDefaultCase()) {
        case ELSE_NODE: {
          mergeElseNode(other.getElseNode());
          break;
        }
        case ERROR: {
          mergeError(other.getError());
          break;
        }
        case DEFAULT_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.core.IfElseBlock parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.core.IfElseBlock) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int defaultCase_ = 0;
    private java.lang.Object default_;
    public DefaultCase
        getDefaultCase() {
      return DefaultCase.forNumber(
          defaultCase_);
    }

    public Builder clearDefault() {
      defaultCase_ = 0;
      default_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.flyteidl.core.IfBlock case_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.IfBlock, com.flyteidl.core.IfBlock.Builder, com.flyteidl.core.IfBlockOrBuilder> caseBuilder_;
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     * @return Whether the case field is set.
     */
    public boolean hasCase() {
      return caseBuilder_ != null || case_ != null;
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     * @return The case.
     */
    public com.flyteidl.core.IfBlock getCase() {
      if (caseBuilder_ == null) {
        return case_ == null ? com.flyteidl.core.IfBlock.getDefaultInstance() : case_;
      } else {
        return caseBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    public Builder setCase(com.flyteidl.core.IfBlock value) {
      if (caseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        case_ = value;
        onChanged();
      } else {
        caseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    public Builder setCase(
        com.flyteidl.core.IfBlock.Builder builderForValue) {
      if (caseBuilder_ == null) {
        case_ = builderForValue.build();
        onChanged();
      } else {
        caseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    public Builder mergeCase(com.flyteidl.core.IfBlock value) {
      if (caseBuilder_ == null) {
        if (case_ != null) {
          case_ =
            com.flyteidl.core.IfBlock.newBuilder(case_).mergeFrom(value).buildPartial();
        } else {
          case_ = value;
        }
        onChanged();
      } else {
        caseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    public Builder clearCase() {
      if (caseBuilder_ == null) {
        case_ = null;
        onChanged();
      } else {
        case_ = null;
        caseBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    public com.flyteidl.core.IfBlock.Builder getCaseBuilder() {
      
      onChanged();
      return getCaseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    public com.flyteidl.core.IfBlockOrBuilder getCaseOrBuilder() {
      if (caseBuilder_ != null) {
        return caseBuilder_.getMessageOrBuilder();
      } else {
        return case_ == null ?
            com.flyteidl.core.IfBlock.getDefaultInstance() : case_;
      }
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.IfBlock, com.flyteidl.core.IfBlock.Builder, com.flyteidl.core.IfBlockOrBuilder> 
        getCaseFieldBuilder() {
      if (caseBuilder_ == null) {
        caseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.IfBlock, com.flyteidl.core.IfBlock.Builder, com.flyteidl.core.IfBlockOrBuilder>(
                getCase(),
                getParentForChildren(),
                isClean());
        case_ = null;
      }
      return caseBuilder_;
    }

    private java.util.List<com.flyteidl.core.IfBlock> other_ =
      java.util.Collections.emptyList();
    private void ensureOtherIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        other_ = new java.util.ArrayList<com.flyteidl.core.IfBlock>(other_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.IfBlock, com.flyteidl.core.IfBlock.Builder, com.flyteidl.core.IfBlockOrBuilder> otherBuilder_;

    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public java.util.List<com.flyteidl.core.IfBlock> getOtherList() {
      if (otherBuilder_ == null) {
        return java.util.Collections.unmodifiableList(other_);
      } else {
        return otherBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public int getOtherCount() {
      if (otherBuilder_ == null) {
        return other_.size();
      } else {
        return otherBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public com.flyteidl.core.IfBlock getOther(int index) {
      if (otherBuilder_ == null) {
        return other_.get(index);
      } else {
        return otherBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder setOther(
        int index, com.flyteidl.core.IfBlock value) {
      if (otherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherIsMutable();
        other_.set(index, value);
        onChanged();
      } else {
        otherBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder setOther(
        int index, com.flyteidl.core.IfBlock.Builder builderForValue) {
      if (otherBuilder_ == null) {
        ensureOtherIsMutable();
        other_.set(index, builderForValue.build());
        onChanged();
      } else {
        otherBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder addOther(com.flyteidl.core.IfBlock value) {
      if (otherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherIsMutable();
        other_.add(value);
        onChanged();
      } else {
        otherBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder addOther(
        int index, com.flyteidl.core.IfBlock value) {
      if (otherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOtherIsMutable();
        other_.add(index, value);
        onChanged();
      } else {
        otherBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder addOther(
        com.flyteidl.core.IfBlock.Builder builderForValue) {
      if (otherBuilder_ == null) {
        ensureOtherIsMutable();
        other_.add(builderForValue.build());
        onChanged();
      } else {
        otherBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder addOther(
        int index, com.flyteidl.core.IfBlock.Builder builderForValue) {
      if (otherBuilder_ == null) {
        ensureOtherIsMutable();
        other_.add(index, builderForValue.build());
        onChanged();
      } else {
        otherBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder addAllOther(
        java.lang.Iterable<? extends com.flyteidl.core.IfBlock> values) {
      if (otherBuilder_ == null) {
        ensureOtherIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, other_);
        onChanged();
      } else {
        otherBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder clearOther() {
      if (otherBuilder_ == null) {
        other_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        otherBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public Builder removeOther(int index) {
      if (otherBuilder_ == null) {
        ensureOtherIsMutable();
        other_.remove(index);
        onChanged();
      } else {
        otherBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public com.flyteidl.core.IfBlock.Builder getOtherBuilder(
        int index) {
      return getOtherFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public com.flyteidl.core.IfBlockOrBuilder getOtherOrBuilder(
        int index) {
      if (otherBuilder_ == null) {
        return other_.get(index);  } else {
        return otherBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public java.util.List<? extends com.flyteidl.core.IfBlockOrBuilder> 
         getOtherOrBuilderList() {
      if (otherBuilder_ != null) {
        return otherBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(other_);
      }
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public com.flyteidl.core.IfBlock.Builder addOtherBuilder() {
      return getOtherFieldBuilder().addBuilder(
          com.flyteidl.core.IfBlock.getDefaultInstance());
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public com.flyteidl.core.IfBlock.Builder addOtherBuilder(
        int index) {
      return getOtherFieldBuilder().addBuilder(
          index, com.flyteidl.core.IfBlock.getDefaultInstance());
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    public java.util.List<com.flyteidl.core.IfBlock.Builder> 
         getOtherBuilderList() {
      return getOtherFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.IfBlock, com.flyteidl.core.IfBlock.Builder, com.flyteidl.core.IfBlockOrBuilder> 
        getOtherFieldBuilder() {
      if (otherBuilder_ == null) {
        otherBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.flyteidl.core.IfBlock, com.flyteidl.core.IfBlock.Builder, com.flyteidl.core.IfBlockOrBuilder>(
                other_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        other_ = null;
      }
      return otherBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Node, com.flyteidl.core.Node.Builder, com.flyteidl.core.NodeOrBuilder> elseNodeBuilder_;
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     * @return Whether the elseNode field is set.
     */
    @java.lang.Override
    public boolean hasElseNode() {
      return defaultCase_ == 3;
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     * @return The elseNode.
     */
    @java.lang.Override
    public com.flyteidl.core.Node getElseNode() {
      if (elseNodeBuilder_ == null) {
        if (defaultCase_ == 3) {
          return (com.flyteidl.core.Node) default_;
        }
        return com.flyteidl.core.Node.getDefaultInstance();
      } else {
        if (defaultCase_ == 3) {
          return elseNodeBuilder_.getMessage();
        }
        return com.flyteidl.core.Node.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    public Builder setElseNode(com.flyteidl.core.Node value) {
      if (elseNodeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        default_ = value;
        onChanged();
      } else {
        elseNodeBuilder_.setMessage(value);
      }
      defaultCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    public Builder setElseNode(
        com.flyteidl.core.Node.Builder builderForValue) {
      if (elseNodeBuilder_ == null) {
        default_ = builderForValue.build();
        onChanged();
      } else {
        elseNodeBuilder_.setMessage(builderForValue.build());
      }
      defaultCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    public Builder mergeElseNode(com.flyteidl.core.Node value) {
      if (elseNodeBuilder_ == null) {
        if (defaultCase_ == 3 &&
            default_ != com.flyteidl.core.Node.getDefaultInstance()) {
          default_ = com.flyteidl.core.Node.newBuilder((com.flyteidl.core.Node) default_)
              .mergeFrom(value).buildPartial();
        } else {
          default_ = value;
        }
        onChanged();
      } else {
        if (defaultCase_ == 3) {
          elseNodeBuilder_.mergeFrom(value);
        }
        elseNodeBuilder_.setMessage(value);
      }
      defaultCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    public Builder clearElseNode() {
      if (elseNodeBuilder_ == null) {
        if (defaultCase_ == 3) {
          defaultCase_ = 0;
          default_ = null;
          onChanged();
        }
      } else {
        if (defaultCase_ == 3) {
          defaultCase_ = 0;
          default_ = null;
        }
        elseNodeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    public com.flyteidl.core.Node.Builder getElseNodeBuilder() {
      return getElseNodeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.NodeOrBuilder getElseNodeOrBuilder() {
      if ((defaultCase_ == 3) && (elseNodeBuilder_ != null)) {
        return elseNodeBuilder_.getMessageOrBuilder();
      } else {
        if (defaultCase_ == 3) {
          return (com.flyteidl.core.Node) default_;
        }
        return com.flyteidl.core.Node.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Node, com.flyteidl.core.Node.Builder, com.flyteidl.core.NodeOrBuilder> 
        getElseNodeFieldBuilder() {
      if (elseNodeBuilder_ == null) {
        if (!(defaultCase_ == 3)) {
          default_ = com.flyteidl.core.Node.getDefaultInstance();
        }
        elseNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.Node, com.flyteidl.core.Node.Builder, com.flyteidl.core.NodeOrBuilder>(
                (com.flyteidl.core.Node) default_,
                getParentForChildren(),
                isClean());
        default_ = null;
      }
      defaultCase_ = 3;
      onChanged();;
      return elseNodeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Error, com.flyteidl.core.Error.Builder, com.flyteidl.core.ErrorOrBuilder> errorBuilder_;
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     * @return Whether the error field is set.
     */
    @java.lang.Override
    public boolean hasError() {
      return defaultCase_ == 4;
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     * @return The error.
     */
    @java.lang.Override
    public com.flyteidl.core.Error getError() {
      if (errorBuilder_ == null) {
        if (defaultCase_ == 4) {
          return (com.flyteidl.core.Error) default_;
        }
        return com.flyteidl.core.Error.getDefaultInstance();
      } else {
        if (defaultCase_ == 4) {
          return errorBuilder_.getMessage();
        }
        return com.flyteidl.core.Error.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    public Builder setError(com.flyteidl.core.Error value) {
      if (errorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        default_ = value;
        onChanged();
      } else {
        errorBuilder_.setMessage(value);
      }
      defaultCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    public Builder setError(
        com.flyteidl.core.Error.Builder builderForValue) {
      if (errorBuilder_ == null) {
        default_ = builderForValue.build();
        onChanged();
      } else {
        errorBuilder_.setMessage(builderForValue.build());
      }
      defaultCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    public Builder mergeError(com.flyteidl.core.Error value) {
      if (errorBuilder_ == null) {
        if (defaultCase_ == 4 &&
            default_ != com.flyteidl.core.Error.getDefaultInstance()) {
          default_ = com.flyteidl.core.Error.newBuilder((com.flyteidl.core.Error) default_)
              .mergeFrom(value).buildPartial();
        } else {
          default_ = value;
        }
        onChanged();
      } else {
        if (defaultCase_ == 4) {
          errorBuilder_.mergeFrom(value);
        }
        errorBuilder_.setMessage(value);
      }
      defaultCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    public Builder clearError() {
      if (errorBuilder_ == null) {
        if (defaultCase_ == 4) {
          defaultCase_ = 0;
          default_ = null;
          onChanged();
        }
      } else {
        if (defaultCase_ == 4) {
          defaultCase_ = 0;
          default_ = null;
        }
        errorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    public com.flyteidl.core.Error.Builder getErrorBuilder() {
      return getErrorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.ErrorOrBuilder getErrorOrBuilder() {
      if ((defaultCase_ == 4) && (errorBuilder_ != null)) {
        return errorBuilder_.getMessageOrBuilder();
      } else {
        if (defaultCase_ == 4) {
          return (com.flyteidl.core.Error) default_;
        }
        return com.flyteidl.core.Error.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Error, com.flyteidl.core.Error.Builder, com.flyteidl.core.ErrorOrBuilder> 
        getErrorFieldBuilder() {
      if (errorBuilder_ == null) {
        if (!(defaultCase_ == 4)) {
          default_ = com.flyteidl.core.Error.getDefaultInstance();
        }
        errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.Error, com.flyteidl.core.Error.Builder, com.flyteidl.core.ErrorOrBuilder>(
                (com.flyteidl.core.Error) default_,
                getParentForChildren(),
                isClean());
        default_ = null;
      }
      defaultCase_ = 4;
      onChanged();;
      return errorBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.core.IfElseBlock)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.core.IfElseBlock)
  private static final com.flyteidl.core.IfElseBlock DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.core.IfElseBlock();
  }

  public static com.flyteidl.core.IfElseBlock getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IfElseBlock>
      PARSER = new com.google.protobuf.AbstractParser<IfElseBlock>() {
    @java.lang.Override
    public IfElseBlock parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new IfElseBlock(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<IfElseBlock> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IfElseBlock> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.core.IfElseBlock getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

