// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/security.proto

package com.flyteidl.core;

/**
 * <pre>
 * Secret encapsulates information about the secret a task needs to proceed. An environment variable
 * FLYTE_SECRETS_ENV_PREFIX will be passed to indicate the prefix of the environment variables that will be present if
 * secrets are passed through environment variables.
 * FLYTE_SECRETS_DEFAULT_DIR will be passed to indicate the prefix of the path where secrets will be mounted if secrets
 * are passed through file mounts.
 * </pre>
 *
 * Protobuf type {@code flyteidl.core.Secret}
 */
public final class Secret extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.core.Secret)
    SecretOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Secret.newBuilder() to construct.
  private Secret(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Secret() {
    group_ = "";
    groupVersion_ = "";
    key_ = "";
    mountRequirement_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Secret();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Secret(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            group_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            groupVersion_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            key_ = s;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            mountRequirement_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.core.SecurityProto.internal_static_flyteidl_core_Secret_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.core.SecurityProto.internal_static_flyteidl_core_Secret_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.core.Secret.class, com.flyteidl.core.Secret.Builder.class);
  }

  /**
   * Protobuf enum {@code flyteidl.core.Secret.MountType}
   */
  public enum MountType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Default case, indicates the client can tolerate either mounting options.
     * </pre>
     *
     * <code>ANY = 0;</code>
     */
    ANY(0),
    /**
     * <pre>
     * ENV_VAR indicates the secret needs to be mounted as an environment variable.
     * </pre>
     *
     * <code>ENV_VAR = 1;</code>
     */
    ENV_VAR(1),
    /**
     * <pre>
     * FILE indicates the secret needs to be mounted as a file.
     * </pre>
     *
     * <code>FILE = 2;</code>
     */
    FILE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Default case, indicates the client can tolerate either mounting options.
     * </pre>
     *
     * <code>ANY = 0;</code>
     */
    public static final int ANY_VALUE = 0;
    /**
     * <pre>
     * ENV_VAR indicates the secret needs to be mounted as an environment variable.
     * </pre>
     *
     * <code>ENV_VAR = 1;</code>
     */
    public static final int ENV_VAR_VALUE = 1;
    /**
     * <pre>
     * FILE indicates the secret needs to be mounted as a file.
     * </pre>
     *
     * <code>FILE = 2;</code>
     */
    public static final int FILE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MountType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MountType forNumber(int value) {
      switch (value) {
        case 0: return ANY;
        case 1: return ENV_VAR;
        case 2: return FILE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MountType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MountType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MountType>() {
            public MountType findValueByNumber(int number) {
              return MountType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.flyteidl.core.Secret.getDescriptor().getEnumTypes().get(0);
    }

    private static final MountType[] VALUES = values();

    public static MountType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MountType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.core.Secret.MountType)
  }

  public static final int GROUP_FIELD_NUMBER = 1;
  private volatile java.lang.Object group_;
  /**
   * <pre>
   * The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of
   * the v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.
   * For AWS Secret Manager, this should be the name of the secret.
   * +required
   * </pre>
   *
   * <code>string group = 1 [json_name = "group"];</code>
   * @return The group.
   */
  @java.lang.Override
  public java.lang.String getGroup() {
    java.lang.Object ref = group_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      group_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of
   * the v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.
   * For AWS Secret Manager, this should be the name of the secret.
   * +required
   * </pre>
   *
   * <code>string group = 1 [json_name = "group"];</code>
   * @return The bytes for group.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupBytes() {
    java.lang.Object ref = group_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      group_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_VERSION_FIELD_NUMBER = 2;
  private volatile java.lang.Object groupVersion_;
  /**
   * <pre>
   * The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones
   * that do not support it.
   * +optional
   * </pre>
   *
   * <code>string group_version = 2 [json_name = "groupVersion"];</code>
   * @return The groupVersion.
   */
  @java.lang.Override
  public java.lang.String getGroupVersion() {
    java.lang.Object ref = groupVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones
   * that do not support it.
   * +optional
   * </pre>
   *
   * <code>string group_version = 2 [json_name = "groupVersion"];</code>
   * @return The bytes for groupVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupVersionBytes() {
    java.lang.Object ref = groupVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEY_FIELD_NUMBER = 3;
  private volatile java.lang.Object key_;
  /**
   * <pre>
   * The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation
   * of the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should
   * match one of the keys inside the secret. For AWS Secret Manager, it's ignored.
   * +optional
   * </pre>
   *
   * <code>string key = 3 [json_name = "key"];</code>
   * @return The key.
   */
  @java.lang.Override
  public java.lang.String getKey() {
    java.lang.Object ref = key_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      key_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation
   * of the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should
   * match one of the keys inside the secret. For AWS Secret Manager, it's ignored.
   * +optional
   * </pre>
   *
   * <code>string key = 3 [json_name = "key"];</code>
   * @return The bytes for key.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyBytes() {
    java.lang.Object ref = key_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      key_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MOUNT_REQUIREMENT_FIELD_NUMBER = 4;
  private int mountRequirement_;
  /**
   * <pre>
   * mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail
   * if the underlying key management system cannot satisfy that requirement. If not provided, the default location
   * will depend on the key management system.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.core.Secret.MountType mount_requirement = 4 [json_name = "mountRequirement"];</code>
   * @return The enum numeric value on the wire for mountRequirement.
   */
  @java.lang.Override public int getMountRequirementValue() {
    return mountRequirement_;
  }
  /**
   * <pre>
   * mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail
   * if the underlying key management system cannot satisfy that requirement. If not provided, the default location
   * will depend on the key management system.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.core.Secret.MountType mount_requirement = 4 [json_name = "mountRequirement"];</code>
   * @return The mountRequirement.
   */
  @java.lang.Override public com.flyteidl.core.Secret.MountType getMountRequirement() {
    @SuppressWarnings("deprecation")
    com.flyteidl.core.Secret.MountType result = com.flyteidl.core.Secret.MountType.valueOf(mountRequirement_);
    return result == null ? com.flyteidl.core.Secret.MountType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(group_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, group_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, groupVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, key_);
    }
    if (mountRequirement_ != com.flyteidl.core.Secret.MountType.ANY.getNumber()) {
      output.writeEnum(4, mountRequirement_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(group_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, group_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, groupVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, key_);
    }
    if (mountRequirement_ != com.flyteidl.core.Secret.MountType.ANY.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, mountRequirement_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.core.Secret)) {
      return super.equals(obj);
    }
    com.flyteidl.core.Secret other = (com.flyteidl.core.Secret) obj;

    if (!getGroup()
        .equals(other.getGroup())) return false;
    if (!getGroupVersion()
        .equals(other.getGroupVersion())) return false;
    if (!getKey()
        .equals(other.getKey())) return false;
    if (mountRequirement_ != other.mountRequirement_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + GROUP_FIELD_NUMBER;
    hash = (53 * hash) + getGroup().hashCode();
    hash = (37 * hash) + GROUP_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getGroupVersion().hashCode();
    hash = (37 * hash) + KEY_FIELD_NUMBER;
    hash = (53 * hash) + getKey().hashCode();
    hash = (37 * hash) + MOUNT_REQUIREMENT_FIELD_NUMBER;
    hash = (53 * hash) + mountRequirement_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.core.Secret parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.Secret parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.Secret parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.Secret parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.Secret parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.Secret parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.Secret parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.Secret parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.Secret parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.Secret parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.Secret parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.Secret parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.core.Secret prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Secret encapsulates information about the secret a task needs to proceed. An environment variable
   * FLYTE_SECRETS_ENV_PREFIX will be passed to indicate the prefix of the environment variables that will be present if
   * secrets are passed through environment variables.
   * FLYTE_SECRETS_DEFAULT_DIR will be passed to indicate the prefix of the path where secrets will be mounted if secrets
   * are passed through file mounts.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.Secret}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.core.Secret)
      com.flyteidl.core.SecretOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.SecurityProto.internal_static_flyteidl_core_Secret_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.SecurityProto.internal_static_flyteidl_core_Secret_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.Secret.class, com.flyteidl.core.Secret.Builder.class);
    }

    // Construct using com.flyteidl.core.Secret.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      group_ = "";

      groupVersion_ = "";

      key_ = "";

      mountRequirement_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.core.SecurityProto.internal_static_flyteidl_core_Secret_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.core.Secret getDefaultInstanceForType() {
      return com.flyteidl.core.Secret.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.core.Secret build() {
      com.flyteidl.core.Secret result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.core.Secret buildPartial() {
      com.flyteidl.core.Secret result = new com.flyteidl.core.Secret(this);
      result.group_ = group_;
      result.groupVersion_ = groupVersion_;
      result.key_ = key_;
      result.mountRequirement_ = mountRequirement_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.core.Secret) {
        return mergeFrom((com.flyteidl.core.Secret)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.core.Secret other) {
      if (other == com.flyteidl.core.Secret.getDefaultInstance()) return this;
      if (!other.getGroup().isEmpty()) {
        group_ = other.group_;
        onChanged();
      }
      if (!other.getGroupVersion().isEmpty()) {
        groupVersion_ = other.groupVersion_;
        onChanged();
      }
      if (!other.getKey().isEmpty()) {
        key_ = other.key_;
        onChanged();
      }
      if (other.mountRequirement_ != 0) {
        setMountRequirementValue(other.getMountRequirementValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.core.Secret parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.core.Secret) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object group_ = "";
    /**
     * <pre>
     * The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of
     * the v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.
     * For AWS Secret Manager, this should be the name of the secret.
     * +required
     * </pre>
     *
     * <code>string group = 1 [json_name = "group"];</code>
     * @return The group.
     */
    public java.lang.String getGroup() {
      java.lang.Object ref = group_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        group_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of
     * the v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.
     * For AWS Secret Manager, this should be the name of the secret.
     * +required
     * </pre>
     *
     * <code>string group = 1 [json_name = "group"];</code>
     * @return The bytes for group.
     */
    public com.google.protobuf.ByteString
        getGroupBytes() {
      java.lang.Object ref = group_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        group_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of
     * the v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.
     * For AWS Secret Manager, this should be the name of the secret.
     * +required
     * </pre>
     *
     * <code>string group = 1 [json_name = "group"];</code>
     * @param value The group to set.
     * @return This builder for chaining.
     */
    public Builder setGroup(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      group_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of
     * the v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.
     * For AWS Secret Manager, this should be the name of the secret.
     * +required
     * </pre>
     *
     * <code>string group = 1 [json_name = "group"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGroup() {
      
      group_ = getDefaultInstance().getGroup();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secret group where to find the key referenced below. For K8s secrets, this should be the name of
     * the v1/secret object. For Confidant, this should be the Credential name. For Vault, this should be the secret name.
     * For AWS Secret Manager, this should be the name of the secret.
     * +required
     * </pre>
     *
     * <code>string group = 1 [json_name = "group"];</code>
     * @param value The bytes for group to set.
     * @return This builder for chaining.
     */
    public Builder setGroupBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      group_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object groupVersion_ = "";
    /**
     * <pre>
     * The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones
     * that do not support it.
     * +optional
     * </pre>
     *
     * <code>string group_version = 2 [json_name = "groupVersion"];</code>
     * @return The groupVersion.
     */
    public java.lang.String getGroupVersion() {
      java.lang.Object ref = groupVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones
     * that do not support it.
     * +optional
     * </pre>
     *
     * <code>string group_version = 2 [json_name = "groupVersion"];</code>
     * @return The bytes for groupVersion.
     */
    public com.google.protobuf.ByteString
        getGroupVersionBytes() {
      java.lang.Object ref = groupVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones
     * that do not support it.
     * +optional
     * </pre>
     *
     * <code>string group_version = 2 [json_name = "groupVersion"];</code>
     * @param value The groupVersion to set.
     * @return This builder for chaining.
     */
    public Builder setGroupVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      groupVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones
     * that do not support it.
     * +optional
     * </pre>
     *
     * <code>string group_version = 2 [json_name = "groupVersion"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupVersion() {
      
      groupVersion_ = getDefaultInstance().getGroupVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The group version to fetch. This is not supported in all secret management systems. It'll be ignored for the ones
     * that do not support it.
     * +optional
     * </pre>
     *
     * <code>string group_version = 2 [json_name = "groupVersion"];</code>
     * @param value The bytes for groupVersion to set.
     * @return This builder for chaining.
     */
    public Builder setGroupVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      groupVersion_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object key_ = "";
    /**
     * <pre>
     * The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation
     * of the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should
     * match one of the keys inside the secret. For AWS Secret Manager, it's ignored.
     * +optional
     * </pre>
     *
     * <code>string key = 3 [json_name = "key"];</code>
     * @return The key.
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation
     * of the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should
     * match one of the keys inside the secret. For AWS Secret Manager, it's ignored.
     * +optional
     * </pre>
     *
     * <code>string key = 3 [json_name = "key"];</code>
     * @return The bytes for key.
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation
     * of the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should
     * match one of the keys inside the secret. For AWS Secret Manager, it's ignored.
     * +optional
     * </pre>
     *
     * <code>string key = 3 [json_name = "key"];</code>
     * @param value The key to set.
     * @return This builder for chaining.
     */
    public Builder setKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      key_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation
     * of the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should
     * match one of the keys inside the secret. For AWS Secret Manager, it's ignored.
     * +optional
     * </pre>
     *
     * <code>string key = 3 [json_name = "key"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKey() {
      
      key_ = getDefaultInstance().getKey();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the secret to mount. This has to match an existing secret in the system. It's up to the implementation
     * of the secret management system to require case sensitivity. For K8s secrets, Confidant and Vault, this should
     * match one of the keys inside the secret. For AWS Secret Manager, it's ignored.
     * +optional
     * </pre>
     *
     * <code>string key = 3 [json_name = "key"];</code>
     * @param value The bytes for key to set.
     * @return This builder for chaining.
     */
    public Builder setKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      key_ = value;
      onChanged();
      return this;
    }

    private int mountRequirement_ = 0;
    /**
     * <pre>
     * mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail
     * if the underlying key management system cannot satisfy that requirement. If not provided, the default location
     * will depend on the key management system.
     * +optional
     * </pre>
     *
     * <code>.flyteidl.core.Secret.MountType mount_requirement = 4 [json_name = "mountRequirement"];</code>
     * @return The enum numeric value on the wire for mountRequirement.
     */
    @java.lang.Override public int getMountRequirementValue() {
      return mountRequirement_;
    }
    /**
     * <pre>
     * mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail
     * if the underlying key management system cannot satisfy that requirement. If not provided, the default location
     * will depend on the key management system.
     * +optional
     * </pre>
     *
     * <code>.flyteidl.core.Secret.MountType mount_requirement = 4 [json_name = "mountRequirement"];</code>
     * @param value The enum numeric value on the wire for mountRequirement to set.
     * @return This builder for chaining.
     */
    public Builder setMountRequirementValue(int value) {
      
      mountRequirement_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail
     * if the underlying key management system cannot satisfy that requirement. If not provided, the default location
     * will depend on the key management system.
     * +optional
     * </pre>
     *
     * <code>.flyteidl.core.Secret.MountType mount_requirement = 4 [json_name = "mountRequirement"];</code>
     * @return The mountRequirement.
     */
    @java.lang.Override
    public com.flyteidl.core.Secret.MountType getMountRequirement() {
      @SuppressWarnings("deprecation")
      com.flyteidl.core.Secret.MountType result = com.flyteidl.core.Secret.MountType.valueOf(mountRequirement_);
      return result == null ? com.flyteidl.core.Secret.MountType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail
     * if the underlying key management system cannot satisfy that requirement. If not provided, the default location
     * will depend on the key management system.
     * +optional
     * </pre>
     *
     * <code>.flyteidl.core.Secret.MountType mount_requirement = 4 [json_name = "mountRequirement"];</code>
     * @param value The mountRequirement to set.
     * @return This builder for chaining.
     */
    public Builder setMountRequirement(com.flyteidl.core.Secret.MountType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mountRequirement_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mount_requirement is optional. Indicates where the secret has to be mounted. If provided, the execution will fail
     * if the underlying key management system cannot satisfy that requirement. If not provided, the default location
     * will depend on the key management system.
     * +optional
     * </pre>
     *
     * <code>.flyteidl.core.Secret.MountType mount_requirement = 4 [json_name = "mountRequirement"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMountRequirement() {
      
      mountRequirement_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.core.Secret)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.core.Secret)
  private static final com.flyteidl.core.Secret DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.core.Secret();
  }

  public static com.flyteidl.core.Secret getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Secret>
      PARSER = new com.google.protobuf.AbstractParser<Secret>() {
    @java.lang.Override
    public Secret parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Secret(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Secret> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Secret> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.core.Secret getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

