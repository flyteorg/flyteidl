// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/dynamic_job.proto

package com.flyteidl.core;

/**
 * <pre>
 * Describes a set of tasks to execute and how the final outputs are produced.
 * </pre>
 *
 * Protobuf type {@code flyteidl.core.DynamicJobSpec}
 */
public final class DynamicJobSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.core.DynamicJobSpec)
    DynamicJobSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DynamicJobSpec.newBuilder() to construct.
  private DynamicJobSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DynamicJobSpec() {
    nodes_ = java.util.Collections.emptyList();
    outputs_ = java.util.Collections.emptyList();
    tasks_ = java.util.Collections.emptyList();
    subworkflows_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DynamicJobSpec();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DynamicJobSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              nodes_ = new java.util.ArrayList<com.flyteidl.core.Node>();
              mutable_bitField0_ |= 0x00000001;
            }
            nodes_.add(
                input.readMessage(com.flyteidl.core.Node.parser(), extensionRegistry));
            break;
          }
          case 16: {

            minSuccesses_ = input.readInt64();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              outputs_ = new java.util.ArrayList<com.flyteidl.core.Binding>();
              mutable_bitField0_ |= 0x00000002;
            }
            outputs_.add(
                input.readMessage(com.flyteidl.core.Binding.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              tasks_ = new java.util.ArrayList<com.flyteidl.core.TaskTemplate>();
              mutable_bitField0_ |= 0x00000004;
            }
            tasks_.add(
                input.readMessage(com.flyteidl.core.TaskTemplate.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              subworkflows_ = new java.util.ArrayList<com.flyteidl.core.WorkflowTemplate>();
              mutable_bitField0_ |= 0x00000008;
            }
            subworkflows_.add(
                input.readMessage(com.flyteidl.core.WorkflowTemplate.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        nodes_ = java.util.Collections.unmodifiableList(nodes_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        outputs_ = java.util.Collections.unmodifiableList(outputs_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        tasks_ = java.util.Collections.unmodifiableList(tasks_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        subworkflows_ = java.util.Collections.unmodifiableList(subworkflows_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.core.DynamicJobSpec.class, com.flyteidl.core.DynamicJobSpec.Builder.class);
  }

  public static final int NODES_FIELD_NUMBER = 1;
  private java.util.List<com.flyteidl.core.Node> nodes_;
  /**
   * <pre>
   * A collection of nodes to execute.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
   */
  @java.lang.Override
  public java.util.List<com.flyteidl.core.Node> getNodesList() {
    return nodes_;
  }
  /**
   * <pre>
   * A collection of nodes to execute.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.flyteidl.core.NodeOrBuilder> 
      getNodesOrBuilderList() {
    return nodes_;
  }
  /**
   * <pre>
   * A collection of nodes to execute.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
   */
  @java.lang.Override
  public int getNodesCount() {
    return nodes_.size();
  }
  /**
   * <pre>
   * A collection of nodes to execute.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.Node getNodes(int index) {
    return nodes_.get(index);
  }
  /**
   * <pre>
   * A collection of nodes to execute.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.NodeOrBuilder getNodesOrBuilder(
      int index) {
    return nodes_.get(index);
  }

  public static final int MIN_SUCCESSES_FIELD_NUMBER = 2;
  private long minSuccesses_;
  /**
   * <pre>
   * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
   * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
   * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
   * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
   * specified, is the count of nodes repeated field.
   * </pre>
   *
   * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
   * @return The minSuccesses.
   */
  @java.lang.Override
  public long getMinSuccesses() {
    return minSuccesses_;
  }

  public static final int OUTPUTS_FIELD_NUMBER = 3;
  private java.util.List<com.flyteidl.core.Binding> outputs_;
  /**
   * <pre>
   * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
   * in bindings should have the generated id for the subtask.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
   */
  @java.lang.Override
  public java.util.List<com.flyteidl.core.Binding> getOutputsList() {
    return outputs_;
  }
  /**
   * <pre>
   * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
   * in bindings should have the generated id for the subtask.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.flyteidl.core.BindingOrBuilder> 
      getOutputsOrBuilderList() {
    return outputs_;
  }
  /**
   * <pre>
   * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
   * in bindings should have the generated id for the subtask.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
   */
  @java.lang.Override
  public int getOutputsCount() {
    return outputs_.size();
  }
  /**
   * <pre>
   * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
   * in bindings should have the generated id for the subtask.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.Binding getOutputs(int index) {
    return outputs_.get(index);
  }
  /**
   * <pre>
   * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
   * in bindings should have the generated id for the subtask.
   * </pre>
   *
   * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.BindingOrBuilder getOutputsOrBuilder(
      int index) {
    return outputs_.get(index);
  }

  public static final int TASKS_FIELD_NUMBER = 4;
  private java.util.List<com.flyteidl.core.TaskTemplate> tasks_;
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
   */
  @java.lang.Override
  public java.util.List<com.flyteidl.core.TaskTemplate> getTasksList() {
    return tasks_;
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.flyteidl.core.TaskTemplateOrBuilder> 
      getTasksOrBuilderList() {
    return tasks_;
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
   */
  @java.lang.Override
  public int getTasksCount() {
    return tasks_.size();
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.TaskTemplate getTasks(int index) {
    return tasks_.get(index);
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.TaskTemplateOrBuilder getTasksOrBuilder(
      int index) {
    return tasks_.get(index);
  }

  public static final int SUBWORKFLOWS_FIELD_NUMBER = 5;
  private java.util.List<com.flyteidl.core.WorkflowTemplate> subworkflows_;
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
   */
  @java.lang.Override
  public java.util.List<com.flyteidl.core.WorkflowTemplate> getSubworkflowsList() {
    return subworkflows_;
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.flyteidl.core.WorkflowTemplateOrBuilder> 
      getSubworkflowsOrBuilderList() {
    return subworkflows_;
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
   */
  @java.lang.Override
  public int getSubworkflowsCount() {
    return subworkflows_.size();
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.WorkflowTemplate getSubworkflows(int index) {
    return subworkflows_.get(index);
  }
  /**
   * <pre>
   * [Optional] A complete list of task specs referenced in nodes.
   * </pre>
   *
   * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.WorkflowTemplateOrBuilder getSubworkflowsOrBuilder(
      int index) {
    return subworkflows_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < nodes_.size(); i++) {
      output.writeMessage(1, nodes_.get(i));
    }
    if (minSuccesses_ != 0L) {
      output.writeInt64(2, minSuccesses_);
    }
    for (int i = 0; i < outputs_.size(); i++) {
      output.writeMessage(3, outputs_.get(i));
    }
    for (int i = 0; i < tasks_.size(); i++) {
      output.writeMessage(4, tasks_.get(i));
    }
    for (int i = 0; i < subworkflows_.size(); i++) {
      output.writeMessage(5, subworkflows_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < nodes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, nodes_.get(i));
    }
    if (minSuccesses_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, minSuccesses_);
    }
    for (int i = 0; i < outputs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, outputs_.get(i));
    }
    for (int i = 0; i < tasks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, tasks_.get(i));
    }
    for (int i = 0; i < subworkflows_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, subworkflows_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.core.DynamicJobSpec)) {
      return super.equals(obj);
    }
    com.flyteidl.core.DynamicJobSpec other = (com.flyteidl.core.DynamicJobSpec) obj;

    if (!getNodesList()
        .equals(other.getNodesList())) return false;
    if (getMinSuccesses()
        != other.getMinSuccesses()) return false;
    if (!getOutputsList()
        .equals(other.getOutputsList())) return false;
    if (!getTasksList()
        .equals(other.getTasksList())) return false;
    if (!getSubworkflowsList()
        .equals(other.getSubworkflowsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getNodesCount() > 0) {
      hash = (37 * hash) + NODES_FIELD_NUMBER;
      hash = (53 * hash) + getNodesList().hashCode();
    }
    hash = (37 * hash) + MIN_SUCCESSES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMinSuccesses());
    if (getOutputsCount() > 0) {
      hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getOutputsList().hashCode();
    }
    if (getTasksCount() > 0) {
      hash = (37 * hash) + TASKS_FIELD_NUMBER;
      hash = (53 * hash) + getTasksList().hashCode();
    }
    if (getSubworkflowsCount() > 0) {
      hash = (37 * hash) + SUBWORKFLOWS_FIELD_NUMBER;
      hash = (53 * hash) + getSubworkflowsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.DynamicJobSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.DynamicJobSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.DynamicJobSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.core.DynamicJobSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a set of tasks to execute and how the final outputs are produced.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.DynamicJobSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.core.DynamicJobSpec)
      com.flyteidl.core.DynamicJobSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.DynamicJobSpec.class, com.flyteidl.core.DynamicJobSpec.Builder.class);
    }

    // Construct using com.flyteidl.core.DynamicJobSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNodesFieldBuilder();
        getOutputsFieldBuilder();
        getTasksFieldBuilder();
        getSubworkflowsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (nodesBuilder_ == null) {
        nodes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        nodesBuilder_.clear();
      }
      minSuccesses_ = 0L;

      if (outputsBuilder_ == null) {
        outputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        outputsBuilder_.clear();
      }
      if (tasksBuilder_ == null) {
        tasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        tasksBuilder_.clear();
      }
      if (subworkflowsBuilder_ == null) {
        subworkflows_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        subworkflowsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.core.DynamicJobSpec getDefaultInstanceForType() {
      return com.flyteidl.core.DynamicJobSpec.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.core.DynamicJobSpec build() {
      com.flyteidl.core.DynamicJobSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.core.DynamicJobSpec buildPartial() {
      com.flyteidl.core.DynamicJobSpec result = new com.flyteidl.core.DynamicJobSpec(this);
      int from_bitField0_ = bitField0_;
      if (nodesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nodes_ = nodes_;
      } else {
        result.nodes_ = nodesBuilder_.build();
      }
      result.minSuccesses_ = minSuccesses_;
      if (outputsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.outputs_ = outputs_;
      } else {
        result.outputs_ = outputsBuilder_.build();
      }
      if (tasksBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          tasks_ = java.util.Collections.unmodifiableList(tasks_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tasks_ = tasks_;
      } else {
        result.tasks_ = tasksBuilder_.build();
      }
      if (subworkflowsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          subworkflows_ = java.util.Collections.unmodifiableList(subworkflows_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.subworkflows_ = subworkflows_;
      } else {
        result.subworkflows_ = subworkflowsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.core.DynamicJobSpec) {
        return mergeFrom((com.flyteidl.core.DynamicJobSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.core.DynamicJobSpec other) {
      if (other == com.flyteidl.core.DynamicJobSpec.getDefaultInstance()) return this;
      if (nodesBuilder_ == null) {
        if (!other.nodes_.isEmpty()) {
          if (nodes_.isEmpty()) {
            nodes_ = other.nodes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNodesIsMutable();
            nodes_.addAll(other.nodes_);
          }
          onChanged();
        }
      } else {
        if (!other.nodes_.isEmpty()) {
          if (nodesBuilder_.isEmpty()) {
            nodesBuilder_.dispose();
            nodesBuilder_ = null;
            nodes_ = other.nodes_;
            bitField0_ = (bitField0_ & ~0x00000001);
            nodesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodesFieldBuilder() : null;
          } else {
            nodesBuilder_.addAllMessages(other.nodes_);
          }
        }
      }
      if (other.getMinSuccesses() != 0L) {
        setMinSuccesses(other.getMinSuccesses());
      }
      if (outputsBuilder_ == null) {
        if (!other.outputs_.isEmpty()) {
          if (outputs_.isEmpty()) {
            outputs_ = other.outputs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOutputsIsMutable();
            outputs_.addAll(other.outputs_);
          }
          onChanged();
        }
      } else {
        if (!other.outputs_.isEmpty()) {
          if (outputsBuilder_.isEmpty()) {
            outputsBuilder_.dispose();
            outputsBuilder_ = null;
            outputs_ = other.outputs_;
            bitField0_ = (bitField0_ & ~0x00000002);
            outputsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOutputsFieldBuilder() : null;
          } else {
            outputsBuilder_.addAllMessages(other.outputs_);
          }
        }
      }
      if (tasksBuilder_ == null) {
        if (!other.tasks_.isEmpty()) {
          if (tasks_.isEmpty()) {
            tasks_ = other.tasks_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTasksIsMutable();
            tasks_.addAll(other.tasks_);
          }
          onChanged();
        }
      } else {
        if (!other.tasks_.isEmpty()) {
          if (tasksBuilder_.isEmpty()) {
            tasksBuilder_.dispose();
            tasksBuilder_ = null;
            tasks_ = other.tasks_;
            bitField0_ = (bitField0_ & ~0x00000004);
            tasksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTasksFieldBuilder() : null;
          } else {
            tasksBuilder_.addAllMessages(other.tasks_);
          }
        }
      }
      if (subworkflowsBuilder_ == null) {
        if (!other.subworkflows_.isEmpty()) {
          if (subworkflows_.isEmpty()) {
            subworkflows_ = other.subworkflows_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSubworkflowsIsMutable();
            subworkflows_.addAll(other.subworkflows_);
          }
          onChanged();
        }
      } else {
        if (!other.subworkflows_.isEmpty()) {
          if (subworkflowsBuilder_.isEmpty()) {
            subworkflowsBuilder_.dispose();
            subworkflowsBuilder_ = null;
            subworkflows_ = other.subworkflows_;
            bitField0_ = (bitField0_ & ~0x00000008);
            subworkflowsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSubworkflowsFieldBuilder() : null;
          } else {
            subworkflowsBuilder_.addAllMessages(other.subworkflows_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.core.DynamicJobSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.core.DynamicJobSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.flyteidl.core.Node> nodes_ =
      java.util.Collections.emptyList();
    private void ensureNodesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        nodes_ = new java.util.ArrayList<com.flyteidl.core.Node>(nodes_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.Node, com.flyteidl.core.Node.Builder, com.flyteidl.core.NodeOrBuilder> nodesBuilder_;

    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public java.util.List<com.flyteidl.core.Node> getNodesList() {
      if (nodesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodes_);
      } else {
        return nodesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public int getNodesCount() {
      if (nodesBuilder_ == null) {
        return nodes_.size();
      } else {
        return nodesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public com.flyteidl.core.Node getNodes(int index) {
      if (nodesBuilder_ == null) {
        return nodes_.get(index);
      } else {
        return nodesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder setNodes(
        int index, com.flyteidl.core.Node value) {
      if (nodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodesIsMutable();
        nodes_.set(index, value);
        onChanged();
      } else {
        nodesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder setNodes(
        int index, com.flyteidl.core.Node.Builder builderForValue) {
      if (nodesBuilder_ == null) {
        ensureNodesIsMutable();
        nodes_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder addNodes(com.flyteidl.core.Node value) {
      if (nodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodesIsMutable();
        nodes_.add(value);
        onChanged();
      } else {
        nodesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder addNodes(
        int index, com.flyteidl.core.Node value) {
      if (nodesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodesIsMutable();
        nodes_.add(index, value);
        onChanged();
      } else {
        nodesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder addNodes(
        com.flyteidl.core.Node.Builder builderForValue) {
      if (nodesBuilder_ == null) {
        ensureNodesIsMutable();
        nodes_.add(builderForValue.build());
        onChanged();
      } else {
        nodesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder addNodes(
        int index, com.flyteidl.core.Node.Builder builderForValue) {
      if (nodesBuilder_ == null) {
        ensureNodesIsMutable();
        nodes_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder addAllNodes(
        java.lang.Iterable<? extends com.flyteidl.core.Node> values) {
      if (nodesBuilder_ == null) {
        ensureNodesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodes_);
        onChanged();
      } else {
        nodesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder clearNodes() {
      if (nodesBuilder_ == null) {
        nodes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        nodesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public Builder removeNodes(int index) {
      if (nodesBuilder_ == null) {
        ensureNodesIsMutable();
        nodes_.remove(index);
        onChanged();
      } else {
        nodesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public com.flyteidl.core.Node.Builder getNodesBuilder(
        int index) {
      return getNodesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public com.flyteidl.core.NodeOrBuilder getNodesOrBuilder(
        int index) {
      if (nodesBuilder_ == null) {
        return nodes_.get(index);  } else {
        return nodesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public java.util.List<? extends com.flyteidl.core.NodeOrBuilder> 
         getNodesOrBuilderList() {
      if (nodesBuilder_ != null) {
        return nodesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodes_);
      }
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public com.flyteidl.core.Node.Builder addNodesBuilder() {
      return getNodesFieldBuilder().addBuilder(
          com.flyteidl.core.Node.getDefaultInstance());
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public com.flyteidl.core.Node.Builder addNodesBuilder(
        int index) {
      return getNodesFieldBuilder().addBuilder(
          index, com.flyteidl.core.Node.getDefaultInstance());
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    public java.util.List<com.flyteidl.core.Node.Builder> 
         getNodesBuilderList() {
      return getNodesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.Node, com.flyteidl.core.Node.Builder, com.flyteidl.core.NodeOrBuilder> 
        getNodesFieldBuilder() {
      if (nodesBuilder_ == null) {
        nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.flyteidl.core.Node, com.flyteidl.core.Node.Builder, com.flyteidl.core.NodeOrBuilder>(
                nodes_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        nodes_ = null;
      }
      return nodesBuilder_;
    }

    private long minSuccesses_ ;
    /**
     * <pre>
     * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
     * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
     * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
     * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
     * specified, is the count of nodes repeated field.
     * </pre>
     *
     * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
     * @return The minSuccesses.
     */
    @java.lang.Override
    public long getMinSuccesses() {
      return minSuccesses_;
    }
    /**
     * <pre>
     * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
     * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
     * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
     * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
     * specified, is the count of nodes repeated field.
     * </pre>
     *
     * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
     * @param value The minSuccesses to set.
     * @return This builder for chaining.
     */
    public Builder setMinSuccesses(long value) {
      
      minSuccesses_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
     * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
     * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
     * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
     * specified, is the count of nodes repeated field.
     * </pre>
     *
     * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMinSuccesses() {
      
      minSuccesses_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.flyteidl.core.Binding> outputs_ =
      java.util.Collections.emptyList();
    private void ensureOutputsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        outputs_ = new java.util.ArrayList<com.flyteidl.core.Binding>(outputs_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.Binding, com.flyteidl.core.Binding.Builder, com.flyteidl.core.BindingOrBuilder> outputsBuilder_;

    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public java.util.List<com.flyteidl.core.Binding> getOutputsList() {
      if (outputsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(outputs_);
      } else {
        return outputsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public int getOutputsCount() {
      if (outputsBuilder_ == null) {
        return outputs_.size();
      } else {
        return outputsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public com.flyteidl.core.Binding getOutputs(int index) {
      if (outputsBuilder_ == null) {
        return outputs_.get(index);
      } else {
        return outputsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder setOutputs(
        int index, com.flyteidl.core.Binding value) {
      if (outputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputsIsMutable();
        outputs_.set(index, value);
        onChanged();
      } else {
        outputsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder setOutputs(
        int index, com.flyteidl.core.Binding.Builder builderForValue) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.set(index, builderForValue.build());
        onChanged();
      } else {
        outputsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder addOutputs(com.flyteidl.core.Binding value) {
      if (outputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputsIsMutable();
        outputs_.add(value);
        onChanged();
      } else {
        outputsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder addOutputs(
        int index, com.flyteidl.core.Binding value) {
      if (outputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputsIsMutable();
        outputs_.add(index, value);
        onChanged();
      } else {
        outputsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder addOutputs(
        com.flyteidl.core.Binding.Builder builderForValue) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.add(builderForValue.build());
        onChanged();
      } else {
        outputsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder addOutputs(
        int index, com.flyteidl.core.Binding.Builder builderForValue) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.add(index, builderForValue.build());
        onChanged();
      } else {
        outputsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder addAllOutputs(
        java.lang.Iterable<? extends com.flyteidl.core.Binding> values) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputs_);
        onChanged();
      } else {
        outputsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder clearOutputs() {
      if (outputsBuilder_ == null) {
        outputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        outputsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public Builder removeOutputs(int index) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.remove(index);
        onChanged();
      } else {
        outputsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public com.flyteidl.core.Binding.Builder getOutputsBuilder(
        int index) {
      return getOutputsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public com.flyteidl.core.BindingOrBuilder getOutputsOrBuilder(
        int index) {
      if (outputsBuilder_ == null) {
        return outputs_.get(index);  } else {
        return outputsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public java.util.List<? extends com.flyteidl.core.BindingOrBuilder> 
         getOutputsOrBuilderList() {
      if (outputsBuilder_ != null) {
        return outputsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(outputs_);
      }
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public com.flyteidl.core.Binding.Builder addOutputsBuilder() {
      return getOutputsFieldBuilder().addBuilder(
          com.flyteidl.core.Binding.getDefaultInstance());
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public com.flyteidl.core.Binding.Builder addOutputsBuilder(
        int index) {
      return getOutputsFieldBuilder().addBuilder(
          index, com.flyteidl.core.Binding.getDefaultInstance());
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    public java.util.List<com.flyteidl.core.Binding.Builder> 
         getOutputsBuilderList() {
      return getOutputsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.Binding, com.flyteidl.core.Binding.Builder, com.flyteidl.core.BindingOrBuilder> 
        getOutputsFieldBuilder() {
      if (outputsBuilder_ == null) {
        outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.flyteidl.core.Binding, com.flyteidl.core.Binding.Builder, com.flyteidl.core.BindingOrBuilder>(
                outputs_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        outputs_ = null;
      }
      return outputsBuilder_;
    }

    private java.util.List<com.flyteidl.core.TaskTemplate> tasks_ =
      java.util.Collections.emptyList();
    private void ensureTasksIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        tasks_ = new java.util.ArrayList<com.flyteidl.core.TaskTemplate>(tasks_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.TaskTemplate, com.flyteidl.core.TaskTemplate.Builder, com.flyteidl.core.TaskTemplateOrBuilder> tasksBuilder_;

    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public java.util.List<com.flyteidl.core.TaskTemplate> getTasksList() {
      if (tasksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tasks_);
      } else {
        return tasksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public int getTasksCount() {
      if (tasksBuilder_ == null) {
        return tasks_.size();
      } else {
        return tasksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public com.flyteidl.core.TaskTemplate getTasks(int index) {
      if (tasksBuilder_ == null) {
        return tasks_.get(index);
      } else {
        return tasksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder setTasks(
        int index, com.flyteidl.core.TaskTemplate value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.set(index, value);
        onChanged();
      } else {
        tasksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder setTasks(
        int index, com.flyteidl.core.TaskTemplate.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.set(index, builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder addTasks(com.flyteidl.core.TaskTemplate value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.add(value);
        onChanged();
      } else {
        tasksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder addTasks(
        int index, com.flyteidl.core.TaskTemplate value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.add(index, value);
        onChanged();
      } else {
        tasksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder addTasks(
        com.flyteidl.core.TaskTemplate.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.add(builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder addTasks(
        int index, com.flyteidl.core.TaskTemplate.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.add(index, builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder addAllTasks(
        java.lang.Iterable<? extends com.flyteidl.core.TaskTemplate> values) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tasks_);
        onChanged();
      } else {
        tasksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder clearTasks() {
      if (tasksBuilder_ == null) {
        tasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        tasksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public Builder removeTasks(int index) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.remove(index);
        onChanged();
      } else {
        tasksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public com.flyteidl.core.TaskTemplate.Builder getTasksBuilder(
        int index) {
      return getTasksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public com.flyteidl.core.TaskTemplateOrBuilder getTasksOrBuilder(
        int index) {
      if (tasksBuilder_ == null) {
        return tasks_.get(index);  } else {
        return tasksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public java.util.List<? extends com.flyteidl.core.TaskTemplateOrBuilder> 
         getTasksOrBuilderList() {
      if (tasksBuilder_ != null) {
        return tasksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tasks_);
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public com.flyteidl.core.TaskTemplate.Builder addTasksBuilder() {
      return getTasksFieldBuilder().addBuilder(
          com.flyteidl.core.TaskTemplate.getDefaultInstance());
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public com.flyteidl.core.TaskTemplate.Builder addTasksBuilder(
        int index) {
      return getTasksFieldBuilder().addBuilder(
          index, com.flyteidl.core.TaskTemplate.getDefaultInstance());
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    public java.util.List<com.flyteidl.core.TaskTemplate.Builder> 
         getTasksBuilderList() {
      return getTasksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.TaskTemplate, com.flyteidl.core.TaskTemplate.Builder, com.flyteidl.core.TaskTemplateOrBuilder> 
        getTasksFieldBuilder() {
      if (tasksBuilder_ == null) {
        tasksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.flyteidl.core.TaskTemplate, com.flyteidl.core.TaskTemplate.Builder, com.flyteidl.core.TaskTemplateOrBuilder>(
                tasks_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        tasks_ = null;
      }
      return tasksBuilder_;
    }

    private java.util.List<com.flyteidl.core.WorkflowTemplate> subworkflows_ =
      java.util.Collections.emptyList();
    private void ensureSubworkflowsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        subworkflows_ = new java.util.ArrayList<com.flyteidl.core.WorkflowTemplate>(subworkflows_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.WorkflowTemplate, com.flyteidl.core.WorkflowTemplate.Builder, com.flyteidl.core.WorkflowTemplateOrBuilder> subworkflowsBuilder_;

    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public java.util.List<com.flyteidl.core.WorkflowTemplate> getSubworkflowsList() {
      if (subworkflowsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(subworkflows_);
      } else {
        return subworkflowsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public int getSubworkflowsCount() {
      if (subworkflowsBuilder_ == null) {
        return subworkflows_.size();
      } else {
        return subworkflowsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public com.flyteidl.core.WorkflowTemplate getSubworkflows(int index) {
      if (subworkflowsBuilder_ == null) {
        return subworkflows_.get(index);
      } else {
        return subworkflowsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder setSubworkflows(
        int index, com.flyteidl.core.WorkflowTemplate value) {
      if (subworkflowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubworkflowsIsMutable();
        subworkflows_.set(index, value);
        onChanged();
      } else {
        subworkflowsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder setSubworkflows(
        int index, com.flyteidl.core.WorkflowTemplate.Builder builderForValue) {
      if (subworkflowsBuilder_ == null) {
        ensureSubworkflowsIsMutable();
        subworkflows_.set(index, builderForValue.build());
        onChanged();
      } else {
        subworkflowsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder addSubworkflows(com.flyteidl.core.WorkflowTemplate value) {
      if (subworkflowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubworkflowsIsMutable();
        subworkflows_.add(value);
        onChanged();
      } else {
        subworkflowsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder addSubworkflows(
        int index, com.flyteidl.core.WorkflowTemplate value) {
      if (subworkflowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubworkflowsIsMutable();
        subworkflows_.add(index, value);
        onChanged();
      } else {
        subworkflowsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder addSubworkflows(
        com.flyteidl.core.WorkflowTemplate.Builder builderForValue) {
      if (subworkflowsBuilder_ == null) {
        ensureSubworkflowsIsMutable();
        subworkflows_.add(builderForValue.build());
        onChanged();
      } else {
        subworkflowsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder addSubworkflows(
        int index, com.flyteidl.core.WorkflowTemplate.Builder builderForValue) {
      if (subworkflowsBuilder_ == null) {
        ensureSubworkflowsIsMutable();
        subworkflows_.add(index, builderForValue.build());
        onChanged();
      } else {
        subworkflowsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder addAllSubworkflows(
        java.lang.Iterable<? extends com.flyteidl.core.WorkflowTemplate> values) {
      if (subworkflowsBuilder_ == null) {
        ensureSubworkflowsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subworkflows_);
        onChanged();
      } else {
        subworkflowsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder clearSubworkflows() {
      if (subworkflowsBuilder_ == null) {
        subworkflows_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        subworkflowsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public Builder removeSubworkflows(int index) {
      if (subworkflowsBuilder_ == null) {
        ensureSubworkflowsIsMutable();
        subworkflows_.remove(index);
        onChanged();
      } else {
        subworkflowsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public com.flyteidl.core.WorkflowTemplate.Builder getSubworkflowsBuilder(
        int index) {
      return getSubworkflowsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public com.flyteidl.core.WorkflowTemplateOrBuilder getSubworkflowsOrBuilder(
        int index) {
      if (subworkflowsBuilder_ == null) {
        return subworkflows_.get(index);  } else {
        return subworkflowsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public java.util.List<? extends com.flyteidl.core.WorkflowTemplateOrBuilder> 
         getSubworkflowsOrBuilderList() {
      if (subworkflowsBuilder_ != null) {
        return subworkflowsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(subworkflows_);
      }
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public com.flyteidl.core.WorkflowTemplate.Builder addSubworkflowsBuilder() {
      return getSubworkflowsFieldBuilder().addBuilder(
          com.flyteidl.core.WorkflowTemplate.getDefaultInstance());
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public com.flyteidl.core.WorkflowTemplate.Builder addSubworkflowsBuilder(
        int index) {
      return getSubworkflowsFieldBuilder().addBuilder(
          index, com.flyteidl.core.WorkflowTemplate.getDefaultInstance());
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    public java.util.List<com.flyteidl.core.WorkflowTemplate.Builder> 
         getSubworkflowsBuilderList() {
      return getSubworkflowsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.WorkflowTemplate, com.flyteidl.core.WorkflowTemplate.Builder, com.flyteidl.core.WorkflowTemplateOrBuilder> 
        getSubworkflowsFieldBuilder() {
      if (subworkflowsBuilder_ == null) {
        subworkflowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.flyteidl.core.WorkflowTemplate, com.flyteidl.core.WorkflowTemplate.Builder, com.flyteidl.core.WorkflowTemplateOrBuilder>(
                subworkflows_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        subworkflows_ = null;
      }
      return subworkflowsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.core.DynamicJobSpec)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.core.DynamicJobSpec)
  private static final com.flyteidl.core.DynamicJobSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.core.DynamicJobSpec();
  }

  public static com.flyteidl.core.DynamicJobSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DynamicJobSpec>
      PARSER = new com.google.protobuf.AbstractParser<DynamicJobSpec>() {
    @java.lang.Override
    public DynamicJobSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DynamicJobSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DynamicJobSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DynamicJobSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.core.DynamicJobSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

