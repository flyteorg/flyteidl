// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/common.proto

#include "flyteidl/admin/common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace admin {
constexpr NamedEntityIdentifier::NamedEntityIdentifier(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct NamedEntityIdentifierDefaultTypeInternal {
  constexpr NamedEntityIdentifierDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityIdentifierDefaultTypeInternal() {}
  union {
    NamedEntityIdentifier _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityIdentifierDefaultTypeInternal _NamedEntityIdentifier_default_instance_;
constexpr NamedEntityMetadata::NamedEntityMetadata(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(0)
{}
struct NamedEntityMetadataDefaultTypeInternal {
  constexpr NamedEntityMetadataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityMetadataDefaultTypeInternal() {}
  union {
    NamedEntityMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityMetadataDefaultTypeInternal _NamedEntityMetadata_default_instance_;
constexpr NamedEntity::NamedEntity(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(nullptr)
  , metadata_(nullptr)
  , resource_type_(0)
{}
struct NamedEntityDefaultTypeInternal {
  constexpr NamedEntityDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityDefaultTypeInternal() {}
  union {
    NamedEntity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityDefaultTypeInternal _NamedEntity_default_instance_;
constexpr Sort::Sort(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , direction_(0)
{}
struct SortDefaultTypeInternal {
  constexpr SortDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SortDefaultTypeInternal() {}
  union {
    Sort _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SortDefaultTypeInternal _Sort_default_instance_;
constexpr NamedEntityIdentifierListRequest::NamedEntityIdentifierListRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , filters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sort_by_(nullptr)
  , limit_(0u){}
struct NamedEntityIdentifierListRequestDefaultTypeInternal {
  constexpr NamedEntityIdentifierListRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityIdentifierListRequestDefaultTypeInternal() {}
  union {
    NamedEntityIdentifierListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityIdentifierListRequestDefaultTypeInternal _NamedEntityIdentifierListRequest_default_instance_;
constexpr NamedEntityListRequest::NamedEntityListRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , filters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sort_by_(nullptr)
  , resource_type_(0)

  , limit_(0u){}
struct NamedEntityListRequestDefaultTypeInternal {
  constexpr NamedEntityListRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityListRequestDefaultTypeInternal() {}
  union {
    NamedEntityListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityListRequestDefaultTypeInternal _NamedEntityListRequest_default_instance_;
constexpr NamedEntityIdentifierList::NamedEntityIdentifierList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entities_()
  , token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct NamedEntityIdentifierListDefaultTypeInternal {
  constexpr NamedEntityIdentifierListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityIdentifierListDefaultTypeInternal() {}
  union {
    NamedEntityIdentifierList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityIdentifierListDefaultTypeInternal _NamedEntityIdentifierList_default_instance_;
constexpr NamedEntityList::NamedEntityList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entities_()
  , token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct NamedEntityListDefaultTypeInternal {
  constexpr NamedEntityListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityListDefaultTypeInternal() {}
  union {
    NamedEntityList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityListDefaultTypeInternal _NamedEntityList_default_instance_;
constexpr NamedEntityGetRequest::NamedEntityGetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(nullptr)
  , resource_type_(0)
{}
struct NamedEntityGetRequestDefaultTypeInternal {
  constexpr NamedEntityGetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityGetRequestDefaultTypeInternal() {}
  union {
    NamedEntityGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityGetRequestDefaultTypeInternal _NamedEntityGetRequest_default_instance_;
constexpr NamedEntityUpdateRequest::NamedEntityUpdateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(nullptr)
  , metadata_(nullptr)
  , resource_type_(0)
{}
struct NamedEntityUpdateRequestDefaultTypeInternal {
  constexpr NamedEntityUpdateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityUpdateRequestDefaultTypeInternal() {}
  union {
    NamedEntityUpdateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityUpdateRequestDefaultTypeInternal _NamedEntityUpdateRequest_default_instance_;
constexpr NamedEntityUpdateResponse::NamedEntityUpdateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NamedEntityUpdateResponseDefaultTypeInternal {
  constexpr NamedEntityUpdateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NamedEntityUpdateResponseDefaultTypeInternal() {}
  union {
    NamedEntityUpdateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NamedEntityUpdateResponseDefaultTypeInternal _NamedEntityUpdateResponse_default_instance_;
constexpr ObjectGetRequest::ObjectGetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(nullptr){}
struct ObjectGetRequestDefaultTypeInternal {
  constexpr ObjectGetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ObjectGetRequestDefaultTypeInternal() {}
  union {
    ObjectGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ObjectGetRequestDefaultTypeInternal _ObjectGetRequest_default_instance_;
constexpr ResourceListRequest::ResourceListRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , filters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(nullptr)
  , sort_by_(nullptr)
  , limit_(0u){}
struct ResourceListRequestDefaultTypeInternal {
  constexpr ResourceListRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResourceListRequestDefaultTypeInternal() {}
  union {
    ResourceListRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResourceListRequestDefaultTypeInternal _ResourceListRequest_default_instance_;
constexpr EmailNotification::EmailNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recipients_email_(){}
struct EmailNotificationDefaultTypeInternal {
  constexpr EmailNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EmailNotificationDefaultTypeInternal() {}
  union {
    EmailNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EmailNotificationDefaultTypeInternal _EmailNotification_default_instance_;
constexpr PagerDutyNotification::PagerDutyNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recipients_email_(){}
struct PagerDutyNotificationDefaultTypeInternal {
  constexpr PagerDutyNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PagerDutyNotificationDefaultTypeInternal() {}
  union {
    PagerDutyNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PagerDutyNotificationDefaultTypeInternal _PagerDutyNotification_default_instance_;
constexpr SlackNotification::SlackNotification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recipients_email_(){}
struct SlackNotificationDefaultTypeInternal {
  constexpr SlackNotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SlackNotificationDefaultTypeInternal() {}
  union {
    SlackNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SlackNotificationDefaultTypeInternal _SlackNotification_default_instance_;
constexpr Notification::Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : phases_()
  , _oneof_case_{}{}
struct NotificationDefaultTypeInternal {
  constexpr NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NotificationDefaultTypeInternal() {}
  union {
    Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NotificationDefaultTypeInternal _Notification_default_instance_;
constexpr UrlBlob::UrlBlob(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bytes_(int64_t{0}){}
struct UrlBlobDefaultTypeInternal {
  constexpr UrlBlobDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UrlBlobDefaultTypeInternal() {}
  union {
    UrlBlob _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UrlBlobDefaultTypeInternal _UrlBlob_default_instance_;
constexpr Labels_ValuesEntry_DoNotUse::Labels_ValuesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Labels_ValuesEntry_DoNotUseDefaultTypeInternal {
  constexpr Labels_ValuesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Labels_ValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Labels_ValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Labels_ValuesEntry_DoNotUseDefaultTypeInternal _Labels_ValuesEntry_DoNotUse_default_instance_;
constexpr Labels::Labels(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct LabelsDefaultTypeInternal {
  constexpr LabelsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LabelsDefaultTypeInternal() {}
  union {
    Labels _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LabelsDefaultTypeInternal _Labels_default_instance_;
constexpr Annotations_ValuesEntry_DoNotUse::Annotations_ValuesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Annotations_ValuesEntry_DoNotUseDefaultTypeInternal {
  constexpr Annotations_ValuesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Annotations_ValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Annotations_ValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Annotations_ValuesEntry_DoNotUseDefaultTypeInternal _Annotations_ValuesEntry_DoNotUse_default_instance_;
constexpr Annotations::Annotations(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct AnnotationsDefaultTypeInternal {
  constexpr AnnotationsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AnnotationsDefaultTypeInternal() {}
  union {
    Annotations _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AnnotationsDefaultTypeInternal _Annotations_default_instance_;
constexpr AuthRole::AuthRole(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : assumable_iam_role_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , kubernetes_service_account_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AuthRoleDefaultTypeInternal {
  constexpr AuthRoleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthRoleDefaultTypeInternal() {}
  union {
    AuthRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthRoleDefaultTypeInternal _AuthRole_default_instance_;
constexpr RawOutputDataConfig::RawOutputDataConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : output_location_prefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RawOutputDataConfigDefaultTypeInternal {
  constexpr RawOutputDataConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RawOutputDataConfigDefaultTypeInternal() {}
  union {
    RawOutputDataConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RawOutputDataConfigDefaultTypeInternal _RawOutputDataConfig_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[24];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fadmin_2fcommon_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2fcommon_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fadmin_2fcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifier, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifier, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifier, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityMetadata, description_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityMetadata, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntity, resource_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntity, id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntity, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Sort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Sort, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Sort, direction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierListRequest, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierListRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierListRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierListRequest, token_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierListRequest, sort_by_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierListRequest, filters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, resource_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, token_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, sort_by_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityListRequest, filters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierList, entities_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityIdentifierList, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityList, entities_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityList, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityGetRequest, resource_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityGetRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityUpdateRequest, resource_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityUpdateRequest, id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityUpdateRequest, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::NamedEntityUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ObjectGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ObjectGetRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ResourceListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ResourceListRequest, id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ResourceListRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ResourceListRequest, token_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ResourceListRequest, filters_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ResourceListRequest, sort_by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::EmailNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::EmailNotification, recipients_email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::PagerDutyNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::PagerDutyNotification, recipients_email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::SlackNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::SlackNotification, recipients_email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Notification, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Notification, phases_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Notification, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::UrlBlob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::UrlBlob, url_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::UrlBlob, bytes_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Labels_ValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Labels_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Labels_ValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Labels_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Labels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Labels, values_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Annotations_ValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Annotations_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Annotations_ValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Annotations_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Annotations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Annotations, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::AuthRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::AuthRole, assumable_iam_role_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::AuthRole, kubernetes_service_account_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::RawOutputDataConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::RawOutputDataConfig, output_location_prefix_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::admin::NamedEntityIdentifier)},
  { 9, -1, -1, sizeof(::flyteidl::admin::NamedEntityMetadata)},
  { 17, -1, -1, sizeof(::flyteidl::admin::NamedEntity)},
  { 26, -1, -1, sizeof(::flyteidl::admin::Sort)},
  { 34, -1, -1, sizeof(::flyteidl::admin::NamedEntityIdentifierListRequest)},
  { 46, -1, -1, sizeof(::flyteidl::admin::NamedEntityListRequest)},
  { 59, -1, -1, sizeof(::flyteidl::admin::NamedEntityIdentifierList)},
  { 67, -1, -1, sizeof(::flyteidl::admin::NamedEntityList)},
  { 75, -1, -1, sizeof(::flyteidl::admin::NamedEntityGetRequest)},
  { 83, -1, -1, sizeof(::flyteidl::admin::NamedEntityUpdateRequest)},
  { 92, -1, -1, sizeof(::flyteidl::admin::NamedEntityUpdateResponse)},
  { 98, -1, -1, sizeof(::flyteidl::admin::ObjectGetRequest)},
  { 105, -1, -1, sizeof(::flyteidl::admin::ResourceListRequest)},
  { 116, -1, -1, sizeof(::flyteidl::admin::EmailNotification)},
  { 123, -1, -1, sizeof(::flyteidl::admin::PagerDutyNotification)},
  { 130, -1, -1, sizeof(::flyteidl::admin::SlackNotification)},
  { 137, -1, -1, sizeof(::flyteidl::admin::Notification)},
  { 148, -1, -1, sizeof(::flyteidl::admin::UrlBlob)},
  { 156, 164, -1, sizeof(::flyteidl::admin::Labels_ValuesEntry_DoNotUse)},
  { 166, -1, -1, sizeof(::flyteidl::admin::Labels)},
  { 173, 181, -1, sizeof(::flyteidl::admin::Annotations_ValuesEntry_DoNotUse)},
  { 183, -1, -1, sizeof(::flyteidl::admin::Annotations)},
  { 190, -1, -1, sizeof(::flyteidl::admin::AuthRole)},
  { 198, -1, -1, sizeof(::flyteidl::admin::RawOutputDataConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityIdentifier_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_Sort_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityIdentifierListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityIdentifierList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityUpdateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_NamedEntityUpdateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ObjectGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ResourceListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_EmailNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_PagerDutyNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_SlackNotification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_Notification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_UrlBlob_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_Labels_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_Labels_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_Annotations_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_Annotations_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_AuthRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_RawOutputDataConfig_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fadmin_2fcommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033flyteidl/admin/common.proto\022\016flyteidl."
  "admin\032\035flyteidl/core/execution.proto\032\036fl"
  "yteidl/core/identifier.proto\"]\n\025NamedEnt"
  "ityIdentifier\022\030\n\007project\030\001 \001(\tR\007project\022"
  "\026\n\006domain\030\002 \001(\tR\006domain\022\022\n\004name\030\003 \001(\tR\004n"
  "ame\"o\n\023NamedEntityMetadata\022 \n\013descriptio"
  "n\030\001 \001(\tR\013description\0226\n\005state\030\002 \001(\0162 .fl"
  "yteidl.admin.NamedEntityStateR\005state\"\307\001\n"
  "\013NamedEntity\022@\n\rresource_type\030\001 \001(\0162\033.fl"
  "yteidl.core.ResourceTypeR\014resourceType\0225"
  "\n\002id\030\002 \001(\0132%.flyteidl.admin.NamedEntityI"
  "dentifierR\002id\022\?\n\010metadata\030\003 \001(\0132#.flytei"
  "dl.admin.NamedEntityMetadataR\010metadata\"\202"
  "\001\n\004Sort\022\020\n\003key\030\001 \001(\tR\003key\022<\n\tdirection\030\002"
  " \001(\0162\036.flyteidl.admin.Sort.DirectionR\tdi"
  "rection\"*\n\tDirection\022\016\n\nDESCENDING\020\000\022\r\n\t"
  "ASCENDING\020\001\"\311\001\n NamedEntityIdentifierLis"
  "tRequest\022\030\n\007project\030\001 \001(\tR\007project\022\026\n\006do"
  "main\030\002 \001(\tR\006domain\022\024\n\005limit\030\003 \001(\rR\005limit"
  "\022\024\n\005token\030\004 \001(\tR\005token\022-\n\007sort_by\030\005 \001(\0132"
  "\024.flyteidl.admin.SortR\006sortBy\022\030\n\007filters"
  "\030\006 \001(\tR\007filters\"\201\002\n\026NamedEntityListReque"
  "st\022@\n\rresource_type\030\001 \001(\0162\033.flyteidl.cor"
  "e.ResourceTypeR\014resourceType\022\030\n\007project\030"
  "\002 \001(\tR\007project\022\026\n\006domain\030\003 \001(\tR\006domain\022\024"
  "\n\005limit\030\004 \001(\rR\005limit\022\024\n\005token\030\005 \001(\tR\005tok"
  "en\022-\n\007sort_by\030\006 \001(\0132\024.flyteidl.admin.Sor"
  "tR\006sortBy\022\030\n\007filters\030\007 \001(\tR\007filters\"t\n\031N"
  "amedEntityIdentifierList\022A\n\010entities\030\001 \003"
  "(\0132%.flyteidl.admin.NamedEntityIdentifie"
  "rR\010entities\022\024\n\005token\030\002 \001(\tR\005token\"`\n\017Nam"
  "edEntityList\0227\n\010entities\030\001 \003(\0132\033.flyteid"
  "l.admin.NamedEntityR\010entities\022\024\n\005token\030\002"
  " \001(\tR\005token\"\220\001\n\025NamedEntityGetRequest\022@\n"
  "\rresource_type\030\001 \001(\0162\033.flyteidl.core.Res"
  "ourceTypeR\014resourceType\0225\n\002id\030\002 \001(\0132%.fl"
  "yteidl.admin.NamedEntityIdentifierR\002id\"\324"
  "\001\n\030NamedEntityUpdateRequest\022@\n\rresource_"
  "type\030\001 \001(\0162\033.flyteidl.core.ResourceTypeR"
  "\014resourceType\0225\n\002id\030\002 \001(\0132%.flyteidl.adm"
  "in.NamedEntityIdentifierR\002id\022\?\n\010metadata"
  "\030\003 \001(\0132#.flyteidl.admin.NamedEntityMetad"
  "ataR\010metadata\"\033\n\031NamedEntityUpdateRespon"
  "se\"=\n\020ObjectGetRequest\022)\n\002id\030\001 \001(\0132\031.fly"
  "teidl.core.IdentifierR\002id\"\301\001\n\023ResourceLi"
  "stRequest\0225\n\002id\030\001 \001(\0132%.flyteidl.admin.N"
  "amedEntityIdentifierR\002id\022\024\n\005limit\030\002 \001(\rR"
  "\005limit\022\024\n\005token\030\003 \001(\tR\005token\022\030\n\007filters\030"
  "\004 \001(\tR\007filters\022-\n\007sort_by\030\005 \001(\0132\024.flytei"
  "dl.admin.SortR\006sortBy\">\n\021EmailNotificati"
  "on\022)\n\020recipients_email\030\001 \003(\tR\017recipients"
  "Email\"B\n\025PagerDutyNotification\022)\n\020recipi"
  "ents_email\030\001 \003(\tR\017recipientsEmail\">\n\021Sla"
  "ckNotification\022)\n\020recipients_email\030\001 \003(\t"
  "R\017recipientsEmail\"\224\002\n\014Notification\022>\n\006ph"
  "ases\030\001 \003(\0162&.flyteidl.core.WorkflowExecu"
  "tion.PhaseR\006phases\0229\n\005email\030\002 \001(\0132!.flyt"
  "eidl.admin.EmailNotificationH\000R\005email\022F\n"
  "\npager_duty\030\003 \001(\0132%.flyteidl.admin.Pager"
  "DutyNotificationH\000R\tpagerDuty\0229\n\005slack\030\004"
  " \001(\0132!.flyteidl.admin.SlackNotificationH"
  "\000R\005slackB\006\n\004type\"5\n\007UrlBlob\022\020\n\003url\030\001 \001(\t"
  "R\003url\022\024\n\005bytes\030\002 \001(\003R\005bytes:\002\030\001\"\177\n\006Label"
  "s\022:\n\006values\030\001 \003(\0132\".flyteidl.admin.Label"
  "s.ValuesEntryR\006values\0329\n\013ValuesEntry\022\020\n\003"
  "key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001"
  "\"\211\001\n\013Annotations\022\?\n\006values\030\001 \003(\0132\'.flyte"
  "idl.admin.Annotations.ValuesEntryR\006value"
  "s\0329\n\013ValuesEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005va"
  "lue\030\002 \001(\tR\005value:\0028\001\"z\n\010AuthRole\022,\n\022assu"
  "mable_iam_role\030\001 \001(\tR\020assumableIamRole\022<"
  "\n\032kubernetes_service_account\030\002 \001(\tR\030kube"
  "rnetesServiceAccount:\002\030\001\"K\n\023RawOutputDat"
  "aConfig\0224\n\026output_location_prefix\030\001 \001(\tR"
  "\024outputLocationPrefix*\\\n\020NamedEntityStat"
  "e\022\027\n\023NAMED_ENTITY_ACTIVE\020\000\022\031\n\025NAMED_ENTI"
  "TY_ARCHIVED\020\001\022\024\n\020SYSTEM_GENERATED\020\002B\264\001\n\022"
  "com.flyteidl.adminB\013CommonProtoH\002Z5githu"
  "b.com/flyteorg/flyteidl/gen/pb-go/flytei"
  "dl/admin\370\001\000\242\002\003FAX\252\002\016Flyteidl.Admin\312\002\016Fly"
  "teidl\\Admin\342\002\032Flyteidl\\Admin\\GPBMetadata"
  "\352\002\017Flyteidl::Adminb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_deps[2] = {
  &::descriptor_table_flyteidl_2fcore_2fexecution_2eproto,
  &::descriptor_table_flyteidl_2fcore_2fidentifier_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2fcommon_2eproto = {
  false, false, 3266, descriptor_table_protodef_flyteidl_2fadmin_2fcommon_2eproto, "flyteidl/admin/common.proto", 
  &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once, descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_deps, 2, 24,
  schemas, file_default_instances, TableStruct_flyteidl_2fadmin_2fcommon_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto, file_level_enum_descriptors_flyteidl_2fadmin_2fcommon_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2fcommon_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter() {
  return &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fadmin_2fcommon_2eproto(&descriptor_table_flyteidl_2fadmin_2fcommon_2eproto);
namespace flyteidl {
namespace admin {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Sort_Direction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_flyteidl_2fadmin_2fcommon_2eproto);
  return file_level_enum_descriptors_flyteidl_2fadmin_2fcommon_2eproto[0];
}
bool Sort_Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Sort_Direction Sort::DESCENDING;
constexpr Sort_Direction Sort::ASCENDING;
constexpr Sort_Direction Sort::Direction_MIN;
constexpr Sort_Direction Sort::Direction_MAX;
constexpr int Sort::Direction_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* NamedEntityState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_flyteidl_2fadmin_2fcommon_2eproto);
  return file_level_enum_descriptors_flyteidl_2fadmin_2fcommon_2eproto[1];
}
bool NamedEntityState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class NamedEntityIdentifier::_Internal {
 public:
};

NamedEntityIdentifier::NamedEntityIdentifier(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityIdentifier)
}
NamedEntityIdentifier::NamedEntityIdentifier(const NamedEntityIdentifier& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_project().empty()) {
    project_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityIdentifier)
}

inline void NamedEntityIdentifier::SharedCtor() {
project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NamedEntityIdentifier::~NamedEntityIdentifier() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityIdentifier)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityIdentifier::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NamedEntityIdentifier::ArenaDtor(void* object) {
  NamedEntityIdentifier* _this = reinterpret_cast< NamedEntityIdentifier* >(object);
  (void)_this;
}
void NamedEntityIdentifier::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityIdentifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityIdentifier::InternalSwap(NamedEntityIdentifier* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityIdentifier::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[0]);
}

// ===================================================================

class NamedEntityMetadata::_Internal {
 public:
};

NamedEntityMetadata::NamedEntityMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityMetadata)
}
NamedEntityMetadata::NamedEntityMetadata(const NamedEntityMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityMetadata)
}

inline void NamedEntityMetadata::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
state_ = 0;
}

NamedEntityMetadata::~NamedEntityMetadata() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityMetadata)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NamedEntityMetadata::ArenaDtor(void* object) {
  NamedEntityMetadata* _this = reinterpret_cast< NamedEntityMetadata* >(object);
  (void)_this;
}
void NamedEntityMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityMetadata::InternalSwap(NamedEntityMetadata* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityMetadata::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[1]);
}

// ===================================================================

class NamedEntity::_Internal {
 public:
  static const ::flyteidl::admin::NamedEntityIdentifier& id(const NamedEntity* msg);
  static const ::flyteidl::admin::NamedEntityMetadata& metadata(const NamedEntity* msg);
};

const ::flyteidl::admin::NamedEntityIdentifier&
NamedEntity::_Internal::id(const NamedEntity* msg) {
  return *msg->id_;
}
const ::flyteidl::admin::NamedEntityMetadata&
NamedEntity::_Internal::metadata(const NamedEntity* msg) {
  return *msg->metadata_;
}
NamedEntity::NamedEntity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntity)
}
NamedEntity::NamedEntity(const NamedEntity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_id()) {
    id_ = new ::flyteidl::admin::NamedEntityIdentifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::flyteidl::admin::NamedEntityMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntity)
}

inline void NamedEntity::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&resource_type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(resource_type_));
}

NamedEntity::~NamedEntity() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntity)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete metadata_;
}

void NamedEntity::ArenaDtor(void* object) {
  NamedEntity* _this = reinterpret_cast< NamedEntity* >(object);
  (void)_this;
}
void NamedEntity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntity::InternalSwap(NamedEntity* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntity::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[2]);
}

// ===================================================================

class Sort::_Internal {
 public:
};

Sort::Sort(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.Sort)
}
Sort::Sort(const Sort& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  direction_ = from.direction_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.Sort)
}

inline void Sort::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
direction_ = 0;
}

Sort::~Sort() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.Sort)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Sort::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Sort::ArenaDtor(void* object) {
  Sort* _this = reinterpret_cast< Sort* >(object);
  (void)_this;
}
void Sort::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Sort::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Sort::InternalSwap(Sort* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Sort::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[3]);
}

// ===================================================================

class NamedEntityIdentifierListRequest::_Internal {
 public:
  static const ::flyteidl::admin::Sort& sort_by(const NamedEntityIdentifierListRequest* msg);
};

const ::flyteidl::admin::Sort&
NamedEntityIdentifierListRequest::_Internal::sort_by(const NamedEntityIdentifierListRequest* msg) {
  return *msg->sort_by_;
}
NamedEntityIdentifierListRequest::NamedEntityIdentifierListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityIdentifierListRequest)
}
NamedEntityIdentifierListRequest::NamedEntityIdentifierListRequest(const NamedEntityIdentifierListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_project().empty()) {
    project_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  filters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filters().empty()) {
    filters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filters(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_sort_by()) {
    sort_by_ = new ::flyteidl::admin::Sort(*from.sort_by_);
  } else {
    sort_by_ = nullptr;
  }
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityIdentifierListRequest)
}

inline void NamedEntityIdentifierListRequest::SharedCtor() {
project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
filters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&sort_by_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&sort_by_)) + sizeof(limit_));
}

NamedEntityIdentifierListRequest::~NamedEntityIdentifierListRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityIdentifierListRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityIdentifierListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sort_by_;
}

void NamedEntityIdentifierListRequest::ArenaDtor(void* object) {
  NamedEntityIdentifierListRequest* _this = reinterpret_cast< NamedEntityIdentifierListRequest* >(object);
  (void)_this;
}
void NamedEntityIdentifierListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityIdentifierListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityIdentifierListRequest::InternalSwap(NamedEntityIdentifierListRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityIdentifierListRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[4]);
}

// ===================================================================

class NamedEntityListRequest::_Internal {
 public:
  static const ::flyteidl::admin::Sort& sort_by(const NamedEntityListRequest* msg);
};

const ::flyteidl::admin::Sort&
NamedEntityListRequest::_Internal::sort_by(const NamedEntityListRequest* msg) {
  return *msg->sort_by_;
}
NamedEntityListRequest::NamedEntityListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityListRequest)
}
NamedEntityListRequest::NamedEntityListRequest(const NamedEntityListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_project().empty()) {
    project_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  filters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filters().empty()) {
    filters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filters(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_sort_by()) {
    sort_by_ = new ::flyteidl::admin::Sort(*from.sort_by_);
  } else {
    sort_by_ = nullptr;
  }
  ::memcpy(&resource_type_, &from.resource_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&resource_type_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityListRequest)
}

inline void NamedEntityListRequest::SharedCtor() {
project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
filters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&sort_by_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&sort_by_)) + sizeof(limit_));
}

NamedEntityListRequest::~NamedEntityListRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityListRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sort_by_;
}

void NamedEntityListRequest::ArenaDtor(void* object) {
  NamedEntityListRequest* _this = reinterpret_cast< NamedEntityListRequest* >(object);
  (void)_this;
}
void NamedEntityListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityListRequest::InternalSwap(NamedEntityListRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityListRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[5]);
}

// ===================================================================

class NamedEntityIdentifierList::_Internal {
 public:
};

NamedEntityIdentifierList::NamedEntityIdentifierList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entities_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityIdentifierList)
}
NamedEntityIdentifierList::NamedEntityIdentifierList(const NamedEntityIdentifierList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entities_(from.entities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityIdentifierList)
}

inline void NamedEntityIdentifierList::SharedCtor() {
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NamedEntityIdentifierList::~NamedEntityIdentifierList() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityIdentifierList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityIdentifierList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NamedEntityIdentifierList::ArenaDtor(void* object) {
  NamedEntityIdentifierList* _this = reinterpret_cast< NamedEntityIdentifierList* >(object);
  (void)_this;
}
void NamedEntityIdentifierList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityIdentifierList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityIdentifierList::InternalSwap(NamedEntityIdentifierList* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityIdentifierList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[6]);
}

// ===================================================================

class NamedEntityList::_Internal {
 public:
};

NamedEntityList::NamedEntityList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  entities_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityList)
}
NamedEntityList::NamedEntityList(const NamedEntityList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entities_(from.entities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityList)
}

inline void NamedEntityList::SharedCtor() {
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

NamedEntityList::~NamedEntityList() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NamedEntityList::ArenaDtor(void* object) {
  NamedEntityList* _this = reinterpret_cast< NamedEntityList* >(object);
  (void)_this;
}
void NamedEntityList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityList::InternalSwap(NamedEntityList* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[7]);
}

// ===================================================================

class NamedEntityGetRequest::_Internal {
 public:
  static const ::flyteidl::admin::NamedEntityIdentifier& id(const NamedEntityGetRequest* msg);
};

const ::flyteidl::admin::NamedEntityIdentifier&
NamedEntityGetRequest::_Internal::id(const NamedEntityGetRequest* msg) {
  return *msg->id_;
}
NamedEntityGetRequest::NamedEntityGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityGetRequest)
}
NamedEntityGetRequest::NamedEntityGetRequest(const NamedEntityGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_id()) {
    id_ = new ::flyteidl::admin::NamedEntityIdentifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityGetRequest)
}

inline void NamedEntityGetRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&resource_type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(resource_type_));
}

NamedEntityGetRequest::~NamedEntityGetRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityGetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete id_;
}

void NamedEntityGetRequest::ArenaDtor(void* object) {
  NamedEntityGetRequest* _this = reinterpret_cast< NamedEntityGetRequest* >(object);
  (void)_this;
}
void NamedEntityGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityGetRequest::InternalSwap(NamedEntityGetRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityGetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[8]);
}

// ===================================================================

class NamedEntityUpdateRequest::_Internal {
 public:
  static const ::flyteidl::admin::NamedEntityIdentifier& id(const NamedEntityUpdateRequest* msg);
  static const ::flyteidl::admin::NamedEntityMetadata& metadata(const NamedEntityUpdateRequest* msg);
};

const ::flyteidl::admin::NamedEntityIdentifier&
NamedEntityUpdateRequest::_Internal::id(const NamedEntityUpdateRequest* msg) {
  return *msg->id_;
}
const ::flyteidl::admin::NamedEntityMetadata&
NamedEntityUpdateRequest::_Internal::metadata(const NamedEntityUpdateRequest* msg) {
  return *msg->metadata_;
}
NamedEntityUpdateRequest::NamedEntityUpdateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityUpdateRequest)
}
NamedEntityUpdateRequest::NamedEntityUpdateRequest(const NamedEntityUpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_id()) {
    id_ = new ::flyteidl::admin::NamedEntityIdentifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from._internal_has_metadata()) {
    metadata_ = new ::flyteidl::admin::NamedEntityMetadata(*from.metadata_);
  } else {
    metadata_ = nullptr;
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityUpdateRequest)
}

inline void NamedEntityUpdateRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&resource_type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(resource_type_));
}

NamedEntityUpdateRequest::~NamedEntityUpdateRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NamedEntityUpdateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NamedEntityUpdateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete metadata_;
}

void NamedEntityUpdateRequest::ArenaDtor(void* object) {
  NamedEntityUpdateRequest* _this = reinterpret_cast< NamedEntityUpdateRequest* >(object);
  (void)_this;
}
void NamedEntityUpdateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NamedEntityUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NamedEntityUpdateRequest::InternalSwap(NamedEntityUpdateRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityUpdateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[9]);
}

// ===================================================================

class NamedEntityUpdateResponse::_Internal {
 public:
};

NamedEntityUpdateResponse::NamedEntityUpdateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.NamedEntityUpdateResponse)
}
NamedEntityUpdateResponse::NamedEntityUpdateResponse(const NamedEntityUpdateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NamedEntityUpdateResponse)
}



::PROTOBUF_NAMESPACE_ID::Metadata NamedEntityUpdateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[10]);
}

// ===================================================================

class ObjectGetRequest::_Internal {
 public:
  static const ::flyteidl::core::Identifier& id(const ObjectGetRequest* msg);
};

const ::flyteidl::core::Identifier&
ObjectGetRequest::_Internal::id(const ObjectGetRequest* msg) {
  return *msg->id_;
}
void ObjectGetRequest::clear_id() {
  if (GetArenaForAllocation() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
}
ObjectGetRequest::ObjectGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ObjectGetRequest)
}
ObjectGetRequest::ObjectGetRequest(const ObjectGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_id()) {
    id_ = new ::flyteidl::core::Identifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ObjectGetRequest)
}

inline void ObjectGetRequest::SharedCtor() {
id_ = nullptr;
}

ObjectGetRequest::~ObjectGetRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ObjectGetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ObjectGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete id_;
}

void ObjectGetRequest::ArenaDtor(void* object) {
  ObjectGetRequest* _this = reinterpret_cast< ObjectGetRequest* >(object);
  (void)_this;
}
void ObjectGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ObjectGetRequest::InternalSwap(ObjectGetRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectGetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[11]);
}

// ===================================================================

class ResourceListRequest::_Internal {
 public:
  static const ::flyteidl::admin::NamedEntityIdentifier& id(const ResourceListRequest* msg);
  static const ::flyteidl::admin::Sort& sort_by(const ResourceListRequest* msg);
};

const ::flyteidl::admin::NamedEntityIdentifier&
ResourceListRequest::_Internal::id(const ResourceListRequest* msg) {
  return *msg->id_;
}
const ::flyteidl::admin::Sort&
ResourceListRequest::_Internal::sort_by(const ResourceListRequest* msg) {
  return *msg->sort_by_;
}
ResourceListRequest::ResourceListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ResourceListRequest)
}
ResourceListRequest::ResourceListRequest(const ResourceListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  filters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filters().empty()) {
    filters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filters(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_id()) {
    id_ = new ::flyteidl::admin::NamedEntityIdentifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from._internal_has_sort_by()) {
    sort_by_ = new ::flyteidl::admin::Sort(*from.sort_by_);
  } else {
    sort_by_ = nullptr;
  }
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ResourceListRequest)
}

inline void ResourceListRequest::SharedCtor() {
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
filters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filters_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&id_)) + sizeof(limit_));
}

ResourceListRequest::~ResourceListRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ResourceListRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResourceListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete sort_by_;
}

void ResourceListRequest::ArenaDtor(void* object) {
  ResourceListRequest* _this = reinterpret_cast< ResourceListRequest* >(object);
  (void)_this;
}
void ResourceListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResourceListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResourceListRequest::InternalSwap(ResourceListRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceListRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[12]);
}

// ===================================================================

class EmailNotification::_Internal {
 public:
};

EmailNotification::EmailNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  recipients_email_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.EmailNotification)
}
EmailNotification::EmailNotification(const EmailNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      recipients_email_(from.recipients_email_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.EmailNotification)
}

inline void EmailNotification::SharedCtor() {
}

EmailNotification::~EmailNotification() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.EmailNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EmailNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EmailNotification::ArenaDtor(void* object) {
  EmailNotification* _this = reinterpret_cast< EmailNotification* >(object);
  (void)_this;
}
void EmailNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmailNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EmailNotification::InternalSwap(EmailNotification* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata EmailNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[13]);
}

// ===================================================================

class PagerDutyNotification::_Internal {
 public:
};

PagerDutyNotification::PagerDutyNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  recipients_email_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.PagerDutyNotification)
}
PagerDutyNotification::PagerDutyNotification(const PagerDutyNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      recipients_email_(from.recipients_email_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.PagerDutyNotification)
}

inline void PagerDutyNotification::SharedCtor() {
}

PagerDutyNotification::~PagerDutyNotification() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.PagerDutyNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PagerDutyNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PagerDutyNotification::ArenaDtor(void* object) {
  PagerDutyNotification* _this = reinterpret_cast< PagerDutyNotification* >(object);
  (void)_this;
}
void PagerDutyNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PagerDutyNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PagerDutyNotification::InternalSwap(PagerDutyNotification* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata PagerDutyNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[14]);
}

// ===================================================================

class SlackNotification::_Internal {
 public:
};

SlackNotification::SlackNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  recipients_email_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.SlackNotification)
}
SlackNotification::SlackNotification(const SlackNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      recipients_email_(from.recipients_email_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.SlackNotification)
}

inline void SlackNotification::SharedCtor() {
}

SlackNotification::~SlackNotification() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.SlackNotification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SlackNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SlackNotification::ArenaDtor(void* object) {
  SlackNotification* _this = reinterpret_cast< SlackNotification* >(object);
  (void)_this;
}
void SlackNotification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SlackNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SlackNotification::InternalSwap(SlackNotification* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata SlackNotification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[15]);
}

// ===================================================================

class Notification::_Internal {
 public:
  static const ::flyteidl::admin::EmailNotification& email(const Notification* msg);
  static const ::flyteidl::admin::PagerDutyNotification& pager_duty(const Notification* msg);
  static const ::flyteidl::admin::SlackNotification& slack(const Notification* msg);
};

const ::flyteidl::admin::EmailNotification&
Notification::_Internal::email(const Notification* msg) {
  return *msg->type_.email_;
}
const ::flyteidl::admin::PagerDutyNotification&
Notification::_Internal::pager_duty(const Notification* msg) {
  return *msg->type_.pager_duty_;
}
const ::flyteidl::admin::SlackNotification&
Notification::_Internal::slack(const Notification* msg) {
  return *msg->type_.slack_;
}
void Notification::set_allocated_email(::flyteidl::admin::EmailNotification* email) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (email) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::flyteidl::admin::EmailNotification>::GetOwningArena(email);
    if (message_arena != submessage_arena) {
      email = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, email, submessage_arena);
    }
    set_has_email();
    type_.email_ = email;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.Notification.email)
}
void Notification::set_allocated_pager_duty(::flyteidl::admin::PagerDutyNotification* pager_duty) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (pager_duty) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::flyteidl::admin::PagerDutyNotification>::GetOwningArena(pager_duty);
    if (message_arena != submessage_arena) {
      pager_duty = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pager_duty, submessage_arena);
    }
    set_has_pager_duty();
    type_.pager_duty_ = pager_duty;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.Notification.pager_duty)
}
void Notification::set_allocated_slack(::flyteidl::admin::SlackNotification* slack) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_type();
  if (slack) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::flyteidl::admin::SlackNotification>::GetOwningArena(slack);
    if (message_arena != submessage_arena) {
      slack = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slack, submessage_arena);
    }
    set_has_slack();
    type_.slack_ = slack;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.Notification.slack)
}
Notification::Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  phases_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.Notification)
}
Notification::Notification(const Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      phases_(from.phases_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kEmail: {
      _internal_mutable_email()->::flyteidl::admin::EmailNotification::MergeFrom(from._internal_email());
      break;
    }
    case kPagerDuty: {
      _internal_mutable_pager_duty()->::flyteidl::admin::PagerDutyNotification::MergeFrom(from._internal_pager_duty());
      break;
    }
    case kSlack: {
      _internal_mutable_slack()->::flyteidl::admin::SlackNotification::MergeFrom(from._internal_slack());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.Notification)
}

inline void Notification::SharedCtor() {
clear_has_type();
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.Notification)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_type()) {
    clear_type();
  }
}

void Notification::ArenaDtor(void* object) {
  Notification* _this = reinterpret_cast< Notification* >(object);
  (void)_this;
}
void Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Notification::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.admin.Notification)
  switch (type_case()) {
    case kEmail: {
      if (GetArenaForAllocation() == nullptr) {
        delete type_.email_;
      }
      break;
    }
    case kPagerDuty: {
      if (GetArenaForAllocation() == nullptr) {
        delete type_.pager_duty_;
      }
      break;
    }
    case kSlack: {
      if (GetArenaForAllocation() == nullptr) {
        delete type_.slack_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Notification::InternalSwap(Notification* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Notification::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[16]);
}

// ===================================================================

class UrlBlob::_Internal {
 public:
};

UrlBlob::UrlBlob(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.UrlBlob)
}
UrlBlob::UrlBlob(const UrlBlob& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArenaForAllocation());
  }
  bytes_ = from.bytes_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.UrlBlob)
}

inline void UrlBlob::SharedCtor() {
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
bytes_ = int64_t{0};
}

UrlBlob::~UrlBlob() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.UrlBlob)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UrlBlob::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UrlBlob::ArenaDtor(void* object) {
  UrlBlob* _this = reinterpret_cast< UrlBlob* >(object);
  (void)_this;
}
void UrlBlob::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UrlBlob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UrlBlob::InternalSwap(UrlBlob* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata UrlBlob::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[17]);
}

// ===================================================================

Labels_ValuesEntry_DoNotUse::Labels_ValuesEntry_DoNotUse() {}
Labels_ValuesEntry_DoNotUse::Labels_ValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Labels_ValuesEntry_DoNotUse::MergeFrom(const Labels_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Labels_ValuesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[18]);
}

// ===================================================================

class Labels::_Internal {
 public:
};

Labels::Labels(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.Labels)
}
Labels::Labels(const Labels& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.Labels)
}

inline void Labels::SharedCtor() {
}

Labels::~Labels() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.Labels)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Labels::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Labels::ArenaDtor(void* object) {
  Labels* _this = reinterpret_cast< Labels* >(object);
  (void)_this;
  _this->values_. ~MapField();
}
inline void Labels::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Labels::ArenaDtor);
  }
}
void Labels::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Labels::InternalSwap(Labels* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Labels::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[19]);
}

// ===================================================================

Annotations_ValuesEntry_DoNotUse::Annotations_ValuesEntry_DoNotUse() {}
Annotations_ValuesEntry_DoNotUse::Annotations_ValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Annotations_ValuesEntry_DoNotUse::MergeFrom(const Annotations_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Annotations_ValuesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[20]);
}

// ===================================================================

class Annotations::_Internal {
 public:
};

Annotations::Annotations(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.Annotations)
}
Annotations::Annotations(const Annotations& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.Annotations)
}

inline void Annotations::SharedCtor() {
}

Annotations::~Annotations() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.Annotations)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Annotations::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Annotations::ArenaDtor(void* object) {
  Annotations* _this = reinterpret_cast< Annotations* >(object);
  (void)_this;
  _this->values_. ~MapField();
}
inline void Annotations::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Annotations::ArenaDtor);
  }
}
void Annotations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Annotations::InternalSwap(Annotations* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Annotations::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[21]);
}

// ===================================================================

class AuthRole::_Internal {
 public:
};

AuthRole::AuthRole(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.AuthRole)
}
AuthRole::AuthRole(const AuthRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  assumable_iam_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    assumable_iam_role_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_assumable_iam_role().empty()) {
    assumable_iam_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_assumable_iam_role(), 
      GetArenaForAllocation());
  }
  kubernetes_service_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    kubernetes_service_account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kubernetes_service_account().empty()) {
    kubernetes_service_account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kubernetes_service_account(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.AuthRole)
}

inline void AuthRole::SharedCtor() {
assumable_iam_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  assumable_iam_role_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
kubernetes_service_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  kubernetes_service_account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthRole::~AuthRole() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.AuthRole)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AuthRole::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  assumable_iam_role_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kubernetes_service_account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthRole::ArenaDtor(void* object) {
  AuthRole* _this = reinterpret_cast< AuthRole* >(object);
  (void)_this;
}
void AuthRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthRole::InternalSwap(AuthRole* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata AuthRole::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[22]);
}

// ===================================================================

class RawOutputDataConfig::_Internal {
 public:
};

RawOutputDataConfig::RawOutputDataConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.RawOutputDataConfig)
}
RawOutputDataConfig::RawOutputDataConfig(const RawOutputDataConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_location_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    output_location_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_output_location_prefix().empty()) {
    output_location_prefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_output_location_prefix(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.RawOutputDataConfig)
}

inline void RawOutputDataConfig::SharedCtor() {
output_location_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  output_location_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RawOutputDataConfig::~RawOutputDataConfig() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.RawOutputDataConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RawOutputDataConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  output_location_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RawOutputDataConfig::ArenaDtor(void* object) {
  RawOutputDataConfig* _this = reinterpret_cast< RawOutputDataConfig* >(object);
  (void)_this;
}
void RawOutputDataConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RawOutputDataConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RawOutputDataConfig::InternalSwap(RawOutputDataConfig* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata RawOutputDataConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fcommon_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fcommon_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityIdentifier* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityIdentifier >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityIdentifier >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityMetadata* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntity* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntity >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Sort* Arena::CreateMaybeMessage< ::flyteidl::admin::Sort >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::Sort >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityIdentifierListRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityIdentifierListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityIdentifierListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityListRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityIdentifierList* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityIdentifierList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityIdentifierList >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityList* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityList >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityGetRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityUpdateRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityUpdateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::NamedEntityUpdateResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::NamedEntityUpdateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::NamedEntityUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ObjectGetRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::ObjectGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ObjectGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ResourceListRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::ResourceListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ResourceListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::EmailNotification* Arena::CreateMaybeMessage< ::flyteidl::admin::EmailNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::EmailNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::PagerDutyNotification* Arena::CreateMaybeMessage< ::flyteidl::admin::PagerDutyNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::PagerDutyNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::SlackNotification* Arena::CreateMaybeMessage< ::flyteidl::admin::SlackNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::SlackNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Notification* Arena::CreateMaybeMessage< ::flyteidl::admin::Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::UrlBlob* Arena::CreateMaybeMessage< ::flyteidl::admin::UrlBlob >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::UrlBlob >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Labels_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::admin::Labels_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::Labels_ValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Labels* Arena::CreateMaybeMessage< ::flyteidl::admin::Labels >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::Labels >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Annotations_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::admin::Annotations_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::Annotations_ValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Annotations* Arena::CreateMaybeMessage< ::flyteidl::admin::Annotations >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::Annotations >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::AuthRole* Arena::CreateMaybeMessage< ::flyteidl::admin::AuthRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::AuthRole >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::RawOutputDataConfig* Arena::CreateMaybeMessage< ::flyteidl::admin::RawOutputDataConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::RawOutputDataConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
