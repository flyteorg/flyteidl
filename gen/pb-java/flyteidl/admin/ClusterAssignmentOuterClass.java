// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/cluster_assignment.proto

package flyteidl.admin;

public final class ClusterAssignmentOuterClass {
  private ClusterAssignmentOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ClusterAssignmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.ClusterAssignment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flyteidl.admin.Affinity affinity = 1;</code>
     */
    boolean hasAffinity();
    /**
     * <code>.flyteidl.admin.Affinity affinity = 1;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.Affinity getAffinity();
    /**
     * <code>.flyteidl.admin.Affinity affinity = 1;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.AffinityOrBuilder getAffinityOrBuilder();

    /**
     * <code>.flyteidl.admin.Toleration toleration = 2;</code>
     */
    boolean hasToleration();
    /**
     * <code>.flyteidl.admin.Toleration toleration = 2;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.Toleration getToleration();
    /**
     * <code>.flyteidl.admin.Toleration toleration = 2;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.TolerationOrBuilder getTolerationOrBuilder();
  }
  /**
   * <pre>
   * Encapsulates specifications for routing an execution onto a specific cluster.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.ClusterAssignment}
   */
  public  static final class ClusterAssignment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.ClusterAssignment)
      ClusterAssignmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClusterAssignment.newBuilder() to construct.
    private ClusterAssignment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClusterAssignment() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterAssignment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder subBuilder = null;
              if (affinity_ != null) {
                subBuilder = affinity_.toBuilder();
              }
              affinity_ = input.readMessage(flyteidl.admin.ClusterAssignmentOuterClass.Affinity.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(affinity_);
                affinity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder subBuilder = null;
              if (toleration_ != null) {
                subBuilder = toleration_.toBuilder();
              }
              toleration_ = input.readMessage(flyteidl.admin.ClusterAssignmentOuterClass.Toleration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toleration_);
                toleration_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_ClusterAssignment_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_ClusterAssignment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment.class, flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment.Builder.class);
    }

    public static final int AFFINITY_FIELD_NUMBER = 1;
    private flyteidl.admin.ClusterAssignmentOuterClass.Affinity affinity_;
    /**
     * <code>.flyteidl.admin.Affinity affinity = 1;</code>
     */
    public boolean hasAffinity() {
      return affinity_ != null;
    }
    /**
     * <code>.flyteidl.admin.Affinity affinity = 1;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.Affinity getAffinity() {
      return affinity_ == null ? flyteidl.admin.ClusterAssignmentOuterClass.Affinity.getDefaultInstance() : affinity_;
    }
    /**
     * <code>.flyteidl.admin.Affinity affinity = 1;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.AffinityOrBuilder getAffinityOrBuilder() {
      return getAffinity();
    }

    public static final int TOLERATION_FIELD_NUMBER = 2;
    private flyteidl.admin.ClusterAssignmentOuterClass.Toleration toleration_;
    /**
     * <code>.flyteidl.admin.Toleration toleration = 2;</code>
     */
    public boolean hasToleration() {
      return toleration_ != null;
    }
    /**
     * <code>.flyteidl.admin.Toleration toleration = 2;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.Toleration getToleration() {
      return toleration_ == null ? flyteidl.admin.ClusterAssignmentOuterClass.Toleration.getDefaultInstance() : toleration_;
    }
    /**
     * <code>.flyteidl.admin.Toleration toleration = 2;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.TolerationOrBuilder getTolerationOrBuilder() {
      return getToleration();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (affinity_ != null) {
        output.writeMessage(1, getAffinity());
      }
      if (toleration_ != null) {
        output.writeMessage(2, getToleration());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (affinity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAffinity());
      }
      if (toleration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToleration());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment)) {
        return super.equals(obj);
      }
      flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment other = (flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment) obj;

      if (hasAffinity() != other.hasAffinity()) return false;
      if (hasAffinity()) {
        if (!getAffinity()
            .equals(other.getAffinity())) return false;
      }
      if (hasToleration() != other.hasToleration()) return false;
      if (hasToleration()) {
        if (!getToleration()
            .equals(other.getToleration())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAffinity()) {
        hash = (37 * hash) + AFFINITY_FIELD_NUMBER;
        hash = (53 * hash) + getAffinity().hashCode();
      }
      if (hasToleration()) {
        hash = (37 * hash) + TOLERATION_FIELD_NUMBER;
        hash = (53 * hash) + getToleration().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Encapsulates specifications for routing an execution onto a specific cluster.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.ClusterAssignment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.ClusterAssignment)
        flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_ClusterAssignment_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_ClusterAssignment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment.class, flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment.Builder.class);
      }

      // Construct using flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (affinityBuilder_ == null) {
          affinity_ = null;
        } else {
          affinity_ = null;
          affinityBuilder_ = null;
        }
        if (tolerationBuilder_ == null) {
          toleration_ = null;
        } else {
          toleration_ = null;
          tolerationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_ClusterAssignment_descriptor;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment getDefaultInstanceForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment build() {
        flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment buildPartial() {
        flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment result = new flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment(this);
        if (affinityBuilder_ == null) {
          result.affinity_ = affinity_;
        } else {
          result.affinity_ = affinityBuilder_.build();
        }
        if (tolerationBuilder_ == null) {
          result.toleration_ = toleration_;
        } else {
          result.toleration_ = tolerationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment) {
          return mergeFrom((flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment other) {
        if (other == flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment.getDefaultInstance()) return this;
        if (other.hasAffinity()) {
          mergeAffinity(other.getAffinity());
        }
        if (other.hasToleration()) {
          mergeToleration(other.getToleration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private flyteidl.admin.ClusterAssignmentOuterClass.Affinity affinity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Affinity, flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder, flyteidl.admin.ClusterAssignmentOuterClass.AffinityOrBuilder> affinityBuilder_;
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public boolean hasAffinity() {
        return affinityBuilder_ != null || affinity_ != null;
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Affinity getAffinity() {
        if (affinityBuilder_ == null) {
          return affinity_ == null ? flyteidl.admin.ClusterAssignmentOuterClass.Affinity.getDefaultInstance() : affinity_;
        } else {
          return affinityBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public Builder setAffinity(flyteidl.admin.ClusterAssignmentOuterClass.Affinity value) {
        if (affinityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          affinity_ = value;
          onChanged();
        } else {
          affinityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public Builder setAffinity(
          flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder builderForValue) {
        if (affinityBuilder_ == null) {
          affinity_ = builderForValue.build();
          onChanged();
        } else {
          affinityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public Builder mergeAffinity(flyteidl.admin.ClusterAssignmentOuterClass.Affinity value) {
        if (affinityBuilder_ == null) {
          if (affinity_ != null) {
            affinity_ =
              flyteidl.admin.ClusterAssignmentOuterClass.Affinity.newBuilder(affinity_).mergeFrom(value).buildPartial();
          } else {
            affinity_ = value;
          }
          onChanged();
        } else {
          affinityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public Builder clearAffinity() {
        if (affinityBuilder_ == null) {
          affinity_ = null;
          onChanged();
        } else {
          affinity_ = null;
          affinityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder getAffinityBuilder() {
        
        onChanged();
        return getAffinityFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.AffinityOrBuilder getAffinityOrBuilder() {
        if (affinityBuilder_ != null) {
          return affinityBuilder_.getMessageOrBuilder();
        } else {
          return affinity_ == null ?
              flyteidl.admin.ClusterAssignmentOuterClass.Affinity.getDefaultInstance() : affinity_;
        }
      }
      /**
       * <code>.flyteidl.admin.Affinity affinity = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Affinity, flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder, flyteidl.admin.ClusterAssignmentOuterClass.AffinityOrBuilder> 
          getAffinityFieldBuilder() {
        if (affinityBuilder_ == null) {
          affinityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.admin.ClusterAssignmentOuterClass.Affinity, flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder, flyteidl.admin.ClusterAssignmentOuterClass.AffinityOrBuilder>(
                  getAffinity(),
                  getParentForChildren(),
                  isClean());
          affinity_ = null;
        }
        return affinityBuilder_;
      }

      private flyteidl.admin.ClusterAssignmentOuterClass.Toleration toleration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Toleration, flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder, flyteidl.admin.ClusterAssignmentOuterClass.TolerationOrBuilder> tolerationBuilder_;
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public boolean hasToleration() {
        return tolerationBuilder_ != null || toleration_ != null;
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Toleration getToleration() {
        if (tolerationBuilder_ == null) {
          return toleration_ == null ? flyteidl.admin.ClusterAssignmentOuterClass.Toleration.getDefaultInstance() : toleration_;
        } else {
          return tolerationBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public Builder setToleration(flyteidl.admin.ClusterAssignmentOuterClass.Toleration value) {
        if (tolerationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toleration_ = value;
          onChanged();
        } else {
          tolerationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public Builder setToleration(
          flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder builderForValue) {
        if (tolerationBuilder_ == null) {
          toleration_ = builderForValue.build();
          onChanged();
        } else {
          tolerationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public Builder mergeToleration(flyteidl.admin.ClusterAssignmentOuterClass.Toleration value) {
        if (tolerationBuilder_ == null) {
          if (toleration_ != null) {
            toleration_ =
              flyteidl.admin.ClusterAssignmentOuterClass.Toleration.newBuilder(toleration_).mergeFrom(value).buildPartial();
          } else {
            toleration_ = value;
          }
          onChanged();
        } else {
          tolerationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public Builder clearToleration() {
        if (tolerationBuilder_ == null) {
          toleration_ = null;
          onChanged();
        } else {
          toleration_ = null;
          tolerationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder getTolerationBuilder() {
        
        onChanged();
        return getTolerationFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.TolerationOrBuilder getTolerationOrBuilder() {
        if (tolerationBuilder_ != null) {
          return tolerationBuilder_.getMessageOrBuilder();
        } else {
          return toleration_ == null ?
              flyteidl.admin.ClusterAssignmentOuterClass.Toleration.getDefaultInstance() : toleration_;
        }
      }
      /**
       * <code>.flyteidl.admin.Toleration toleration = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Toleration, flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder, flyteidl.admin.ClusterAssignmentOuterClass.TolerationOrBuilder> 
          getTolerationFieldBuilder() {
        if (tolerationBuilder_ == null) {
          tolerationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.admin.ClusterAssignmentOuterClass.Toleration, flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder, flyteidl.admin.ClusterAssignmentOuterClass.TolerationOrBuilder>(
                  getToleration(),
                  getParentForChildren(),
                  isClean());
          toleration_ = null;
        }
        return tolerationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.ClusterAssignment)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.ClusterAssignment)
    private static final flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment();
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClusterAssignment>
        PARSER = new com.google.protobuf.AbstractParser<ClusterAssignment>() {
      @java.lang.Override
      public ClusterAssignment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterAssignment(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClusterAssignment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterAssignment> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.admin.ClusterAssignmentOuterClass.ClusterAssignment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AffinityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.Affinity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> 
        getSelectorsList();
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.Selector getSelectors(int index);
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    int getSelectorsCount();
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    java.util.List<? extends flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
        getSelectorsOrBuilderList();
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder getSelectorsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Defines a set of constraints used to select eligible objects based on labels they possess.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.Affinity}
   */
  public  static final class Affinity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.Affinity)
      AffinityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Affinity.newBuilder() to construct.
    private Affinity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Affinity() {
      selectors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Affinity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                selectors_ = new java.util.ArrayList<flyteidl.admin.ClusterAssignmentOuterClass.Selector>();
                mutable_bitField0_ |= 0x00000001;
              }
              selectors_.add(
                  input.readMessage(flyteidl.admin.ClusterAssignmentOuterClass.Selector.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          selectors_ = java.util.Collections.unmodifiableList(selectors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Affinity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Affinity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.admin.ClusterAssignmentOuterClass.Affinity.class, flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder.class);
    }

    public static final int SELECTORS_FIELD_NUMBER = 1;
    private java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> selectors_;
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> getSelectorsList() {
      return selectors_;
    }
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public java.util.List<? extends flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
        getSelectorsOrBuilderList() {
      return selectors_;
    }
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public int getSelectorsCount() {
      return selectors_.size();
    }
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.Selector getSelectors(int index) {
      return selectors_.get(index);
    }
    /**
     * <pre>
     * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder getSelectorsOrBuilder(
        int index) {
      return selectors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < selectors_.size(); i++) {
        output.writeMessage(1, selectors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < selectors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, selectors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.admin.ClusterAssignmentOuterClass.Affinity)) {
        return super.equals(obj);
      }
      flyteidl.admin.ClusterAssignmentOuterClass.Affinity other = (flyteidl.admin.ClusterAssignmentOuterClass.Affinity) obj;

      if (!getSelectorsList()
          .equals(other.getSelectorsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSelectorsCount() > 0) {
        hash = (37 * hash) + SELECTORS_FIELD_NUMBER;
        hash = (53 * hash) + getSelectorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.admin.ClusterAssignmentOuterClass.Affinity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a set of constraints used to select eligible objects based on labels they possess.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.Affinity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.Affinity)
        flyteidl.admin.ClusterAssignmentOuterClass.AffinityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Affinity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Affinity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.admin.ClusterAssignmentOuterClass.Affinity.class, flyteidl.admin.ClusterAssignmentOuterClass.Affinity.Builder.class);
      }

      // Construct using flyteidl.admin.ClusterAssignmentOuterClass.Affinity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSelectorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (selectorsBuilder_ == null) {
          selectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          selectorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Affinity_descriptor;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Affinity getDefaultInstanceForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.Affinity.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Affinity build() {
        flyteidl.admin.ClusterAssignmentOuterClass.Affinity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Affinity buildPartial() {
        flyteidl.admin.ClusterAssignmentOuterClass.Affinity result = new flyteidl.admin.ClusterAssignmentOuterClass.Affinity(this);
        int from_bitField0_ = bitField0_;
        if (selectorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            selectors_ = java.util.Collections.unmodifiableList(selectors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.selectors_ = selectors_;
        } else {
          result.selectors_ = selectorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.admin.ClusterAssignmentOuterClass.Affinity) {
          return mergeFrom((flyteidl.admin.ClusterAssignmentOuterClass.Affinity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.admin.ClusterAssignmentOuterClass.Affinity other) {
        if (other == flyteidl.admin.ClusterAssignmentOuterClass.Affinity.getDefaultInstance()) return this;
        if (selectorsBuilder_ == null) {
          if (!other.selectors_.isEmpty()) {
            if (selectors_.isEmpty()) {
              selectors_ = other.selectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSelectorsIsMutable();
              selectors_.addAll(other.selectors_);
            }
            onChanged();
          }
        } else {
          if (!other.selectors_.isEmpty()) {
            if (selectorsBuilder_.isEmpty()) {
              selectorsBuilder_.dispose();
              selectorsBuilder_ = null;
              selectors_ = other.selectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              selectorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSelectorsFieldBuilder() : null;
            } else {
              selectorsBuilder_.addAllMessages(other.selectors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.admin.ClusterAssignmentOuterClass.Affinity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.admin.ClusterAssignmentOuterClass.Affinity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> selectors_ =
        java.util.Collections.emptyList();
      private void ensureSelectorsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          selectors_ = new java.util.ArrayList<flyteidl.admin.ClusterAssignmentOuterClass.Selector>(selectors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Selector, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder, flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> selectorsBuilder_;

      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> getSelectorsList() {
        if (selectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(selectors_);
        } else {
          return selectorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public int getSelectorsCount() {
        if (selectorsBuilder_ == null) {
          return selectors_.size();
        } else {
          return selectorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector getSelectors(int index) {
        if (selectorsBuilder_ == null) {
          return selectors_.get(index);
        } else {
          return selectorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder setSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.set(index, value);
          onChanged();
        } else {
          selectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder setSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(flyteidl.admin.ClusterAssignmentOuterClass.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.add(value);
          onChanged();
        } else {
          selectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.add(index, value);
          onChanged();
        } else {
          selectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.add(builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addAllSelectors(
          java.lang.Iterable<? extends flyteidl.admin.ClusterAssignmentOuterClass.Selector> values) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, selectors_);
          onChanged();
        } else {
          selectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder clearSelectors() {
        if (selectorsBuilder_ == null) {
          selectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          selectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder removeSelectors(int index) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.remove(index);
          onChanged();
        } else {
          selectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder getSelectorsBuilder(
          int index) {
        return getSelectorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder getSelectorsOrBuilder(
          int index) {
        if (selectorsBuilder_ == null) {
          return selectors_.get(index);  } else {
          return selectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public java.util.List<? extends flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
           getSelectorsOrBuilderList() {
        if (selectorsBuilder_ != null) {
          return selectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(selectors_);
        }
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder addSelectorsBuilder() {
        return getSelectorsFieldBuilder().addBuilder(
            flyteidl.admin.ClusterAssignmentOuterClass.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder addSelectorsBuilder(
          int index) {
        return getSelectorsFieldBuilder().addBuilder(
            index, flyteidl.admin.ClusterAssignmentOuterClass.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       * Multiples selectors are 'and'-ed together to produce the list of matching, eligible objects.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder> 
           getSelectorsBuilderList() {
        return getSelectorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Selector, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder, flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
          getSelectorsFieldBuilder() {
        if (selectorsBuilder_ == null) {
          selectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              flyteidl.admin.ClusterAssignmentOuterClass.Selector, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder, flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder>(
                  selectors_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          selectors_ = null;
        }
        return selectorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.Affinity)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.Affinity)
    private static final flyteidl.admin.ClusterAssignmentOuterClass.Affinity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.admin.ClusterAssignmentOuterClass.Affinity();
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.Affinity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Affinity>
        PARSER = new com.google.protobuf.AbstractParser<Affinity>() {
      @java.lang.Override
      public Affinity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Affinity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Affinity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Affinity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.admin.ClusterAssignmentOuterClass.Affinity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TolerationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.Toleration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> 
        getSelectorsList();
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.Selector getSelectors(int index);
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    int getSelectorsCount();
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    java.util.List<? extends flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
        getSelectorsOrBuilderList();
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder getSelectorsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Defines a set of specific label selectors that the execution can tolerate on a cluster.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.Toleration}
   */
  public  static final class Toleration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.Toleration)
      TolerationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Toleration.newBuilder() to construct.
    private Toleration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Toleration() {
      selectors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Toleration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                selectors_ = new java.util.ArrayList<flyteidl.admin.ClusterAssignmentOuterClass.Selector>();
                mutable_bitField0_ |= 0x00000001;
              }
              selectors_.add(
                  input.readMessage(flyteidl.admin.ClusterAssignmentOuterClass.Selector.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          selectors_ = java.util.Collections.unmodifiableList(selectors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Toleration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Toleration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.admin.ClusterAssignmentOuterClass.Toleration.class, flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder.class);
    }

    public static final int SELECTORS_FIELD_NUMBER = 1;
    private java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> selectors_;
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> getSelectorsList() {
      return selectors_;
    }
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public java.util.List<? extends flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
        getSelectorsOrBuilderList() {
      return selectors_;
    }
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public int getSelectorsCount() {
      return selectors_.size();
    }
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.Selector getSelectors(int index) {
      return selectors_.get(index);
    }
    /**
     * <pre>
     * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
     * </pre>
     *
     * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder getSelectorsOrBuilder(
        int index) {
      return selectors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < selectors_.size(); i++) {
        output.writeMessage(1, selectors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < selectors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, selectors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.admin.ClusterAssignmentOuterClass.Toleration)) {
        return super.equals(obj);
      }
      flyteidl.admin.ClusterAssignmentOuterClass.Toleration other = (flyteidl.admin.ClusterAssignmentOuterClass.Toleration) obj;

      if (!getSelectorsList()
          .equals(other.getSelectorsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSelectorsCount() > 0) {
        hash = (37 * hash) + SELECTORS_FIELD_NUMBER;
        hash = (53 * hash) + getSelectorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.admin.ClusterAssignmentOuterClass.Toleration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a set of specific label selectors that the execution can tolerate on a cluster.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.Toleration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.Toleration)
        flyteidl.admin.ClusterAssignmentOuterClass.TolerationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Toleration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Toleration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.admin.ClusterAssignmentOuterClass.Toleration.class, flyteidl.admin.ClusterAssignmentOuterClass.Toleration.Builder.class);
      }

      // Construct using flyteidl.admin.ClusterAssignmentOuterClass.Toleration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSelectorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (selectorsBuilder_ == null) {
          selectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          selectorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Toleration_descriptor;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Toleration getDefaultInstanceForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.Toleration.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Toleration build() {
        flyteidl.admin.ClusterAssignmentOuterClass.Toleration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Toleration buildPartial() {
        flyteidl.admin.ClusterAssignmentOuterClass.Toleration result = new flyteidl.admin.ClusterAssignmentOuterClass.Toleration(this);
        int from_bitField0_ = bitField0_;
        if (selectorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            selectors_ = java.util.Collections.unmodifiableList(selectors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.selectors_ = selectors_;
        } else {
          result.selectors_ = selectorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.admin.ClusterAssignmentOuterClass.Toleration) {
          return mergeFrom((flyteidl.admin.ClusterAssignmentOuterClass.Toleration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.admin.ClusterAssignmentOuterClass.Toleration other) {
        if (other == flyteidl.admin.ClusterAssignmentOuterClass.Toleration.getDefaultInstance()) return this;
        if (selectorsBuilder_ == null) {
          if (!other.selectors_.isEmpty()) {
            if (selectors_.isEmpty()) {
              selectors_ = other.selectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSelectorsIsMutable();
              selectors_.addAll(other.selectors_);
            }
            onChanged();
          }
        } else {
          if (!other.selectors_.isEmpty()) {
            if (selectorsBuilder_.isEmpty()) {
              selectorsBuilder_.dispose();
              selectorsBuilder_ = null;
              selectors_ = other.selectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              selectorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSelectorsFieldBuilder() : null;
            } else {
              selectorsBuilder_.addAllMessages(other.selectors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.admin.ClusterAssignmentOuterClass.Toleration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.admin.ClusterAssignmentOuterClass.Toleration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> selectors_ =
        java.util.Collections.emptyList();
      private void ensureSelectorsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          selectors_ = new java.util.ArrayList<flyteidl.admin.ClusterAssignmentOuterClass.Selector>(selectors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Selector, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder, flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> selectorsBuilder_;

      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector> getSelectorsList() {
        if (selectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(selectors_);
        } else {
          return selectorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public int getSelectorsCount() {
        if (selectorsBuilder_ == null) {
          return selectors_.size();
        } else {
          return selectorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector getSelectors(int index) {
        if (selectorsBuilder_ == null) {
          return selectors_.get(index);
        } else {
          return selectorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder setSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.set(index, value);
          onChanged();
        } else {
          selectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder setSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(flyteidl.admin.ClusterAssignmentOuterClass.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.add(value);
          onChanged();
        } else {
          selectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector value) {
        if (selectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectorsIsMutable();
          selectors_.add(index, value);
          onChanged();
        } else {
          selectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.add(builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addSelectors(
          int index, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder builderForValue) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          selectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder addAllSelectors(
          java.lang.Iterable<? extends flyteidl.admin.ClusterAssignmentOuterClass.Selector> values) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, selectors_);
          onChanged();
        } else {
          selectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder clearSelectors() {
        if (selectorsBuilder_ == null) {
          selectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          selectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public Builder removeSelectors(int index) {
        if (selectorsBuilder_ == null) {
          ensureSelectorsIsMutable();
          selectors_.remove(index);
          onChanged();
        } else {
          selectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder getSelectorsBuilder(
          int index) {
        return getSelectorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder getSelectorsOrBuilder(
          int index) {
        if (selectorsBuilder_ == null) {
          return selectors_.get(index);  } else {
          return selectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public java.util.List<? extends flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
           getSelectorsOrBuilderList() {
        if (selectorsBuilder_ != null) {
          return selectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(selectors_);
        }
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder addSelectorsBuilder() {
        return getSelectorsFieldBuilder().addBuilder(
            flyteidl.admin.ClusterAssignmentOuterClass.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder addSelectorsBuilder(
          int index) {
        return getSelectorsFieldBuilder().addBuilder(
            index, flyteidl.admin.ClusterAssignmentOuterClass.Selector.getDefaultInstance());
      }
      /**
       * <pre>
       * A toleration selector is similar to that of an affinity but the only valid operators are EQUALS AND EXISTS.
       * </pre>
       *
       * <code>repeated .flyteidl.admin.Selector selectors = 1;</code>
       */
      public java.util.List<flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder> 
           getSelectorsBuilderList() {
        return getSelectorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          flyteidl.admin.ClusterAssignmentOuterClass.Selector, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder, flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder> 
          getSelectorsFieldBuilder() {
        if (selectorsBuilder_ == null) {
          selectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              flyteidl.admin.ClusterAssignmentOuterClass.Selector, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder, flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder>(
                  selectors_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          selectors_ = null;
        }
        return selectorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.Toleration)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.Toleration)
    private static final flyteidl.admin.ClusterAssignmentOuterClass.Toleration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.admin.ClusterAssignmentOuterClass.Toleration();
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.Toleration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Toleration>
        PARSER = new com.google.protobuf.AbstractParser<Toleration>() {
      @java.lang.Override
      public Toleration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Toleration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Toleration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Toleration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.admin.ClusterAssignmentOuterClass.Toleration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SelectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.Selector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The label key.
     * </pre>
     *
     * <code>string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <pre>
     * The label key.
     * </pre>
     *
     * <code>string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    java.util.List<java.lang.String>
        getValueList();
    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    int getValueCount();
    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    java.lang.String getValue(int index);
    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes(int index);

    /**
     * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
     */
    int getOperatorValue();
    /**
     * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
     */
    flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator getOperator();
  }
  /**
   * <pre>
   * A Selector is a specification for identifying a set of objects with corresponding labels.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.Selector}
   */
  public  static final class Selector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.Selector)
      SelectorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Selector.newBuilder() to construct.
    private Selector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Selector() {
      key_ = "";
      value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      operator_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Selector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                value_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(s);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              operator_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          value_ = value_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Selector_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Selector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.admin.ClusterAssignmentOuterClass.Selector.class, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder.class);
    }

    /**
     * <pre>
     * Defines how a label with a corresponding key and value is selected or excluded.
     * </pre>
     *
     * Protobuf enum {@code flyteidl.admin.Selector.Operator}
     */
    public enum Operator
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EQUALS = 0;</code>
       */
      EQUALS(0),
      /**
       * <code>NOT_EQUALS = 1;</code>
       */
      NOT_EQUALS(1),
      /**
       * <code>IN = 2;</code>
       */
      IN(2),
      /**
       * <code>NOT_IN = 3;</code>
       */
      NOT_IN(3),
      /**
       * <pre>
       * A label key with any value
       * </pre>
       *
       * <code>EXISTS = 4;</code>
       */
      EXISTS(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>EQUALS = 0;</code>
       */
      public static final int EQUALS_VALUE = 0;
      /**
       * <code>NOT_EQUALS = 1;</code>
       */
      public static final int NOT_EQUALS_VALUE = 1;
      /**
       * <code>IN = 2;</code>
       */
      public static final int IN_VALUE = 2;
      /**
       * <code>NOT_IN = 3;</code>
       */
      public static final int NOT_IN_VALUE = 3;
      /**
       * <pre>
       * A label key with any value
       * </pre>
       *
       * <code>EXISTS = 4;</code>
       */
      public static final int EXISTS_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Operator valueOf(int value) {
        return forNumber(value);
      }

      public static Operator forNumber(int value) {
        switch (value) {
          case 0: return EQUALS;
          case 1: return NOT_EQUALS;
          case 2: return IN;
          case 3: return NOT_IN;
          case 4: return EXISTS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Operator>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Operator> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operator>() {
              public Operator findValueByNumber(int number) {
                return Operator.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.admin.ClusterAssignmentOuterClass.Selector.getDescriptor().getEnumTypes().get(0);
      }

      private static final Operator[] VALUES = values();

      public static Operator valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Operator(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.admin.Selector.Operator)
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <pre>
     * The label key.
     * </pre>
     *
     * <code>string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The label key.
     * </pre>
     *
     * <code>string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList value_;
    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValueList() {
      return value_;
    }
    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    public java.lang.String getValue(int index) {
      return value_.get(index);
    }
    /**
     * <pre>
     * One or more values used to match labels.
     * For equality (or inequality) requirements, values must contain a single element.
     * For set-based requirements, values may contain one or more elements.
     * </pre>
     *
     * <code>repeated string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes(int index) {
      return value_.getByteString(index);
    }

    public static final int OPERATOR_FIELD_NUMBER = 3;
    private int operator_;
    /**
     * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
     */
    public int getOperatorValue() {
      return operator_;
    }
    /**
     * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
     */
    public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator getOperator() {
      @SuppressWarnings("deprecation")
      flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator result = flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator.valueOf(operator_);
      return result == null ? flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      for (int i = 0; i < value_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_.getRaw(i));
      }
      if (operator_ != flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator.EQUALS.getNumber()) {
        output.writeEnum(3, operator_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += computeStringSizeNoTag(value_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      if (operator_ != flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator.EQUALS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, operator_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.admin.ClusterAssignmentOuterClass.Selector)) {
        return super.equals(obj);
      }
      flyteidl.admin.ClusterAssignmentOuterClass.Selector other = (flyteidl.admin.ClusterAssignmentOuterClass.Selector) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValueList()
          .equals(other.getValueList())) return false;
      if (operator_ != other.operator_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
      hash = (53 * hash) + operator_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.admin.ClusterAssignmentOuterClass.Selector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Selector is a specification for identifying a set of objects with corresponding labels.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.Selector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.Selector)
        flyteidl.admin.ClusterAssignmentOuterClass.SelectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Selector_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Selector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.admin.ClusterAssignmentOuterClass.Selector.class, flyteidl.admin.ClusterAssignmentOuterClass.Selector.Builder.class);
      }

      // Construct using flyteidl.admin.ClusterAssignmentOuterClass.Selector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        operator_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.internal_static_flyteidl_admin_Selector_descriptor;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector getDefaultInstanceForType() {
        return flyteidl.admin.ClusterAssignmentOuterClass.Selector.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector build() {
        flyteidl.admin.ClusterAssignmentOuterClass.Selector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector buildPartial() {
        flyteidl.admin.ClusterAssignmentOuterClass.Selector result = new flyteidl.admin.ClusterAssignmentOuterClass.Selector(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.key_ = key_;
        if (((bitField0_ & 0x00000002) != 0)) {
          value_ = value_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        result.operator_ = operator_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.admin.ClusterAssignmentOuterClass.Selector) {
          return mergeFrom((flyteidl.admin.ClusterAssignmentOuterClass.Selector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.admin.ClusterAssignmentOuterClass.Selector other) {
        if (other == flyteidl.admin.ClusterAssignmentOuterClass.Selector.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        if (other.operator_ != 0) {
          setOperatorValue(other.getOperatorValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.admin.ClusterAssignmentOuterClass.Selector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.admin.ClusterAssignmentOuterClass.Selector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <pre>
       * The label key.
       * </pre>
       *
       * <code>string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The label key.
       * </pre>
       *
       * <code>string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The label key.
       * </pre>
       *
       * <code>string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The label key.
       * </pre>
       *
       * <code>string key = 1;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The label key.
       * </pre>
       *
       * <code>string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          value_ = new com.google.protobuf.LazyStringArrayList(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValueList() {
        return value_.getUnmodifiableView();
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public Builder setValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public Builder addValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public Builder clearValue() {
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * One or more values used to match labels.
       * For equality (or inequality) requirements, values must contain a single element.
       * For set-based requirements, values may contain one or more elements.
       * </pre>
       *
       * <code>repeated string value = 2;</code>
       */
      public Builder addValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }

      private int operator_ = 0;
      /**
       * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
       */
      public int getOperatorValue() {
        return operator_;
      }
      /**
       * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
       */
      public Builder setOperatorValue(int value) {
        operator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
       */
      public flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator getOperator() {
        @SuppressWarnings("deprecation")
        flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator result = flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator.valueOf(operator_);
        return result == null ? flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator.UNRECOGNIZED : result;
      }
      /**
       * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
       */
      public Builder setOperator(flyteidl.admin.ClusterAssignmentOuterClass.Selector.Operator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        operator_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.admin.Selector.Operator operator = 3;</code>
       */
      public Builder clearOperator() {
        
        operator_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.Selector)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.Selector)
    private static final flyteidl.admin.ClusterAssignmentOuterClass.Selector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.admin.ClusterAssignmentOuterClass.Selector();
    }

    public static flyteidl.admin.ClusterAssignmentOuterClass.Selector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Selector>
        PARSER = new com.google.protobuf.AbstractParser<Selector>() {
      @java.lang.Override
      public Selector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Selector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Selector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Selector> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.admin.ClusterAssignmentOuterClass.Selector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_ClusterAssignment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_ClusterAssignment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_Affinity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_Affinity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_Toleration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_Toleration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_Selector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_Selector_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'flyteidl/admin/cluster_assignment.prot" +
      "o\022\016flyteidl.admin\"o\n\021ClusterAssignment\022*" +
      "\n\010affinity\030\001 \001(\0132\030.flyteidl.admin.Affini" +
      "ty\022.\n\ntoleration\030\002 \001(\0132\032.flyteidl.admin." +
      "Toleration\"7\n\010Affinity\022+\n\tselectors\030\001 \003(" +
      "\0132\030.flyteidl.admin.Selector\"9\n\nToleratio" +
      "n\022+\n\tselectors\030\001 \003(\0132\030.flyteidl.admin.Se" +
      "lector\"\243\001\n\010Selector\022\013\n\003key\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \003(\t\0223\n\010operator\030\003 \001(\0162!.flyteidl.adm" +
      "in.Selector.Operator\"F\n\010Operator\022\n\n\006EQUA" +
      "LS\020\000\022\016\n\nNOT_EQUALS\020\001\022\006\n\002IN\020\002\022\n\n\006NOT_IN\020\003" +
      "\022\n\n\006EXISTS\020\004B7Z5github.com/flyteorg/flyt" +
      "eidl/gen/pb-go/flyteidl/adminb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_flyteidl_admin_ClusterAssignment_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_admin_ClusterAssignment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_ClusterAssignment_descriptor,
        new java.lang.String[] { "Affinity", "Toleration", });
    internal_static_flyteidl_admin_Affinity_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_admin_Affinity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_Affinity_descriptor,
        new java.lang.String[] { "Selectors", });
    internal_static_flyteidl_admin_Toleration_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flyteidl_admin_Toleration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_Toleration_descriptor,
        new java.lang.String[] { "Selectors", });
    internal_static_flyteidl_admin_Selector_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_flyteidl_admin_Selector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_Selector_descriptor,
        new java.lang.String[] { "Key", "Value", "Operator", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
