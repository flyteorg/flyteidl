// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/signal.proto

package flyteidl.service;

public final class Signal {
  private Signal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035flyteidl/service/signal.proto\022\020flyteid" +
      "l.service\032\034google/api/annotations.proto\032" +
      "\033flyteidl/admin/signal.proto\032,protoc-gen" +
      "-swagger/options/annotations.proto2\311\006\n\rS" +
      "ignalService\022\220\001\n\021GetOrCreateSignal\022(.fly" +
      "teidl.admin.SignalGetOrCreateRequest\032\026.f" +
      "lyteidl.admin.Signal\"9\222A6\0324Retrieve a si" +
      "gnal, creating it if it does not exist.\022" +
      "\360\002\n\013ListSignals\022!.flyteidl.admin.SignalL" +
      "istRequest\032!.flyteidl.admin.SignalListRe" +
      "quest\"\232\002\202\323\344\223\002\307\001\022h/api/v1/signals/{id.exe" +
      "cution_id.project}/{id.execution_id.doma" +
      "in}/{id.execution_id.name}/{id.signal_id" +
      "}Z[\022Y/api/v1/signals/{id.execution_id.pr" +
      "oject}/{id.execution_id.domain}/{id.exec" +
      "ution_id.name}\222AI\032GFetch existing signal" +
      " definitions matching the input signal i" +
      "d filters.\022\261\002\n\tSetSignal\022 .flyteidl.admi" +
      "n.SignalSetRequest\032!.flyteidl.admin.Sign" +
      "alSetResponse\"\336\001\202\323\344\223\002\024\"\017/api/v1/signals:" +
      "\001*\222A\300\001\032\023Set a signal value.JB\n\003400\022;\n9Re" +
      "turned for bad request that may have fai" +
      "led validation.Je\n\003409\022^\n\\Returned for a" +
      " request that references an identical en" +
      "tity that has already been registered.B9" +
      "Z7github.com/flyteorg/flyteidl/gen/pb-go" +
      "/flyteidl/serviceb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          flyteidl.admin.SignalOuterClass.getDescriptor(),
          grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor(),
        }, assigner);
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    registry.add(grpc.gateway.protoc_gen_swagger.options.Annotations.openapiv2Operation);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    flyteidl.admin.SignalOuterClass.getDescriptor();
    grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
