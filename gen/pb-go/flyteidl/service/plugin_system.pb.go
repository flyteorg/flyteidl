// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/service/plugin_system.proto

package service

import (
	context "context"
	fmt "fmt"
	core "github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/core"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The state of the execution is used to control its visibility in the UI/CLI.
type State int32

const (
	State_FAILED    State = 0
	State_PENDING   State = 1
	State_RUNNING   State = 2
	State_SUCCEEDED State = 3
)

var State_name = map[int32]string{
	0: "FAILED",
	1: "PENDING",
	2: "RUNNING",
	3: "SUCCEEDED",
}

var State_value = map[string]int32{
	"FAILED":    0,
	"PENDING":   1,
	"RUNNING":   2,
	"SUCCEEDED": 3,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3ccc78ed94d2bb96, []int{0}
}

// Represents a request structure to create task.
type TaskCreateRequest struct {
	// The inputs required to start the execution. All required inputs must be
	// included in this map. If not required and not provided, defaults apply.
	// +optional
	Inputs *core.LiteralMap `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	// Template of the task that encapsulates all the metadata of the task.
	Template *core.TaskTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	// Prefix for where offloaded data from user workflows will be written.
	OutputPrefix         string   `protobuf:"bytes,3,opt,name=output_prefix,json=outputPrefix,proto3" json:"output_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskCreateRequest) Reset()         { *m = TaskCreateRequest{} }
func (m *TaskCreateRequest) String() string { return proto.CompactTextString(m) }
func (*TaskCreateRequest) ProtoMessage()    {}
func (*TaskCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ccc78ed94d2bb96, []int{0}
}

func (m *TaskCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskCreateRequest.Unmarshal(m, b)
}
func (m *TaskCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskCreateRequest.Marshal(b, m, deterministic)
}
func (m *TaskCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskCreateRequest.Merge(m, src)
}
func (m *TaskCreateRequest) XXX_Size() int {
	return xxx_messageInfo_TaskCreateRequest.Size(m)
}
func (m *TaskCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskCreateRequest proto.InternalMessageInfo

func (m *TaskCreateRequest) GetInputs() *core.LiteralMap {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TaskCreateRequest) GetTemplate() *core.TaskTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *TaskCreateRequest) GetOutputPrefix() string {
	if m != nil {
		return m.OutputPrefix
	}
	return ""
}

// Represents a create response structure.
type TaskCreateResponse struct {
	// The unique id identifying the job.
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Error message if fail to create job.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskCreateResponse) Reset()         { *m = TaskCreateResponse{} }
func (m *TaskCreateResponse) String() string { return proto.CompactTextString(m) }
func (*TaskCreateResponse) ProtoMessage()    {}
func (*TaskCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ccc78ed94d2bb96, []int{1}
}

func (m *TaskCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskCreateResponse.Unmarshal(m, b)
}
func (m *TaskCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskCreateResponse.Marshal(b, m, deterministic)
}
func (m *TaskCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskCreateResponse.Merge(m, src)
}
func (m *TaskCreateResponse) XXX_Size() int {
	return xxx_messageInfo_TaskCreateResponse.Size(m)
}
func (m *TaskCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskCreateResponse proto.InternalMessageInfo

func (m *TaskCreateResponse) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *TaskCreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// A message used to fetch a job state from backend plugin server.
type TaskGetRequest struct {
	// A predefined yet extensible Task type identifier.
	TaskType string `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// The unique id identifying the job.
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Prefix for where offloaded data from user workflows will be written.
	OutputPrefix string `protobuf:"bytes,3,opt,name=output_prefix,json=outputPrefix,proto3" json:"output_prefix,omitempty"`
	// The latest job status.
	PrevState            State    `protobuf:"varint,4,opt,name=prev_state,json=prevState,proto3,enum=flyteidl.service.State" json:"prev_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskGetRequest) Reset()         { *m = TaskGetRequest{} }
func (m *TaskGetRequest) String() string { return proto.CompactTextString(m) }
func (*TaskGetRequest) ProtoMessage()    {}
func (*TaskGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ccc78ed94d2bb96, []int{2}
}

func (m *TaskGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskGetRequest.Unmarshal(m, b)
}
func (m *TaskGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskGetRequest.Marshal(b, m, deterministic)
}
func (m *TaskGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskGetRequest.Merge(m, src)
}
func (m *TaskGetRequest) XXX_Size() int {
	return xxx_messageInfo_TaskGetRequest.Size(m)
}
func (m *TaskGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskGetRequest proto.InternalMessageInfo

func (m *TaskGetRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *TaskGetRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *TaskGetRequest) GetOutputPrefix() string {
	if m != nil {
		return m.OutputPrefix
	}
	return ""
}

func (m *TaskGetRequest) GetPrevState() State {
	if m != nil {
		return m.PrevState
	}
	return State_FAILED
}

// Response to get an individual task state.
type TaskGetResponse struct {
	// The state of the execution is used to control its visibility in the UI/CLI.
	State State `protobuf:"varint,1,opt,name=state,proto3,enum=flyteidl.service.State" json:"state,omitempty"`
	// Error message if fail to get job.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskGetResponse) Reset()         { *m = TaskGetResponse{} }
func (m *TaskGetResponse) String() string { return proto.CompactTextString(m) }
func (*TaskGetResponse) ProtoMessage()    {}
func (*TaskGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ccc78ed94d2bb96, []int{3}
}

func (m *TaskGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskGetResponse.Unmarshal(m, b)
}
func (m *TaskGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskGetResponse.Marshal(b, m, deterministic)
}
func (m *TaskGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskGetResponse.Merge(m, src)
}
func (m *TaskGetResponse) XXX_Size() int {
	return xxx_messageInfo_TaskGetResponse.Size(m)
}
func (m *TaskGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskGetResponse proto.InternalMessageInfo

func (m *TaskGetResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_FAILED
}

func (m *TaskGetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// A message used to delete a task.
type TaskDeleteRequest struct {
	// A predefined yet extensible Task type identifier.
	TaskType string `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// The unique id identifying the job.
	JobId                string   `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskDeleteRequest) Reset()         { *m = TaskDeleteRequest{} }
func (m *TaskDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*TaskDeleteRequest) ProtoMessage()    {}
func (*TaskDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ccc78ed94d2bb96, []int{4}
}

func (m *TaskDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDeleteRequest.Unmarshal(m, b)
}
func (m *TaskDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDeleteRequest.Marshal(b, m, deterministic)
}
func (m *TaskDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDeleteRequest.Merge(m, src)
}
func (m *TaskDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_TaskDeleteRequest.Size(m)
}
func (m *TaskDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDeleteRequest proto.InternalMessageInfo

func (m *TaskDeleteRequest) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *TaskDeleteRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

// Response to delete a task.
type TaskDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskDeleteResponse) Reset()         { *m = TaskDeleteResponse{} }
func (m *TaskDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*TaskDeleteResponse) ProtoMessage()    {}
func (*TaskDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ccc78ed94d2bb96, []int{5}
}

func (m *TaskDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDeleteResponse.Unmarshal(m, b)
}
func (m *TaskDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDeleteResponse.Marshal(b, m, deterministic)
}
func (m *TaskDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDeleteResponse.Merge(m, src)
}
func (m *TaskDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_TaskDeleteResponse.Size(m)
}
func (m *TaskDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDeleteResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("flyteidl.service.State", State_name, State_value)
	proto.RegisterType((*TaskCreateRequest)(nil), "flyteidl.service.TaskCreateRequest")
	proto.RegisterType((*TaskCreateResponse)(nil), "flyteidl.service.TaskCreateResponse")
	proto.RegisterType((*TaskGetRequest)(nil), "flyteidl.service.TaskGetRequest")
	proto.RegisterType((*TaskGetResponse)(nil), "flyteidl.service.TaskGetResponse")
	proto.RegisterType((*TaskDeleteRequest)(nil), "flyteidl.service.TaskDeleteRequest")
	proto.RegisterType((*TaskDeleteResponse)(nil), "flyteidl.service.TaskDeleteResponse")
}

func init() {
	proto.RegisterFile("flyteidl/service/plugin_system.proto", fileDescriptor_3ccc78ed94d2bb96)
}

var fileDescriptor_3ccc78ed94d2bb96 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0xc5, 0xa4, 0x40, 0x3c, 0x69, 0x52, 0xba, 0x4a, 0x55, 0x42, 0x5a, 0x89, 0x3a, 0x39, 0xa0,
	0x4a, 0xb1, 0x55, 0x2a, 0x35, 0xaa, 0xd4, 0x4b, 0x03, 0x2e, 0x42, 0x4a, 0x11, 0x32, 0xe4, 0x90,
	0x5c, 0x90, 0x81, 0xc1, 0x75, 0x30, 0xde, 0xad, 0x77, 0x1d, 0x95, 0x9f, 0xa9, 0x54, 0xa9, 0x1f,
	0x5a, 0xad, 0x17, 0x1c, 0x20, 0xad, 0x55, 0xe5, 0xe6, 0xdd, 0x79, 0xf3, 0xe6, 0xcd, 0xbc, 0x1d,
	0xc3, 0xe9, 0x34, 0x58, 0x08, 0xf4, 0x27, 0x81, 0xc5, 0x31, 0xba, 0xf3, 0xc7, 0x68, 0xb1, 0x20,
	0xf6, 0xfc, 0x70, 0xc8, 0x17, 0x5c, 0xe0, 0xdc, 0x64, 0x11, 0x15, 0x94, 0x94, 0x57, 0x28, 0x73,
	0x89, 0xaa, 0xbe, 0x4a, 0xf3, 0xc6, 0x34, 0x42, 0x2b, 0xf0, 0x05, 0x46, 0x6e, 0xc0, 0x15, 0xbe,
	0x7a, 0xb4, 0x19, 0x15, 0x2e, 0x9f, 0xad, 0x42, 0xaf, 0x37, 0x43, 0x7e, 0x28, 0x30, 0x9a, 0xba,
	0x63, 0x54, 0x61, 0xe3, 0xb7, 0x06, 0xcf, 0x07, 0x2e, 0x9f, 0x35, 0x23, 0x74, 0x05, 0x3a, 0xf8,
	0x3d, 0x46, 0x2e, 0xc8, 0x3b, 0x28, 0xfa, 0x21, 0x8b, 0x05, 0xaf, 0x68, 0x35, 0xad, 0xbe, 0xd7,
	0x38, 0x32, 0x53, 0x41, 0x92, 0xc5, 0xbc, 0x54, 0xe5, 0xbf, 0xba, 0xcc, 0x59, 0x02, 0xc9, 0x39,
	0xec, 0x0a, 0x9c, 0xb3, 0xc0, 0x15, 0x58, 0xc9, 0x27, 0x49, 0xc7, 0x5b, 0x49, 0xb2, 0xcc, 0x60,
	0x09, 0x71, 0x52, 0x30, 0x39, 0x81, 0x7d, 0x1a, 0x0b, 0x16, 0x8b, 0x21, 0x8b, 0x70, 0xea, 0xff,
	0xa8, 0xec, 0xd4, 0xb4, 0xba, 0xee, 0x3c, 0x55, 0x97, 0xbd, 0xe4, 0xce, 0xb0, 0x81, 0xac, 0xab,
	0xe4, 0x8c, 0x86, 0x1c, 0xc9, 0x0b, 0x28, 0xde, 0xd2, 0xd1, 0xd0, 0x9f, 0x24, 0x32, 0x75, 0xa7,
	0x70, 0x4b, 0x47, 0x9d, 0x09, 0xa9, 0x40, 0x69, 0x8e, 0x9c, 0xbb, 0x9e, 0x52, 0xa2, 0x3b, 0xab,
	0xa3, 0xf1, 0x4b, 0x83, 0x03, 0xc9, 0xd3, 0x46, 0xb1, 0x6a, 0xf5, 0x18, 0x74, 0x39, 0xae, 0xa1,
	0x58, 0x30, 0x5c, 0xd2, 0xec, 0xca, 0x8b, 0xc1, 0x82, 0xad, 0x17, 0xc8, 0xaf, 0x17, 0xf8, 0x1f,
	0xc9, 0xe4, 0x03, 0x00, 0x8b, 0xf0, 0x6e, 0xc8, 0x85, 0x1c, 0xc9, 0x93, 0x9a, 0x56, 0x3f, 0x68,
	0xbc, 0x34, 0xb7, 0x8d, 0x35, 0xfb, 0x32, 0xec, 0xe8, 0x12, 0x9a, 0x7c, 0x1a, 0x37, 0xf0, 0x2c,
	0x95, 0xb8, 0xec, 0xf3, 0x0c, 0x0a, 0x8a, 0x45, 0xcb, 0x66, 0x51, 0xa8, 0x8c, 0xfe, 0xdb, 0xca,
	0xec, 0x16, 0x06, 0x78, 0x6f, 0xf6, 0x23, 0x26, 0x60, 0x1c, 0x2a, 0x3f, 0x56, 0x44, 0x4a, 0xe7,
	0xdb, 0x4f, 0x50, 0x48, 0x84, 0x10, 0x80, 0xe2, 0x97, 0xcf, 0x9d, 0x4b, 0xbb, 0x55, 0xce, 0x91,
	0x3d, 0x28, 0xf5, 0xec, 0x6e, 0xab, 0xd3, 0x6d, 0x97, 0x35, 0x79, 0x70, 0xae, 0xba, 0x5d, 0x79,
	0xc8, 0x93, 0x7d, 0xd0, 0xfb, 0x57, 0xcd, 0xa6, 0x6d, 0xb7, 0xec, 0x56, 0x79, 0xa7, 0xf1, 0x33,
	0x0f, 0x87, 0x17, 0xee, 0x78, 0x86, 0xe1, 0xa4, 0x97, 0xec, 0x44, 0x5f, 0x35, 0x47, 0xae, 0x01,
	0x94, 0xf1, 0xb2, 0x24, 0x39, 0x79, 0xd8, 0xfd, 0x83, 0x07, 0x5c, 0x3d, 0xcd, 0x06, 0x29, 0xbd,
	0x46, 0x8e, 0xf4, 0xa0, 0xd4, 0x46, 0x91, 0xf0, 0xd6, 0xfe, 0x9e, 0x72, 0xff, 0x54, 0xaa, 0x6f,
	0x32, 0x10, 0x29, 0xe3, 0x35, 0x80, 0x9a, 0x4a, 0x96, 0xd8, 0x0d, 0x03, 0xfe, 0x25, 0x76, 0x73,
	0xb8, 0x46, 0xee, 0xe2, 0xe3, 0xcd, 0xb9, 0xe7, 0x8b, 0x6f, 0xf1, 0xc8, 0x1c, 0xd3, 0xb9, 0x95,
	0xe4, 0xd0, 0xc8, 0xb3, 0xd2, 0x05, 0xf7, 0x30, 0xb4, 0xd8, 0xe8, 0xcc, 0xa3, 0xd6, 0xf6, 0x4f,
	0x66, 0x54, 0x4c, 0xb6, 0xfd, 0xfd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x93, 0x30, 0xce, 0xe1,
	0x7f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendPluginServiceClient is the client API for BackendPluginService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendPluginServiceClient interface {
	// Send a task create request to the backend plugin server.
	CreateTask(ctx context.Context, in *TaskCreateRequest, opts ...grpc.CallOption) (*TaskCreateResponse, error)
	// Get job status.
	GetTask(ctx context.Context, in *TaskGetRequest, opts ...grpc.CallOption) (*TaskGetResponse, error)
	// Delete the task resource.
	DeleteTask(ctx context.Context, in *TaskDeleteRequest, opts ...grpc.CallOption) (*TaskDeleteResponse, error)
}

type backendPluginServiceClient struct {
	cc *grpc.ClientConn
}

func NewBackendPluginServiceClient(cc *grpc.ClientConn) BackendPluginServiceClient {
	return &backendPluginServiceClient{cc}
}

func (c *backendPluginServiceClient) CreateTask(ctx context.Context, in *TaskCreateRequest, opts ...grpc.CallOption) (*TaskCreateResponse, error) {
	out := new(TaskCreateResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.service.BackendPluginService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendPluginServiceClient) GetTask(ctx context.Context, in *TaskGetRequest, opts ...grpc.CallOption) (*TaskGetResponse, error) {
	out := new(TaskGetResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.service.BackendPluginService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendPluginServiceClient) DeleteTask(ctx context.Context, in *TaskDeleteRequest, opts ...grpc.CallOption) (*TaskDeleteResponse, error) {
	out := new(TaskDeleteResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.service.BackendPluginService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendPluginServiceServer is the server API for BackendPluginService service.
type BackendPluginServiceServer interface {
	// Send a task create request to the backend plugin server.
	CreateTask(context.Context, *TaskCreateRequest) (*TaskCreateResponse, error)
	// Get job status.
	GetTask(context.Context, *TaskGetRequest) (*TaskGetResponse, error)
	// Delete the task resource.
	DeleteTask(context.Context, *TaskDeleteRequest) (*TaskDeleteResponse, error)
}

// UnimplementedBackendPluginServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBackendPluginServiceServer struct {
}

func (*UnimplementedBackendPluginServiceServer) CreateTask(ctx context.Context, req *TaskCreateRequest) (*TaskCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedBackendPluginServiceServer) GetTask(ctx context.Context, req *TaskGetRequest) (*TaskGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedBackendPluginServiceServer) DeleteTask(ctx context.Context, req *TaskDeleteRequest) (*TaskDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}

func RegisterBackendPluginServiceServer(s *grpc.Server, srv BackendPluginServiceServer) {
	s.RegisterService(&_BackendPluginService_serviceDesc, srv)
}

func _BackendPluginService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendPluginServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.service.BackendPluginService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendPluginServiceServer).CreateTask(ctx, req.(*TaskCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackendPluginService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendPluginServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.service.BackendPluginService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendPluginServiceServer).GetTask(ctx, req.(*TaskGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackendPluginService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendPluginServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.service.BackendPluginService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendPluginServiceServer).DeleteTask(ctx, req.(*TaskDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BackendPluginService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flyteidl.service.BackendPluginService",
	HandlerType: (*BackendPluginServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _BackendPluginService_CreateTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _BackendPluginService_GetTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _BackendPluginService_DeleteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flyteidl/service/plugin_system.proto",
}
