// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/launch_plan.proto

package com.flyteidl.admin;

public interface LaunchPlanUpdateRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.admin.LaunchPlanUpdateRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier of launch plan for which to change state.
   * +required.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * Identifier of launch plan for which to change state.
   * +required.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  com.flyteidl.core.Identifier getId();
  /**
   * <pre>
   * Identifier of launch plan for which to change state.
   * +required.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   */
  com.flyteidl.core.IdentifierOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * Desired state to apply to the launch plan.
   * +required.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanState state = 2 [json_name = "state"];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * Desired state to apply to the launch plan.
   * +required.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanState state = 2 [json_name = "state"];</code>
   * @return The state.
   */
  com.flyteidl.admin.LaunchPlanState getState();
}
