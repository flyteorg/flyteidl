// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/condition.proto

package com.flyteidl.core;

/**
 * <pre>
 * Defines a 2-level tree where the root is a comparison operator and Operands are primitives or known variables.
 * Each expression results in a boolean result.
 * </pre>
 *
 * Protobuf type {@code flyteidl.core.ComparisonExpression}
 */
public final class ComparisonExpression extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.core.ComparisonExpression)
    ComparisonExpressionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ComparisonExpression.newBuilder() to construct.
  private ComparisonExpression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ComparisonExpression() {
    operator_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ComparisonExpression();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ComparisonExpression(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            operator_ = rawValue;
            break;
          }
          case 18: {
            com.flyteidl.core.Operand.Builder subBuilder = null;
            if (leftValue_ != null) {
              subBuilder = leftValue_.toBuilder();
            }
            leftValue_ = input.readMessage(com.flyteidl.core.Operand.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(leftValue_);
              leftValue_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.flyteidl.core.Operand.Builder subBuilder = null;
            if (rightValue_ != null) {
              subBuilder = rightValue_.toBuilder();
            }
            rightValue_ = input.readMessage(com.flyteidl.core.Operand.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rightValue_);
              rightValue_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.core.ConditionProto.internal_static_flyteidl_core_ComparisonExpression_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.core.ConditionProto.internal_static_flyteidl_core_ComparisonExpression_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.core.ComparisonExpression.class, com.flyteidl.core.ComparisonExpression.Builder.class);
  }

  /**
   * <pre>
   * Binary Operator for each expression
   * </pre>
   *
   * Protobuf enum {@code flyteidl.core.ComparisonExpression.Operator}
   */
  public enum Operator
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EQ = 0;</code>
     */
    EQ(0),
    /**
     * <code>NEQ = 1;</code>
     */
    NEQ(1),
    /**
     * <pre>
     * Greater Than
     * </pre>
     *
     * <code>GT = 2;</code>
     */
    GT(2),
    /**
     * <code>GTE = 3;</code>
     */
    GTE(3),
    /**
     * <pre>
     * Less Than
     * </pre>
     *
     * <code>LT = 4;</code>
     */
    LT(4),
    /**
     * <code>LTE = 5;</code>
     */
    LTE(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EQ = 0;</code>
     */
    public static final int EQ_VALUE = 0;
    /**
     * <code>NEQ = 1;</code>
     */
    public static final int NEQ_VALUE = 1;
    /**
     * <pre>
     * Greater Than
     * </pre>
     *
     * <code>GT = 2;</code>
     */
    public static final int GT_VALUE = 2;
    /**
     * <code>GTE = 3;</code>
     */
    public static final int GTE_VALUE = 3;
    /**
     * <pre>
     * Less Than
     * </pre>
     *
     * <code>LT = 4;</code>
     */
    public static final int LT_VALUE = 4;
    /**
     * <code>LTE = 5;</code>
     */
    public static final int LTE_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Operator valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Operator forNumber(int value) {
      switch (value) {
        case 0: return EQ;
        case 1: return NEQ;
        case 2: return GT;
        case 3: return GTE;
        case 4: return LT;
        case 5: return LTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Operator>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Operator> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Operator>() {
            public Operator findValueByNumber(int number) {
              return Operator.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.flyteidl.core.ComparisonExpression.getDescriptor().getEnumTypes().get(0);
    }

    private static final Operator[] VALUES = values();

    public static Operator valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Operator(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.core.ComparisonExpression.Operator)
  }

  public static final int OPERATOR_FIELD_NUMBER = 1;
  private int operator_;
  /**
   * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1 [json_name = "operator"];</code>
   * @return The enum numeric value on the wire for operator.
   */
  @java.lang.Override public int getOperatorValue() {
    return operator_;
  }
  /**
   * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1 [json_name = "operator"];</code>
   * @return The operator.
   */
  @java.lang.Override public com.flyteidl.core.ComparisonExpression.Operator getOperator() {
    @SuppressWarnings("deprecation")
    com.flyteidl.core.ComparisonExpression.Operator result = com.flyteidl.core.ComparisonExpression.Operator.valueOf(operator_);
    return result == null ? com.flyteidl.core.ComparisonExpression.Operator.UNRECOGNIZED : result;
  }

  public static final int LEFT_VALUE_FIELD_NUMBER = 2;
  private com.flyteidl.core.Operand leftValue_;
  /**
   * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
   * @return Whether the leftValue field is set.
   */
  @java.lang.Override
  public boolean hasLeftValue() {
    return leftValue_ != null;
  }
  /**
   * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
   * @return The leftValue.
   */
  @java.lang.Override
  public com.flyteidl.core.Operand getLeftValue() {
    return leftValue_ == null ? com.flyteidl.core.Operand.getDefaultInstance() : leftValue_;
  }
  /**
   * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.OperandOrBuilder getLeftValueOrBuilder() {
    return getLeftValue();
  }

  public static final int RIGHT_VALUE_FIELD_NUMBER = 3;
  private com.flyteidl.core.Operand rightValue_;
  /**
   * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
   * @return Whether the rightValue field is set.
   */
  @java.lang.Override
  public boolean hasRightValue() {
    return rightValue_ != null;
  }
  /**
   * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
   * @return The rightValue.
   */
  @java.lang.Override
  public com.flyteidl.core.Operand getRightValue() {
    return rightValue_ == null ? com.flyteidl.core.Operand.getDefaultInstance() : rightValue_;
  }
  /**
   * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.OperandOrBuilder getRightValueOrBuilder() {
    return getRightValue();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (operator_ != com.flyteidl.core.ComparisonExpression.Operator.EQ.getNumber()) {
      output.writeEnum(1, operator_);
    }
    if (leftValue_ != null) {
      output.writeMessage(2, getLeftValue());
    }
    if (rightValue_ != null) {
      output.writeMessage(3, getRightValue());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (operator_ != com.flyteidl.core.ComparisonExpression.Operator.EQ.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, operator_);
    }
    if (leftValue_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLeftValue());
    }
    if (rightValue_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getRightValue());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.core.ComparisonExpression)) {
      return super.equals(obj);
    }
    com.flyteidl.core.ComparisonExpression other = (com.flyteidl.core.ComparisonExpression) obj;

    if (operator_ != other.operator_) return false;
    if (hasLeftValue() != other.hasLeftValue()) return false;
    if (hasLeftValue()) {
      if (!getLeftValue()
          .equals(other.getLeftValue())) return false;
    }
    if (hasRightValue() != other.hasRightValue()) return false;
    if (hasRightValue()) {
      if (!getRightValue()
          .equals(other.getRightValue())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
    hash = (53 * hash) + operator_;
    if (hasLeftValue()) {
      hash = (37 * hash) + LEFT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getLeftValue().hashCode();
    }
    if (hasRightValue()) {
      hash = (37 * hash) + RIGHT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getRightValue().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.core.ComparisonExpression parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.ComparisonExpression parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.ComparisonExpression parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.ComparisonExpression parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.core.ComparisonExpression prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines a 2-level tree where the root is a comparison operator and Operands are primitives or known variables.
   * Each expression results in a boolean result.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.ComparisonExpression}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.core.ComparisonExpression)
      com.flyteidl.core.ComparisonExpressionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.ConditionProto.internal_static_flyteidl_core_ComparisonExpression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.ConditionProto.internal_static_flyteidl_core_ComparisonExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.ComparisonExpression.class, com.flyteidl.core.ComparisonExpression.Builder.class);
    }

    // Construct using com.flyteidl.core.ComparisonExpression.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      operator_ = 0;

      if (leftValueBuilder_ == null) {
        leftValue_ = null;
      } else {
        leftValue_ = null;
        leftValueBuilder_ = null;
      }
      if (rightValueBuilder_ == null) {
        rightValue_ = null;
      } else {
        rightValue_ = null;
        rightValueBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.core.ConditionProto.internal_static_flyteidl_core_ComparisonExpression_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.core.ComparisonExpression getDefaultInstanceForType() {
      return com.flyteidl.core.ComparisonExpression.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.core.ComparisonExpression build() {
      com.flyteidl.core.ComparisonExpression result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.core.ComparisonExpression buildPartial() {
      com.flyteidl.core.ComparisonExpression result = new com.flyteidl.core.ComparisonExpression(this);
      result.operator_ = operator_;
      if (leftValueBuilder_ == null) {
        result.leftValue_ = leftValue_;
      } else {
        result.leftValue_ = leftValueBuilder_.build();
      }
      if (rightValueBuilder_ == null) {
        result.rightValue_ = rightValue_;
      } else {
        result.rightValue_ = rightValueBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.core.ComparisonExpression) {
        return mergeFrom((com.flyteidl.core.ComparisonExpression)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.core.ComparisonExpression other) {
      if (other == com.flyteidl.core.ComparisonExpression.getDefaultInstance()) return this;
      if (other.operator_ != 0) {
        setOperatorValue(other.getOperatorValue());
      }
      if (other.hasLeftValue()) {
        mergeLeftValue(other.getLeftValue());
      }
      if (other.hasRightValue()) {
        mergeRightValue(other.getRightValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.core.ComparisonExpression parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.core.ComparisonExpression) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int operator_ = 0;
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1 [json_name = "operator"];</code>
     * @return The enum numeric value on the wire for operator.
     */
    @java.lang.Override public int getOperatorValue() {
      return operator_;
    }
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1 [json_name = "operator"];</code>
     * @param value The enum numeric value on the wire for operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperatorValue(int value) {
      
      operator_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1 [json_name = "operator"];</code>
     * @return The operator.
     */
    @java.lang.Override
    public com.flyteidl.core.ComparisonExpression.Operator getOperator() {
      @SuppressWarnings("deprecation")
      com.flyteidl.core.ComparisonExpression.Operator result = com.flyteidl.core.ComparisonExpression.Operator.valueOf(operator_);
      return result == null ? com.flyteidl.core.ComparisonExpression.Operator.UNRECOGNIZED : result;
    }
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1 [json_name = "operator"];</code>
     * @param value The operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperator(com.flyteidl.core.ComparisonExpression.Operator value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      operator_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1 [json_name = "operator"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOperator() {
      
      operator_ = 0;
      onChanged();
      return this;
    }

    private com.flyteidl.core.Operand leftValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Operand, com.flyteidl.core.Operand.Builder, com.flyteidl.core.OperandOrBuilder> leftValueBuilder_;
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     * @return Whether the leftValue field is set.
     */
    public boolean hasLeftValue() {
      return leftValueBuilder_ != null || leftValue_ != null;
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     * @return The leftValue.
     */
    public com.flyteidl.core.Operand getLeftValue() {
      if (leftValueBuilder_ == null) {
        return leftValue_ == null ? com.flyteidl.core.Operand.getDefaultInstance() : leftValue_;
      } else {
        return leftValueBuilder_.getMessage();
      }
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     */
    public Builder setLeftValue(com.flyteidl.core.Operand value) {
      if (leftValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        leftValue_ = value;
        onChanged();
      } else {
        leftValueBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     */
    public Builder setLeftValue(
        com.flyteidl.core.Operand.Builder builderForValue) {
      if (leftValueBuilder_ == null) {
        leftValue_ = builderForValue.build();
        onChanged();
      } else {
        leftValueBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     */
    public Builder mergeLeftValue(com.flyteidl.core.Operand value) {
      if (leftValueBuilder_ == null) {
        if (leftValue_ != null) {
          leftValue_ =
            com.flyteidl.core.Operand.newBuilder(leftValue_).mergeFrom(value).buildPartial();
        } else {
          leftValue_ = value;
        }
        onChanged();
      } else {
        leftValueBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     */
    public Builder clearLeftValue() {
      if (leftValueBuilder_ == null) {
        leftValue_ = null;
        onChanged();
      } else {
        leftValue_ = null;
        leftValueBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     */
    public com.flyteidl.core.Operand.Builder getLeftValueBuilder() {
      
      onChanged();
      return getLeftValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     */
    public com.flyteidl.core.OperandOrBuilder getLeftValueOrBuilder() {
      if (leftValueBuilder_ != null) {
        return leftValueBuilder_.getMessageOrBuilder();
      } else {
        return leftValue_ == null ?
            com.flyteidl.core.Operand.getDefaultInstance() : leftValue_;
      }
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2 [json_name = "leftValue"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Operand, com.flyteidl.core.Operand.Builder, com.flyteidl.core.OperandOrBuilder> 
        getLeftValueFieldBuilder() {
      if (leftValueBuilder_ == null) {
        leftValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.Operand, com.flyteidl.core.Operand.Builder, com.flyteidl.core.OperandOrBuilder>(
                getLeftValue(),
                getParentForChildren(),
                isClean());
        leftValue_ = null;
      }
      return leftValueBuilder_;
    }

    private com.flyteidl.core.Operand rightValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Operand, com.flyteidl.core.Operand.Builder, com.flyteidl.core.OperandOrBuilder> rightValueBuilder_;
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     * @return Whether the rightValue field is set.
     */
    public boolean hasRightValue() {
      return rightValueBuilder_ != null || rightValue_ != null;
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     * @return The rightValue.
     */
    public com.flyteidl.core.Operand getRightValue() {
      if (rightValueBuilder_ == null) {
        return rightValue_ == null ? com.flyteidl.core.Operand.getDefaultInstance() : rightValue_;
      } else {
        return rightValueBuilder_.getMessage();
      }
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     */
    public Builder setRightValue(com.flyteidl.core.Operand value) {
      if (rightValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rightValue_ = value;
        onChanged();
      } else {
        rightValueBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     */
    public Builder setRightValue(
        com.flyteidl.core.Operand.Builder builderForValue) {
      if (rightValueBuilder_ == null) {
        rightValue_ = builderForValue.build();
        onChanged();
      } else {
        rightValueBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     */
    public Builder mergeRightValue(com.flyteidl.core.Operand value) {
      if (rightValueBuilder_ == null) {
        if (rightValue_ != null) {
          rightValue_ =
            com.flyteidl.core.Operand.newBuilder(rightValue_).mergeFrom(value).buildPartial();
        } else {
          rightValue_ = value;
        }
        onChanged();
      } else {
        rightValueBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     */
    public Builder clearRightValue() {
      if (rightValueBuilder_ == null) {
        rightValue_ = null;
        onChanged();
      } else {
        rightValue_ = null;
        rightValueBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     */
    public com.flyteidl.core.Operand.Builder getRightValueBuilder() {
      
      onChanged();
      return getRightValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     */
    public com.flyteidl.core.OperandOrBuilder getRightValueOrBuilder() {
      if (rightValueBuilder_ != null) {
        return rightValueBuilder_.getMessageOrBuilder();
      } else {
        return rightValue_ == null ?
            com.flyteidl.core.Operand.getDefaultInstance() : rightValue_;
      }
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3 [json_name = "rightValue"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Operand, com.flyteidl.core.Operand.Builder, com.flyteidl.core.OperandOrBuilder> 
        getRightValueFieldBuilder() {
      if (rightValueBuilder_ == null) {
        rightValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.Operand, com.flyteidl.core.Operand.Builder, com.flyteidl.core.OperandOrBuilder>(
                getRightValue(),
                getParentForChildren(),
                isClean());
        rightValue_ = null;
      }
      return rightValueBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.core.ComparisonExpression)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.core.ComparisonExpression)
  private static final com.flyteidl.core.ComparisonExpression DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.core.ComparisonExpression();
  }

  public static com.flyteidl.core.ComparisonExpression getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ComparisonExpression>
      PARSER = new com.google.protobuf.AbstractParser<ComparisonExpression>() {
    @java.lang.Override
    public ComparisonExpression parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ComparisonExpression(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ComparisonExpression> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ComparisonExpression> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.core.ComparisonExpression getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

