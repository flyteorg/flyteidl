// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/schedule.proto

package com.flyteidl.admin;

/**
 * <pre>
 * Defines complete set of information required to trigger an execution on a schedule.
 * </pre>
 *
 * Protobuf type {@code flyteidl.admin.Schedule}
 */
public final class Schedule extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.admin.Schedule)
    ScheduleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Schedule.newBuilder() to construct.
  private Schedule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Schedule() {
    kickoffTimeInputArg_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Schedule();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Schedule(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            scheduleExpressionCase_ = 1;
            scheduleExpression_ = s;
            break;
          }
          case 18: {
            com.flyteidl.admin.FixedRate.Builder subBuilder = null;
            if (scheduleExpressionCase_ == 2) {
              subBuilder = ((com.flyteidl.admin.FixedRate) scheduleExpression_).toBuilder();
            }
            scheduleExpression_ =
                input.readMessage(com.flyteidl.admin.FixedRate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.flyteidl.admin.FixedRate) scheduleExpression_);
              scheduleExpression_ = subBuilder.buildPartial();
            }
            scheduleExpressionCase_ = 2;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            kickoffTimeInputArg_ = s;
            break;
          }
          case 34: {
            com.flyteidl.admin.CronSchedule.Builder subBuilder = null;
            if (scheduleExpressionCase_ == 4) {
              subBuilder = ((com.flyteidl.admin.CronSchedule) scheduleExpression_).toBuilder();
            }
            scheduleExpression_ =
                input.readMessage(com.flyteidl.admin.CronSchedule.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.flyteidl.admin.CronSchedule) scheduleExpression_);
              scheduleExpression_ = subBuilder.buildPartial();
            }
            scheduleExpressionCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.admin.Schedule.class, com.flyteidl.admin.Schedule.Builder.class);
  }

  private int scheduleExpressionCase_ = 0;
  private java.lang.Object scheduleExpression_;
  public enum ScheduleExpressionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    @java.lang.Deprecated CRON_EXPRESSION(1),
    RATE(2),
    CRON_SCHEDULE(4),
    SCHEDULEEXPRESSION_NOT_SET(0);
    private final int value;
    private ScheduleExpressionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ScheduleExpressionCase valueOf(int value) {
      return forNumber(value);
    }

    public static ScheduleExpressionCase forNumber(int value) {
      switch (value) {
        case 1: return CRON_EXPRESSION;
        case 2: return RATE;
        case 4: return CRON_SCHEDULE;
        case 0: return SCHEDULEEXPRESSION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ScheduleExpressionCase
  getScheduleExpressionCase() {
    return ScheduleExpressionCase.forNumber(
        scheduleExpressionCase_);
  }

  public static final int CRON_EXPRESSION_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
   * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
   * </pre>
   *
   * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
   * @deprecated
   * @return Whether the cronExpression field is set.
   */
  @java.lang.Deprecated public boolean hasCronExpression() {
    return scheduleExpressionCase_ == 1;
  }
  /**
   * <pre>
   * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
   * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
   * </pre>
   *
   * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
   * @deprecated
   * @return The cronExpression.
   */
  @java.lang.Deprecated public java.lang.String getCronExpression() {
    java.lang.Object ref = "";
    if (scheduleExpressionCase_ == 1) {
      ref = scheduleExpression_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (scheduleExpressionCase_ == 1) {
        scheduleExpression_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
   * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
   * </pre>
   *
   * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
   * @deprecated
   * @return The bytes for cronExpression.
   */
  @java.lang.Deprecated public com.google.protobuf.ByteString
      getCronExpressionBytes() {
    java.lang.Object ref = "";
    if (scheduleExpressionCase_ == 1) {
      ref = scheduleExpression_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (scheduleExpressionCase_ == 1) {
        scheduleExpression_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RATE_FIELD_NUMBER = 2;
  /**
   * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
   * @return Whether the rate field is set.
   */
  @java.lang.Override
  public boolean hasRate() {
    return scheduleExpressionCase_ == 2;
  }
  /**
   * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
   * @return The rate.
   */
  @java.lang.Override
  public com.flyteidl.admin.FixedRate getRate() {
    if (scheduleExpressionCase_ == 2) {
       return (com.flyteidl.admin.FixedRate) scheduleExpression_;
    }
    return com.flyteidl.admin.FixedRate.getDefaultInstance();
  }
  /**
   * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.FixedRateOrBuilder getRateOrBuilder() {
    if (scheduleExpressionCase_ == 2) {
       return (com.flyteidl.admin.FixedRate) scheduleExpression_;
    }
    return com.flyteidl.admin.FixedRate.getDefaultInstance();
  }

  public static final int CRON_SCHEDULE_FIELD_NUMBER = 4;
  /**
   * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
   * @return Whether the cronSchedule field is set.
   */
  @java.lang.Override
  public boolean hasCronSchedule() {
    return scheduleExpressionCase_ == 4;
  }
  /**
   * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
   * @return The cronSchedule.
   */
  @java.lang.Override
  public com.flyteidl.admin.CronSchedule getCronSchedule() {
    if (scheduleExpressionCase_ == 4) {
       return (com.flyteidl.admin.CronSchedule) scheduleExpression_;
    }
    return com.flyteidl.admin.CronSchedule.getDefaultInstance();
  }
  /**
   * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.CronScheduleOrBuilder getCronScheduleOrBuilder() {
    if (scheduleExpressionCase_ == 4) {
       return (com.flyteidl.admin.CronSchedule) scheduleExpression_;
    }
    return com.flyteidl.admin.CronSchedule.getDefaultInstance();
  }

  public static final int KICKOFF_TIME_INPUT_ARG_FIELD_NUMBER = 3;
  private volatile java.lang.Object kickoffTimeInputArg_;
  /**
   * <pre>
   * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
   * </pre>
   *
   * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
   * @return The kickoffTimeInputArg.
   */
  @java.lang.Override
  public java.lang.String getKickoffTimeInputArg() {
    java.lang.Object ref = kickoffTimeInputArg_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      kickoffTimeInputArg_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
   * </pre>
   *
   * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
   * @return The bytes for kickoffTimeInputArg.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKickoffTimeInputArgBytes() {
    java.lang.Object ref = kickoffTimeInputArg_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      kickoffTimeInputArg_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (scheduleExpressionCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, scheduleExpression_);
    }
    if (scheduleExpressionCase_ == 2) {
      output.writeMessage(2, (com.flyteidl.admin.FixedRate) scheduleExpression_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kickoffTimeInputArg_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, kickoffTimeInputArg_);
    }
    if (scheduleExpressionCase_ == 4) {
      output.writeMessage(4, (com.flyteidl.admin.CronSchedule) scheduleExpression_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (scheduleExpressionCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, scheduleExpression_);
    }
    if (scheduleExpressionCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.flyteidl.admin.FixedRate) scheduleExpression_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(kickoffTimeInputArg_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, kickoffTimeInputArg_);
    }
    if (scheduleExpressionCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.flyteidl.admin.CronSchedule) scheduleExpression_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.admin.Schedule)) {
      return super.equals(obj);
    }
    com.flyteidl.admin.Schedule other = (com.flyteidl.admin.Schedule) obj;

    if (!getKickoffTimeInputArg()
        .equals(other.getKickoffTimeInputArg())) return false;
    if (!getScheduleExpressionCase().equals(other.getScheduleExpressionCase())) return false;
    switch (scheduleExpressionCase_) {
      case 1:
        if (!getCronExpression()
            .equals(other.getCronExpression())) return false;
        break;
      case 2:
        if (!getRate()
            .equals(other.getRate())) return false;
        break;
      case 4:
        if (!getCronSchedule()
            .equals(other.getCronSchedule())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KICKOFF_TIME_INPUT_ARG_FIELD_NUMBER;
    hash = (53 * hash) + getKickoffTimeInputArg().hashCode();
    switch (scheduleExpressionCase_) {
      case 1:
        hash = (37 * hash) + CRON_EXPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getCronExpression().hashCode();
        break;
      case 2:
        hash = (37 * hash) + RATE_FIELD_NUMBER;
        hash = (53 * hash) + getRate().hashCode();
        break;
      case 4:
        hash = (37 * hash) + CRON_SCHEDULE_FIELD_NUMBER;
        hash = (53 * hash) + getCronSchedule().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.admin.Schedule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.Schedule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.Schedule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.Schedule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.Schedule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.Schedule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.Schedule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.Schedule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.admin.Schedule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.Schedule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.admin.Schedule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.Schedule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.admin.Schedule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines complete set of information required to trigger an execution on a schedule.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.Schedule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.admin.Schedule)
      com.flyteidl.admin.ScheduleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.admin.Schedule.class, com.flyteidl.admin.Schedule.Builder.class);
    }

    // Construct using com.flyteidl.admin.Schedule.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      kickoffTimeInputArg_ = "";

      scheduleExpressionCase_ = 0;
      scheduleExpression_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.admin.Schedule getDefaultInstanceForType() {
      return com.flyteidl.admin.Schedule.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.admin.Schedule build() {
      com.flyteidl.admin.Schedule result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.admin.Schedule buildPartial() {
      com.flyteidl.admin.Schedule result = new com.flyteidl.admin.Schedule(this);
      if (scheduleExpressionCase_ == 1) {
        result.scheduleExpression_ = scheduleExpression_;
      }
      if (scheduleExpressionCase_ == 2) {
        if (rateBuilder_ == null) {
          result.scheduleExpression_ = scheduleExpression_;
        } else {
          result.scheduleExpression_ = rateBuilder_.build();
        }
      }
      if (scheduleExpressionCase_ == 4) {
        if (cronScheduleBuilder_ == null) {
          result.scheduleExpression_ = scheduleExpression_;
        } else {
          result.scheduleExpression_ = cronScheduleBuilder_.build();
        }
      }
      result.kickoffTimeInputArg_ = kickoffTimeInputArg_;
      result.scheduleExpressionCase_ = scheduleExpressionCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.admin.Schedule) {
        return mergeFrom((com.flyteidl.admin.Schedule)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.admin.Schedule other) {
      if (other == com.flyteidl.admin.Schedule.getDefaultInstance()) return this;
      if (!other.getKickoffTimeInputArg().isEmpty()) {
        kickoffTimeInputArg_ = other.kickoffTimeInputArg_;
        onChanged();
      }
      switch (other.getScheduleExpressionCase()) {
        case CRON_EXPRESSION: {
          scheduleExpressionCase_ = 1;
          scheduleExpression_ = other.scheduleExpression_;
          onChanged();
          break;
        }
        case RATE: {
          mergeRate(other.getRate());
          break;
        }
        case CRON_SCHEDULE: {
          mergeCronSchedule(other.getCronSchedule());
          break;
        }
        case SCHEDULEEXPRESSION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.admin.Schedule parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.admin.Schedule) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int scheduleExpressionCase_ = 0;
    private java.lang.Object scheduleExpression_;
    public ScheduleExpressionCase
        getScheduleExpressionCase() {
      return ScheduleExpressionCase.forNumber(
          scheduleExpressionCase_);
    }

    public Builder clearScheduleExpression() {
      scheduleExpressionCase_ = 0;
      scheduleExpression_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return Whether the cronExpression field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasCronExpression() {
      return scheduleExpressionCase_ == 1;
    }
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return The cronExpression.
     */
    @java.lang.Override
    @java.lang.Deprecated public java.lang.String getCronExpression() {
      java.lang.Object ref = "";
      if (scheduleExpressionCase_ == 1) {
        ref = scheduleExpression_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (scheduleExpressionCase_ == 1) {
          scheduleExpression_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return The bytes for cronExpression.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getCronExpressionBytes() {
      java.lang.Object ref = "";
      if (scheduleExpressionCase_ == 1) {
        ref = scheduleExpression_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (scheduleExpressionCase_ == 1) {
          scheduleExpression_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @param value The cronExpression to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setCronExpression(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  scheduleExpressionCase_ = 1;
      scheduleExpression_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearCronExpression() {
      if (scheduleExpressionCase_ == 1) {
        scheduleExpressionCase_ = 0;
        scheduleExpression_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @param value The bytes for cronExpression to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setCronExpressionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      scheduleExpressionCase_ = 1;
      scheduleExpression_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.FixedRate, com.flyteidl.admin.FixedRate.Builder, com.flyteidl.admin.FixedRateOrBuilder> rateBuilder_;
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     * @return Whether the rate field is set.
     */
    @java.lang.Override
    public boolean hasRate() {
      return scheduleExpressionCase_ == 2;
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     * @return The rate.
     */
    @java.lang.Override
    public com.flyteidl.admin.FixedRate getRate() {
      if (rateBuilder_ == null) {
        if (scheduleExpressionCase_ == 2) {
          return (com.flyteidl.admin.FixedRate) scheduleExpression_;
        }
        return com.flyteidl.admin.FixedRate.getDefaultInstance();
      } else {
        if (scheduleExpressionCase_ == 2) {
          return rateBuilder_.getMessage();
        }
        return com.flyteidl.admin.FixedRate.getDefaultInstance();
      }
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    public Builder setRate(com.flyteidl.admin.FixedRate value) {
      if (rateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scheduleExpression_ = value;
        onChanged();
      } else {
        rateBuilder_.setMessage(value);
      }
      scheduleExpressionCase_ = 2;
      return this;
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    public Builder setRate(
        com.flyteidl.admin.FixedRate.Builder builderForValue) {
      if (rateBuilder_ == null) {
        scheduleExpression_ = builderForValue.build();
        onChanged();
      } else {
        rateBuilder_.setMessage(builderForValue.build());
      }
      scheduleExpressionCase_ = 2;
      return this;
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    public Builder mergeRate(com.flyteidl.admin.FixedRate value) {
      if (rateBuilder_ == null) {
        if (scheduleExpressionCase_ == 2 &&
            scheduleExpression_ != com.flyteidl.admin.FixedRate.getDefaultInstance()) {
          scheduleExpression_ = com.flyteidl.admin.FixedRate.newBuilder((com.flyteidl.admin.FixedRate) scheduleExpression_)
              .mergeFrom(value).buildPartial();
        } else {
          scheduleExpression_ = value;
        }
        onChanged();
      } else {
        if (scheduleExpressionCase_ == 2) {
          rateBuilder_.mergeFrom(value);
        }
        rateBuilder_.setMessage(value);
      }
      scheduleExpressionCase_ = 2;
      return this;
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    public Builder clearRate() {
      if (rateBuilder_ == null) {
        if (scheduleExpressionCase_ == 2) {
          scheduleExpressionCase_ = 0;
          scheduleExpression_ = null;
          onChanged();
        }
      } else {
        if (scheduleExpressionCase_ == 2) {
          scheduleExpressionCase_ = 0;
          scheduleExpression_ = null;
        }
        rateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    public com.flyteidl.admin.FixedRate.Builder getRateBuilder() {
      return getRateFieldBuilder().getBuilder();
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    @java.lang.Override
    public com.flyteidl.admin.FixedRateOrBuilder getRateOrBuilder() {
      if ((scheduleExpressionCase_ == 2) && (rateBuilder_ != null)) {
        return rateBuilder_.getMessageOrBuilder();
      } else {
        if (scheduleExpressionCase_ == 2) {
          return (com.flyteidl.admin.FixedRate) scheduleExpression_;
        }
        return com.flyteidl.admin.FixedRate.getDefaultInstance();
      }
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.FixedRate, com.flyteidl.admin.FixedRate.Builder, com.flyteidl.admin.FixedRateOrBuilder> 
        getRateFieldBuilder() {
      if (rateBuilder_ == null) {
        if (!(scheduleExpressionCase_ == 2)) {
          scheduleExpression_ = com.flyteidl.admin.FixedRate.getDefaultInstance();
        }
        rateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.FixedRate, com.flyteidl.admin.FixedRate.Builder, com.flyteidl.admin.FixedRateOrBuilder>(
                (com.flyteidl.admin.FixedRate) scheduleExpression_,
                getParentForChildren(),
                isClean());
        scheduleExpression_ = null;
      }
      scheduleExpressionCase_ = 2;
      onChanged();;
      return rateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.CronSchedule, com.flyteidl.admin.CronSchedule.Builder, com.flyteidl.admin.CronScheduleOrBuilder> cronScheduleBuilder_;
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     * @return Whether the cronSchedule field is set.
     */
    @java.lang.Override
    public boolean hasCronSchedule() {
      return scheduleExpressionCase_ == 4;
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     * @return The cronSchedule.
     */
    @java.lang.Override
    public com.flyteidl.admin.CronSchedule getCronSchedule() {
      if (cronScheduleBuilder_ == null) {
        if (scheduleExpressionCase_ == 4) {
          return (com.flyteidl.admin.CronSchedule) scheduleExpression_;
        }
        return com.flyteidl.admin.CronSchedule.getDefaultInstance();
      } else {
        if (scheduleExpressionCase_ == 4) {
          return cronScheduleBuilder_.getMessage();
        }
        return com.flyteidl.admin.CronSchedule.getDefaultInstance();
      }
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    public Builder setCronSchedule(com.flyteidl.admin.CronSchedule value) {
      if (cronScheduleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        scheduleExpression_ = value;
        onChanged();
      } else {
        cronScheduleBuilder_.setMessage(value);
      }
      scheduleExpressionCase_ = 4;
      return this;
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    public Builder setCronSchedule(
        com.flyteidl.admin.CronSchedule.Builder builderForValue) {
      if (cronScheduleBuilder_ == null) {
        scheduleExpression_ = builderForValue.build();
        onChanged();
      } else {
        cronScheduleBuilder_.setMessage(builderForValue.build());
      }
      scheduleExpressionCase_ = 4;
      return this;
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    public Builder mergeCronSchedule(com.flyteidl.admin.CronSchedule value) {
      if (cronScheduleBuilder_ == null) {
        if (scheduleExpressionCase_ == 4 &&
            scheduleExpression_ != com.flyteidl.admin.CronSchedule.getDefaultInstance()) {
          scheduleExpression_ = com.flyteidl.admin.CronSchedule.newBuilder((com.flyteidl.admin.CronSchedule) scheduleExpression_)
              .mergeFrom(value).buildPartial();
        } else {
          scheduleExpression_ = value;
        }
        onChanged();
      } else {
        if (scheduleExpressionCase_ == 4) {
          cronScheduleBuilder_.mergeFrom(value);
        }
        cronScheduleBuilder_.setMessage(value);
      }
      scheduleExpressionCase_ = 4;
      return this;
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    public Builder clearCronSchedule() {
      if (cronScheduleBuilder_ == null) {
        if (scheduleExpressionCase_ == 4) {
          scheduleExpressionCase_ = 0;
          scheduleExpression_ = null;
          onChanged();
        }
      } else {
        if (scheduleExpressionCase_ == 4) {
          scheduleExpressionCase_ = 0;
          scheduleExpression_ = null;
        }
        cronScheduleBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    public com.flyteidl.admin.CronSchedule.Builder getCronScheduleBuilder() {
      return getCronScheduleFieldBuilder().getBuilder();
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    @java.lang.Override
    public com.flyteidl.admin.CronScheduleOrBuilder getCronScheduleOrBuilder() {
      if ((scheduleExpressionCase_ == 4) && (cronScheduleBuilder_ != null)) {
        return cronScheduleBuilder_.getMessageOrBuilder();
      } else {
        if (scheduleExpressionCase_ == 4) {
          return (com.flyteidl.admin.CronSchedule) scheduleExpression_;
        }
        return com.flyteidl.admin.CronSchedule.getDefaultInstance();
      }
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.CronSchedule, com.flyteidl.admin.CronSchedule.Builder, com.flyteidl.admin.CronScheduleOrBuilder> 
        getCronScheduleFieldBuilder() {
      if (cronScheduleBuilder_ == null) {
        if (!(scheduleExpressionCase_ == 4)) {
          scheduleExpression_ = com.flyteidl.admin.CronSchedule.getDefaultInstance();
        }
        cronScheduleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.CronSchedule, com.flyteidl.admin.CronSchedule.Builder, com.flyteidl.admin.CronScheduleOrBuilder>(
                (com.flyteidl.admin.CronSchedule) scheduleExpression_,
                getParentForChildren(),
                isClean());
        scheduleExpression_ = null;
      }
      scheduleExpressionCase_ = 4;
      onChanged();;
      return cronScheduleBuilder_;
    }

    private java.lang.Object kickoffTimeInputArg_ = "";
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @return The kickoffTimeInputArg.
     */
    public java.lang.String getKickoffTimeInputArg() {
      java.lang.Object ref = kickoffTimeInputArg_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kickoffTimeInputArg_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @return The bytes for kickoffTimeInputArg.
     */
    public com.google.protobuf.ByteString
        getKickoffTimeInputArgBytes() {
      java.lang.Object ref = kickoffTimeInputArg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kickoffTimeInputArg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @param value The kickoffTimeInputArg to set.
     * @return This builder for chaining.
     */
    public Builder setKickoffTimeInputArg(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      kickoffTimeInputArg_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKickoffTimeInputArg() {
      
      kickoffTimeInputArg_ = getDefaultInstance().getKickoffTimeInputArg();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @param value The bytes for kickoffTimeInputArg to set.
     * @return This builder for chaining.
     */
    public Builder setKickoffTimeInputArgBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      kickoffTimeInputArg_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.admin.Schedule)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.admin.Schedule)
  private static final com.flyteidl.admin.Schedule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.admin.Schedule();
  }

  public static com.flyteidl.admin.Schedule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Schedule>
      PARSER = new com.google.protobuf.AbstractParser<Schedule>() {
    @java.lang.Override
    public Schedule parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Schedule(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Schedule> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Schedule> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.admin.Schedule getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

