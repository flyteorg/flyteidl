// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/description_entity.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fadmin_2fdescription_5fentity_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fadmin_2fdescription_5fentity_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/core/identifier.pb.h"
#include "flyteidl/admin/common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fdescription_5fentity_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto();
namespace flyteidl {
namespace admin {
class DescriptionEntity;
class DescriptionEntityDefaultTypeInternal;
extern DescriptionEntityDefaultTypeInternal _DescriptionEntity_default_instance_;
class DescriptionEntityCreateRequest;
class DescriptionEntityCreateRequestDefaultTypeInternal;
extern DescriptionEntityCreateRequestDefaultTypeInternal _DescriptionEntityCreateRequest_default_instance_;
class DescriptionEntityCreateResponse;
class DescriptionEntityCreateResponseDefaultTypeInternal;
extern DescriptionEntityCreateResponseDefaultTypeInternal _DescriptionEntityCreateResponse_default_instance_;
class LongDescription;
class LongDescriptionDefaultTypeInternal;
extern LongDescriptionDefaultTypeInternal _LongDescription_default_instance_;
class SourceCode;
class SourceCodeDefaultTypeInternal;
extern SourceCodeDefaultTypeInternal _SourceCode_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::admin::DescriptionEntity* Arena::CreateMaybeMessage<::flyteidl::admin::DescriptionEntity>(Arena*);
template<> ::flyteidl::admin::DescriptionEntityCreateRequest* Arena::CreateMaybeMessage<::flyteidl::admin::DescriptionEntityCreateRequest>(Arena*);
template<> ::flyteidl::admin::DescriptionEntityCreateResponse* Arena::CreateMaybeMessage<::flyteidl::admin::DescriptionEntityCreateResponse>(Arena*);
template<> ::flyteidl::admin::LongDescription* Arena::CreateMaybeMessage<::flyteidl::admin::LongDescription>(Arena*);
template<> ::flyteidl::admin::SourceCode* Arena::CreateMaybeMessage<::flyteidl::admin::SourceCode>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace admin {

enum LongDescription_DescriptionFormat {
  LongDescription_DescriptionFormat_UNKNOWN = 0,
  LongDescription_DescriptionFormat_MARKDOWN = 1,
  LongDescription_DescriptionFormat_HTML = 2,
  LongDescription_DescriptionFormat_RST = 3,
  LongDescription_DescriptionFormat_LongDescription_DescriptionFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  LongDescription_DescriptionFormat_LongDescription_DescriptionFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool LongDescription_DescriptionFormat_IsValid(int value);
const LongDescription_DescriptionFormat LongDescription_DescriptionFormat_DescriptionFormat_MIN = LongDescription_DescriptionFormat_UNKNOWN;
const LongDescription_DescriptionFormat LongDescription_DescriptionFormat_DescriptionFormat_MAX = LongDescription_DescriptionFormat_RST;
const int LongDescription_DescriptionFormat_DescriptionFormat_ARRAYSIZE = LongDescription_DescriptionFormat_DescriptionFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* LongDescription_DescriptionFormat_descriptor();
inline const ::std::string& LongDescription_DescriptionFormat_Name(LongDescription_DescriptionFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    LongDescription_DescriptionFormat_descriptor(), value);
}
inline bool LongDescription_DescriptionFormat_Parse(
    const ::std::string& name, LongDescription_DescriptionFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LongDescription_DescriptionFormat>(
    LongDescription_DescriptionFormat_descriptor(), name, value);
}
// ===================================================================

class DescriptionEntity final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.DescriptionEntity) */ {
 public:
  DescriptionEntity();
  virtual ~DescriptionEntity();

  DescriptionEntity(const DescriptionEntity& from);

  inline DescriptionEntity& operator=(const DescriptionEntity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DescriptionEntity(DescriptionEntity&& from) noexcept
    : DescriptionEntity() {
    *this = ::std::move(from);
  }

  inline DescriptionEntity& operator=(DescriptionEntity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DescriptionEntity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DescriptionEntity* internal_default_instance() {
    return reinterpret_cast<const DescriptionEntity*>(
               &_DescriptionEntity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DescriptionEntity* other);
  friend void swap(DescriptionEntity& a, DescriptionEntity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DescriptionEntity* New() const final {
    return CreateMaybeMessage<DescriptionEntity>(nullptr);
  }

  DescriptionEntity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DescriptionEntity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DescriptionEntity& from);
  void MergeFrom(const DescriptionEntity& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DescriptionEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string tags = 4;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 4;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_tags();

  // string short_description = 2;
  void clear_short_description();
  static const int kShortDescriptionFieldNumber = 2;
  const ::std::string& short_description() const;
  void set_short_description(const ::std::string& value);
  #if LANG_CXX11
  void set_short_description(::std::string&& value);
  #endif
  void set_short_description(const char* value);
  void set_short_description(const char* value, size_t size);
  ::std::string* mutable_short_description();
  ::std::string* release_short_description();
  void set_allocated_short_description(::std::string* short_description);

  // .flyteidl.core.Identifier id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::flyteidl::core::Identifier& id() const;
  ::flyteidl::core::Identifier* release_id();
  ::flyteidl::core::Identifier* mutable_id();
  void set_allocated_id(::flyteidl::core::Identifier* id);

  // .flyteidl.admin.LongDescription long_description = 3;
  bool has_long_description() const;
  void clear_long_description();
  static const int kLongDescriptionFieldNumber = 3;
  const ::flyteidl::admin::LongDescription& long_description() const;
  ::flyteidl::admin::LongDescription* release_long_description();
  ::flyteidl::admin::LongDescription* mutable_long_description();
  void set_allocated_long_description(::flyteidl::admin::LongDescription* long_description);

  // .flyteidl.admin.Labels labels = 5;
  bool has_labels() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 5;
  const ::flyteidl::admin::Labels& labels() const;
  ::flyteidl::admin::Labels* release_labels();
  ::flyteidl::admin::Labels* mutable_labels();
  void set_allocated_labels(::flyteidl::admin::Labels* labels);

  // .flyteidl.admin.SourceCode source_code = 6;
  bool has_source_code() const;
  void clear_source_code();
  static const int kSourceCodeFieldNumber = 6;
  const ::flyteidl::admin::SourceCode& source_code() const;
  ::flyteidl::admin::SourceCode* release_source_code();
  ::flyteidl::admin::SourceCode* mutable_source_code();
  void set_allocated_source_code(::flyteidl::admin::SourceCode* source_code);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.DescriptionEntity)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> tags_;
  ::google::protobuf::internal::ArenaStringPtr short_description_;
  ::flyteidl::core::Identifier* id_;
  ::flyteidl::admin::LongDescription* long_description_;
  ::flyteidl::admin::Labels* labels_;
  ::flyteidl::admin::SourceCode* source_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
};
// -------------------------------------------------------------------

class LongDescription final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.LongDescription) */ {
 public:
  LongDescription();
  virtual ~LongDescription();

  LongDescription(const LongDescription& from);

  inline LongDescription& operator=(const LongDescription& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LongDescription(LongDescription&& from) noexcept
    : LongDescription() {
    *this = ::std::move(from);
  }

  inline LongDescription& operator=(LongDescription&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LongDescription& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LongDescription* internal_default_instance() {
    return reinterpret_cast<const LongDescription*>(
               &_LongDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LongDescription* other);
  friend void swap(LongDescription& a, LongDescription& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LongDescription* New() const final {
    return CreateMaybeMessage<LongDescription>(nullptr);
  }

  LongDescription* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LongDescription>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LongDescription& from);
  void MergeFrom(const LongDescription& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LongDescription_DescriptionFormat DescriptionFormat;
  static const DescriptionFormat UNKNOWN =
    LongDescription_DescriptionFormat_UNKNOWN;
  static const DescriptionFormat MARKDOWN =
    LongDescription_DescriptionFormat_MARKDOWN;
  static const DescriptionFormat HTML =
    LongDescription_DescriptionFormat_HTML;
  static const DescriptionFormat RST =
    LongDescription_DescriptionFormat_RST;
  static inline bool DescriptionFormat_IsValid(int value) {
    return LongDescription_DescriptionFormat_IsValid(value);
  }
  static const DescriptionFormat DescriptionFormat_MIN =
    LongDescription_DescriptionFormat_DescriptionFormat_MIN;
  static const DescriptionFormat DescriptionFormat_MAX =
    LongDescription_DescriptionFormat_DescriptionFormat_MAX;
  static const int DescriptionFormat_ARRAYSIZE =
    LongDescription_DescriptionFormat_DescriptionFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DescriptionFormat_descriptor() {
    return LongDescription_DescriptionFormat_descriptor();
  }
  static inline const ::std::string& DescriptionFormat_Name(DescriptionFormat value) {
    return LongDescription_DescriptionFormat_Name(value);
  }
  static inline bool DescriptionFormat_Parse(const ::std::string& name,
      DescriptionFormat* value) {
    return LongDescription_DescriptionFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string values = 1;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values() const;
  void set_values(const ::std::string& value);
  #if LANG_CXX11
  void set_values(::std::string&& value);
  #endif
  void set_values(const char* value);
  void set_values(const char* value, size_t size);
  ::std::string* mutable_values();
  ::std::string* release_values();
  void set_allocated_values(::std::string* values);

  // string uri = 2;
  void clear_uri();
  static const int kUriFieldNumber = 2;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // string icon_link = 4;
  void clear_icon_link();
  static const int kIconLinkFieldNumber = 4;
  const ::std::string& icon_link() const;
  void set_icon_link(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_link(::std::string&& value);
  #endif
  void set_icon_link(const char* value);
  void set_icon_link(const char* value, size_t size);
  ::std::string* mutable_icon_link();
  ::std::string* release_icon_link();
  void set_allocated_icon_link(::std::string* icon_link);

  // .flyteidl.admin.LongDescription.DescriptionFormat long_format = 3;
  void clear_long_format();
  static const int kLongFormatFieldNumber = 3;
  ::flyteidl::admin::LongDescription_DescriptionFormat long_format() const;
  void set_long_format(::flyteidl::admin::LongDescription_DescriptionFormat value);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.LongDescription)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr values_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr icon_link_;
  int long_format_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
};
// -------------------------------------------------------------------

class SourceCode final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.SourceCode) */ {
 public:
  SourceCode();
  virtual ~SourceCode();

  SourceCode(const SourceCode& from);

  inline SourceCode& operator=(const SourceCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SourceCode(SourceCode&& from) noexcept
    : SourceCode() {
    *this = ::std::move(from);
  }

  inline SourceCode& operator=(SourceCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SourceCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SourceCode* internal_default_instance() {
    return reinterpret_cast<const SourceCode*>(
               &_SourceCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SourceCode* other);
  friend void swap(SourceCode& a, SourceCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SourceCode* New() const final {
    return CreateMaybeMessage<SourceCode>(nullptr);
  }

  SourceCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SourceCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SourceCode& from);
  void MergeFrom(const SourceCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SourceCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string link = 5;
  void clear_link();
  static const int kLinkFieldNumber = 5;
  const ::std::string& link() const;
  void set_link(const ::std::string& value);
  #if LANG_CXX11
  void set_link(::std::string&& value);
  #endif
  void set_link(const char* value);
  void set_link(const char* value, size_t size);
  ::std::string* mutable_link();
  ::std::string* release_link();
  void set_allocated_link(::std::string* link);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.SourceCode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr link_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
};
// -------------------------------------------------------------------

class DescriptionEntityCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.DescriptionEntityCreateRequest) */ {
 public:
  DescriptionEntityCreateRequest();
  virtual ~DescriptionEntityCreateRequest();

  DescriptionEntityCreateRequest(const DescriptionEntityCreateRequest& from);

  inline DescriptionEntityCreateRequest& operator=(const DescriptionEntityCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DescriptionEntityCreateRequest(DescriptionEntityCreateRequest&& from) noexcept
    : DescriptionEntityCreateRequest() {
    *this = ::std::move(from);
  }

  inline DescriptionEntityCreateRequest& operator=(DescriptionEntityCreateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DescriptionEntityCreateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DescriptionEntityCreateRequest* internal_default_instance() {
    return reinterpret_cast<const DescriptionEntityCreateRequest*>(
               &_DescriptionEntityCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DescriptionEntityCreateRequest* other);
  friend void swap(DescriptionEntityCreateRequest& a, DescriptionEntityCreateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DescriptionEntityCreateRequest* New() const final {
    return CreateMaybeMessage<DescriptionEntityCreateRequest>(nullptr);
  }

  DescriptionEntityCreateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DescriptionEntityCreateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DescriptionEntityCreateRequest& from);
  void MergeFrom(const DescriptionEntityCreateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DescriptionEntityCreateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.core.Identifier id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::flyteidl::core::Identifier& id() const;
  ::flyteidl::core::Identifier* release_id();
  ::flyteidl::core::Identifier* mutable_id();
  void set_allocated_id(::flyteidl::core::Identifier* id);

  // .flyteidl.admin.DescriptionEntity description_entity = 2;
  bool has_description_entity() const;
  void clear_description_entity();
  static const int kDescriptionEntityFieldNumber = 2;
  const ::flyteidl::admin::DescriptionEntity& description_entity() const;
  ::flyteidl::admin::DescriptionEntity* release_description_entity();
  ::flyteidl::admin::DescriptionEntity* mutable_description_entity();
  void set_allocated_description_entity(::flyteidl::admin::DescriptionEntity* description_entity);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.DescriptionEntityCreateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::core::Identifier* id_;
  ::flyteidl::admin::DescriptionEntity* description_entity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
};
// -------------------------------------------------------------------

class DescriptionEntityCreateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.DescriptionEntityCreateResponse) */ {
 public:
  DescriptionEntityCreateResponse();
  virtual ~DescriptionEntityCreateResponse();

  DescriptionEntityCreateResponse(const DescriptionEntityCreateResponse& from);

  inline DescriptionEntityCreateResponse& operator=(const DescriptionEntityCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DescriptionEntityCreateResponse(DescriptionEntityCreateResponse&& from) noexcept
    : DescriptionEntityCreateResponse() {
    *this = ::std::move(from);
  }

  inline DescriptionEntityCreateResponse& operator=(DescriptionEntityCreateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DescriptionEntityCreateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DescriptionEntityCreateResponse* internal_default_instance() {
    return reinterpret_cast<const DescriptionEntityCreateResponse*>(
               &_DescriptionEntityCreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DescriptionEntityCreateResponse* other);
  friend void swap(DescriptionEntityCreateResponse& a, DescriptionEntityCreateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DescriptionEntityCreateResponse* New() const final {
    return CreateMaybeMessage<DescriptionEntityCreateResponse>(nullptr);
  }

  DescriptionEntityCreateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DescriptionEntityCreateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DescriptionEntityCreateResponse& from);
  void MergeFrom(const DescriptionEntityCreateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DescriptionEntityCreateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.DescriptionEntityCreateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DescriptionEntity

// .flyteidl.core.Identifier id = 1;
inline bool DescriptionEntity::has_id() const {
  return this != internal_default_instance() && id_ != nullptr;
}
inline const ::flyteidl::core::Identifier& DescriptionEntity::id() const {
  const ::flyteidl::core::Identifier* p = id_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntity.id)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::core::Identifier*>(
      &::flyteidl::core::_Identifier_default_instance_);
}
inline ::flyteidl::core::Identifier* DescriptionEntity::release_id() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.DescriptionEntity.id)
  
  ::flyteidl::core::Identifier* temp = id_;
  id_ = nullptr;
  return temp;
}
inline ::flyteidl::core::Identifier* DescriptionEntity::mutable_id() {
  
  if (id_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::core::Identifier>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntity.id)
  return id_;
}
inline void DescriptionEntity::set_allocated_id(::flyteidl::core::Identifier* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.DescriptionEntity.id)
}

// string short_description = 2;
inline void DescriptionEntity::clear_short_description() {
  short_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DescriptionEntity::short_description() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntity.short_description)
  return short_description_.GetNoArena();
}
inline void DescriptionEntity::set_short_description(const ::std::string& value) {
  
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.DescriptionEntity.short_description)
}
#if LANG_CXX11
inline void DescriptionEntity::set_short_description(::std::string&& value) {
  
  short_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.DescriptionEntity.short_description)
}
#endif
inline void DescriptionEntity::set_short_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.DescriptionEntity.short_description)
}
inline void DescriptionEntity::set_short_description(const char* value, size_t size) {
  
  short_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.DescriptionEntity.short_description)
}
inline ::std::string* DescriptionEntity::mutable_short_description() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntity.short_description)
  return short_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DescriptionEntity::release_short_description() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.DescriptionEntity.short_description)
  
  return short_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DescriptionEntity::set_allocated_short_description(::std::string* short_description) {
  if (short_description != nullptr) {
    
  } else {
    
  }
  short_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_description);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.DescriptionEntity.short_description)
}

// .flyteidl.admin.LongDescription long_description = 3;
inline bool DescriptionEntity::has_long_description() const {
  return this != internal_default_instance() && long_description_ != nullptr;
}
inline void DescriptionEntity::clear_long_description() {
  if (GetArenaNoVirtual() == nullptr && long_description_ != nullptr) {
    delete long_description_;
  }
  long_description_ = nullptr;
}
inline const ::flyteidl::admin::LongDescription& DescriptionEntity::long_description() const {
  const ::flyteidl::admin::LongDescription* p = long_description_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntity.long_description)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::LongDescription*>(
      &::flyteidl::admin::_LongDescription_default_instance_);
}
inline ::flyteidl::admin::LongDescription* DescriptionEntity::release_long_description() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.DescriptionEntity.long_description)
  
  ::flyteidl::admin::LongDescription* temp = long_description_;
  long_description_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::LongDescription* DescriptionEntity::mutable_long_description() {
  
  if (long_description_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::LongDescription>(GetArenaNoVirtual());
    long_description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntity.long_description)
  return long_description_;
}
inline void DescriptionEntity::set_allocated_long_description(::flyteidl::admin::LongDescription* long_description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete long_description_;
  }
  if (long_description) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      long_description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, long_description, submessage_arena);
    }
    
  } else {
    
  }
  long_description_ = long_description;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.DescriptionEntity.long_description)
}

// repeated string tags = 4;
inline int DescriptionEntity::tags_size() const {
  return tags_.size();
}
inline void DescriptionEntity::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& DescriptionEntity::tags(int index) const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntity.tags)
  return tags_.Get(index);
}
inline ::std::string* DescriptionEntity::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntity.tags)
  return tags_.Mutable(index);
}
inline void DescriptionEntity::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:flyteidl.admin.DescriptionEntity.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DescriptionEntity::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:flyteidl.admin.DescriptionEntity.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DescriptionEntity::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.DescriptionEntity.tags)
}
inline void DescriptionEntity::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.DescriptionEntity.tags)
}
inline ::std::string* DescriptionEntity::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:flyteidl.admin.DescriptionEntity.tags)
  return tags_.Add();
}
inline void DescriptionEntity::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:flyteidl.admin.DescriptionEntity.tags)
}
#if LANG_CXX11
inline void DescriptionEntity::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:flyteidl.admin.DescriptionEntity.tags)
}
#endif
inline void DescriptionEntity::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:flyteidl.admin.DescriptionEntity.tags)
}
inline void DescriptionEntity::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:flyteidl.admin.DescriptionEntity.tags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
DescriptionEntity::tags() const {
  // @@protoc_insertion_point(field_list:flyteidl.admin.DescriptionEntity.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
DescriptionEntity::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:flyteidl.admin.DescriptionEntity.tags)
  return &tags_;
}

// .flyteidl.admin.Labels labels = 5;
inline bool DescriptionEntity::has_labels() const {
  return this != internal_default_instance() && labels_ != nullptr;
}
inline const ::flyteidl::admin::Labels& DescriptionEntity::labels() const {
  const ::flyteidl::admin::Labels* p = labels_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntity.labels)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::Labels*>(
      &::flyteidl::admin::_Labels_default_instance_);
}
inline ::flyteidl::admin::Labels* DescriptionEntity::release_labels() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.DescriptionEntity.labels)
  
  ::flyteidl::admin::Labels* temp = labels_;
  labels_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::Labels* DescriptionEntity::mutable_labels() {
  
  if (labels_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::Labels>(GetArenaNoVirtual());
    labels_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntity.labels)
  return labels_;
}
inline void DescriptionEntity::set_allocated_labels(::flyteidl::admin::Labels* labels) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(labels_);
  }
  if (labels) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      labels = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, labels, submessage_arena);
    }
    
  } else {
    
  }
  labels_ = labels;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.DescriptionEntity.labels)
}

// .flyteidl.admin.SourceCode source_code = 6;
inline bool DescriptionEntity::has_source_code() const {
  return this != internal_default_instance() && source_code_ != nullptr;
}
inline void DescriptionEntity::clear_source_code() {
  if (GetArenaNoVirtual() == nullptr && source_code_ != nullptr) {
    delete source_code_;
  }
  source_code_ = nullptr;
}
inline const ::flyteidl::admin::SourceCode& DescriptionEntity::source_code() const {
  const ::flyteidl::admin::SourceCode* p = source_code_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntity.source_code)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::SourceCode*>(
      &::flyteidl::admin::_SourceCode_default_instance_);
}
inline ::flyteidl::admin::SourceCode* DescriptionEntity::release_source_code() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.DescriptionEntity.source_code)
  
  ::flyteidl::admin::SourceCode* temp = source_code_;
  source_code_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::SourceCode* DescriptionEntity::mutable_source_code() {
  
  if (source_code_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::SourceCode>(GetArenaNoVirtual());
    source_code_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntity.source_code)
  return source_code_;
}
inline void DescriptionEntity::set_allocated_source_code(::flyteidl::admin::SourceCode* source_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete source_code_;
  }
  if (source_code) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      source_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_code, submessage_arena);
    }
    
  } else {
    
  }
  source_code_ = source_code;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.DescriptionEntity.source_code)
}

// -------------------------------------------------------------------

// LongDescription

// string values = 1;
inline void LongDescription::clear_values() {
  values_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LongDescription::values() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.LongDescription.values)
  return values_.GetNoArena();
}
inline void LongDescription::set_values(const ::std::string& value) {
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.LongDescription.values)
}
#if LANG_CXX11
inline void LongDescription::set_values(::std::string&& value) {
  
  values_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.LongDescription.values)
}
#endif
inline void LongDescription::set_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.LongDescription.values)
}
inline void LongDescription::set_values(const char* value, size_t size) {
  
  values_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.LongDescription.values)
}
inline ::std::string* LongDescription::mutable_values() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.LongDescription.values)
  return values_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LongDescription::release_values() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.LongDescription.values)
  
  return values_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LongDescription::set_allocated_values(::std::string* values) {
  if (values != nullptr) {
    
  } else {
    
  }
  values_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), values);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.LongDescription.values)
}

// string uri = 2;
inline void LongDescription::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LongDescription::uri() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.LongDescription.uri)
  return uri_.GetNoArena();
}
inline void LongDescription::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.LongDescription.uri)
}
#if LANG_CXX11
inline void LongDescription::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.LongDescription.uri)
}
#endif
inline void LongDescription::set_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.LongDescription.uri)
}
inline void LongDescription::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.LongDescription.uri)
}
inline ::std::string* LongDescription::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.LongDescription.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LongDescription::release_uri() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.LongDescription.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LongDescription::set_allocated_uri(::std::string* uri) {
  if (uri != nullptr) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.LongDescription.uri)
}

// .flyteidl.admin.LongDescription.DescriptionFormat long_format = 3;
inline void LongDescription::clear_long_format() {
  long_format_ = 0;
}
inline ::flyteidl::admin::LongDescription_DescriptionFormat LongDescription::long_format() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.LongDescription.long_format)
  return static_cast< ::flyteidl::admin::LongDescription_DescriptionFormat >(long_format_);
}
inline void LongDescription::set_long_format(::flyteidl::admin::LongDescription_DescriptionFormat value) {
  
  long_format_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.admin.LongDescription.long_format)
}

// string icon_link = 4;
inline void LongDescription::clear_icon_link() {
  icon_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LongDescription::icon_link() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.LongDescription.icon_link)
  return icon_link_.GetNoArena();
}
inline void LongDescription::set_icon_link(const ::std::string& value) {
  
  icon_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.LongDescription.icon_link)
}
#if LANG_CXX11
inline void LongDescription::set_icon_link(::std::string&& value) {
  
  icon_link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.LongDescription.icon_link)
}
#endif
inline void LongDescription::set_icon_link(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  icon_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.LongDescription.icon_link)
}
inline void LongDescription::set_icon_link(const char* value, size_t size) {
  
  icon_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.LongDescription.icon_link)
}
inline ::std::string* LongDescription::mutable_icon_link() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.LongDescription.icon_link)
  return icon_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LongDescription::release_icon_link() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.LongDescription.icon_link)
  
  return icon_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LongDescription::set_allocated_icon_link(::std::string* icon_link) {
  if (icon_link != nullptr) {
    
  } else {
    
  }
  icon_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_link);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.LongDescription.icon_link)
}

// -------------------------------------------------------------------

// SourceCode

// string link = 5;
inline void SourceCode::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SourceCode::link() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.SourceCode.link)
  return link_.GetNoArena();
}
inline void SourceCode::set_link(const ::std::string& value) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.SourceCode.link)
}
#if LANG_CXX11
inline void SourceCode::set_link(::std::string&& value) {
  
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.SourceCode.link)
}
#endif
inline void SourceCode::set_link(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.SourceCode.link)
}
inline void SourceCode::set_link(const char* value, size_t size) {
  
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.SourceCode.link)
}
inline ::std::string* SourceCode::mutable_link() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.SourceCode.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SourceCode::release_link() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.SourceCode.link)
  
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SourceCode::set_allocated_link(::std::string* link) {
  if (link != nullptr) {
    
  } else {
    
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.SourceCode.link)
}

// -------------------------------------------------------------------

// DescriptionEntityCreateRequest

// .flyteidl.core.Identifier id = 1;
inline bool DescriptionEntityCreateRequest::has_id() const {
  return this != internal_default_instance() && id_ != nullptr;
}
inline const ::flyteidl::core::Identifier& DescriptionEntityCreateRequest::id() const {
  const ::flyteidl::core::Identifier* p = id_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntityCreateRequest.id)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::core::Identifier*>(
      &::flyteidl::core::_Identifier_default_instance_);
}
inline ::flyteidl::core::Identifier* DescriptionEntityCreateRequest::release_id() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.DescriptionEntityCreateRequest.id)
  
  ::flyteidl::core::Identifier* temp = id_;
  id_ = nullptr;
  return temp;
}
inline ::flyteidl::core::Identifier* DescriptionEntityCreateRequest::mutable_id() {
  
  if (id_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::core::Identifier>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntityCreateRequest.id)
  return id_;
}
inline void DescriptionEntityCreateRequest::set_allocated_id(::flyteidl::core::Identifier* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.DescriptionEntityCreateRequest.id)
}

// .flyteidl.admin.DescriptionEntity description_entity = 2;
inline bool DescriptionEntityCreateRequest::has_description_entity() const {
  return this != internal_default_instance() && description_entity_ != nullptr;
}
inline void DescriptionEntityCreateRequest::clear_description_entity() {
  if (GetArenaNoVirtual() == nullptr && description_entity_ != nullptr) {
    delete description_entity_;
  }
  description_entity_ = nullptr;
}
inline const ::flyteidl::admin::DescriptionEntity& DescriptionEntityCreateRequest::description_entity() const {
  const ::flyteidl::admin::DescriptionEntity* p = description_entity_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.DescriptionEntityCreateRequest.description_entity)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::DescriptionEntity*>(
      &::flyteidl::admin::_DescriptionEntity_default_instance_);
}
inline ::flyteidl::admin::DescriptionEntity* DescriptionEntityCreateRequest::release_description_entity() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.DescriptionEntityCreateRequest.description_entity)
  
  ::flyteidl::admin::DescriptionEntity* temp = description_entity_;
  description_entity_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::DescriptionEntity* DescriptionEntityCreateRequest::mutable_description_entity() {
  
  if (description_entity_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::DescriptionEntity>(GetArenaNoVirtual());
    description_entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.DescriptionEntityCreateRequest.description_entity)
  return description_entity_;
}
inline void DescriptionEntityCreateRequest::set_allocated_description_entity(::flyteidl::admin::DescriptionEntity* description_entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete description_entity_;
  }
  if (description_entity) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      description_entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description_entity, submessage_arena);
    }
    
  } else {
    
  }
  description_entity_ = description_entity;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.DescriptionEntityCreateRequest.description_entity)
}

// -------------------------------------------------------------------

// DescriptionEntityCreateResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace flyteidl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::flyteidl::admin::LongDescription_DescriptionFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::admin::LongDescription_DescriptionFormat>() {
  return ::flyteidl::admin::LongDescription_DescriptionFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fadmin_2fdescription_5fentity_2eproto
