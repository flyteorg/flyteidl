// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/catalog.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Indicates the status of CatalogCaching. The reason why this is not embedded in TaskNodeMetadata is, that we may use for other types of nodes as well in the future
type CatalogCacheStatus int32

const (
	// Used to indicate that caching was disabled
	CatalogCacheStatus_CACHE_DISABLED CatalogCacheStatus = 0
	// Used to indicate that the cache lookup resulted in no matches
	CatalogCacheStatus_CACHE_MISS CatalogCacheStatus = 1
	// used to indicate that the associated artifact was a result of a previous execution
	CatalogCacheStatus_CACHE_HIT CatalogCacheStatus = 2
	// used to indicate that the resultant artifact was added to the cache
	CatalogCacheStatus_CACHE_POPULATED CatalogCacheStatus = 3
	// Used to indicate that cache lookup failed because of an error
	CatalogCacheStatus_CACHE_LOOKUP_FAILURE CatalogCacheStatus = 4
	// Used to indicate that cache lookup failed because of an error
	CatalogCacheStatus_CACHE_PUT_FAILURE CatalogCacheStatus = 5
	// Used to indicate the cache lookup was skipped
	CatalogCacheStatus_CACHE_SKIPPED CatalogCacheStatus = 6
)

var CatalogCacheStatus_name = map[int32]string{
	0: "CACHE_DISABLED",
	1: "CACHE_MISS",
	2: "CACHE_HIT",
	3: "CACHE_POPULATED",
	4: "CACHE_LOOKUP_FAILURE",
	5: "CACHE_PUT_FAILURE",
	6: "CACHE_SKIPPED",
}

var CatalogCacheStatus_value = map[string]int32{
	"CACHE_DISABLED":       0,
	"CACHE_MISS":           1,
	"CACHE_HIT":            2,
	"CACHE_POPULATED":      3,
	"CACHE_LOOKUP_FAILURE": 4,
	"CACHE_PUT_FAILURE":    5,
	"CACHE_SKIPPED":        6,
}

func (x CatalogCacheStatus) String() string {
	return proto.EnumName(CatalogCacheStatus_name, int32(x))
}

func (CatalogCacheStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_534f5d1443565574, []int{0}
}

// Indicates the status of a catalog reservation operation.
type CatalogReservation_Status int32

const (
	// Used to indicate that reservations are disabled
	CatalogReservation_RESERVATION_DISABLED CatalogReservation_Status = 0
	// Used to indicate that a reservation was successfully acquired or extended
	CatalogReservation_RESERVATION_ACQUIRED CatalogReservation_Status = 1
	// Used to indicate that an active reservation currently exists
	CatalogReservation_RESERVATION_EXISTS CatalogReservation_Status = 2
	// Used to indicate that the reservation has been successfully released
	CatalogReservation_RESERVATION_RELEASED CatalogReservation_Status = 3
	// Used to indicate that a reservation operation resulted in failure
	CatalogReservation_RESERVATION_FAILURE CatalogReservation_Status = 4
)

var CatalogReservation_Status_name = map[int32]string{
	0: "RESERVATION_DISABLED",
	1: "RESERVATION_ACQUIRED",
	2: "RESERVATION_EXISTS",
	3: "RESERVATION_RELEASED",
	4: "RESERVATION_FAILURE",
}

var CatalogReservation_Status_value = map[string]int32{
	"RESERVATION_DISABLED": 0,
	"RESERVATION_ACQUIRED": 1,
	"RESERVATION_EXISTS":   2,
	"RESERVATION_RELEASED": 3,
	"RESERVATION_FAILURE":  4,
}

func (x CatalogReservation_Status) String() string {
	return proto.EnumName(CatalogReservation_Status_name, int32(x))
}

func (CatalogReservation_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_534f5d1443565574, []int{2, 0}
}

type CatalogArtifactTag struct {
	// Artifact ID is generated name
	ArtifactId string `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// Flyte computes the tag automatically, as the hash of the values
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CatalogArtifactTag) Reset()         { *m = CatalogArtifactTag{} }
func (m *CatalogArtifactTag) String() string { return proto.CompactTextString(m) }
func (*CatalogArtifactTag) ProtoMessage()    {}
func (*CatalogArtifactTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_534f5d1443565574, []int{0}
}

func (m *CatalogArtifactTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatalogArtifactTag.Unmarshal(m, b)
}
func (m *CatalogArtifactTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatalogArtifactTag.Marshal(b, m, deterministic)
}
func (m *CatalogArtifactTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogArtifactTag.Merge(m, src)
}
func (m *CatalogArtifactTag) XXX_Size() int {
	return xxx_messageInfo_CatalogArtifactTag.Size(m)
}
func (m *CatalogArtifactTag) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogArtifactTag.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogArtifactTag proto.InternalMessageInfo

func (m *CatalogArtifactTag) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *CatalogArtifactTag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Catalog artifact information with specific metadata
type CatalogMetadata struct {
	// Dataset ID in the catalog
	DatasetId *Identifier `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Artifact tag in the catalog
	ArtifactTag *CatalogArtifactTag `protobuf:"bytes,2,opt,name=artifact_tag,json=artifactTag,proto3" json:"artifact_tag,omitempty"`
	// Optional: Source Execution identifier, if this dataset was generated by another execution in Flyte. This is a one-of field and will depend on the caching context
	//
	// Types that are valid to be assigned to SourceExecution:
	//	*CatalogMetadata_SourceTaskExecution
	SourceExecution      isCatalogMetadata_SourceExecution `protobuf_oneof:"source_execution"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CatalogMetadata) Reset()         { *m = CatalogMetadata{} }
func (m *CatalogMetadata) String() string { return proto.CompactTextString(m) }
func (*CatalogMetadata) ProtoMessage()    {}
func (*CatalogMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_534f5d1443565574, []int{1}
}

func (m *CatalogMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatalogMetadata.Unmarshal(m, b)
}
func (m *CatalogMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatalogMetadata.Marshal(b, m, deterministic)
}
func (m *CatalogMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogMetadata.Merge(m, src)
}
func (m *CatalogMetadata) XXX_Size() int {
	return xxx_messageInfo_CatalogMetadata.Size(m)
}
func (m *CatalogMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogMetadata proto.InternalMessageInfo

func (m *CatalogMetadata) GetDatasetId() *Identifier {
	if m != nil {
		return m.DatasetId
	}
	return nil
}

func (m *CatalogMetadata) GetArtifactTag() *CatalogArtifactTag {
	if m != nil {
		return m.ArtifactTag
	}
	return nil
}

type isCatalogMetadata_SourceExecution interface {
	isCatalogMetadata_SourceExecution()
}

type CatalogMetadata_SourceTaskExecution struct {
	SourceTaskExecution *TaskExecutionIdentifier `protobuf:"bytes,3,opt,name=source_task_execution,json=sourceTaskExecution,proto3,oneof"`
}

func (*CatalogMetadata_SourceTaskExecution) isCatalogMetadata_SourceExecution() {}

func (m *CatalogMetadata) GetSourceExecution() isCatalogMetadata_SourceExecution {
	if m != nil {
		return m.SourceExecution
	}
	return nil
}

func (m *CatalogMetadata) GetSourceTaskExecution() *TaskExecutionIdentifier {
	if x, ok := m.GetSourceExecution().(*CatalogMetadata_SourceTaskExecution); ok {
		return x.SourceTaskExecution
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CatalogMetadata) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CatalogMetadata_SourceTaskExecution)(nil),
	}
}

type CatalogReservation struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CatalogReservation) Reset()         { *m = CatalogReservation{} }
func (m *CatalogReservation) String() string { return proto.CompactTextString(m) }
func (*CatalogReservation) ProtoMessage()    {}
func (*CatalogReservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_534f5d1443565574, []int{2}
}

func (m *CatalogReservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CatalogReservation.Unmarshal(m, b)
}
func (m *CatalogReservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CatalogReservation.Marshal(b, m, deterministic)
}
func (m *CatalogReservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogReservation.Merge(m, src)
}
func (m *CatalogReservation) XXX_Size() int {
	return xxx_messageInfo_CatalogReservation.Size(m)
}
func (m *CatalogReservation) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogReservation.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogReservation proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("flyteidl.core.CatalogCacheStatus", CatalogCacheStatus_name, CatalogCacheStatus_value)
	proto.RegisterEnum("flyteidl.core.CatalogReservation_Status", CatalogReservation_Status_name, CatalogReservation_Status_value)
	proto.RegisterType((*CatalogArtifactTag)(nil), "flyteidl.core.CatalogArtifactTag")
	proto.RegisterType((*CatalogMetadata)(nil), "flyteidl.core.CatalogMetadata")
	proto.RegisterType((*CatalogReservation)(nil), "flyteidl.core.CatalogReservation")
}

func init() { proto.RegisterFile("flyteidl/core/catalog.proto", fileDescriptor_534f5d1443565574) }

var fileDescriptor_534f5d1443565574 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x5d, 0xba, 0xfd, 0x2a, 0xf5, 0xf6, 0xd7, 0xcd, 0x73, 0x37, 0x08, 0x20, 0xf1, 0xa7, 0x0f,
	0x08, 0x21, 0x91, 0x48, 0x03, 0x21, 0x5e, 0xd3, 0xc4, 0xa8, 0xd6, 0x32, 0x1a, 0xec, 0x04, 0x21,
	0x84, 0x54, 0xb9, 0x89, 0x9b, 0x45, 0xeb, 0xea, 0x29, 0x71, 0x11, 0x3c, 0xf3, 0xc0, 0xb7, 0x40,
	0x7c, 0x54, 0xd4, 0x24, 0x4d, 0xff, 0xf0, 0x94, 0xdc, 0x73, 0xce, 0x3d, 0xf7, 0xd8, 0xbe, 0xf0,
	0x68, 0x36, 0xff, 0xa1, 0x65, 0x96, 0xcc, 0xed, 0x58, 0xe5, 0xd2, 0x8e, 0x85, 0x16, 0x73, 0x95,
	0x5a, 0x77, 0xb9, 0xd2, 0x0a, 0xf7, 0xd6, 0xa4, 0xb5, 0x22, 0x1f, 0x3e, 0xde, 0xd5, 0x66, 0x89,
	0x5c, 0xe8, 0x6c, 0x96, 0xc9, 0xbc, 0x92, 0x0f, 0x28, 0x60, 0xb7, 0xea, 0x77, 0x72, 0x9d, 0xcd,
	0x44, 0xac, 0x43, 0x91, 0xe2, 0x27, 0xd0, 0x15, 0x75, 0x39, 0xc9, 0x12, 0xd3, 0x78, 0x6a, 0xbc,
	0xe8, 0x30, 0x58, 0x43, 0x34, 0xc1, 0x18, 0x8e, 0x16, 0xe2, 0x56, 0x9a, 0xad, 0x92, 0x29, 0xff,
	0x07, 0x3f, 0x5b, 0x70, 0x52, 0x7b, 0x5d, 0x49, 0x2d, 0x12, 0xa1, 0x05, 0x7e, 0x07, 0xb0, 0xfa,
	0x16, 0xb2, 0xf1, 0xe9, 0x5e, 0x3c, 0xb0, 0x76, 0x22, 0x5a, 0xb4, 0xc9, 0xc4, 0x3a, 0xb5, 0x98,
	0x26, 0xd8, 0x83, 0xff, 0x9b, 0x08, 0x5a, 0xa4, 0xe5, 0xa4, 0xee, 0xc5, 0xb3, 0xbd, 0xde, 0x7f,
	0xb3, 0xb3, 0x26, 0xf9, 0xea, 0x20, 0x5f, 0xe1, 0xbc, 0x50, 0xcb, 0x3c, 0x96, 0x13, 0x2d, 0x8a,
	0x9b, 0x89, 0xfc, 0x2e, 0xe3, 0xa5, 0xce, 0xd4, 0xc2, 0x3c, 0x2c, 0xed, 0x9e, 0xef, 0xd9, 0x85,
	0xa2, 0xb8, 0x21, 0x6b, 0xcd, 0x26, 0xd7, 0xe8, 0x80, 0xf5, 0x2b, 0x9b, 0x1d, 0xc1, 0x10, 0x03,
	0xaa, 0xdd, 0x1b, 0xe3, 0xc1, 0x6f, 0xa3, 0xb9, 0x51, 0x26, 0x0b, 0x99, 0x7f, 0x13, 0x25, 0xfc,
	0xcb, 0x80, 0x36, 0xd7, 0x42, 0x2f, 0x0b, 0x6c, 0xc2, 0x19, 0x23, 0x9c, 0xb0, 0x4f, 0x4e, 0x48,
	0xc7, 0x1f, 0x26, 0x1e, 0xe5, 0xce, 0xd0, 0x27, 0x1e, 0x3a, 0xd8, 0x67, 0x1c, 0xf7, 0x63, 0x44,
	0x19, 0xf1, 0x90, 0x81, 0xef, 0x01, 0xde, 0x66, 0xc8, 0x67, 0xca, 0x43, 0x8e, 0x5a, 0xfb, 0x1d,
	0x8c, 0xf8, 0xc4, 0xe1, 0xc4, 0x43, 0x87, 0xf8, 0x3e, 0xf4, 0xb7, 0x99, 0xf7, 0x0e, 0xf5, 0x23,
	0x46, 0xd0, 0xd1, 0xcb, 0x3f, 0x9b, 0x80, 0xae, 0x88, 0xaf, 0x65, 0x9d, 0x0a, 0xc3, 0xb1, 0xeb,
	0xb8, 0x23, 0xb2, 0x9d, 0xe7, 0x18, 0xa0, 0xc2, 0xae, 0x28, 0xe7, 0xc8, 0xc0, 0x3d, 0xe8, 0x54,
	0xf5, 0x88, 0x86, 0xa8, 0x85, 0xfb, 0x70, 0x52, 0x95, 0xc1, 0x38, 0x88, 0x7c, 0x27, 0x2c, 0xe7,
	0x9a, 0x70, 0x56, 0x81, 0xfe, 0x78, 0x7c, 0x19, 0x05, 0x9b, 0xc1, 0xf8, 0x1c, 0x4e, 0x6b, 0x79,
	0x14, 0x36, 0xf0, 0x7f, 0xf8, 0x14, 0x7a, 0x15, 0xcc, 0x2f, 0x69, 0x10, 0x10, 0x0f, 0xb5, 0x87,
	0x6f, 0xbf, 0xbc, 0x49, 0x33, 0x7d, 0xbd, 0x9c, 0x5a, 0xb1, 0xba, 0xb5, 0xcb, 0x27, 0x52, 0x79,
	0x6a, 0x37, 0xab, 0x9c, 0xca, 0x85, 0x7d, 0x37, 0x7d, 0x95, 0x2a, 0x7b, 0x67, 0xbb, 0xa7, 0xed,
	0x72, 0xa7, 0x5f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x98, 0xf7, 0xa0, 0x21, 0x03, 0x00,
	0x00,
}
