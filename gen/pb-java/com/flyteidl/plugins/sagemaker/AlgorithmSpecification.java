// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/training_job.proto

package com.flyteidl.plugins.sagemaker;

/**
 * <pre>
 * Specifies the training algorithm to be used in the training job
 * This object is mostly a pass-through, with a couple of exceptions include: (1) in Flyte, users don't need to specify
 * TrainingImage; either use the built-in algorithm mode by using Flytekit's Simple Training Job and specifying an algorithm
 * name and an algorithm version or (2) when users want to supply custom algorithms they should set algorithm_name field to
 * CUSTOM. In this case, the value of the algorithm_version field has no effect
 * For pass-through use cases: refer to this AWS official document for more details
 * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
 * </pre>
 *
 * Protobuf type {@code flyteidl.plugins.sagemaker.AlgorithmSpecification}
 */
public final class AlgorithmSpecification extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.plugins.sagemaker.AlgorithmSpecification)
    AlgorithmSpecificationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AlgorithmSpecification.newBuilder() to construct.
  private AlgorithmSpecification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AlgorithmSpecification() {
    inputMode_ = 0;
    algorithmName_ = 0;
    algorithmVersion_ = "";
    metricDefinitions_ = java.util.Collections.emptyList();
    inputContentType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AlgorithmSpecification();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AlgorithmSpecification(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            inputMode_ = rawValue;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            algorithmName_ = rawValue;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            algorithmVersion_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              metricDefinitions_ = new java.util.ArrayList<com.flyteidl.plugins.sagemaker.MetricDefinition>();
              mutable_bitField0_ |= 0x00000001;
            }
            metricDefinitions_.add(
                input.readMessage(com.flyteidl.plugins.sagemaker.MetricDefinition.parser(), extensionRegistry));
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            inputContentType_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        metricDefinitions_ = java.util.Collections.unmodifiableList(metricDefinitions_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.plugins.sagemaker.TrainingJobProto.internal_static_flyteidl_plugins_sagemaker_AlgorithmSpecification_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.plugins.sagemaker.TrainingJobProto.internal_static_flyteidl_plugins_sagemaker_AlgorithmSpecification_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.plugins.sagemaker.AlgorithmSpecification.class, com.flyteidl.plugins.sagemaker.AlgorithmSpecification.Builder.class);
  }

  public static final int INPUT_MODE_FIELD_NUMBER = 1;
  private int inputMode_;
  /**
   * <pre>
   * The input mode can be either PIPE or FILE
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
   * @return The enum numeric value on the wire for inputMode.
   */
  @java.lang.Override public int getInputModeValue() {
    return inputMode_;
  }
  /**
   * <pre>
   * The input mode can be either PIPE or FILE
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
   * @return The inputMode.
   */
  @java.lang.Override public com.flyteidl.plugins.sagemaker.InputMode.Value getInputMode() {
    @SuppressWarnings("deprecation")
    com.flyteidl.plugins.sagemaker.InputMode.Value result = com.flyteidl.plugins.sagemaker.InputMode.Value.valueOf(inputMode_);
    return result == null ? com.flyteidl.plugins.sagemaker.InputMode.Value.UNRECOGNIZED : result;
  }

  public static final int ALGORITHM_NAME_FIELD_NUMBER = 2;
  private int algorithmName_;
  /**
   * <pre>
   * The algorithm name is used for deciding which pre-built image to point to
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
   * @return The enum numeric value on the wire for algorithmName.
   */
  @java.lang.Override public int getAlgorithmNameValue() {
    return algorithmName_;
  }
  /**
   * <pre>
   * The algorithm name is used for deciding which pre-built image to point to
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
   * @return The algorithmName.
   */
  @java.lang.Override public com.flyteidl.plugins.sagemaker.AlgorithmName.Value getAlgorithmName() {
    @SuppressWarnings("deprecation")
    com.flyteidl.plugins.sagemaker.AlgorithmName.Value result = com.flyteidl.plugins.sagemaker.AlgorithmName.Value.valueOf(algorithmName_);
    return result == null ? com.flyteidl.plugins.sagemaker.AlgorithmName.Value.UNRECOGNIZED : result;
  }

  public static final int ALGORITHM_VERSION_FIELD_NUMBER = 3;
  private volatile java.lang.Object algorithmVersion_;
  /**
   * <pre>
   * The algorithm version field is used for deciding which pre-built image to point to
   * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
   * </pre>
   *
   * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
   * @return The algorithmVersion.
   */
  @java.lang.Override
  public java.lang.String getAlgorithmVersion() {
    java.lang.Object ref = algorithmVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      algorithmVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The algorithm version field is used for deciding which pre-built image to point to
   * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
   * </pre>
   *
   * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
   * @return The bytes for algorithmVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAlgorithmVersionBytes() {
    java.lang.Object ref = algorithmVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      algorithmVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int METRIC_DEFINITIONS_FIELD_NUMBER = 4;
  private java.util.List<com.flyteidl.plugins.sagemaker.MetricDefinition> metricDefinitions_;
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  @java.lang.Override
  public java.util.List<com.flyteidl.plugins.sagemaker.MetricDefinition> getMetricDefinitionsList() {
    return metricDefinitions_;
  }
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder> 
      getMetricDefinitionsOrBuilderList() {
    return metricDefinitions_;
  }
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  @java.lang.Override
  public int getMetricDefinitionsCount() {
    return metricDefinitions_.size();
  }
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  @java.lang.Override
  public com.flyteidl.plugins.sagemaker.MetricDefinition getMetricDefinitions(int index) {
    return metricDefinitions_.get(index);
  }
  /**
   * <pre>
   * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
   * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
   * </pre>
   *
   * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
   */
  @java.lang.Override
  public com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder getMetricDefinitionsOrBuilder(
      int index) {
    return metricDefinitions_.get(index);
  }

  public static final int INPUT_CONTENT_TYPE_FIELD_NUMBER = 5;
  private int inputContentType_;
  /**
   * <pre>
   * The content type of the input
   * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
   * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
   * @return The enum numeric value on the wire for inputContentType.
   */
  @java.lang.Override public int getInputContentTypeValue() {
    return inputContentType_;
  }
  /**
   * <pre>
   * The content type of the input
   * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
   * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
   * @return The inputContentType.
   */
  @java.lang.Override public com.flyteidl.plugins.sagemaker.InputContentType.Value getInputContentType() {
    @SuppressWarnings("deprecation")
    com.flyteidl.plugins.sagemaker.InputContentType.Value result = com.flyteidl.plugins.sagemaker.InputContentType.Value.valueOf(inputContentType_);
    return result == null ? com.flyteidl.plugins.sagemaker.InputContentType.Value.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (inputMode_ != com.flyteidl.plugins.sagemaker.InputMode.Value.FILE.getNumber()) {
      output.writeEnum(1, inputMode_);
    }
    if (algorithmName_ != com.flyteidl.plugins.sagemaker.AlgorithmName.Value.CUSTOM.getNumber()) {
      output.writeEnum(2, algorithmName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(algorithmVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, algorithmVersion_);
    }
    for (int i = 0; i < metricDefinitions_.size(); i++) {
      output.writeMessage(4, metricDefinitions_.get(i));
    }
    if (inputContentType_ != com.flyteidl.plugins.sagemaker.InputContentType.Value.TEXT_CSV.getNumber()) {
      output.writeEnum(5, inputContentType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (inputMode_ != com.flyteidl.plugins.sagemaker.InputMode.Value.FILE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, inputMode_);
    }
    if (algorithmName_ != com.flyteidl.plugins.sagemaker.AlgorithmName.Value.CUSTOM.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, algorithmName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(algorithmVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, algorithmVersion_);
    }
    for (int i = 0; i < metricDefinitions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, metricDefinitions_.get(i));
    }
    if (inputContentType_ != com.flyteidl.plugins.sagemaker.InputContentType.Value.TEXT_CSV.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, inputContentType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.plugins.sagemaker.AlgorithmSpecification)) {
      return super.equals(obj);
    }
    com.flyteidl.plugins.sagemaker.AlgorithmSpecification other = (com.flyteidl.plugins.sagemaker.AlgorithmSpecification) obj;

    if (inputMode_ != other.inputMode_) return false;
    if (algorithmName_ != other.algorithmName_) return false;
    if (!getAlgorithmVersion()
        .equals(other.getAlgorithmVersion())) return false;
    if (!getMetricDefinitionsList()
        .equals(other.getMetricDefinitionsList())) return false;
    if (inputContentType_ != other.inputContentType_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INPUT_MODE_FIELD_NUMBER;
    hash = (53 * hash) + inputMode_;
    hash = (37 * hash) + ALGORITHM_NAME_FIELD_NUMBER;
    hash = (53 * hash) + algorithmName_;
    hash = (37 * hash) + ALGORITHM_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getAlgorithmVersion().hashCode();
    if (getMetricDefinitionsCount() > 0) {
      hash = (37 * hash) + METRIC_DEFINITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getMetricDefinitionsList().hashCode();
    }
    hash = (37 * hash) + INPUT_CONTENT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + inputContentType_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.plugins.sagemaker.AlgorithmSpecification prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies the training algorithm to be used in the training job
   * This object is mostly a pass-through, with a couple of exceptions include: (1) in Flyte, users don't need to specify
   * TrainingImage; either use the built-in algorithm mode by using Flytekit's Simple Training Job and specifying an algorithm
   * name and an algorithm version or (2) when users want to supply custom algorithms they should set algorithm_name field to
   * CUSTOM. In this case, the value of the algorithm_version field has no effect
   * For pass-through use cases: refer to this AWS official document for more details
   * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
   * </pre>
   *
   * Protobuf type {@code flyteidl.plugins.sagemaker.AlgorithmSpecification}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.plugins.sagemaker.AlgorithmSpecification)
      com.flyteidl.plugins.sagemaker.AlgorithmSpecificationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.plugins.sagemaker.TrainingJobProto.internal_static_flyteidl_plugins_sagemaker_AlgorithmSpecification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.plugins.sagemaker.TrainingJobProto.internal_static_flyteidl_plugins_sagemaker_AlgorithmSpecification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.plugins.sagemaker.AlgorithmSpecification.class, com.flyteidl.plugins.sagemaker.AlgorithmSpecification.Builder.class);
    }

    // Construct using com.flyteidl.plugins.sagemaker.AlgorithmSpecification.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMetricDefinitionsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      inputMode_ = 0;

      algorithmName_ = 0;

      algorithmVersion_ = "";

      if (metricDefinitionsBuilder_ == null) {
        metricDefinitions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        metricDefinitionsBuilder_.clear();
      }
      inputContentType_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.plugins.sagemaker.TrainingJobProto.internal_static_flyteidl_plugins_sagemaker_AlgorithmSpecification_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.AlgorithmSpecification getDefaultInstanceForType() {
      return com.flyteidl.plugins.sagemaker.AlgorithmSpecification.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.AlgorithmSpecification build() {
      com.flyteidl.plugins.sagemaker.AlgorithmSpecification result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.AlgorithmSpecification buildPartial() {
      com.flyteidl.plugins.sagemaker.AlgorithmSpecification result = new com.flyteidl.plugins.sagemaker.AlgorithmSpecification(this);
      int from_bitField0_ = bitField0_;
      result.inputMode_ = inputMode_;
      result.algorithmName_ = algorithmName_;
      result.algorithmVersion_ = algorithmVersion_;
      if (metricDefinitionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          metricDefinitions_ = java.util.Collections.unmodifiableList(metricDefinitions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.metricDefinitions_ = metricDefinitions_;
      } else {
        result.metricDefinitions_ = metricDefinitionsBuilder_.build();
      }
      result.inputContentType_ = inputContentType_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.plugins.sagemaker.AlgorithmSpecification) {
        return mergeFrom((com.flyteidl.plugins.sagemaker.AlgorithmSpecification)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.plugins.sagemaker.AlgorithmSpecification other) {
      if (other == com.flyteidl.plugins.sagemaker.AlgorithmSpecification.getDefaultInstance()) return this;
      if (other.inputMode_ != 0) {
        setInputModeValue(other.getInputModeValue());
      }
      if (other.algorithmName_ != 0) {
        setAlgorithmNameValue(other.getAlgorithmNameValue());
      }
      if (!other.getAlgorithmVersion().isEmpty()) {
        algorithmVersion_ = other.algorithmVersion_;
        onChanged();
      }
      if (metricDefinitionsBuilder_ == null) {
        if (!other.metricDefinitions_.isEmpty()) {
          if (metricDefinitions_.isEmpty()) {
            metricDefinitions_ = other.metricDefinitions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMetricDefinitionsIsMutable();
            metricDefinitions_.addAll(other.metricDefinitions_);
          }
          onChanged();
        }
      } else {
        if (!other.metricDefinitions_.isEmpty()) {
          if (metricDefinitionsBuilder_.isEmpty()) {
            metricDefinitionsBuilder_.dispose();
            metricDefinitionsBuilder_ = null;
            metricDefinitions_ = other.metricDefinitions_;
            bitField0_ = (bitField0_ & ~0x00000001);
            metricDefinitionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMetricDefinitionsFieldBuilder() : null;
          } else {
            metricDefinitionsBuilder_.addAllMessages(other.metricDefinitions_);
          }
        }
      }
      if (other.inputContentType_ != 0) {
        setInputContentTypeValue(other.getInputContentTypeValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.plugins.sagemaker.AlgorithmSpecification parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.plugins.sagemaker.AlgorithmSpecification) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int inputMode_ = 0;
    /**
     * <pre>
     * The input mode can be either PIPE or FILE
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
     * @return The enum numeric value on the wire for inputMode.
     */
    @java.lang.Override public int getInputModeValue() {
      return inputMode_;
    }
    /**
     * <pre>
     * The input mode can be either PIPE or FILE
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
     * @param value The enum numeric value on the wire for inputMode to set.
     * @return This builder for chaining.
     */
    public Builder setInputModeValue(int value) {
      
      inputMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The input mode can be either PIPE or FILE
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
     * @return The inputMode.
     */
    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.InputMode.Value getInputMode() {
      @SuppressWarnings("deprecation")
      com.flyteidl.plugins.sagemaker.InputMode.Value result = com.flyteidl.plugins.sagemaker.InputMode.Value.valueOf(inputMode_);
      return result == null ? com.flyteidl.plugins.sagemaker.InputMode.Value.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The input mode can be either PIPE or FILE
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
     * @param value The inputMode to set.
     * @return This builder for chaining.
     */
    public Builder setInputMode(com.flyteidl.plugins.sagemaker.InputMode.Value value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      inputMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The input mode can be either PIPE or FILE
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1 [json_name = "inputMode"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInputMode() {
      
      inputMode_ = 0;
      onChanged();
      return this;
    }

    private int algorithmName_ = 0;
    /**
     * <pre>
     * The algorithm name is used for deciding which pre-built image to point to
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
     * @return The enum numeric value on the wire for algorithmName.
     */
    @java.lang.Override public int getAlgorithmNameValue() {
      return algorithmName_;
    }
    /**
     * <pre>
     * The algorithm name is used for deciding which pre-built image to point to
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
     * @param value The enum numeric value on the wire for algorithmName to set.
     * @return This builder for chaining.
     */
    public Builder setAlgorithmNameValue(int value) {
      
      algorithmName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The algorithm name is used for deciding which pre-built image to point to
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
     * @return The algorithmName.
     */
    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.AlgorithmName.Value getAlgorithmName() {
      @SuppressWarnings("deprecation")
      com.flyteidl.plugins.sagemaker.AlgorithmName.Value result = com.flyteidl.plugins.sagemaker.AlgorithmName.Value.valueOf(algorithmName_);
      return result == null ? com.flyteidl.plugins.sagemaker.AlgorithmName.Value.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The algorithm name is used for deciding which pre-built image to point to
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
     * @param value The algorithmName to set.
     * @return This builder for chaining.
     */
    public Builder setAlgorithmName(com.flyteidl.plugins.sagemaker.AlgorithmName.Value value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      algorithmName_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The algorithm name is used for deciding which pre-built image to point to
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2 [json_name = "algorithmName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAlgorithmName() {
      
      algorithmName_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object algorithmVersion_ = "";
    /**
     * <pre>
     * The algorithm version field is used for deciding which pre-built image to point to
     * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
     * </pre>
     *
     * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
     * @return The algorithmVersion.
     */
    public java.lang.String getAlgorithmVersion() {
      java.lang.Object ref = algorithmVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        algorithmVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The algorithm version field is used for deciding which pre-built image to point to
     * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
     * </pre>
     *
     * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
     * @return The bytes for algorithmVersion.
     */
    public com.google.protobuf.ByteString
        getAlgorithmVersionBytes() {
      java.lang.Object ref = algorithmVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        algorithmVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The algorithm version field is used for deciding which pre-built image to point to
     * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
     * </pre>
     *
     * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
     * @param value The algorithmVersion to set.
     * @return This builder for chaining.
     */
    public Builder setAlgorithmVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      algorithmVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The algorithm version field is used for deciding which pre-built image to point to
     * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
     * </pre>
     *
     * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAlgorithmVersion() {
      
      algorithmVersion_ = getDefaultInstance().getAlgorithmVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The algorithm version field is used for deciding which pre-built image to point to
     * This is only needed for use cases where SageMaker's built-in algorithm mode is chosen
     * </pre>
     *
     * <code>string algorithm_version = 3 [json_name = "algorithmVersion"];</code>
     * @param value The bytes for algorithmVersion to set.
     * @return This builder for chaining.
     */
    public Builder setAlgorithmVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      algorithmVersion_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.flyteidl.plugins.sagemaker.MetricDefinition> metricDefinitions_ =
      java.util.Collections.emptyList();
    private void ensureMetricDefinitionsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        metricDefinitions_ = new java.util.ArrayList<com.flyteidl.plugins.sagemaker.MetricDefinition>(metricDefinitions_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.plugins.sagemaker.MetricDefinition, com.flyteidl.plugins.sagemaker.MetricDefinition.Builder, com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder> metricDefinitionsBuilder_;

    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public java.util.List<com.flyteidl.plugins.sagemaker.MetricDefinition> getMetricDefinitionsList() {
      if (metricDefinitionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(metricDefinitions_);
      } else {
        return metricDefinitionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public int getMetricDefinitionsCount() {
      if (metricDefinitionsBuilder_ == null) {
        return metricDefinitions_.size();
      } else {
        return metricDefinitionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public com.flyteidl.plugins.sagemaker.MetricDefinition getMetricDefinitions(int index) {
      if (metricDefinitionsBuilder_ == null) {
        return metricDefinitions_.get(index);
      } else {
        return metricDefinitionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder setMetricDefinitions(
        int index, com.flyteidl.plugins.sagemaker.MetricDefinition value) {
      if (metricDefinitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricDefinitionsIsMutable();
        metricDefinitions_.set(index, value);
        onChanged();
      } else {
        metricDefinitionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder setMetricDefinitions(
        int index, com.flyteidl.plugins.sagemaker.MetricDefinition.Builder builderForValue) {
      if (metricDefinitionsBuilder_ == null) {
        ensureMetricDefinitionsIsMutable();
        metricDefinitions_.set(index, builderForValue.build());
        onChanged();
      } else {
        metricDefinitionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder addMetricDefinitions(com.flyteidl.plugins.sagemaker.MetricDefinition value) {
      if (metricDefinitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricDefinitionsIsMutable();
        metricDefinitions_.add(value);
        onChanged();
      } else {
        metricDefinitionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder addMetricDefinitions(
        int index, com.flyteidl.plugins.sagemaker.MetricDefinition value) {
      if (metricDefinitionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetricDefinitionsIsMutable();
        metricDefinitions_.add(index, value);
        onChanged();
      } else {
        metricDefinitionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder addMetricDefinitions(
        com.flyteidl.plugins.sagemaker.MetricDefinition.Builder builderForValue) {
      if (metricDefinitionsBuilder_ == null) {
        ensureMetricDefinitionsIsMutable();
        metricDefinitions_.add(builderForValue.build());
        onChanged();
      } else {
        metricDefinitionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder addMetricDefinitions(
        int index, com.flyteidl.plugins.sagemaker.MetricDefinition.Builder builderForValue) {
      if (metricDefinitionsBuilder_ == null) {
        ensureMetricDefinitionsIsMutable();
        metricDefinitions_.add(index, builderForValue.build());
        onChanged();
      } else {
        metricDefinitionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder addAllMetricDefinitions(
        java.lang.Iterable<? extends com.flyteidl.plugins.sagemaker.MetricDefinition> values) {
      if (metricDefinitionsBuilder_ == null) {
        ensureMetricDefinitionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, metricDefinitions_);
        onChanged();
      } else {
        metricDefinitionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder clearMetricDefinitions() {
      if (metricDefinitionsBuilder_ == null) {
        metricDefinitions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        metricDefinitionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public Builder removeMetricDefinitions(int index) {
      if (metricDefinitionsBuilder_ == null) {
        ensureMetricDefinitionsIsMutable();
        metricDefinitions_.remove(index);
        onChanged();
      } else {
        metricDefinitionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public com.flyteidl.plugins.sagemaker.MetricDefinition.Builder getMetricDefinitionsBuilder(
        int index) {
      return getMetricDefinitionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder getMetricDefinitionsOrBuilder(
        int index) {
      if (metricDefinitionsBuilder_ == null) {
        return metricDefinitions_.get(index);  } else {
        return metricDefinitionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public java.util.List<? extends com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder> 
         getMetricDefinitionsOrBuilderList() {
      if (metricDefinitionsBuilder_ != null) {
        return metricDefinitionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(metricDefinitions_);
      }
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public com.flyteidl.plugins.sagemaker.MetricDefinition.Builder addMetricDefinitionsBuilder() {
      return getMetricDefinitionsFieldBuilder().addBuilder(
          com.flyteidl.plugins.sagemaker.MetricDefinition.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public com.flyteidl.plugins.sagemaker.MetricDefinition.Builder addMetricDefinitionsBuilder(
        int index) {
      return getMetricDefinitionsFieldBuilder().addBuilder(
          index, com.flyteidl.plugins.sagemaker.MetricDefinition.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of metric definitions for SageMaker to evaluate/track on the progress of the training job
     * See this: https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AlgorithmSpecification.html
     * and this: https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics.html
     * </pre>
     *
     * <code>repeated .flyteidl.plugins.sagemaker.MetricDefinition metric_definitions = 4 [json_name = "metricDefinitions"];</code>
     */
    public java.util.List<com.flyteidl.plugins.sagemaker.MetricDefinition.Builder> 
         getMetricDefinitionsBuilderList() {
      return getMetricDefinitionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.plugins.sagemaker.MetricDefinition, com.flyteidl.plugins.sagemaker.MetricDefinition.Builder, com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder> 
        getMetricDefinitionsFieldBuilder() {
      if (metricDefinitionsBuilder_ == null) {
        metricDefinitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.flyteidl.plugins.sagemaker.MetricDefinition, com.flyteidl.plugins.sagemaker.MetricDefinition.Builder, com.flyteidl.plugins.sagemaker.MetricDefinitionOrBuilder>(
                metricDefinitions_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        metricDefinitions_ = null;
      }
      return metricDefinitionsBuilder_;
    }

    private int inputContentType_ = 0;
    /**
     * <pre>
     * The content type of the input
     * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
     * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
     * @return The enum numeric value on the wire for inputContentType.
     */
    @java.lang.Override public int getInputContentTypeValue() {
      return inputContentType_;
    }
    /**
     * <pre>
     * The content type of the input
     * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
     * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
     * @param value The enum numeric value on the wire for inputContentType to set.
     * @return This builder for chaining.
     */
    public Builder setInputContentTypeValue(int value) {
      
      inputContentType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The content type of the input
     * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
     * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
     * @return The inputContentType.
     */
    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.InputContentType.Value getInputContentType() {
      @SuppressWarnings("deprecation")
      com.flyteidl.plugins.sagemaker.InputContentType.Value result = com.flyteidl.plugins.sagemaker.InputContentType.Value.valueOf(inputContentType_);
      return result == null ? com.flyteidl.plugins.sagemaker.InputContentType.Value.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The content type of the input
     * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
     * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
     * @param value The inputContentType to set.
     * @return This builder for chaining.
     */
    public Builder setInputContentType(com.flyteidl.plugins.sagemaker.InputContentType.Value value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      inputContentType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The content type of the input
     * See https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
     * https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.InputContentType.Value input_content_type = 5 [json_name = "inputContentType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInputContentType() {
      
      inputContentType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  private static final com.flyteidl.plugins.sagemaker.AlgorithmSpecification DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.plugins.sagemaker.AlgorithmSpecification();
  }

  public static com.flyteidl.plugins.sagemaker.AlgorithmSpecification getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AlgorithmSpecification>
      PARSER = new com.google.protobuf.AbstractParser<AlgorithmSpecification>() {
    @java.lang.Override
    public AlgorithmSpecification parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AlgorithmSpecification(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AlgorithmSpecification> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AlgorithmSpecification> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.plugins.sagemaker.AlgorithmSpecification getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

