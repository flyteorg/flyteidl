// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/task_execution.proto

package com.flyteidl.admin;

public interface TaskExecutionListRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.admin.TaskExecutionListRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Indicates the node execution to filter by.
   * +required
   * </pre>
   *
   * <code>.flyteidl.core.NodeExecutionIdentifier node_execution_id = 1 [json_name = "nodeExecutionId"];</code>
   * @return Whether the nodeExecutionId field is set.
   */
  boolean hasNodeExecutionId();
  /**
   * <pre>
   * Indicates the node execution to filter by.
   * +required
   * </pre>
   *
   * <code>.flyteidl.core.NodeExecutionIdentifier node_execution_id = 1 [json_name = "nodeExecutionId"];</code>
   * @return The nodeExecutionId.
   */
  com.flyteidl.core.NodeExecutionIdentifier getNodeExecutionId();
  /**
   * <pre>
   * Indicates the node execution to filter by.
   * +required
   * </pre>
   *
   * <code>.flyteidl.core.NodeExecutionIdentifier node_execution_id = 1 [json_name = "nodeExecutionId"];</code>
   */
  com.flyteidl.core.NodeExecutionIdentifierOrBuilder getNodeExecutionIdOrBuilder();

  /**
   * <pre>
   * Indicates the number of resources to be returned.
   * +required
   * </pre>
   *
   * <code>uint32 limit = 2 [json_name = "limit"];</code>
   * @return The limit.
   */
  int getLimit();

  /**
   * <pre>
   * In the case of multiple pages of results, the server-provided token can be used to fetch the next page
   * in a query.
   * +optional
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The token.
   */
  java.lang.String getToken();
  /**
   * <pre>
   * In the case of multiple pages of results, the server-provided token can be used to fetch the next page
   * in a query.
   * +optional
   * </pre>
   *
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The bytes for token.
   */
  com.google.protobuf.ByteString
      getTokenBytes();

  /**
   * <pre>
   * Indicates a list of filters passed as string.
   * More info on constructing filters : &lt;Link&gt;
   * +optional
   * </pre>
   *
   * <code>string filters = 4 [json_name = "filters"];</code>
   * @return The filters.
   */
  java.lang.String getFilters();
  /**
   * <pre>
   * Indicates a list of filters passed as string.
   * More info on constructing filters : &lt;Link&gt;
   * +optional
   * </pre>
   *
   * <code>string filters = 4 [json_name = "filters"];</code>
   * @return The bytes for filters.
   */
  com.google.protobuf.ByteString
      getFiltersBytes();

  /**
   * <pre>
   * Sort ordering for returned list.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.admin.Sort sort_by = 5 [json_name = "sortBy"];</code>
   * @return Whether the sortBy field is set.
   */
  boolean hasSortBy();
  /**
   * <pre>
   * Sort ordering for returned list.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.admin.Sort sort_by = 5 [json_name = "sortBy"];</code>
   * @return The sortBy.
   */
  com.flyteidl.admin.Sort getSortBy();
  /**
   * <pre>
   * Sort ordering for returned list.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.admin.Sort sort_by = 5 [json_name = "sortBy"];</code>
   */
  com.flyteidl.admin.SortOrBuilder getSortByOrBuilder();
}
