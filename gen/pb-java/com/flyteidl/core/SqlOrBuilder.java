// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/tasks.proto

package com.flyteidl.core;

public interface SqlOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.core.Sql)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The actual query to run, the query can have templated parameters.
   * We use Flyte's Golang templating format for Query templating.
   * Refer to the templating documentation.
   * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
   * For example,
   * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
   * select *
   * from my_table
   * where ds = '{{ .Inputs.ds }}'
   * </pre>
   *
   * <code>string statement = 1 [json_name = "statement"];</code>
   * @return The statement.
   */
  java.lang.String getStatement();
  /**
   * <pre>
   * The actual query to run, the query can have templated parameters.
   * We use Flyte's Golang templating format for Query templating.
   * Refer to the templating documentation.
   * https://docs.flyte.org/projects/cookbook/en/latest/auto/integrations/external_services/hive/hive.html#sphx-glr-auto-integrations-external-services-hive-hive-py
   * For example,
   * insert overwrite directory '{{ .rawOutputDataPrefix }}' stored as parquet
   * select *
   * from my_table
   * where ds = '{{ .Inputs.ds }}'
   * </pre>
   *
   * <code>string statement = 1 [json_name = "statement"];</code>
   * @return The bytes for statement.
   */
  com.google.protobuf.ByteString
      getStatementBytes();

  /**
   * <code>.flyteidl.core.Sql.Dialect dialect = 2 [json_name = "dialect"];</code>
   * @return The enum numeric value on the wire for dialect.
   */
  int getDialectValue();
  /**
   * <code>.flyteidl.core.Sql.Dialect dialect = 2 [json_name = "dialect"];</code>
   * @return The dialect.
   */
  com.flyteidl.core.Sql.Dialect getDialect();
}
