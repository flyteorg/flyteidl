// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/execution.proto

package com.flyteidl.admin;

public interface ExecutionSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.admin.ExecutionSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Launch plan to be executed
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
   * @return Whether the launchPlan field is set.
   */
  boolean hasLaunchPlan();
  /**
   * <pre>
   * Launch plan to be executed
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
   * @return The launchPlan.
   */
  com.flyteidl.core.Identifier getLaunchPlan();
  /**
   * <pre>
   * Launch plan to be executed
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
   */
  com.flyteidl.core.IdentifierOrBuilder getLaunchPlanOrBuilder();

  /**
   * <pre>
   * Input values to be passed for the execution
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
   * @deprecated
   * @return Whether the inputs field is set.
   */
  @java.lang.Deprecated boolean hasInputs();
  /**
   * <pre>
   * Input values to be passed for the execution
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
   * @deprecated
   * @return The inputs.
   */
  @java.lang.Deprecated com.flyteidl.core.LiteralMap getInputs();
  /**
   * <pre>
   * Input values to be passed for the execution
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
   */
  @java.lang.Deprecated com.flyteidl.core.LiteralMapOrBuilder getInputsOrBuilder();

  /**
   * <pre>
   * Metadata for the execution
   * </pre>
   *
   * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Metadata for the execution
   * </pre>
   *
   * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  com.flyteidl.admin.ExecutionMetadata getMetadata();
  /**
   * <pre>
   * Metadata for the execution
   * </pre>
   *
   * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
   */
  com.flyteidl.admin.ExecutionMetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * List of notifications based on Execution status transitions
   * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
   * When this list is empty, the notifications defined for the launch plan will be applied.
   * </pre>
   *
   * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
   * @return Whether the notifications field is set.
   */
  boolean hasNotifications();
  /**
   * <pre>
   * List of notifications based on Execution status transitions
   * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
   * When this list is empty, the notifications defined for the launch plan will be applied.
   * </pre>
   *
   * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
   * @return The notifications.
   */
  com.flyteidl.admin.NotificationList getNotifications();
  /**
   * <pre>
   * List of notifications based on Execution status transitions
   * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
   * When this list is empty, the notifications defined for the launch plan will be applied.
   * </pre>
   *
   * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
   */
  com.flyteidl.admin.NotificationListOrBuilder getNotificationsOrBuilder();

  /**
   * <pre>
   * This should be set to true if all notifications are intended to be disabled for this execution.
   * </pre>
   *
   * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
   * @return Whether the disableAll field is set.
   */
  boolean hasDisableAll();
  /**
   * <pre>
   * This should be set to true if all notifications are intended to be disabled for this execution.
   * </pre>
   *
   * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
   * @return The disableAll.
   */
  boolean getDisableAll();

  /**
   * <pre>
   * Labels to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
   * @return Whether the labels field is set.
   */
  boolean hasLabels();
  /**
   * <pre>
   * Labels to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
   * @return The labels.
   */
  com.flyteidl.admin.Labels getLabels();
  /**
   * <pre>
   * Labels to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
   */
  com.flyteidl.admin.LabelsOrBuilder getLabelsOrBuilder();

  /**
   * <pre>
   * Annotations to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
   * @return Whether the annotations field is set.
   */
  boolean hasAnnotations();
  /**
   * <pre>
   * Annotations to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
   * @return The annotations.
   */
  com.flyteidl.admin.Annotations getAnnotations();
  /**
   * <pre>
   * Annotations to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
   */
  com.flyteidl.admin.AnnotationsOrBuilder getAnnotationsOrBuilder();

  /**
   * <pre>
   * Optional: security context override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   * @return Whether the securityContext field is set.
   */
  boolean hasSecurityContext();
  /**
   * <pre>
   * Optional: security context override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   * @return The securityContext.
   */
  com.flyteidl.core.SecurityContext getSecurityContext();
  /**
   * <pre>
   * Optional: security context override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   */
  com.flyteidl.core.SecurityContextOrBuilder getSecurityContextOrBuilder();

  /**
   * <pre>
   * Optional: auth override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
   * @deprecated
   * @return Whether the authRole field is set.
   */
  @java.lang.Deprecated boolean hasAuthRole();
  /**
   * <pre>
   * Optional: auth override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
   * @deprecated
   * @return The authRole.
   */
  @java.lang.Deprecated com.flyteidl.admin.AuthRole getAuthRole();
  /**
   * <pre>
   * Optional: auth override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
   */
  @java.lang.Deprecated com.flyteidl.admin.AuthRoleOrBuilder getAuthRoleOrBuilder();

  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
   * @return Whether the qualityOfService field is set.
   */
  boolean hasQualityOfService();
  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
   * @return The qualityOfService.
   */
  com.flyteidl.core.QualityOfService getQualityOfService();
  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
   */
  com.flyteidl.core.QualityOfServiceOrBuilder getQualityOfServiceOrBuilder();

  /**
   * <pre>
   * Controls the maximum number of task nodes that can be run in parallel for the entire workflow.
   * This is useful to achieve fairness. Note: MapTasks are regarded as one unit,
   * and parallelism/concurrency of MapTasks is independent from this.
   * </pre>
   *
   * <code>int32 max_parallelism = 18 [json_name = "maxParallelism"];</code>
   * @return The maxParallelism.
   */
  int getMaxParallelism();

  /**
   * <pre>
   * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
   * This should be a prefix like s3://my-bucket/my-data
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
   * @return Whether the rawOutputDataConfig field is set.
   */
  boolean hasRawOutputDataConfig();
  /**
   * <pre>
   * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
   * This should be a prefix like s3://my-bucket/my-data
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
   * @return The rawOutputDataConfig.
   */
  com.flyteidl.admin.RawOutputDataConfig getRawOutputDataConfig();
  /**
   * <pre>
   * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
   * This should be a prefix like s3://my-bucket/my-data
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
   */
  com.flyteidl.admin.RawOutputDataConfigOrBuilder getRawOutputDataConfigOrBuilder();

  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
   * @return Whether the clusterAssignment field is set.
   */
  boolean hasClusterAssignment();
  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
   * @return The clusterAssignment.
   */
  com.flyteidl.admin.ClusterAssignment getClusterAssignment();
  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
   */
  com.flyteidl.admin.ClusterAssignmentOrBuilder getClusterAssignmentOrBuilder();

  public com.flyteidl.admin.ExecutionSpec.NotificationOverridesCase getNotificationOverridesCase();
}
