// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/external_plugin_service.proto

#include "flyteidl/service/external_plugin_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fliterals_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Literal_flyteidl_2fcore_2fliterals_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2ftasks_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_TaskTemplate_flyteidl_2fcore_2ftasks_2eproto;
namespace flyteidl {
namespace service {
class TaskCreateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskCreateRequest> _instance;
} _TaskCreateRequest_default_instance_;
class TaskCreateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskCreateResponse> _instance;
} _TaskCreateResponse_default_instance_;
class TaskGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskGetRequest> _instance;
} _TaskGetRequest_default_instance_;
class TaskGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskGetResponse> _instance;
} _TaskGetResponse_default_instance_;
class TaskDeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskDeleteRequest> _instance;
} _TaskDeleteRequest_default_instance_;
class TaskDeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskDeleteResponse> _instance;
} _TaskDeleteResponse_default_instance_;
}  // namespace service
}  // namespace flyteidl
static void InitDefaultsTaskCreateRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_TaskCreateRequest_default_instance_;
    new (ptr) ::flyteidl::service::TaskCreateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::TaskCreateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TaskCreateRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTaskCreateRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto}, {
      &scc_info_Literal_flyteidl_2fcore_2fliterals_2eproto.base,
      &scc_info_TaskTemplate_flyteidl_2fcore_2ftasks_2eproto.base,}};

static void InitDefaultsTaskCreateResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_TaskCreateResponse_default_instance_;
    new (ptr) ::flyteidl::service::TaskCreateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::TaskCreateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskCreateResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskCreateResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto}, {}};

static void InitDefaultsTaskGetRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_TaskGetRequest_default_instance_;
    new (ptr) ::flyteidl::service::TaskGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::TaskGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskGetRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskGetRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto}, {}};

static void InitDefaultsTaskGetResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_TaskGetResponse_default_instance_;
    new (ptr) ::flyteidl::service::TaskGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::TaskGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TaskGetResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTaskGetResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto}, {
      &scc_info_Literal_flyteidl_2fcore_2fliterals_2eproto.base,}};

static void InitDefaultsTaskDeleteRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_TaskDeleteRequest_default_instance_;
    new (ptr) ::flyteidl::service::TaskDeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::TaskDeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskDeleteRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskDeleteRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto}, {}};

static void InitDefaultsTaskDeleteResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_TaskDeleteResponse_default_instance_;
    new (ptr) ::flyteidl::service::TaskDeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::TaskDeleteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskDeleteResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskDeleteResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto}, {}};

void InitDefaults_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_TaskCreateRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskCreateResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskGetRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskGetResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskDeleteRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskDeleteResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskCreateRequest, inputs_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskCreateRequest, template__),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskCreateRequest, output_prefix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskCreateResponse, job_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskGetRequest, task_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskGetRequest, job_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskGetResponse, state_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskGetResponse, outputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskDeleteRequest, task_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskDeleteRequest, job_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::TaskDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::service::TaskCreateRequest)},
  { 8, -1, sizeof(::flyteidl::service::TaskCreateResponse)},
  { 14, -1, sizeof(::flyteidl::service::TaskGetRequest)},
  { 21, -1, sizeof(::flyteidl::service::TaskGetResponse)},
  { 28, -1, sizeof(::flyteidl::service::TaskDeleteRequest)},
  { 35, -1, sizeof(::flyteidl::service::TaskDeleteResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_TaskCreateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_TaskCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_TaskGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_TaskGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_TaskDeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_TaskDeleteResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto, "flyteidl/service/external_plugin_service.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto, 6, file_level_enum_descriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[] =
  "\n.flyteidl/service/external_plugin_servi"
  "ce.proto\022\020flyteidl.service\032\034flyteidl/cor"
  "e/literals.proto\032\031flyteidl/core/tasks.pr"
  "oto\032\035flyteidl/core/interface.proto\"\204\001\n\021T"
  "askCreateRequest\022)\n\006inputs\030\001 \001(\0132\031.flyte"
  "idl.core.LiteralMap\022-\n\010template\030\002 \001(\0132\033."
  "flyteidl.core.TaskTemplate\022\025\n\routput_pre"
  "fix\030\003 \001(\t\"$\n\022TaskCreateResponse\022\016\n\006job_i"
  "d\030\001 \001(\t\"3\n\016TaskGetRequest\022\021\n\ttask_type\030\001"
  " \001(\t\022\016\n\006job_id\030\002 \001(\t\"e\n\017TaskGetResponse\022"
  "&\n\005state\030\001 \001(\0162\027.flyteidl.service.State\022"
  "*\n\007outputs\030\002 \001(\0132\031.flyteidl.core.Literal"
  "Map\"6\n\021TaskDeleteRequest\022\021\n\ttask_type\030\001 "
  "\001(\t\022\016\n\006job_id\030\002 \001(\t\"\024\n\022TaskDeleteRespons"
  "e*^\n\005State\022\025\n\021RETRYABLE_FAILURE\020\000\022\025\n\021PER"
  "MANENT_FAILURE\020\001\022\013\n\007PENDING\020\002\022\013\n\007RUNNING"
  "\020\003\022\r\n\tSUCCEEDED\020\0042\237\002\n\025ExternalPluginServ"
  "ice\022Y\n\nCreateTask\022#.flyteidl.service.Tas"
  "kCreateRequest\032$.flyteidl.service.TaskCr"
  "eateResponse\"\000\022P\n\007GetTask\022 .flyteidl.ser"
  "vice.TaskGetRequest\032!.flyteidl.service.T"
  "askGetResponse\"\000\022Y\n\nDeleteTask\022#.flyteid"
  "l.service.TaskDeleteRequest\032$.flyteidl.s"
  "ervice.TaskDeleteResponse\"\000B9Z7github.co"
  "m/flyteorg/flyteidl/gen/pb-go/flyteidl/s"
  "erviceb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto,
  "flyteidl/service/external_plugin_service.proto", &assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto, 1014,
};

void AddDescriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_flyteidl_2fcore_2fliterals_2eproto,
    ::AddDescriptors_flyteidl_2fcore_2ftasks_2eproto,
    ::AddDescriptors_flyteidl_2fcore_2finterface_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto(); return true; }();
namespace flyteidl {
namespace service {
const ::google::protobuf::EnumDescriptor* State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto);
  return file_level_enum_descriptors_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[0];
}
bool State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TaskCreateRequest::InitAsDefaultInstance() {
  ::flyteidl::service::_TaskCreateRequest_default_instance_._instance.get_mutable()->inputs_ = const_cast< ::flyteidl::core::LiteralMap*>(
      ::flyteidl::core::LiteralMap::internal_default_instance());
  ::flyteidl::service::_TaskCreateRequest_default_instance_._instance.get_mutable()->template__ = const_cast< ::flyteidl::core::TaskTemplate*>(
      ::flyteidl::core::TaskTemplate::internal_default_instance());
}
class TaskCreateRequest::HasBitSetters {
 public:
  static const ::flyteidl::core::LiteralMap& inputs(const TaskCreateRequest* msg);
  static const ::flyteidl::core::TaskTemplate& template_(const TaskCreateRequest* msg);
};

const ::flyteidl::core::LiteralMap&
TaskCreateRequest::HasBitSetters::inputs(const TaskCreateRequest* msg) {
  return *msg->inputs_;
}
const ::flyteidl::core::TaskTemplate&
TaskCreateRequest::HasBitSetters::template_(const TaskCreateRequest* msg) {
  return *msg->template__;
}
void TaskCreateRequest::clear_inputs() {
  if (GetArenaNoVirtual() == nullptr && inputs_ != nullptr) {
    delete inputs_;
  }
  inputs_ = nullptr;
}
void TaskCreateRequest::clear_template_() {
  if (GetArenaNoVirtual() == nullptr && template__ != nullptr) {
    delete template__;
  }
  template__ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskCreateRequest::kInputsFieldNumber;
const int TaskCreateRequest::kTemplateFieldNumber;
const int TaskCreateRequest::kOutputPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskCreateRequest::TaskCreateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.TaskCreateRequest)
}
TaskCreateRequest::TaskCreateRequest(const TaskCreateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  output_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_prefix().size() > 0) {
    output_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_prefix_);
  }
  if (from.has_inputs()) {
    inputs_ = new ::flyteidl::core::LiteralMap(*from.inputs_);
  } else {
    inputs_ = nullptr;
  }
  if (from.has_template_()) {
    template__ = new ::flyteidl::core::TaskTemplate(*from.template__);
  } else {
    template__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.TaskCreateRequest)
}

void TaskCreateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskCreateRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  output_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&template__) -
      reinterpret_cast<char*>(&inputs_)) + sizeof(template__));
}

TaskCreateRequest::~TaskCreateRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.service.TaskCreateRequest)
  SharedDtor();
}

void TaskCreateRequest::SharedDtor() {
  output_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete inputs_;
  if (this != internal_default_instance()) delete template__;
}

void TaskCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskCreateRequest& TaskCreateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskCreateRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TaskCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.TaskCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && inputs_ != nullptr) {
    delete inputs_;
  }
  inputs_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && template__ != nullptr) {
    delete template__;
  }
  template__ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskCreateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskCreateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.core.LiteralMap inputs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::LiteralMap::_InternalParse;
        object = msg->mutable_inputs();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.core.TaskTemplate template = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::TaskTemplate::_InternalParse;
        object = msg->mutable_template_();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string output_prefix = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.TaskCreateRequest.output_prefix");
        object = msg->mutable_output_prefix();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskCreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.TaskCreateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.LiteralMap inputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.TaskTemplate template = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_template_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_prefix = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_prefix().data(), static_cast<int>(this->output_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.TaskCreateRequest.output_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.TaskCreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.TaskCreateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskCreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.TaskCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralMap inputs = 1;
  if (this->has_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::inputs(this), output);
  }

  // .flyteidl.core.TaskTemplate template = 2;
  if (this->has_template_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::template_(this), output);
  }

  // string output_prefix = 3;
  if (this->output_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_prefix().data(), static_cast<int>(this->output_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskCreateRequest.output_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->output_prefix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.TaskCreateRequest)
}

::google::protobuf::uint8* TaskCreateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.TaskCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralMap inputs = 1;
  if (this->has_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::inputs(this), target);
  }

  // .flyteidl.core.TaskTemplate template = 2;
  if (this->has_template_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::template_(this), target);
  }

  // string output_prefix = 3;
  if (this->output_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_prefix().data(), static_cast<int>(this->output_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskCreateRequest.output_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->output_prefix(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.TaskCreateRequest)
  return target;
}

size_t TaskCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.TaskCreateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string output_prefix = 3;
  if (this->output_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_prefix());
  }

  // .flyteidl.core.LiteralMap inputs = 1;
  if (this->has_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *inputs_);
  }

  // .flyteidl.core.TaskTemplate template = 2;
  if (this->has_template_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *template__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskCreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.TaskCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskCreateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TaskCreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.TaskCreateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.TaskCreateRequest)
    MergeFrom(*source);
  }
}

void TaskCreateRequest::MergeFrom(const TaskCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.TaskCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.output_prefix().size() > 0) {

    output_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_prefix_);
  }
  if (from.has_inputs()) {
    mutable_inputs()->::flyteidl::core::LiteralMap::MergeFrom(from.inputs());
  }
  if (from.has_template_()) {
    mutable_template_()->::flyteidl::core::TaskTemplate::MergeFrom(from.template_());
  }
}

void TaskCreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.TaskCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskCreateRequest::CopyFrom(const TaskCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.TaskCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskCreateRequest::IsInitialized() const {
  return true;
}

void TaskCreateRequest::Swap(TaskCreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskCreateRequest::InternalSwap(TaskCreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  output_prefix_.Swap(&other->output_prefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(inputs_, other->inputs_);
  swap(template__, other->template__);
}

::google::protobuf::Metadata TaskCreateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskCreateResponse::InitAsDefaultInstance() {
}
class TaskCreateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskCreateResponse::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskCreateResponse::TaskCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.TaskCreateResponse)
}
TaskCreateResponse::TaskCreateResponse(const TaskCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.TaskCreateResponse)
}

void TaskCreateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskCreateResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TaskCreateResponse::~TaskCreateResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.TaskCreateResponse)
  SharedDtor();
}

void TaskCreateResponse::SharedDtor() {
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskCreateResponse& TaskCreateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskCreateResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TaskCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.TaskCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskCreateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskCreateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string job_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.TaskCreateResponse.job_id");
        object = msg->mutable_job_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.TaskCreateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.TaskCreateResponse.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.TaskCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.TaskCreateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.TaskCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskCreateResponse.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->job_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.TaskCreateResponse)
}

::google::protobuf::uint8* TaskCreateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.TaskCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskCreateResponse.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->job_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.TaskCreateResponse)
  return target;
}

size_t TaskCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.TaskCreateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.TaskCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskCreateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TaskCreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.TaskCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.TaskCreateResponse)
    MergeFrom(*source);
  }
}

void TaskCreateResponse::MergeFrom(const TaskCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.TaskCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
}

void TaskCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.TaskCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskCreateResponse::CopyFrom(const TaskCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.TaskCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskCreateResponse::IsInitialized() const {
  return true;
}

void TaskCreateResponse::Swap(TaskCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskCreateResponse::InternalSwap(TaskCreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  job_id_.Swap(&other->job_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TaskCreateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskGetRequest::InitAsDefaultInstance() {
}
class TaskGetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskGetRequest::kTaskTypeFieldNumber;
const int TaskGetRequest::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskGetRequest::TaskGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.TaskGetRequest)
}
TaskGetRequest::TaskGetRequest(const TaskGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_type().size() > 0) {
    task_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_type_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.TaskGetRequest)
}

void TaskGetRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskGetRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  task_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TaskGetRequest::~TaskGetRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.service.TaskGetRequest)
  SharedDtor();
}

void TaskGetRequest::SharedDtor() {
  task_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskGetRequest& TaskGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskGetRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TaskGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.TaskGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskGetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskGetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string task_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.TaskGetRequest.task_type");
        object = msg->mutable_task_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string job_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.TaskGetRequest.job_id");
        object = msg->mutable_job_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.TaskGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string task_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_type().data(), static_cast<int>(this->task_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.TaskGetRequest.task_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.TaskGetRequest.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.TaskGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.TaskGetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.TaskGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string task_type = 1;
  if (this->task_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_type().data(), static_cast<int>(this->task_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskGetRequest.task_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->task_type(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskGetRequest.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.TaskGetRequest)
}

::google::protobuf::uint8* TaskGetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.TaskGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string task_type = 1;
  if (this->task_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_type().data(), static_cast<int>(this->task_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskGetRequest.task_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->task_type(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskGetRequest.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.TaskGetRequest)
  return target;
}

size_t TaskGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.TaskGetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_type = 1;
  if (this->task_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_type());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.TaskGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskGetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TaskGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.TaskGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.TaskGetRequest)
    MergeFrom(*source);
  }
}

void TaskGetRequest::MergeFrom(const TaskGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.TaskGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_type().size() > 0) {

    task_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_type_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
}

void TaskGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.TaskGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskGetRequest::CopyFrom(const TaskGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.TaskGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskGetRequest::IsInitialized() const {
  return true;
}

void TaskGetRequest::Swap(TaskGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskGetRequest::InternalSwap(TaskGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  task_type_.Swap(&other->task_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  job_id_.Swap(&other->job_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TaskGetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskGetResponse::InitAsDefaultInstance() {
  ::flyteidl::service::_TaskGetResponse_default_instance_._instance.get_mutable()->outputs_ = const_cast< ::flyteidl::core::LiteralMap*>(
      ::flyteidl::core::LiteralMap::internal_default_instance());
}
class TaskGetResponse::HasBitSetters {
 public:
  static const ::flyteidl::core::LiteralMap& outputs(const TaskGetResponse* msg);
};

const ::flyteidl::core::LiteralMap&
TaskGetResponse::HasBitSetters::outputs(const TaskGetResponse* msg) {
  return *msg->outputs_;
}
void TaskGetResponse::clear_outputs() {
  if (GetArenaNoVirtual() == nullptr && outputs_ != nullptr) {
    delete outputs_;
  }
  outputs_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskGetResponse::kStateFieldNumber;
const int TaskGetResponse::kOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskGetResponse::TaskGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.TaskGetResponse)
}
TaskGetResponse::TaskGetResponse(const TaskGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_outputs()) {
    outputs_ = new ::flyteidl::core::LiteralMap(*from.outputs_);
  } else {
    outputs_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.TaskGetResponse)
}

void TaskGetResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskGetResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  ::memset(&outputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&outputs_)) + sizeof(state_));
}

TaskGetResponse::~TaskGetResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.TaskGetResponse)
  SharedDtor();
}

void TaskGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete outputs_;
}

void TaskGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskGetResponse& TaskGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskGetResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TaskGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.TaskGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && outputs_ != nullptr) {
    delete outputs_;
  }
  outputs_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskGetResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskGetResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.service.State state = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_state(static_cast<::flyteidl::service::State>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .flyteidl.core.LiteralMap outputs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::LiteralMap::_InternalParse;
        object = msg->mutable_outputs();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.TaskGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.service.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::flyteidl::service::State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.LiteralMap outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.TaskGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.TaskGetResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.TaskGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.service.State state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // .flyteidl.core.LiteralMap outputs = 2;
  if (this->has_outputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::outputs(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.TaskGetResponse)
}

::google::protobuf::uint8* TaskGetResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.TaskGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.service.State state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // .flyteidl.core.LiteralMap outputs = 2;
  if (this->has_outputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::outputs(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.TaskGetResponse)
  return target;
}

size_t TaskGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.TaskGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.core.LiteralMap outputs = 2;
  if (this->has_outputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *outputs_);
  }

  // .flyteidl.service.State state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.TaskGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskGetResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TaskGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.TaskGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.TaskGetResponse)
    MergeFrom(*source);
  }
}

void TaskGetResponse::MergeFrom(const TaskGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.TaskGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_outputs()) {
    mutable_outputs()->::flyteidl::core::LiteralMap::MergeFrom(from.outputs());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void TaskGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.TaskGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskGetResponse::CopyFrom(const TaskGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.TaskGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskGetResponse::IsInitialized() const {
  return true;
}

void TaskGetResponse::Swap(TaskGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskGetResponse::InternalSwap(TaskGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(outputs_, other->outputs_);
  swap(state_, other->state_);
}

::google::protobuf::Metadata TaskGetResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskDeleteRequest::InitAsDefaultInstance() {
}
class TaskDeleteRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskDeleteRequest::kTaskTypeFieldNumber;
const int TaskDeleteRequest::kJobIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskDeleteRequest::TaskDeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.TaskDeleteRequest)
}
TaskDeleteRequest::TaskDeleteRequest(const TaskDeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_type().size() > 0) {
    task_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_type_);
  }
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.TaskDeleteRequest)
}

void TaskDeleteRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskDeleteRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  task_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TaskDeleteRequest::~TaskDeleteRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.service.TaskDeleteRequest)
  SharedDtor();
}

void TaskDeleteRequest::SharedDtor() {
  task_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskDeleteRequest& TaskDeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskDeleteRequest_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TaskDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.TaskDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskDeleteRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskDeleteRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string task_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.TaskDeleteRequest.task_type");
        object = msg->mutable_task_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string job_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.TaskDeleteRequest.job_id");
        object = msg->mutable_job_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.TaskDeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string task_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_type().data(), static_cast<int>(this->task_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.TaskDeleteRequest.task_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string job_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.TaskDeleteRequest.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.TaskDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.TaskDeleteRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.TaskDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string task_type = 1;
  if (this->task_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_type().data(), static_cast<int>(this->task_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskDeleteRequest.task_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->task_type(), output);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskDeleteRequest.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.TaskDeleteRequest)
}

::google::protobuf::uint8* TaskDeleteRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.TaskDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string task_type = 1;
  if (this->task_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_type().data(), static_cast<int>(this->task_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskDeleteRequest.task_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->task_type(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.TaskDeleteRequest.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.TaskDeleteRequest)
  return target;
}

size_t TaskDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.TaskDeleteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_type = 1;
  if (this->task_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_type());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.TaskDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskDeleteRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TaskDeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.TaskDeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.TaskDeleteRequest)
    MergeFrom(*source);
  }
}

void TaskDeleteRequest::MergeFrom(const TaskDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.TaskDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_type().size() > 0) {

    task_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_type_);
  }
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
}

void TaskDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.TaskDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskDeleteRequest::CopyFrom(const TaskDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.TaskDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskDeleteRequest::IsInitialized() const {
  return true;
}

void TaskDeleteRequest::Swap(TaskDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskDeleteRequest::InternalSwap(TaskDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  task_type_.Swap(&other->task_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  job_id_.Swap(&other->job_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TaskDeleteRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskDeleteResponse::InitAsDefaultInstance() {
}
class TaskDeleteResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskDeleteResponse::TaskDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.TaskDeleteResponse)
}
TaskDeleteResponse::TaskDeleteResponse(const TaskDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.TaskDeleteResponse)
}

void TaskDeleteResponse::SharedCtor() {
}

TaskDeleteResponse::~TaskDeleteResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.TaskDeleteResponse)
  SharedDtor();
}

void TaskDeleteResponse::SharedDtor() {
}

void TaskDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskDeleteResponse& TaskDeleteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskDeleteResponse_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void TaskDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.TaskDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskDeleteResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskDeleteResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.TaskDeleteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.TaskDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.TaskDeleteResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.TaskDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.TaskDeleteResponse)
}

::google::protobuf::uint8* TaskDeleteResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.TaskDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.TaskDeleteResponse)
  return target;
}

size_t TaskDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.TaskDeleteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.TaskDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskDeleteResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TaskDeleteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.TaskDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.TaskDeleteResponse)
    MergeFrom(*source);
  }
}

void TaskDeleteResponse::MergeFrom(const TaskDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.TaskDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TaskDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.TaskDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskDeleteResponse::CopyFrom(const TaskDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.TaskDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskDeleteResponse::IsInitialized() const {
  return true;
}

void TaskDeleteResponse::Swap(TaskDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskDeleteResponse::InternalSwap(TaskDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TaskDeleteResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fexternal_5fplugin_5fservice_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::service::TaskCreateRequest* Arena::CreateMaybeMessage< ::flyteidl::service::TaskCreateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::TaskCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::TaskCreateResponse* Arena::CreateMaybeMessage< ::flyteidl::service::TaskCreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::TaskCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::TaskGetRequest* Arena::CreateMaybeMessage< ::flyteidl::service::TaskGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::TaskGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::TaskGetResponse* Arena::CreateMaybeMessage< ::flyteidl::service::TaskGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::TaskGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::TaskDeleteRequest* Arena::CreateMaybeMessage< ::flyteidl::service::TaskDeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::TaskDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::TaskDeleteResponse* Arena::CreateMaybeMessage< ::flyteidl::service::TaskDeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::TaskDeleteResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
