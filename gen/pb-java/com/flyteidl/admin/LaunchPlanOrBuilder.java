// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/launch_plan.proto

package com.flyteidl.admin;

public interface LaunchPlanOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.admin.LaunchPlan)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Uniquely identifies a launch plan entity.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * Uniquely identifies a launch plan entity.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  com.flyteidl.core.Identifier getId();
  /**
   * <pre>
   * Uniquely identifies a launch plan entity.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   */
  com.flyteidl.core.IdentifierOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * User-provided launch plan details, including reference workflow, inputs and other metadata.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanSpec spec = 2 [json_name = "spec"];</code>
   * @return Whether the spec field is set.
   */
  boolean hasSpec();
  /**
   * <pre>
   * User-provided launch plan details, including reference workflow, inputs and other metadata.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanSpec spec = 2 [json_name = "spec"];</code>
   * @return The spec.
   */
  com.flyteidl.admin.LaunchPlanSpec getSpec();
  /**
   * <pre>
   * User-provided launch plan details, including reference workflow, inputs and other metadata.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanSpec spec = 2 [json_name = "spec"];</code>
   */
  com.flyteidl.admin.LaunchPlanSpecOrBuilder getSpecOrBuilder();

  /**
   * <pre>
   * Values computed by the flyte platform after launch plan registration.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanClosure closure = 3 [json_name = "closure"];</code>
   * @return Whether the closure field is set.
   */
  boolean hasClosure();
  /**
   * <pre>
   * Values computed by the flyte platform after launch plan registration.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanClosure closure = 3 [json_name = "closure"];</code>
   * @return The closure.
   */
  com.flyteidl.admin.LaunchPlanClosure getClosure();
  /**
   * <pre>
   * Values computed by the flyte platform after launch plan registration.
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanClosure closure = 3 [json_name = "closure"];</code>
   */
  com.flyteidl.admin.LaunchPlanClosureOrBuilder getClosureOrBuilder();
}
