// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/artifact/artifacts.proto

package artifact

import (
	context "context"
	fmt "fmt"
	core "github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/core"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Artifact struct {
	ArtifactId *core.ArtifactID `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	Spec       *ArtifactSpec    `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// references the tag field in ArtifactTag
	Tags                 []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{0}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetArtifactId() *core.ArtifactID {
	if m != nil {
		return m.ArtifactId
	}
	return nil
}

func (m *Artifact) GetSpec() *ArtifactSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Artifact) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateArtifactRequest struct {
	// Specify just project/domain on creation
	ArtifactKey          *core.ArtifactKey `protobuf:"bytes,1,opt,name=artifact_key,json=artifactKey,proto3" json:"artifact_key,omitempty"`
	Version              string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Spec                 *ArtifactSpec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Partitions           map[string]string `protobuf:"bytes,4,rep,name=partitions,proto3" json:"partitions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tag                  string            `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateArtifactRequest) Reset()         { *m = CreateArtifactRequest{} }
func (m *CreateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactRequest) ProtoMessage()    {}
func (*CreateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{1}
}

func (m *CreateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactRequest.Unmarshal(m, b)
}
func (m *CreateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *CreateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactRequest.Merge(m, src)
}
func (m *CreateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactRequest.Size(m)
}
func (m *CreateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactRequest proto.InternalMessageInfo

func (m *CreateArtifactRequest) GetArtifactKey() *core.ArtifactKey {
	if m != nil {
		return m.ArtifactKey
	}
	return nil
}

func (m *CreateArtifactRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CreateArtifactRequest) GetSpec() *ArtifactSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *CreateArtifactRequest) GetPartitions() map[string]string {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func (m *CreateArtifactRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type ArtifactSpec struct {
	Value *core.Literal `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// This type will not form part of the artifact key, so for user-named artifacts, if the user changes the type, but
	// forgets to change the name, that is okay. And the reason why this is a separate field is because adding the
	// type to all Literals is a lot of work.
	Type *core.LiteralType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*ArtifactSpec_TaskExecution
	//	*ArtifactSpec_Execution
	//	*ArtifactSpec_Principal
	Source               isArtifactSpec_Source `protobuf_oneof:"source"`
	ShortDescription     string                `protobuf:"bytes,8,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription      string                `protobuf:"bytes,9,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ArtifactSpec) Reset()         { *m = ArtifactSpec{} }
func (m *ArtifactSpec) String() string { return proto.CompactTextString(m) }
func (*ArtifactSpec) ProtoMessage()    {}
func (*ArtifactSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{2}
}

func (m *ArtifactSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactSpec.Unmarshal(m, b)
}
func (m *ArtifactSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactSpec.Marshal(b, m, deterministic)
}
func (m *ArtifactSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactSpec.Merge(m, src)
}
func (m *ArtifactSpec) XXX_Size() int {
	return xxx_messageInfo_ArtifactSpec.Size(m)
}
func (m *ArtifactSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactSpec proto.InternalMessageInfo

func (m *ArtifactSpec) GetValue() *core.Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ArtifactSpec) GetType() *core.LiteralType {
	if m != nil {
		return m.Type
	}
	return nil
}

type isArtifactSpec_Source interface {
	isArtifactSpec_Source()
}

type ArtifactSpec_TaskExecution struct {
	TaskExecution *core.TaskExecutionIdentifier `protobuf:"bytes,5,opt,name=task_execution,json=taskExecution,proto3,oneof"`
}

type ArtifactSpec_Execution struct {
	Execution *core.WorkflowExecutionIdentifier `protobuf:"bytes,6,opt,name=execution,proto3,oneof"`
}

type ArtifactSpec_Principal struct {
	Principal string `protobuf:"bytes,7,opt,name=principal,proto3,oneof"`
}

func (*ArtifactSpec_TaskExecution) isArtifactSpec_Source() {}

func (*ArtifactSpec_Execution) isArtifactSpec_Source() {}

func (*ArtifactSpec_Principal) isArtifactSpec_Source() {}

func (m *ArtifactSpec) GetSource() isArtifactSpec_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ArtifactSpec) GetTaskExecution() *core.TaskExecutionIdentifier {
	if x, ok := m.GetSource().(*ArtifactSpec_TaskExecution); ok {
		return x.TaskExecution
	}
	return nil
}

func (m *ArtifactSpec) GetExecution() *core.WorkflowExecutionIdentifier {
	if x, ok := m.GetSource().(*ArtifactSpec_Execution); ok {
		return x.Execution
	}
	return nil
}

func (m *ArtifactSpec) GetPrincipal() string {
	if x, ok := m.GetSource().(*ArtifactSpec_Principal); ok {
		return x.Principal
	}
	return ""
}

func (m *ArtifactSpec) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *ArtifactSpec) GetLongDescription() string {
	if m != nil {
		return m.LongDescription
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ArtifactSpec) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ArtifactSpec_TaskExecution)(nil),
		(*ArtifactSpec_Execution)(nil),
		(*ArtifactSpec_Principal)(nil),
	}
}

type CreateArtifactResponse struct {
	Artifact             *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateArtifactResponse) Reset()         { *m = CreateArtifactResponse{} }
func (m *CreateArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactResponse) ProtoMessage()    {}
func (*CreateArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{3}
}

func (m *CreateArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactResponse.Unmarshal(m, b)
}
func (m *CreateArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactResponse.Marshal(b, m, deterministic)
}
func (m *CreateArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactResponse.Merge(m, src)
}
func (m *CreateArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactResponse.Size(m)
}
func (m *CreateArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactResponse proto.InternalMessageInfo

func (m *CreateArtifactResponse) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type GetArtifactRequest struct {
	// Types that are valid to be assigned to Identifier:
	//	*GetArtifactRequest_ArtifactId
	//	*GetArtifactRequest_Uri
	//	*GetArtifactRequest_Query
	Identifier isGetArtifactRequest_Identifier `protobuf_oneof:"identifier"`
	// If false, then long_description is not returned.
	Details              bool     `protobuf:"varint,5,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArtifactRequest) Reset()         { *m = GetArtifactRequest{} }
func (m *GetArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtifactRequest) ProtoMessage()    {}
func (*GetArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{4}
}

func (m *GetArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactRequest.Unmarshal(m, b)
}
func (m *GetArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactRequest.Marshal(b, m, deterministic)
}
func (m *GetArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactRequest.Merge(m, src)
}
func (m *GetArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_GetArtifactRequest.Size(m)
}
func (m *GetArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactRequest proto.InternalMessageInfo

type isGetArtifactRequest_Identifier interface {
	isGetArtifactRequest_Identifier()
}

type GetArtifactRequest_ArtifactId struct {
	ArtifactId *core.ArtifactID `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

type GetArtifactRequest_Uri struct {
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3,oneof"`
}

type GetArtifactRequest_Query struct {
	Query *core.ArtifactQuery `protobuf:"bytes,4,opt,name=query,proto3,oneof"`
}

func (*GetArtifactRequest_ArtifactId) isGetArtifactRequest_Identifier() {}

func (*GetArtifactRequest_Uri) isGetArtifactRequest_Identifier() {}

func (*GetArtifactRequest_Query) isGetArtifactRequest_Identifier() {}

func (m *GetArtifactRequest) GetIdentifier() isGetArtifactRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *GetArtifactRequest) GetArtifactId() *core.ArtifactID {
	if x, ok := m.GetIdentifier().(*GetArtifactRequest_ArtifactId); ok {
		return x.ArtifactId
	}
	return nil
}

func (m *GetArtifactRequest) GetUri() string {
	if x, ok := m.GetIdentifier().(*GetArtifactRequest_Uri); ok {
		return x.Uri
	}
	return ""
}

func (m *GetArtifactRequest) GetQuery() *core.ArtifactQuery {
	if x, ok := m.GetIdentifier().(*GetArtifactRequest_Query); ok {
		return x.Query
	}
	return nil
}

func (m *GetArtifactRequest) GetDetails() bool {
	if m != nil {
		return m.Details
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetArtifactRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetArtifactRequest_ArtifactId)(nil),
		(*GetArtifactRequest_Uri)(nil),
		(*GetArtifactRequest_Query)(nil),
	}
}

type GetArtifactResponse struct {
	Artifact             *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetArtifactResponse) Reset()         { *m = GetArtifactResponse{} }
func (m *GetArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*GetArtifactResponse) ProtoMessage()    {}
func (*GetArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{5}
}

func (m *GetArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactResponse.Unmarshal(m, b)
}
func (m *GetArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactResponse.Marshal(b, m, deterministic)
}
func (m *GetArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactResponse.Merge(m, src)
}
func (m *GetArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_GetArtifactResponse.Size(m)
}
func (m *GetArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactResponse proto.InternalMessageInfo

func (m *GetArtifactResponse) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type ListArtifactNamesRequest struct {
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArtifactNamesRequest) Reset()         { *m = ListArtifactNamesRequest{} }
func (m *ListArtifactNamesRequest) String() string { return proto.CompactTextString(m) }
func (*ListArtifactNamesRequest) ProtoMessage()    {}
func (*ListArtifactNamesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{6}
}

func (m *ListArtifactNamesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactNamesRequest.Unmarshal(m, b)
}
func (m *ListArtifactNamesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactNamesRequest.Marshal(b, m, deterministic)
}
func (m *ListArtifactNamesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactNamesRequest.Merge(m, src)
}
func (m *ListArtifactNamesRequest) XXX_Size() int {
	return xxx_messageInfo_ListArtifactNamesRequest.Size(m)
}
func (m *ListArtifactNamesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactNamesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactNamesRequest proto.InternalMessageInfo

func (m *ListArtifactNamesRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ListArtifactNamesRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type ListArtifactNamesResponse struct {
	ArtifactKeys         []*core.ArtifactKey `protobuf:"bytes,1,rep,name=artifact_keys,json=artifactKeys,proto3" json:"artifact_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListArtifactNamesResponse) Reset()         { *m = ListArtifactNamesResponse{} }
func (m *ListArtifactNamesResponse) String() string { return proto.CompactTextString(m) }
func (*ListArtifactNamesResponse) ProtoMessage()    {}
func (*ListArtifactNamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{7}
}

func (m *ListArtifactNamesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactNamesResponse.Unmarshal(m, b)
}
func (m *ListArtifactNamesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactNamesResponse.Marshal(b, m, deterministic)
}
func (m *ListArtifactNamesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactNamesResponse.Merge(m, src)
}
func (m *ListArtifactNamesResponse) XXX_Size() int {
	return xxx_messageInfo_ListArtifactNamesResponse.Size(m)
}
func (m *ListArtifactNamesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactNamesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactNamesResponse proto.InternalMessageInfo

func (m *ListArtifactNamesResponse) GetArtifactKeys() []*core.ArtifactKey {
	if m != nil {
		return m.ArtifactKeys
	}
	return nil
}

type ListArtifactsRequest struct {
	ArtifactKey          *core.ArtifactKey `protobuf:"bytes,1,opt,name=artifact_key,json=artifactKey,proto3" json:"artifact_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListArtifactsRequest) Reset()         { *m = ListArtifactsRequest{} }
func (m *ListArtifactsRequest) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsRequest) ProtoMessage()    {}
func (*ListArtifactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{8}
}

func (m *ListArtifactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsRequest.Unmarshal(m, b)
}
func (m *ListArtifactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsRequest.Marshal(b, m, deterministic)
}
func (m *ListArtifactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsRequest.Merge(m, src)
}
func (m *ListArtifactsRequest) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsRequest.Size(m)
}
func (m *ListArtifactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsRequest proto.InternalMessageInfo

func (m *ListArtifactsRequest) GetArtifactKey() *core.ArtifactKey {
	if m != nil {
		return m.ArtifactKey
	}
	return nil
}

type ListArtifactsResponse struct {
	Artifacts            []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListArtifactsResponse) Reset()         { *m = ListArtifactsResponse{} }
func (m *ListArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsResponse) ProtoMessage()    {}
func (*ListArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{9}
}

func (m *ListArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsResponse.Unmarshal(m, b)
}
func (m *ListArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *ListArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsResponse.Merge(m, src)
}
func (m *ListArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsResponse.Size(m)
}
func (m *ListArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsResponse proto.InternalMessageInfo

func (m *ListArtifactsResponse) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

// Aliases identify a particular version of an artifact. They are different than tags in that they
// have to be unique for a given artifact project/domain/name. That is, for a given project/domain/name/kind,
// at most one version can have any given value at any point.
type AddTagRequest struct {
	ArtifactId *core.ArtifactID `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	Value      string           `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// If true, and another version already has the specified kind/value, set this version instead
	Overwrite            bool     `protobuf:"varint,3,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagRequest) Reset()         { *m = AddTagRequest{} }
func (m *AddTagRequest) String() string { return proto.CompactTextString(m) }
func (*AddTagRequest) ProtoMessage()    {}
func (*AddTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{10}
}

func (m *AddTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagRequest.Unmarshal(m, b)
}
func (m *AddTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagRequest.Marshal(b, m, deterministic)
}
func (m *AddTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagRequest.Merge(m, src)
}
func (m *AddTagRequest) XXX_Size() int {
	return xxx_messageInfo_AddTagRequest.Size(m)
}
func (m *AddTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagRequest proto.InternalMessageInfo

func (m *AddTagRequest) GetArtifactId() *core.ArtifactID {
	if m != nil {
		return m.ArtifactId
	}
	return nil
}

func (m *AddTagRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *AddTagRequest) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

type AddTagResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagResponse) Reset()         { *m = AddTagResponse{} }
func (m *AddTagResponse) String() string { return proto.CompactTextString(m) }
func (*AddTagResponse) ProtoMessage()    {}
func (*AddTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{11}
}

func (m *AddTagResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagResponse.Unmarshal(m, b)
}
func (m *AddTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagResponse.Marshal(b, m, deterministic)
}
func (m *AddTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagResponse.Merge(m, src)
}
func (m *AddTagResponse) XXX_Size() int {
	return xxx_messageInfo_AddTagResponse.Size(m)
}
func (m *AddTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Artifact)(nil), "flyteidl.artifact.Artifact")
	proto.RegisterType((*CreateArtifactRequest)(nil), "flyteidl.artifact.CreateArtifactRequest")
	proto.RegisterMapType((map[string]string)(nil), "flyteidl.artifact.CreateArtifactRequest.PartitionsEntry")
	proto.RegisterType((*ArtifactSpec)(nil), "flyteidl.artifact.ArtifactSpec")
	proto.RegisterType((*CreateArtifactResponse)(nil), "flyteidl.artifact.CreateArtifactResponse")
	proto.RegisterType((*GetArtifactRequest)(nil), "flyteidl.artifact.GetArtifactRequest")
	proto.RegisterType((*GetArtifactResponse)(nil), "flyteidl.artifact.GetArtifactResponse")
	proto.RegisterType((*ListArtifactNamesRequest)(nil), "flyteidl.artifact.ListArtifactNamesRequest")
	proto.RegisterType((*ListArtifactNamesResponse)(nil), "flyteidl.artifact.ListArtifactNamesResponse")
	proto.RegisterType((*ListArtifactsRequest)(nil), "flyteidl.artifact.ListArtifactsRequest")
	proto.RegisterType((*ListArtifactsResponse)(nil), "flyteidl.artifact.ListArtifactsResponse")
	proto.RegisterType((*AddTagRequest)(nil), "flyteidl.artifact.AddTagRequest")
	proto.RegisterType((*AddTagResponse)(nil), "flyteidl.artifact.AddTagResponse")
}

func init() { proto.RegisterFile("flyteidl/artifact/artifacts.proto", fileDescriptor_804518da5936dedb) }

var fileDescriptor_804518da5936dedb = []byte{
	// 830 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xef, 0x6e, 0xdc, 0x44,
	0x10, 0xbf, 0x7f, 0xb9, 0x9c, 0xe7, 0x2e, 0xe9, 0x75, 0x69, 0x23, 0xc7, 0x44, 0xe5, 0x6a, 0x89,
	0xea, 0xca, 0x1f, 0x9f, 0x74, 0x45, 0x22, 0x44, 0x54, 0xa8, 0xa1, 0x15, 0x17, 0x1a, 0xb5, 0x74,
	0x09, 0x02, 0x21, 0x44, 0xe4, 0xd8, 0x7b, 0xee, 0x72, 0x8e, 0xd7, 0xdd, 0xdd, 0x4b, 0xf1, 0x27,
	0x1e, 0x80, 0x0f, 0xbc, 0x08, 0x8f, 0xc1, 0x03, 0xf0, 0x48, 0xc8, 0x6b, 0xaf, 0xcf, 0x77, 0x71,
	0x8f, 0x40, 0xfa, 0x6d, 0x77, 0xe7, 0x37, 0xbf, 0xfd, 0xcd, 0x78, 0x66, 0xbc, 0x70, 0x77, 0x1a,
	0x26, 0x92, 0x50, 0x3f, 0x1c, 0xb9, 0x5c, 0xd2, 0xa9, 0xeb, 0xc9, 0x62, 0x21, 0x9c, 0x98, 0x33,
	0xc9, 0xd0, 0x4d, 0x0d, 0x71, 0xb4, 0xc5, 0xda, 0x2b, 0xbc, 0x3c, 0xc6, 0xc9, 0x28, 0xa4, 0x92,
	0x70, 0x37, 0xcc, 0x1d, 0xac, 0xdd, 0x65, 0xab, 0x4c, 0x62, 0xa2, 0x4d, 0x77, 0x96, 0x4d, 0xd4,
	0x27, 0x91, 0xa4, 0x53, 0x4a, 0x78, 0x66, 0xb7, 0xff, 0xa8, 0x43, 0xe7, 0x51, 0x7e, 0x0b, 0x3a,
	0x80, 0xae, 0xbe, 0xf1, 0x94, 0xfa, 0x66, 0x7d, 0x50, 0x1f, 0x76, 0xc7, 0xbb, 0x4e, 0x21, 0x27,
	0xa5, 0x70, 0x34, 0xfa, 0xe8, 0x31, 0x06, 0x8d, 0x3e, 0xf2, 0xd1, 0x03, 0x68, 0x89, 0x98, 0x78,
	0x66, 0x43, 0x39, 0xbd, 0xe7, 0x5c, 0x8a, 0xa1, 0x70, 0xfc, 0x36, 0x26, 0x1e, 0x56, 0x60, 0x84,
	0xa0, 0x25, 0xdd, 0x40, 0x98, 0xcd, 0x41, 0x73, 0x68, 0x60, 0xb5, 0xb6, 0xff, 0x6e, 0xc0, 0xed,
	0x2f, 0x39, 0x71, 0x25, 0xd1, 0x0e, 0x98, 0xbc, 0x9a, 0x13, 0x21, 0xd1, 0x43, 0xe8, 0x15, 0xf2,
	0x66, 0x24, 0xc9, 0xf5, 0x59, 0x6f, 0xd0, 0xf7, 0x94, 0x24, 0xb8, 0x08, 0xe7, 0x29, 0x49, 0x90,
	0x09, 0x9b, 0x17, 0x84, 0x0b, 0xca, 0x22, 0xb3, 0x39, 0xa8, 0x0f, 0x0d, 0xac, 0xb7, 0xff, 0x4f,
	0xfb, 0x0f, 0x00, 0x71, 0x6a, 0x97, 0x94, 0x45, 0xc2, 0x6c, 0x0d, 0x9a, 0xc3, 0xee, 0x78, 0xbf,
	0xc2, 0xb5, 0x32, 0x16, 0xe7, 0x9b, 0xc2, 0xf5, 0x49, 0x24, 0x79, 0x82, 0x4b, 0x5c, 0xa8, 0x0f,
	0x4d, 0xe9, 0x06, 0xe6, 0x86, 0x12, 0x99, 0x2e, 0xad, 0x87, 0x70, 0x63, 0xc5, 0x21, 0x05, 0xe9,
	0x1c, 0x18, 0x38, 0x5d, 0xa2, 0x5b, 0xb0, 0x71, 0xe1, 0x86, 0x73, 0xa2, 0xc2, 0x30, 0x70, 0xb6,
	0x39, 0x68, 0xec, 0xd7, 0xed, 0xdf, 0x9b, 0xd0, 0x2b, 0x47, 0x80, 0x3e, 0xd2, 0xd0, 0x2c, 0x85,
	0x3b, 0x2b, 0x29, 0x3c, 0xce, 0xca, 0x2b, 0xa7, 0x40, 0x0e, 0xb4, 0xd2, 0x92, 0xca, 0xd3, 0x63,
	0x55, 0x83, 0x4f, 0x92, 0x98, 0x60, 0x85, 0x43, 0xcf, 0x61, 0x5b, 0xba, 0x62, 0x76, 0x4a, 0x7e,
	0x25, 0xde, 0x3c, 0x95, 0xac, 0x42, 0xe9, 0x8e, 0xef, 0xad, 0x78, 0x9e, 0xb8, 0x62, 0xf6, 0x44,
	0x63, 0x8e, 0x8a, 0xca, 0x9c, 0xd4, 0xf0, 0x96, 0x2c, 0x9b, 0xd0, 0xd7, 0x60, 0x2c, 0xb8, 0xda,
	0x8a, 0xeb, 0x83, 0x15, 0xae, 0xef, 0x19, 0x9f, 0x4d, 0x43, 0xf6, 0xba, 0x9a, 0x6f, 0xe1, 0x8e,
	0xee, 0x80, 0x11, 0x73, 0x1a, 0x79, 0x34, 0x76, 0x43, 0x73, 0x33, 0xcd, 0x54, 0x6a, 0x2f, 0x8e,
	0xd0, 0x87, 0x70, 0x53, 0xbc, 0x64, 0x5c, 0x9e, 0xfa, 0x44, 0x78, 0x9c, 0xc6, 0xea, 0xce, 0x8e,
	0xca, 0x68, 0x5f, 0x19, 0x1e, 0x2f, 0xce, 0xd1, 0x7d, 0xe8, 0x87, 0x2c, 0x0a, 0x96, 0xb0, 0x86,
	0xc2, 0xde, 0x48, 0xcf, 0x4b, 0xd0, 0xc3, 0x0e, 0xb4, 0x05, 0x9b, 0x73, 0x8f, 0xd8, 0x2f, 0x60,
	0x67, 0xb5, 0x26, 0x44, 0xcc, 0x22, 0x41, 0xd0, 0xa7, 0xd0, 0xd1, 0x65, 0x93, 0x7f, 0x99, 0x77,
	0xd7, 0xd4, 0x22, 0x2e, 0xc0, 0xf6, 0x5f, 0x75, 0x40, 0x5f, 0x11, 0xb9, 0xda, 0x30, 0x9f, 0xff,
	0xb7, 0x7e, 0x9e, 0xd4, 0x96, 0x3a, 0x1a, 0x41, 0x73, 0xce, 0x69, 0xd6, 0x2b, 0x93, 0x1a, 0x4e,
	0x37, 0xe8, 0x13, 0xd8, 0x78, 0x35, 0x27, 0x3c, 0x31, 0x5b, 0x8a, 0x6b, 0xef, 0x0d, 0x5c, 0x2f,
	0x52, 0xcc, 0xa4, 0x86, 0x33, 0x70, 0xda, 0x79, 0x3e, 0x91, 0x2e, 0x0d, 0x85, 0xaa, 0x84, 0x0e,
	0xd6, 0xdb, 0xc3, 0x1e, 0xc0, 0x62, 0x24, 0xd9, 0xcf, 0xe0, 0x9d, 0xa5, 0x28, 0xae, 0x9b, 0x96,
	0x63, 0x30, 0x8f, 0xa9, 0x28, 0x08, 0x9f, 0xb9, 0xe7, 0x44, 0xe8, 0xdc, 0x98, 0xb0, 0x19, 0x73,
	0xf6, 0x0b, 0xc9, 0x39, 0x0d, 0xac, 0xb7, 0x68, 0x07, 0xda, 0x3e, 0x3b, 0x77, 0x69, 0x94, 0x37,
	0x52, 0xbe, 0xb3, 0x7f, 0x82, 0xdd, 0x0a, 0xb6, 0x5c, 0xe3, 0x17, 0xb0, 0x55, 0x9e, 0x4d, 0xc2,
	0xac, 0xab, 0x81, 0xb0, 0x6e, 0x38, 0xf5, 0x4a, 0xc3, 0x49, 0xd8, 0xdf, 0xc1, 0xad, 0x32, 0xbb,
	0x78, 0x3b, 0x43, 0xcf, 0xc6, 0x70, 0x7b, 0x85, 0x36, 0x17, 0xfc, 0x19, 0x18, 0xc5, 0x7f, 0x27,
	0x17, 0xbb, 0x36, 0xab, 0x0b, 0xb4, 0xfd, 0x1b, 0x6c, 0x3d, 0xf2, 0xfd, 0x13, 0x37, 0xd0, 0x1a,
	0xaf, 0xf3, 0xdf, 0xa8, 0x9c, 0x5a, 0x68, 0x0f, 0x0c, 0x76, 0x41, 0xf8, 0x6b, 0x4e, 0x25, 0x51,
	0x15, 0xd8, 0xc1, 0x8b, 0x03, 0xbb, 0x0f, 0xdb, 0x5a, 0x40, 0x16, 0xcd, 0xf8, 0xcf, 0x06, 0xf4,
	0x17, 0x75, 0x13, 0x50, 0x91, 0x8e, 0xc8, 0x00, 0xb6, 0x97, 0x1b, 0x0d, 0x0d, 0xaf, 0x3a, 0x9f,
	0xad, 0xfb, 0x57, 0x40, 0x66, 0x77, 0xdb, 0x35, 0xf4, 0x33, 0x74, 0x4b, 0x75, 0x8b, 0xde, 0xaf,
	0xf0, 0xbd, 0xdc, 0x9d, 0xd6, 0xbd, 0x7f, 0x83, 0x15, 0xfc, 0xcf, 0xa1, 0x9d, 0xc5, 0x8b, 0x06,
	0x55, 0x9f, 0xa8, 0xfc, 0x2d, 0xac, 0xbb, 0x6b, 0x10, 0x9a, 0xf0, 0xf0, 0xe0, 0xc7, 0xfd, 0x80,
	0xca, 0x97, 0xf3, 0x33, 0xc7, 0x63, 0xe7, 0x23, 0xe5, 0xc0, 0x78, 0x30, 0x2a, 0xde, 0x0a, 0x01,
	0x89, 0x46, 0xf1, 0xd9, 0xc7, 0x01, 0x1b, 0x5d, 0x7a, 0xad, 0x9c, 0xb5, 0xd5, 0xc3, 0xe1, 0xc1,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x91, 0x26, 0xc2, 0xc9, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArtifactRegistryClient is the client API for ArtifactRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtifactRegistryClient interface {
	CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error)
	GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*GetArtifactResponse, error)
	AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*AddTagResponse, error)
}

type artifactRegistryClient struct {
	cc *grpc.ClientConn
}

func NewArtifactRegistryClient(cc *grpc.ClientConn) ArtifactRegistryClient {
	return &artifactRegistryClient{cc}
}

func (c *artifactRegistryClient) CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error) {
	out := new(CreateArtifactResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/CreateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*GetArtifactResponse, error) {
	out := new(GetArtifactResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/GetArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*AddTagResponse, error) {
	out := new(AddTagResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/AddTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtifactRegistryServer is the server API for ArtifactRegistry service.
type ArtifactRegistryServer interface {
	CreateArtifact(context.Context, *CreateArtifactRequest) (*CreateArtifactResponse, error)
	GetArtifact(context.Context, *GetArtifactRequest) (*GetArtifactResponse, error)
	AddTag(context.Context, *AddTagRequest) (*AddTagResponse, error)
}

// UnimplementedArtifactRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedArtifactRegistryServer struct {
}

func (*UnimplementedArtifactRegistryServer) CreateArtifact(ctx context.Context, req *CreateArtifactRequest) (*CreateArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArtifact not implemented")
}
func (*UnimplementedArtifactRegistryServer) GetArtifact(ctx context.Context, req *GetArtifactRequest) (*GetArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifact not implemented")
}
func (*UnimplementedArtifactRegistryServer) AddTag(ctx context.Context, req *AddTagRequest) (*AddTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTag not implemented")
}

func RegisterArtifactRegistryServer(s *grpc.Server, srv ArtifactRegistryServer) {
	s.RegisterService(&_ArtifactRegistry_serviceDesc, srv)
}

func _ArtifactRegistry_CreateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).CreateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/CreateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).CreateArtifact(ctx, req.(*CreateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_GetArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).GetArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/GetArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).GetArtifact(ctx, req.(*GetArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_AddTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).AddTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/AddTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).AddTag(ctx, req.(*AddTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtifactRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flyteidl.artifact.ArtifactRegistry",
	HandlerType: (*ArtifactRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateArtifact",
			Handler:    _ArtifactRegistry_CreateArtifact_Handler,
		},
		{
			MethodName: "GetArtifact",
			Handler:    _ArtifactRegistry_GetArtifact_Handler,
		},
		{
			MethodName: "AddTag",
			Handler:    _ArtifactRegistry_AddTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flyteidl/artifact/artifacts.proto",
}
