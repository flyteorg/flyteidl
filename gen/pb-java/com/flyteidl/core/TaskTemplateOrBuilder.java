// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/tasks.proto

package com.flyteidl.core;

public interface TaskTemplateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.core.TaskTemplate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  com.flyteidl.core.Identifier getId();
  /**
   * <pre>
   * Auto generated taskId by the system. Task Id uniquely identifies this task globally.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
   */
  com.flyteidl.core.IdentifierOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
   * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
   * implementation registered for the TaskCategory.
   * </pre>
   *
   * <code>string type = 2 [json_name = "type"];</code>
   * @return The type.
   */
  java.lang.String getType();
  /**
   * <pre>
   * A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
   * extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
   * implementation registered for the TaskCategory.
   * </pre>
   *
   * <code>string type = 2 [json_name = "type"];</code>
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * Extra metadata about the task.
   * </pre>
   *
   * <code>.flyteidl.core.TaskMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Extra metadata about the task.
   * </pre>
   *
   * <code>.flyteidl.core.TaskMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  com.flyteidl.core.TaskMetadata getMetadata();
  /**
   * <pre>
   * Extra metadata about the task.
   * </pre>
   *
   * <code>.flyteidl.core.TaskMetadata metadata = 3 [json_name = "metadata"];</code>
   */
  com.flyteidl.core.TaskMetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
   * compile-time validation of the workflow to avoid costly runtime failures.
   * </pre>
   *
   * <code>.flyteidl.core.TypedInterface interface = 4 [json_name = "interface"];</code>
   * @return Whether the interface field is set.
   */
  boolean hasInterface();
  /**
   * <pre>
   * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
   * compile-time validation of the workflow to avoid costly runtime failures.
   * </pre>
   *
   * <code>.flyteidl.core.TypedInterface interface = 4 [json_name = "interface"];</code>
   * @return The interface.
   */
  com.flyteidl.core.TypedInterface getInterface();
  /**
   * <pre>
   * A strongly typed interface for the task. This enables others to use this task within a workflow and guarantees
   * compile-time validation of the workflow to avoid costly runtime failures.
   * </pre>
   *
   * <code>.flyteidl.core.TypedInterface interface = 4 [json_name = "interface"];</code>
   */
  com.flyteidl.core.TypedInterfaceOrBuilder getInterfaceOrBuilder();

  /**
   * <pre>
   * Custom data about the task. This is extensible to allow various plugins in the system.
   * </pre>
   *
   * <code>.google.protobuf.Struct custom = 5 [json_name = "custom"];</code>
   * @return Whether the custom field is set.
   */
  boolean hasCustom();
  /**
   * <pre>
   * Custom data about the task. This is extensible to allow various plugins in the system.
   * </pre>
   *
   * <code>.google.protobuf.Struct custom = 5 [json_name = "custom"];</code>
   * @return The custom.
   */
  com.google.protobuf.Struct getCustom();
  /**
   * <pre>
   * Custom data about the task. This is extensible to allow various plugins in the system.
   * </pre>
   *
   * <code>.google.protobuf.Struct custom = 5 [json_name = "custom"];</code>
   */
  com.google.protobuf.StructOrBuilder getCustomOrBuilder();

  /**
   * <code>.flyteidl.core.Container container = 6 [json_name = "container"];</code>
   * @return Whether the container field is set.
   */
  boolean hasContainer();
  /**
   * <code>.flyteidl.core.Container container = 6 [json_name = "container"];</code>
   * @return The container.
   */
  com.flyteidl.core.Container getContainer();
  /**
   * <code>.flyteidl.core.Container container = 6 [json_name = "container"];</code>
   */
  com.flyteidl.core.ContainerOrBuilder getContainerOrBuilder();

  /**
   * <code>.flyteidl.core.K8sPod k8s_pod = 17 [json_name = "k8sPod"];</code>
   * @return Whether the k8sPod field is set.
   */
  boolean hasK8SPod();
  /**
   * <code>.flyteidl.core.K8sPod k8s_pod = 17 [json_name = "k8sPod"];</code>
   * @return The k8sPod.
   */
  com.flyteidl.core.K8sPod getK8SPod();
  /**
   * <code>.flyteidl.core.K8sPod k8s_pod = 17 [json_name = "k8sPod"];</code>
   */
  com.flyteidl.core.K8sPodOrBuilder getK8SPodOrBuilder();

  /**
   * <code>.flyteidl.core.Sql sql = 18 [json_name = "sql"];</code>
   * @return Whether the sql field is set.
   */
  boolean hasSql();
  /**
   * <code>.flyteidl.core.Sql sql = 18 [json_name = "sql"];</code>
   * @return The sql.
   */
  com.flyteidl.core.Sql getSql();
  /**
   * <code>.flyteidl.core.Sql sql = 18 [json_name = "sql"];</code>
   */
  com.flyteidl.core.SqlOrBuilder getSqlOrBuilder();

  /**
   * <pre>
   * This can be used to customize task handling at execution time for the same task type.
   * </pre>
   *
   * <code>int32 task_type_version = 7 [json_name = "taskTypeVersion"];</code>
   * @return The taskTypeVersion.
   */
  int getTaskTypeVersion();

  /**
   * <pre>
   * security_context encapsulates security attributes requested to run this task.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 8 [json_name = "securityContext"];</code>
   * @return Whether the securityContext field is set.
   */
  boolean hasSecurityContext();
  /**
   * <pre>
   * security_context encapsulates security attributes requested to run this task.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 8 [json_name = "securityContext"];</code>
   * @return The securityContext.
   */
  com.flyteidl.core.SecurityContext getSecurityContext();
  /**
   * <pre>
   * security_context encapsulates security attributes requested to run this task.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 8 [json_name = "securityContext"];</code>
   */
  com.flyteidl.core.SecurityContextOrBuilder getSecurityContextOrBuilder();

  /**
   * <pre>
   * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
   * to use as required.
   * reserve the field numbers 1 through 15 for very frequently occurring message elements
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 16 [json_name = "config"];</code>
   */
  int getConfigCount();
  /**
   * <pre>
   * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
   * to use as required.
   * reserve the field numbers 1 through 15 for very frequently occurring message elements
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 16 [json_name = "config"];</code>
   */
  boolean containsConfig(
      java.lang.String key);
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getConfig();
  /**
   * <pre>
   * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
   * to use as required.
   * reserve the field numbers 1 through 15 for very frequently occurring message elements
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 16 [json_name = "config"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getConfigMap();
  /**
   * <pre>
   * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
   * to use as required.
   * reserve the field numbers 1 through 15 for very frequently occurring message elements
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 16 [json_name = "config"];</code>
   */

  java.lang.String getConfigOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Metadata about the custom defined for this task. This is extensible to allow various plugins in the system
   * to use as required.
   * reserve the field numbers 1 through 15 for very frequently occurring message elements
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 16 [json_name = "config"];</code>
   */

  java.lang.String getConfigOrThrow(
      java.lang.String key);

  public com.flyteidl.core.TaskTemplate.TargetCase getTargetCase();
}
