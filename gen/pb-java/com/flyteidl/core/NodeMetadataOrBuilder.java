// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/workflow.proto

package com.flyteidl.core;

public interface NodeMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.core.NodeMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A friendly name for the Node
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * A friendly name for the Node
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The overall timeout of a task.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
   * @return Whether the timeout field is set.
   */
  boolean hasTimeout();
  /**
   * <pre>
   * The overall timeout of a task.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
   * @return The timeout.
   */
  com.google.protobuf.Duration getTimeout();
  /**
   * <pre>
   * The overall timeout of a task.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

  /**
   * <pre>
   * Number of retries per task.
   * </pre>
   *
   * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
   * @return Whether the retries field is set.
   */
  boolean hasRetries();
  /**
   * <pre>
   * Number of retries per task.
   * </pre>
   *
   * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
   * @return The retries.
   */
  com.flyteidl.core.RetryStrategy getRetries();
  /**
   * <pre>
   * Number of retries per task.
   * </pre>
   *
   * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
   */
  com.flyteidl.core.RetryStrategyOrBuilder getRetriesOrBuilder();

  /**
   * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
   * @return Whether the interruptible field is set.
   */
  boolean hasInterruptible();
  /**
   * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
   * @return The interruptible.
   */
  boolean getInterruptible();

  public com.flyteidl.core.NodeMetadata.InterruptibleValueCase getInterruptibleValueCase();
}
