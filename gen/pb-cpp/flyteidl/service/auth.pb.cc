// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/auth.proto

#include "flyteidl/service/auth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace service {
constexpr OAuth2MetadataRequest::OAuth2MetadataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct OAuth2MetadataRequestDefaultTypeInternal {
  constexpr OAuth2MetadataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OAuth2MetadataRequestDefaultTypeInternal() {}
  union {
    OAuth2MetadataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OAuth2MetadataRequestDefaultTypeInternal _OAuth2MetadataRequest_default_instance_;
constexpr OAuth2MetadataResponse::OAuth2MetadataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : response_types_supported_()
  , scopes_supported_()
  , token_endpoint_auth_methods_supported_()
  , code_challenge_methods_supported_()
  , grant_types_supported_()
  , issuer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , authorization_endpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , token_endpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , jwks_uri_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct OAuth2MetadataResponseDefaultTypeInternal {
  constexpr OAuth2MetadataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OAuth2MetadataResponseDefaultTypeInternal() {}
  union {
    OAuth2MetadataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OAuth2MetadataResponseDefaultTypeInternal _OAuth2MetadataResponse_default_instance_;
constexpr PublicClientAuthConfigRequest::PublicClientAuthConfigRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PublicClientAuthConfigRequestDefaultTypeInternal {
  constexpr PublicClientAuthConfigRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PublicClientAuthConfigRequestDefaultTypeInternal() {}
  union {
    PublicClientAuthConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PublicClientAuthConfigRequestDefaultTypeInternal _PublicClientAuthConfigRequest_default_instance_;
constexpr PublicClientAuthConfigResponse::PublicClientAuthConfigResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scopes_()
  , client_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , redirect_uri_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , authorization_metadata_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , service_http_endpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PublicClientAuthConfigResponseDefaultTypeInternal {
  constexpr PublicClientAuthConfigResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PublicClientAuthConfigResponseDefaultTypeInternal() {}
  union {
    PublicClientAuthConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PublicClientAuthConfigResponseDefaultTypeInternal _PublicClientAuthConfigResponse_default_instance_;
}  // namespace service
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fservice_2fauth_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fauth_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fauth_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fservice_2fauth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, issuer_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, authorization_endpoint_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, token_endpoint_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, response_types_supported_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, scopes_supported_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, token_endpoint_auth_methods_supported_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, jwks_uri_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, code_challenge_methods_supported_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::OAuth2MetadataResponse, grant_types_supported_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::PublicClientAuthConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::PublicClientAuthConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::PublicClientAuthConfigResponse, client_id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::PublicClientAuthConfigResponse, redirect_uri_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::PublicClientAuthConfigResponse, scopes_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::PublicClientAuthConfigResponse, authorization_metadata_key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::PublicClientAuthConfigResponse, service_http_endpoint_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::service::OAuth2MetadataRequest)},
  { 6, -1, -1, sizeof(::flyteidl::service::OAuth2MetadataResponse)},
  { 21, -1, -1, sizeof(::flyteidl::service::PublicClientAuthConfigRequest)},
  { 27, -1, -1, sizeof(::flyteidl::service::PublicClientAuthConfigResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::service::_OAuth2MetadataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::service::_OAuth2MetadataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::service::_PublicClientAuthConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::service::_PublicClientAuthConfigResponse_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fservice_2fauth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033flyteidl/service/auth.proto\022\020flyteidl."
  "service\032\034google/api/annotations.proto\032,p"
  "rotoc-gen-swagger/options/annotations.pr"
  "oto\"\027\n\025OAuth2MetadataRequest\"\335\003\n\026OAuth2M"
  "etadataResponse\022\026\n\006issuer\030\001 \001(\tR\006issuer\022"
  "5\n\026authorization_endpoint\030\002 \001(\tR\025authori"
  "zationEndpoint\022%\n\016token_endpoint\030\003 \001(\tR\r"
  "tokenEndpoint\0228\n\030response_types_supporte"
  "d\030\004 \003(\tR\026responseTypesSupported\022)\n\020scope"
  "s_supported\030\005 \003(\tR\017scopesSupported\022P\n%to"
  "ken_endpoint_auth_methods_supported\030\006 \003("
  "\tR!tokenEndpointAuthMethodsSupported\022\031\n\010"
  "jwks_uri\030\007 \001(\tR\007jwksUri\022G\n code_challeng"
  "e_methods_supported\030\010 \003(\tR\035codeChallenge"
  "MethodsSupported\0222\n\025grant_types_supporte"
  "d\030\t \003(\tR\023grantTypesSupported\"\037\n\035PublicCl"
  "ientAuthConfigRequest\"\352\001\n\036PublicClientAu"
  "thConfigResponse\022\033\n\tclient_id\030\001 \001(\tR\010cli"
  "entId\022!\n\014redirect_uri\030\002 \001(\tR\013redirectUri"
  "\022\026\n\006scopes\030\003 \003(\tR\006scopes\022<\n\032authorizatio"
  "n_metadata_key\030\004 \001(\tR\030authorizationMetad"
  "ataKey\0222\n\025service_http_endpoint\030\005 \001(\tR\023s"
  "erviceHttpEndpoint2\374\003\n\023AuthMetadataServi"
  "ce\022\365\001\n\021GetOAuth2Metadata\022\'.flyteidl.serv"
  "ice.OAuth2MetadataRequest\032(.flyteidl.ser"
  "vice.OAuth2MetadataResponse\"\214\001\222AZ\032XRetri"
  "eves OAuth2 authorization server metadat"
  "a. This endpoint is anonymously accessib"
  "le.\202\323\344\223\002)\022\'/.well-known/oauth-authorizat"
  "ion-server\022\354\001\n\025GetPublicClientConfig\022/.f"
  "lyteidl.service.PublicClientAuthConfigRe"
  "quest\0320.flyteidl.service.PublicClientAut"
  "hConfigResponse\"p\222AN\032LRetrieves public f"
  "lyte client info. This endpoint is anony"
  "mously accessible.\202\323\344\223\002\031\022\027/config/v1/fly"
  "te_clientB\276\001\n\024com.flyteidl.serviceB\tAuth"
  "ProtoH\002Z7github.com/flyteorg/flyteidl/ge"
  "n/pb-go/flyteidl/service\370\001\000\242\002\003FSX\252\002\020Flyt"
  "eidl.Service\312\002\020Flyteidl\\Service\342\002\034Flytei"
  "dl\\Service\\GPBMetadata\352\002\021Flyteidl::Servi"
  "ceb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_flyteidl_2fservice_2fauth_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fservice_2fauth_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fauth_2eproto = {
  false, false, 1610, descriptor_table_protodef_flyteidl_2fservice_2fauth_2eproto, "flyteidl/service/auth.proto", 
  &descriptor_table_flyteidl_2fservice_2fauth_2eproto_once, descriptor_table_flyteidl_2fservice_2fauth_2eproto_deps, 2, 4,
  schemas, file_default_instances, TableStruct_flyteidl_2fservice_2fauth_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fauth_2eproto, file_level_enum_descriptors_flyteidl_2fservice_2fauth_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fauth_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fservice_2fauth_2eproto_getter() {
  return &descriptor_table_flyteidl_2fservice_2fauth_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fservice_2fauth_2eproto(&descriptor_table_flyteidl_2fservice_2fauth_2eproto);
namespace flyteidl {
namespace service {

// ===================================================================

class OAuth2MetadataRequest::_Internal {
 public:
};

OAuth2MetadataRequest::OAuth2MetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.service.OAuth2MetadataRequest)
}
OAuth2MetadataRequest::OAuth2MetadataRequest(const OAuth2MetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.OAuth2MetadataRequest)
}



::PROTOBUF_NAMESPACE_ID::Metadata OAuth2MetadataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fservice_2fauth_2eproto_getter, &descriptor_table_flyteidl_2fservice_2fauth_2eproto_once,
      file_level_metadata_flyteidl_2fservice_2fauth_2eproto[0]);
}

// ===================================================================

class OAuth2MetadataResponse::_Internal {
 public:
};

OAuth2MetadataResponse::OAuth2MetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  response_types_supported_(arena),
  scopes_supported_(arena),
  token_endpoint_auth_methods_supported_(arena),
  code_challenge_methods_supported_(arena),
  grant_types_supported_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.service.OAuth2MetadataResponse)
}
OAuth2MetadataResponse::OAuth2MetadataResponse(const OAuth2MetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      response_types_supported_(from.response_types_supported_),
      scopes_supported_(from.scopes_supported_),
      token_endpoint_auth_methods_supported_(from.token_endpoint_auth_methods_supported_),
      code_challenge_methods_supported_(from.code_challenge_methods_supported_),
      grant_types_supported_(from.grant_types_supported_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  issuer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    issuer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_issuer().empty()) {
    issuer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_issuer(), 
      GetArenaForAllocation());
  }
  authorization_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_endpoint().empty()) {
    authorization_endpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_authorization_endpoint(), 
      GetArenaForAllocation());
  }
  token_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token_endpoint().empty()) {
    token_endpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token_endpoint(), 
      GetArenaForAllocation());
  }
  jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    jwks_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_jwks_uri().empty()) {
    jwks_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_jwks_uri(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.OAuth2MetadataResponse)
}

inline void OAuth2MetadataResponse::SharedCtor() {
issuer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  issuer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
authorization_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
token_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
jwks_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  jwks_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OAuth2MetadataResponse::~OAuth2MetadataResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.OAuth2MetadataResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OAuth2MetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  issuer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authorization_endpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_endpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OAuth2MetadataResponse::ArenaDtor(void* object) {
  OAuth2MetadataResponse* _this = reinterpret_cast< OAuth2MetadataResponse* >(object);
  (void)_this;
}
void OAuth2MetadataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OAuth2MetadataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OAuth2MetadataResponse::InternalSwap(OAuth2MetadataResponse* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata OAuth2MetadataResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fservice_2fauth_2eproto_getter, &descriptor_table_flyteidl_2fservice_2fauth_2eproto_once,
      file_level_metadata_flyteidl_2fservice_2fauth_2eproto[1]);
}

// ===================================================================

class PublicClientAuthConfigRequest::_Internal {
 public:
};

PublicClientAuthConfigRequest::PublicClientAuthConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.service.PublicClientAuthConfigRequest)
}
PublicClientAuthConfigRequest::PublicClientAuthConfigRequest(const PublicClientAuthConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.PublicClientAuthConfigRequest)
}



::PROTOBUF_NAMESPACE_ID::Metadata PublicClientAuthConfigRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fservice_2fauth_2eproto_getter, &descriptor_table_flyteidl_2fservice_2fauth_2eproto_once,
      file_level_metadata_flyteidl_2fservice_2fauth_2eproto[2]);
}

// ===================================================================

class PublicClientAuthConfigResponse::_Internal {
 public:
};

PublicClientAuthConfigResponse::PublicClientAuthConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  scopes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.service.PublicClientAuthConfigResponse)
}
PublicClientAuthConfigResponse::PublicClientAuthConfigResponse(const PublicClientAuthConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      scopes_(from.scopes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_client_id().empty()) {
    client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_client_id(), 
      GetArenaForAllocation());
  }
  redirect_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    redirect_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_redirect_uri().empty()) {
    redirect_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_redirect_uri(), 
      GetArenaForAllocation());
  }
  authorization_metadata_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    authorization_metadata_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_authorization_metadata_key().empty()) {
    authorization_metadata_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_authorization_metadata_key(), 
      GetArenaForAllocation());
  }
  service_http_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    service_http_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_service_http_endpoint().empty()) {
    service_http_endpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_service_http_endpoint(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.PublicClientAuthConfigResponse)
}

inline void PublicClientAuthConfigResponse::SharedCtor() {
client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  client_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
redirect_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  redirect_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
authorization_metadata_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  authorization_metadata_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
service_http_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  service_http_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PublicClientAuthConfigResponse::~PublicClientAuthConfigResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.PublicClientAuthConfigResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PublicClientAuthConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authorization_metadata_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_http_endpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PublicClientAuthConfigResponse::ArenaDtor(void* object) {
  PublicClientAuthConfigResponse* _this = reinterpret_cast< PublicClientAuthConfigResponse* >(object);
  (void)_this;
}
void PublicClientAuthConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PublicClientAuthConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PublicClientAuthConfigResponse::InternalSwap(PublicClientAuthConfigResponse* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata PublicClientAuthConfigResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fservice_2fauth_2eproto_getter, &descriptor_table_flyteidl_2fservice_2fauth_2eproto_once,
      file_level_metadata_flyteidl_2fservice_2fauth_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::service::OAuth2MetadataRequest* Arena::CreateMaybeMessage< ::flyteidl::service::OAuth2MetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::service::OAuth2MetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::OAuth2MetadataResponse* Arena::CreateMaybeMessage< ::flyteidl::service::OAuth2MetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::service::OAuth2MetadataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::PublicClientAuthConfigRequest* Arena::CreateMaybeMessage< ::flyteidl::service::PublicClientAuthConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::service::PublicClientAuthConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::PublicClientAuthConfigResponse* Arena::CreateMaybeMessage< ::flyteidl::service::PublicClientAuthConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::service::PublicClientAuthConfigResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
