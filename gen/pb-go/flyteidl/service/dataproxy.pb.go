// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/service/dataproxy.proto

package service

import (
	context "context"
	fmt "fmt"
	core "github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/core"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ArtifactType
type ArtifactType int32

const (
	// ARTIFACT_TYPE_UNDEFINED is the default, often invalid, value for the enum.
	ArtifactType_ARTIFACT_TYPE_UNDEFINED ArtifactType = 0
	// ARTIFACT_TYPE_DECK refers to the deck html file optionally generated after a task, a workflow or a launch plan
	// finishes executing.
	ArtifactType_ARTIFACT_TYPE_DECK ArtifactType = 1
)

var ArtifactType_name = map[int32]string{
	0: "ARTIFACT_TYPE_UNDEFINED",
	1: "ARTIFACT_TYPE_DECK",
}

var ArtifactType_value = map[string]int32{
	"ARTIFACT_TYPE_UNDEFINED": 0,
	"ARTIFACT_TYPE_DECK":      1,
}

func (x ArtifactType) String() string {
	return proto.EnumName(ArtifactType_name, int32(x))
}

func (ArtifactType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{0}
}

type CreateUploadLocationResponse struct {
	// SignedUrl specifies the url to use to upload content to (e.g. https://my-bucket.s3.amazonaws.com/randomstring/suffix.tar?X-...)
	SignedUrl string `protobuf:"bytes,1,opt,name=signed_url,json=signedUrl,proto3" json:"signed_url,omitempty"`
	// NativeUrl specifies the url in the format of the configured storage provider (e.g. s3://my-bucket/randomstring/suffix.tar)
	NativeUrl string `protobuf:"bytes,2,opt,name=native_url,json=nativeUrl,proto3" json:"native_url,omitempty"`
	// ExpiresAt defines when will the signed URL expires.
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateUploadLocationResponse) Reset()         { *m = CreateUploadLocationResponse{} }
func (m *CreateUploadLocationResponse) String() string { return proto.CompactTextString(m) }
func (*CreateUploadLocationResponse) ProtoMessage()    {}
func (*CreateUploadLocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{0}
}

func (m *CreateUploadLocationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUploadLocationResponse.Unmarshal(m, b)
}
func (m *CreateUploadLocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUploadLocationResponse.Marshal(b, m, deterministic)
}
func (m *CreateUploadLocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUploadLocationResponse.Merge(m, src)
}
func (m *CreateUploadLocationResponse) XXX_Size() int {
	return xxx_messageInfo_CreateUploadLocationResponse.Size(m)
}
func (m *CreateUploadLocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUploadLocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUploadLocationResponse proto.InternalMessageInfo

func (m *CreateUploadLocationResponse) GetSignedUrl() string {
	if m != nil {
		return m.SignedUrl
	}
	return ""
}

func (m *CreateUploadLocationResponse) GetNativeUrl() string {
	if m != nil {
		return m.NativeUrl
	}
	return ""
}

func (m *CreateUploadLocationResponse) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

// CreateUploadLocationRequest specified request for the CreateUploadLocation API.
type CreateUploadLocationRequest struct {
	// Project to create the upload location for
	// +required
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Domain to create the upload location for.
	// +required
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Filename specifies a desired suffix for the generated location. E.g. `file.py` or `pre/fix/file.zip`.
	// +optional. By default, the service will generate a consistent name based on the provided parameters.
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	// ExpiresIn defines a requested expiration duration for the generated url. The request will be rejected if this
	// exceeds the platform allowed max.
	// +optional. The default value comes from a global config.
	ExpiresIn *duration.Duration `protobuf:"bytes,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	// ContentMD5 restricts the upload location to the specific MD5 provided. The ContentMD5 will also appear in the
	// generated path.
	// +required
	ContentMd5           []byte   `protobuf:"bytes,5,opt,name=content_md5,json=contentMd5,proto3" json:"content_md5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUploadLocationRequest) Reset()         { *m = CreateUploadLocationRequest{} }
func (m *CreateUploadLocationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUploadLocationRequest) ProtoMessage()    {}
func (*CreateUploadLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{1}
}

func (m *CreateUploadLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUploadLocationRequest.Unmarshal(m, b)
}
func (m *CreateUploadLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUploadLocationRequest.Marshal(b, m, deterministic)
}
func (m *CreateUploadLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUploadLocationRequest.Merge(m, src)
}
func (m *CreateUploadLocationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUploadLocationRequest.Size(m)
}
func (m *CreateUploadLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUploadLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUploadLocationRequest proto.InternalMessageInfo

func (m *CreateUploadLocationRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *CreateUploadLocationRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CreateUploadLocationRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *CreateUploadLocationRequest) GetExpiresIn() *duration.Duration {
	if m != nil {
		return m.ExpiresIn
	}
	return nil
}

func (m *CreateUploadLocationRequest) GetContentMd5() []byte {
	if m != nil {
		return m.ContentMd5
	}
	return nil
}

// CreateDownloadLocationRequest specified request for the CreateDownloadLocation API.
//
// Deprecated: Do not use.
type CreateDownloadLocationRequest struct {
	// NativeUrl specifies the url in the format of the configured storage provider (e.g. s3://my-bucket/randomstring/suffix.tar)
	NativeUrl string `protobuf:"bytes,1,opt,name=native_url,json=nativeUrl,proto3" json:"native_url,omitempty"`
	// ExpiresIn defines a requested expiration duration for the generated url. The request will be rejected if this
	// exceeds the platform allowed max.
	// +optional. The default value comes from a global config.
	ExpiresIn            *duration.Duration `protobuf:"bytes,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateDownloadLocationRequest) Reset()         { *m = CreateDownloadLocationRequest{} }
func (m *CreateDownloadLocationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDownloadLocationRequest) ProtoMessage()    {}
func (*CreateDownloadLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{2}
}

func (m *CreateDownloadLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDownloadLocationRequest.Unmarshal(m, b)
}
func (m *CreateDownloadLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDownloadLocationRequest.Marshal(b, m, deterministic)
}
func (m *CreateDownloadLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDownloadLocationRequest.Merge(m, src)
}
func (m *CreateDownloadLocationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDownloadLocationRequest.Size(m)
}
func (m *CreateDownloadLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDownloadLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDownloadLocationRequest proto.InternalMessageInfo

func (m *CreateDownloadLocationRequest) GetNativeUrl() string {
	if m != nil {
		return m.NativeUrl
	}
	return ""
}

func (m *CreateDownloadLocationRequest) GetExpiresIn() *duration.Duration {
	if m != nil {
		return m.ExpiresIn
	}
	return nil
}

// Deprecated: Do not use.
type CreateDownloadLocationResponse struct {
	// SignedUrl specifies the url to use to download content from (e.g. https://my-bucket.s3.amazonaws.com/randomstring/suffix.tar?X-...)
	SignedUrl string `protobuf:"bytes,1,opt,name=signed_url,json=signedUrl,proto3" json:"signed_url,omitempty"`
	// ExpiresAt defines when will the signed URL expires.
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateDownloadLocationResponse) Reset()         { *m = CreateDownloadLocationResponse{} }
func (m *CreateDownloadLocationResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDownloadLocationResponse) ProtoMessage()    {}
func (*CreateDownloadLocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{3}
}

func (m *CreateDownloadLocationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDownloadLocationResponse.Unmarshal(m, b)
}
func (m *CreateDownloadLocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDownloadLocationResponse.Marshal(b, m, deterministic)
}
func (m *CreateDownloadLocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDownloadLocationResponse.Merge(m, src)
}
func (m *CreateDownloadLocationResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDownloadLocationResponse.Size(m)
}
func (m *CreateDownloadLocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDownloadLocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDownloadLocationResponse proto.InternalMessageInfo

func (m *CreateDownloadLocationResponse) GetSignedUrl() string {
	if m != nil {
		return m.SignedUrl
	}
	return ""
}

func (m *CreateDownloadLocationResponse) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

// CreateDownloadLinkRequest defines the request parameters to create a download link (signed url)
type CreateDownloadLinkRequest struct {
	// ArtifactType of the artifact requested.
	ArtifactType ArtifactType `protobuf:"varint,1,opt,name=artifact_type,json=artifactType,proto3,enum=flyteidl.service.ArtifactType" json:"artifact_type,omitempty"`
	// ExpiresIn defines a requested expiration duration for the generated url. The request will be rejected if this
	// exceeds the platform allowed max.
	// +optional. The default value comes from a global config.
	ExpiresIn *duration.Duration `protobuf:"bytes,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*CreateDownloadLinkRequest_NodeExecutionId
	Source               isCreateDownloadLinkRequest_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CreateDownloadLinkRequest) Reset()         { *m = CreateDownloadLinkRequest{} }
func (m *CreateDownloadLinkRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDownloadLinkRequest) ProtoMessage()    {}
func (*CreateDownloadLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{4}
}

func (m *CreateDownloadLinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDownloadLinkRequest.Unmarshal(m, b)
}
func (m *CreateDownloadLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDownloadLinkRequest.Marshal(b, m, deterministic)
}
func (m *CreateDownloadLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDownloadLinkRequest.Merge(m, src)
}
func (m *CreateDownloadLinkRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDownloadLinkRequest.Size(m)
}
func (m *CreateDownloadLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDownloadLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDownloadLinkRequest proto.InternalMessageInfo

func (m *CreateDownloadLinkRequest) GetArtifactType() ArtifactType {
	if m != nil {
		return m.ArtifactType
	}
	return ArtifactType_ARTIFACT_TYPE_UNDEFINED
}

func (m *CreateDownloadLinkRequest) GetExpiresIn() *duration.Duration {
	if m != nil {
		return m.ExpiresIn
	}
	return nil
}

type isCreateDownloadLinkRequest_Source interface {
	isCreateDownloadLinkRequest_Source()
}

type CreateDownloadLinkRequest_NodeExecutionId struct {
	NodeExecutionId *core.NodeExecutionIdentifier `protobuf:"bytes,3,opt,name=node_execution_id,json=nodeExecutionId,proto3,oneof"`
}

func (*CreateDownloadLinkRequest_NodeExecutionId) isCreateDownloadLinkRequest_Source() {}

func (m *CreateDownloadLinkRequest) GetSource() isCreateDownloadLinkRequest_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *CreateDownloadLinkRequest) GetNodeExecutionId() *core.NodeExecutionIdentifier {
	if x, ok := m.GetSource().(*CreateDownloadLinkRequest_NodeExecutionId); ok {
		return x.NodeExecutionId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateDownloadLinkRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateDownloadLinkRequest_NodeExecutionId)(nil),
	}
}

// CreateDownloadLinkResponse defines the response for the generated links
type CreateDownloadLinkResponse struct {
	// SignedUrl specifies the url to use to download content from (e.g. https://my-bucket.s3.amazonaws.com/randomstring/suffix.tar?X-...)
	SignedUrl []string `protobuf:"bytes,1,rep,name=signed_url,json=signedUrl,proto3" json:"signed_url,omitempty"`
	// ExpiresAt defines when will the signed URL expire.
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// New wrapper object since the message is shared across this and the GetDataResponse
	PreSignedUrls        *PreSignedURLs `protobuf:"bytes,3,opt,name=pre_signed_urls,json=preSignedUrls,proto3" json:"pre_signed_urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateDownloadLinkResponse) Reset()         { *m = CreateDownloadLinkResponse{} }
func (m *CreateDownloadLinkResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDownloadLinkResponse) ProtoMessage()    {}
func (*CreateDownloadLinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{5}
}

func (m *CreateDownloadLinkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDownloadLinkResponse.Unmarshal(m, b)
}
func (m *CreateDownloadLinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDownloadLinkResponse.Marshal(b, m, deterministic)
}
func (m *CreateDownloadLinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDownloadLinkResponse.Merge(m, src)
}
func (m *CreateDownloadLinkResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDownloadLinkResponse.Size(m)
}
func (m *CreateDownloadLinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDownloadLinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDownloadLinkResponse proto.InternalMessageInfo

func (m *CreateDownloadLinkResponse) GetSignedUrl() []string {
	if m != nil {
		return m.SignedUrl
	}
	return nil
}

func (m *CreateDownloadLinkResponse) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *CreateDownloadLinkResponse) GetPreSignedUrls() *PreSignedURLs {
	if m != nil {
		return m.PreSignedUrls
	}
	return nil
}

type PreSignedURLs struct {
	// SignedUrl specifies the url to use to download content from (e.g. https://my-bucket.s3.amazonaws.com/randomstring/suffix.tar?X-...)
	SignedUrl []string `protobuf:"bytes,1,rep,name=signed_url,json=signedUrl,proto3" json:"signed_url,omitempty"`
	// ExpiresAt defines when will the signed URL expire.
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PreSignedURLs) Reset()         { *m = PreSignedURLs{} }
func (m *PreSignedURLs) String() string { return proto.CompactTextString(m) }
func (*PreSignedURLs) ProtoMessage()    {}
func (*PreSignedURLs) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{6}
}

func (m *PreSignedURLs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreSignedURLs.Unmarshal(m, b)
}
func (m *PreSignedURLs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreSignedURLs.Marshal(b, m, deterministic)
}
func (m *PreSignedURLs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreSignedURLs.Merge(m, src)
}
func (m *PreSignedURLs) XXX_Size() int {
	return xxx_messageInfo_PreSignedURLs.Size(m)
}
func (m *PreSignedURLs) XXX_DiscardUnknown() {
	xxx_messageInfo_PreSignedURLs.DiscardUnknown(m)
}

var xxx_messageInfo_PreSignedURLs proto.InternalMessageInfo

func (m *PreSignedURLs) GetSignedUrl() []string {
	if m != nil {
		return m.SignedUrl
	}
	return nil
}

func (m *PreSignedURLs) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

// General request artifact to retrieve data from a Flyte artifact url.
type GetDataRequest struct {
	// A unique identifier in the form of flyte://<something> that uniquely, for a given Flyte
	// backend, identifies a Flyte artifact ([i]nput, [o]utput, flyte [d]eck, etc.).
	// e.g. flyte://v1/proj/development/execid/n2/0/i (for 0th task execution attempt input)
	//      flyte://v1/proj/development/execid/n2/i (for node execution input)
	FlyteUrl             string   `protobuf:"bytes,1,opt,name=flyte_url,json=flyteUrl,proto3" json:"flyte_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDataRequest) Reset()         { *m = GetDataRequest{} }
func (m *GetDataRequest) String() string { return proto.CompactTextString(m) }
func (*GetDataRequest) ProtoMessage()    {}
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{7}
}

func (m *GetDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataRequest.Unmarshal(m, b)
}
func (m *GetDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataRequest.Marshal(b, m, deterministic)
}
func (m *GetDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataRequest.Merge(m, src)
}
func (m *GetDataRequest) XXX_Size() int {
	return xxx_messageInfo_GetDataRequest.Size(m)
}
func (m *GetDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataRequest proto.InternalMessageInfo

func (m *GetDataRequest) GetFlyteUrl() string {
	if m != nil {
		return m.FlyteUrl
	}
	return ""
}

type GetDataResponse struct {
	// Types that are valid to be assigned to Data:
	//	*GetDataResponse_LiteralMap
	//	*GetDataResponse_PreSignedUrls
	Data                 isGetDataResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetDataResponse) Reset()         { *m = GetDataResponse{} }
func (m *GetDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetDataResponse) ProtoMessage()    {}
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bffb71366d75dab0, []int{8}
}

func (m *GetDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDataResponse.Unmarshal(m, b)
}
func (m *GetDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDataResponse.Marshal(b, m, deterministic)
}
func (m *GetDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDataResponse.Merge(m, src)
}
func (m *GetDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetDataResponse.Size(m)
}
func (m *GetDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDataResponse proto.InternalMessageInfo

type isGetDataResponse_Data interface {
	isGetDataResponse_Data()
}

type GetDataResponse_LiteralMap struct {
	LiteralMap *core.LiteralMap `protobuf:"bytes,1,opt,name=literal_map,json=literalMap,proto3,oneof"`
}

type GetDataResponse_PreSignedUrls struct {
	PreSignedUrls *PreSignedURLs `protobuf:"bytes,2,opt,name=pre_signed_urls,json=preSignedUrls,proto3,oneof"`
}

func (*GetDataResponse_LiteralMap) isGetDataResponse_Data() {}

func (*GetDataResponse_PreSignedUrls) isGetDataResponse_Data() {}

func (m *GetDataResponse) GetData() isGetDataResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetDataResponse) GetLiteralMap() *core.LiteralMap {
	if x, ok := m.GetData().(*GetDataResponse_LiteralMap); ok {
		return x.LiteralMap
	}
	return nil
}

func (m *GetDataResponse) GetPreSignedUrls() *PreSignedURLs {
	if x, ok := m.GetData().(*GetDataResponse_PreSignedUrls); ok {
		return x.PreSignedUrls
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetDataResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetDataResponse_LiteralMap)(nil),
		(*GetDataResponse_PreSignedUrls)(nil),
	}
}

func init() {
	proto.RegisterEnum("flyteidl.service.ArtifactType", ArtifactType_name, ArtifactType_value)
	proto.RegisterType((*CreateUploadLocationResponse)(nil), "flyteidl.service.CreateUploadLocationResponse")
	proto.RegisterType((*CreateUploadLocationRequest)(nil), "flyteidl.service.CreateUploadLocationRequest")
	proto.RegisterType((*CreateDownloadLocationRequest)(nil), "flyteidl.service.CreateDownloadLocationRequest")
	proto.RegisterType((*CreateDownloadLocationResponse)(nil), "flyteidl.service.CreateDownloadLocationResponse")
	proto.RegisterType((*CreateDownloadLinkRequest)(nil), "flyteidl.service.CreateDownloadLinkRequest")
	proto.RegisterType((*CreateDownloadLinkResponse)(nil), "flyteidl.service.CreateDownloadLinkResponse")
	proto.RegisterType((*PreSignedURLs)(nil), "flyteidl.service.PreSignedURLs")
	proto.RegisterType((*GetDataRequest)(nil), "flyteidl.service.GetDataRequest")
	proto.RegisterType((*GetDataResponse)(nil), "flyteidl.service.GetDataResponse")
}

func init() { proto.RegisterFile("flyteidl/service/dataproxy.proto", fileDescriptor_bffb71366d75dab0) }

var fileDescriptor_bffb71366d75dab0 = []byte{
	// 854 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xef, 0x64, 0x4b, 0xb7, 0x7d, 0xfd, 0xcb, 0x68, 0x55, 0xb2, 0x6e, 0xb7, 0x0d, 0x06, 0xa1,
	0x52, 0xa8, 0x0d, 0x45, 0x2b, 0xd8, 0x15, 0x97, 0x36, 0xc9, 0x6e, 0x23, 0xba, 0x55, 0xe5, 0x4d,
	0x0f, 0x70, 0xb1, 0xa6, 0xf6, 0x4b, 0x18, 0xd6, 0x99, 0x31, 0xe3, 0x49, 0x69, 0x25, 0xc4, 0x81,
	0x13, 0x77, 0x0e, 0x1c, 0xb8, 0x20, 0x0e, 0x7c, 0x0d, 0x6e, 0x7c, 0x01, 0xbe, 0x01, 0xe2, 0x53,
	0x70, 0x42, 0xb6, 0x27, 0x4e, 0x9d, 0xa4, 0xdd, 0x80, 0xe0, 0xf8, 0xe6, 0xf7, 0x3c, 0xbf, 0xdf,
	0xfb, 0xcd, 0xbc, 0x37, 0x86, 0x5a, 0x27, 0xba, 0xd2, 0xc8, 0xc3, 0xc8, 0x4d, 0x50, 0x5d, 0xf0,
	0x00, 0xdd, 0x90, 0x69, 0x16, 0x2b, 0x79, 0x79, 0xe5, 0xc4, 0x4a, 0x6a, 0x49, 0xd7, 0x06, 0x19,
	0x8e, 0xc9, 0xb0, 0x36, 0xbb, 0x52, 0x76, 0x23, 0x74, 0x59, 0xcc, 0x5d, 0x26, 0x84, 0xd4, 0x4c,
	0x73, 0x29, 0x92, 0x3c, 0xdf, 0xda, 0x32, 0x68, 0x16, 0x9d, 0xf7, 0x3b, 0x6e, 0xd8, 0x57, 0x59,
	0x82, 0xc1, 0xb7, 0x47, 0x71, 0xcd, 0x7b, 0x98, 0x68, 0xd6, 0x8b, 0x07, 0x1b, 0x14, 0x92, 0x02,
	0xa9, 0xd0, 0xe5, 0x21, 0x0a, 0xcd, 0x3b, 0x1c, 0x95, 0xc1, 0x37, 0xcb, 0x78, 0xc4, 0x35, 0x2a,
	0x16, 0x19, 0x7a, 0xfb, 0x07, 0x02, 0x9b, 0x75, 0x85, 0x4c, 0xe3, 0x59, 0x1c, 0x49, 0x16, 0x1e,
	0xcb, 0x20, 0x63, 0xf7, 0x30, 0x89, 0xa5, 0x48, 0x90, 0x3e, 0x00, 0x48, 0x78, 0x57, 0x60, 0xe8,
	0xf7, 0x55, 0x54, 0x25, 0x35, 0xb2, 0xb3, 0xe0, 0x2d, 0xe4, 0x2b, 0x67, 0x2a, 0x4a, 0x61, 0xc1,
	0x34, 0xbf, 0xc0, 0x0c, 0xae, 0xe4, 0x70, 0xbe, 0x92, 0xc2, 0x8f, 0x00, 0xf0, 0x32, 0xe6, 0x0a,
	0x13, 0x9f, 0xe9, 0xea, 0x9d, 0x1a, 0xd9, 0x59, 0xdc, 0xb7, 0x9c, 0xbc, 0x24, 0x67, 0x50, 0x92,
	0xd3, 0x1e, 0x94, 0xe4, 0x2d, 0x98, 0xec, 0x03, 0x6d, 0xff, 0x46, 0x60, 0x63, 0xb2, 0xb2, 0x2f,
	0xfb, 0x98, 0x68, 0x5a, 0x85, 0xbb, 0xb1, 0x92, 0x5f, 0x60, 0xa0, 0x8d, 0xaa, 0x41, 0x48, 0xd7,
	0x61, 0x2e, 0x94, 0x3d, 0xc6, 0x85, 0xd1, 0x63, 0x22, 0x6a, 0xc1, 0x7c, 0x87, 0x47, 0x28, 0x58,
	0x0f, 0x33, 0x29, 0x0b, 0x5e, 0x11, 0xd3, 0x8f, 0x86, 0x42, 0xb9, 0xa8, 0xce, 0x66, 0x42, 0xef,
	0x8f, 0x09, 0x6d, 0x98, 0xb3, 0x29, 0x74, 0xb6, 0x04, 0xdd, 0x86, 0xc5, 0x40, 0x0a, 0x8d, 0x42,
	0xfb, 0xbd, 0xf0, 0x61, 0xf5, 0x95, 0x1a, 0xd9, 0x59, 0xf2, 0xc0, 0x2c, 0x3d, 0x0b, 0x1f, 0xda,
	0x5f, 0xc3, 0x83, 0xbc, 0x8e, 0x86, 0xfc, 0x4a, 0x4c, 0xaa, 0xa4, 0xec, 0x21, 0x19, 0xf5, 0xb0,
	0x2c, 0xad, 0x32, 0xbd, 0xb4, 0xc7, 0x95, 0x2a, 0xb1, 0xbf, 0x81, 0xad, 0x9b, 0xd8, 0xa7, 0x3b,
	0xe1, 0xf2, 0x11, 0x56, 0xfe, 0xc1, 0x11, 0x66, 0xfc, 0x7f, 0x11, 0xb8, 0x3f, 0x22, 0x80, 0x8b,
	0x17, 0x83, 0xd2, 0xeb, 0xb0, 0xcc, 0x94, 0xe6, 0x1d, 0x16, 0x68, 0x5f, 0x5f, 0xc5, 0x98, 0xd1,
	0xaf, 0xec, 0x6f, 0x39, 0xa3, 0x5d, 0xe4, 0x1c, 0x98, 0xb4, 0xf6, 0x55, 0x8c, 0xde, 0x12, 0xbb,
	0x16, 0xfd, 0x7b, 0x83, 0x68, 0x1b, 0x5e, 0x15, 0x32, 0x44, 0x1f, 0x2f, 0x31, 0xe8, 0xa7, 0xa0,
	0xcf, 0x43, 0x73, 0x4b, 0xdf, 0x1a, 0x4a, 0x48, 0xfb, 0xc6, 0x39, 0x91, 0x21, 0x36, 0x07, 0x69,
	0xad, 0xa2, 0xc9, 0x8e, 0x66, 0xbc, 0x55, 0x51, 0x86, 0x0e, 0xe7, 0x61, 0x2e, 0x91, 0x7d, 0x15,
	0xa0, 0xfd, 0x2b, 0x01, 0x6b, 0x52, 0xf1, 0x37, 0x38, 0x7f, 0xe7, 0xbf, 0x72, 0x9e, 0x3e, 0x85,
	0xd5, 0x58, 0xa1, 0x3f, 0xdc, 0x3d, 0x31, 0x65, 0x6d, 0x8f, 0x3b, 0x7b, 0xaa, 0xf0, 0x79, 0xce,
	0xe9, 0x1d, 0x27, 0xde, 0x72, 0x5c, 0x84, 0x2a, 0x4a, 0x6c, 0x0e, 0xcb, 0x25, 0xfc, 0xff, 0xd3,
	0x6c, 0xef, 0xc1, 0xca, 0x53, 0xd4, 0x0d, 0xa6, 0xd9, 0xe0, 0x76, 0x6c, 0xc0, 0x42, 0xa6, 0xf6,
	0xda, 0xc5, 0x9c, 0xcf, 0x16, 0xce, 0x54, 0x64, 0xff, 0x4c, 0x60, 0xb5, 0xc8, 0x37, 0x86, 0x7e,
	0x0c, 0x8b, 0x66, 0xbe, 0xf9, 0x3d, 0x16, 0x67, 0x9f, 0xa4, 0x57, 0xa1, 0x7c, 0x92, 0xc7, 0x79,
	0xc6, 0x33, 0x16, 0x1f, 0xcd, 0x78, 0x10, 0x15, 0x11, 0x6d, 0x8d, 0x9b, 0x56, 0x99, 0xca, 0xb4,
	0xa3, 0x99, 0x11, 0xdb, 0x0e, 0xe7, 0x60, 0x36, 0x7d, 0x18, 0x76, 0xeb, 0xb0, 0x74, 0xfd, 0xe2,
	0xd2, 0x0d, 0x78, 0xed, 0xc0, 0x6b, 0xb7, 0x9e, 0x1c, 0xd4, 0xdb, 0x7e, 0xfb, 0xd3, 0xd3, 0xa6,
	0x7f, 0x76, 0xd2, 0x68, 0x3e, 0x69, 0x9d, 0x34, 0x1b, 0x6b, 0x33, 0x74, 0x1d, 0x68, 0x19, 0x6c,
	0x34, 0xeb, 0x9f, 0xac, 0x91, 0xfd, 0x3f, 0x66, 0x61, 0x2d, 0x2d, 0xf3, 0x34, 0x7d, 0x66, 0x9e,
	0xe7, 0x02, 0xe8, 0x4f, 0x04, 0xee, 0x4d, 0x1a, 0x8f, 0x74, 0x6f, 0x5c, 0xec, 0x2d, 0x63, 0xd4,
	0x72, 0xa6, 0x4d, 0xcf, 0x2d, 0xb6, 0xdf, 0xfe, 0xf6, 0xf7, 0x3f, 0xbf, 0xaf, 0xbc, 0x61, 0x6f,
	0x65, 0xef, 0xd9, 0xc5, 0xfb, 0xc3, 0x07, 0xd0, 0x2d, 0x3a, 0xb9, 0xaf, 0xc4, 0x63, 0xb2, 0x4b,
	0x7f, 0x21, 0xb0, 0x3e, 0x79, 0xf6, 0x50, 0xf7, 0x26, 0xd6, 0x1b, 0x66, 0xa4, 0xf5, 0xde, 0xf4,
	0x1f, 0x94, 0x84, 0xd6, 0xe8, 0x4b, 0x84, 0x7e, 0x57, 0x21, 0xf4, 0x47, 0x02, 0x74, 0xbc, 0x4d,
	0xe9, 0x3b, 0x2f, 0xe5, 0x1c, 0x4e, 0x32, 0xeb, 0xdd, 0xe9, 0x92, 0x8d, 0xb8, 0xdd, 0x4c, 0xdc,
	0x9b, 0xf6, 0xf6, 0x2d, 0xe2, 0x22, 0x2e, 0x5e, 0xa4, 0x36, 0x86, 0x70, 0xd7, 0xdc, 0x73, 0x5a,
	0x1b, 0x27, 0x29, 0xb7, 0x8c, 0xf5, 0xfa, 0x2d, 0x19, 0x86, 0xfb, 0x5e, 0xc6, 0xbd, 0x42, 0x97,
	0xae, 0x73, 0x1f, 0x3e, 0xfa, 0xec, 0xc3, 0x2e, 0xd7, 0x9f, 0xf7, 0xcf, 0x9d, 0x40, 0xf6, 0xdc,
	0x6c, 0x13, 0xa9, 0xba, 0x6e, 0xf1, 0xf3, 0xd0, 0x45, 0xe1, 0xc6, 0xe7, 0x7b, 0x5d, 0xe9, 0x8e,
	0xfe, 0x02, 0x9d, 0xcf, 0x65, 0x7d, 0xfd, 0xc1, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0x44,
	0x4a, 0xf3, 0x1d, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataProxyServiceClient is the client API for DataProxyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataProxyServiceClient interface {
	// CreateUploadLocation creates a signed url to upload artifacts to for a given project/domain.
	CreateUploadLocation(ctx context.Context, in *CreateUploadLocationRequest, opts ...grpc.CallOption) (*CreateUploadLocationResponse, error)
	// CreateDownloadLocation creates a signed url to download artifacts.
	CreateDownloadLocation(ctx context.Context, in *CreateDownloadLocationRequest, opts ...grpc.CallOption) (*CreateDownloadLocationResponse, error)
	// CreateDownloadLocation creates a signed url to download artifacts.
	CreateDownloadLink(ctx context.Context, in *CreateDownloadLinkRequest, opts ...grpc.CallOption) (*CreateDownloadLinkResponse, error)
	GetData(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*GetDataResponse, error)
}

type dataProxyServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataProxyServiceClient(cc *grpc.ClientConn) DataProxyServiceClient {
	return &dataProxyServiceClient{cc}
}

func (c *dataProxyServiceClient) CreateUploadLocation(ctx context.Context, in *CreateUploadLocationRequest, opts ...grpc.CallOption) (*CreateUploadLocationResponse, error) {
	out := new(CreateUploadLocationResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.service.DataProxyService/CreateUploadLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *dataProxyServiceClient) CreateDownloadLocation(ctx context.Context, in *CreateDownloadLocationRequest, opts ...grpc.CallOption) (*CreateDownloadLocationResponse, error) {
	out := new(CreateDownloadLocationResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.service.DataProxyService/CreateDownloadLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataProxyServiceClient) CreateDownloadLink(ctx context.Context, in *CreateDownloadLinkRequest, opts ...grpc.CallOption) (*CreateDownloadLinkResponse, error) {
	out := new(CreateDownloadLinkResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.service.DataProxyService/CreateDownloadLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataProxyServiceClient) GetData(ctx context.Context, in *GetDataRequest, opts ...grpc.CallOption) (*GetDataResponse, error) {
	out := new(GetDataResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.service.DataProxyService/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataProxyServiceServer is the server API for DataProxyService service.
type DataProxyServiceServer interface {
	// CreateUploadLocation creates a signed url to upload artifacts to for a given project/domain.
	CreateUploadLocation(context.Context, *CreateUploadLocationRequest) (*CreateUploadLocationResponse, error)
	// CreateDownloadLocation creates a signed url to download artifacts.
	CreateDownloadLocation(context.Context, *CreateDownloadLocationRequest) (*CreateDownloadLocationResponse, error)
	// CreateDownloadLocation creates a signed url to download artifacts.
	CreateDownloadLink(context.Context, *CreateDownloadLinkRequest) (*CreateDownloadLinkResponse, error)
	GetData(context.Context, *GetDataRequest) (*GetDataResponse, error)
}

// UnimplementedDataProxyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDataProxyServiceServer struct {
}

func (*UnimplementedDataProxyServiceServer) CreateUploadLocation(ctx context.Context, req *CreateUploadLocationRequest) (*CreateUploadLocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUploadLocation not implemented")
}
func (*UnimplementedDataProxyServiceServer) CreateDownloadLocation(ctx context.Context, req *CreateDownloadLocationRequest) (*CreateDownloadLocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDownloadLocation not implemented")
}
func (*UnimplementedDataProxyServiceServer) CreateDownloadLink(ctx context.Context, req *CreateDownloadLinkRequest) (*CreateDownloadLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDownloadLink not implemented")
}
func (*UnimplementedDataProxyServiceServer) GetData(ctx context.Context, req *GetDataRequest) (*GetDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}

func RegisterDataProxyServiceServer(s *grpc.Server, srv DataProxyServiceServer) {
	s.RegisterService(&_DataProxyService_serviceDesc, srv)
}

func _DataProxyService_CreateUploadLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUploadLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataProxyServiceServer).CreateUploadLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.service.DataProxyService/CreateUploadLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataProxyServiceServer).CreateUploadLocation(ctx, req.(*CreateUploadLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataProxyService_CreateDownloadLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDownloadLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataProxyServiceServer).CreateDownloadLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.service.DataProxyService/CreateDownloadLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataProxyServiceServer).CreateDownloadLocation(ctx, req.(*CreateDownloadLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataProxyService_CreateDownloadLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDownloadLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataProxyServiceServer).CreateDownloadLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.service.DataProxyService/CreateDownloadLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataProxyServiceServer).CreateDownloadLink(ctx, req.(*CreateDownloadLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataProxyService_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataProxyServiceServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.service.DataProxyService/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataProxyServiceServer).GetData(ctx, req.(*GetDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataProxyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flyteidl.service.DataProxyService",
	HandlerType: (*DataProxyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUploadLocation",
			Handler:    _DataProxyService_CreateUploadLocation_Handler,
		},
		{
			MethodName: "CreateDownloadLocation",
			Handler:    _DataProxyService_CreateDownloadLocation_Handler,
		},
		{
			MethodName: "CreateDownloadLink",
			Handler:    _DataProxyService_CreateDownloadLink_Handler,
		},
		{
			MethodName: "GetData",
			Handler:    _DataProxyService_GetData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flyteidl/service/dataproxy.proto",
}
