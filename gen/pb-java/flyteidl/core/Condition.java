// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/condition.proto

package flyteidl.core;

public final class Condition {
  private Condition() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ComparisonExpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.ComparisonExpression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
     */
    int getOperatorValue();
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
     */
    flyteidl.core.Condition.ComparisonExpression.Operator getOperator();

    /**
     * <code>.flyteidl.core.Operand left_value = 2;</code>
     */
    boolean hasLeftValue();
    /**
     * <code>.flyteidl.core.Operand left_value = 2;</code>
     */
    flyteidl.core.Condition.Operand getLeftValue();
    /**
     * <code>.flyteidl.core.Operand left_value = 2;</code>
     */
    flyteidl.core.Condition.OperandOrBuilder getLeftValueOrBuilder();

    /**
     * <code>.flyteidl.core.Operand right_value = 3;</code>
     */
    boolean hasRightValue();
    /**
     * <code>.flyteidl.core.Operand right_value = 3;</code>
     */
    flyteidl.core.Condition.Operand getRightValue();
    /**
     * <code>.flyteidl.core.Operand right_value = 3;</code>
     */
    flyteidl.core.Condition.OperandOrBuilder getRightValueOrBuilder();
  }
  /**
   * <pre>
   * Defines a 2-level tree where the root is a comparison operator and Operands are primitives or known variables.
   * Each expression results in a boolean result.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.ComparisonExpression}
   */
  public  static final class ComparisonExpression extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.ComparisonExpression)
      ComparisonExpressionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ComparisonExpression.newBuilder() to construct.
    private ComparisonExpression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComparisonExpression() {
      operator_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ComparisonExpression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              operator_ = rawValue;
              break;
            }
            case 18: {
              flyteidl.core.Condition.Operand.Builder subBuilder = null;
              if (leftValue_ != null) {
                subBuilder = leftValue_.toBuilder();
              }
              leftValue_ = input.readMessage(flyteidl.core.Condition.Operand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leftValue_);
                leftValue_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              flyteidl.core.Condition.Operand.Builder subBuilder = null;
              if (rightValue_ != null) {
                subBuilder = rightValue_.toBuilder();
              }
              rightValue_ = input.readMessage(flyteidl.core.Condition.Operand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rightValue_);
                rightValue_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_ComparisonExpression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_ComparisonExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Condition.ComparisonExpression.class, flyteidl.core.Condition.ComparisonExpression.Builder.class);
    }

    /**
     * <pre>
     * Binary Operator for each expression
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.ComparisonExpression.Operator}
     */
    public enum Operator
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EQ = 0;</code>
       */
      EQ(0),
      /**
       * <code>NEQ = 1;</code>
       */
      NEQ(1),
      /**
       * <pre>
       * Greater Than
       * </pre>
       *
       * <code>GT = 2;</code>
       */
      GT(2),
      /**
       * <code>GTE = 3;</code>
       */
      GTE(3),
      /**
       * <pre>
       * Less Than
       * </pre>
       *
       * <code>LT = 4;</code>
       */
      LT(4),
      /**
       * <code>LTE = 5;</code>
       */
      LTE(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>EQ = 0;</code>
       */
      public static final int EQ_VALUE = 0;
      /**
       * <code>NEQ = 1;</code>
       */
      public static final int NEQ_VALUE = 1;
      /**
       * <pre>
       * Greater Than
       * </pre>
       *
       * <code>GT = 2;</code>
       */
      public static final int GT_VALUE = 2;
      /**
       * <code>GTE = 3;</code>
       */
      public static final int GTE_VALUE = 3;
      /**
       * <pre>
       * Less Than
       * </pre>
       *
       * <code>LT = 4;</code>
       */
      public static final int LT_VALUE = 4;
      /**
       * <code>LTE = 5;</code>
       */
      public static final int LTE_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Operator valueOf(int value) {
        return forNumber(value);
      }

      public static Operator forNumber(int value) {
        switch (value) {
          case 0: return EQ;
          case 1: return NEQ;
          case 2: return GT;
          case 3: return GTE;
          case 4: return LT;
          case 5: return LTE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Operator>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Operator> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operator>() {
              public Operator findValueByNumber(int number) {
                return Operator.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Condition.ComparisonExpression.getDescriptor().getEnumTypes().get(0);
      }

      private static final Operator[] VALUES = values();

      public static Operator valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Operator(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.ComparisonExpression.Operator)
    }

    public static final int OPERATOR_FIELD_NUMBER = 1;
    private int operator_;
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
     */
    public int getOperatorValue() {
      return operator_;
    }
    /**
     * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
     */
    public flyteidl.core.Condition.ComparisonExpression.Operator getOperator() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Condition.ComparisonExpression.Operator result = flyteidl.core.Condition.ComparisonExpression.Operator.valueOf(operator_);
      return result == null ? flyteidl.core.Condition.ComparisonExpression.Operator.UNRECOGNIZED : result;
    }

    public static final int LEFT_VALUE_FIELD_NUMBER = 2;
    private flyteidl.core.Condition.Operand leftValue_;
    /**
     * <code>.flyteidl.core.Operand left_value = 2;</code>
     */
    public boolean hasLeftValue() {
      return leftValue_ != null;
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2;</code>
     */
    public flyteidl.core.Condition.Operand getLeftValue() {
      return leftValue_ == null ? flyteidl.core.Condition.Operand.getDefaultInstance() : leftValue_;
    }
    /**
     * <code>.flyteidl.core.Operand left_value = 2;</code>
     */
    public flyteidl.core.Condition.OperandOrBuilder getLeftValueOrBuilder() {
      return getLeftValue();
    }

    public static final int RIGHT_VALUE_FIELD_NUMBER = 3;
    private flyteidl.core.Condition.Operand rightValue_;
    /**
     * <code>.flyteidl.core.Operand right_value = 3;</code>
     */
    public boolean hasRightValue() {
      return rightValue_ != null;
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3;</code>
     */
    public flyteidl.core.Condition.Operand getRightValue() {
      return rightValue_ == null ? flyteidl.core.Condition.Operand.getDefaultInstance() : rightValue_;
    }
    /**
     * <code>.flyteidl.core.Operand right_value = 3;</code>
     */
    public flyteidl.core.Condition.OperandOrBuilder getRightValueOrBuilder() {
      return getRightValue();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (operator_ != flyteidl.core.Condition.ComparisonExpression.Operator.EQ.getNumber()) {
        output.writeEnum(1, operator_);
      }
      if (leftValue_ != null) {
        output.writeMessage(2, getLeftValue());
      }
      if (rightValue_ != null) {
        output.writeMessage(3, getRightValue());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (operator_ != flyteidl.core.Condition.ComparisonExpression.Operator.EQ.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, operator_);
      }
      if (leftValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLeftValue());
      }
      if (rightValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRightValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Condition.ComparisonExpression)) {
        return super.equals(obj);
      }
      flyteidl.core.Condition.ComparisonExpression other = (flyteidl.core.Condition.ComparisonExpression) obj;

      if (operator_ != other.operator_) return false;
      if (hasLeftValue() != other.hasLeftValue()) return false;
      if (hasLeftValue()) {
        if (!getLeftValue()
            .equals(other.getLeftValue())) return false;
      }
      if (hasRightValue() != other.hasRightValue()) return false;
      if (hasRightValue()) {
        if (!getRightValue()
            .equals(other.getRightValue())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
      hash = (53 * hash) + operator_;
      if (hasLeftValue()) {
        hash = (37 * hash) + LEFT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getLeftValue().hashCode();
      }
      if (hasRightValue()) {
        hash = (37 * hash) + RIGHT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getRightValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.ComparisonExpression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Condition.ComparisonExpression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a 2-level tree where the root is a comparison operator and Operands are primitives or known variables.
     * Each expression results in a boolean result.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.ComparisonExpression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.ComparisonExpression)
        flyteidl.core.Condition.ComparisonExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_ComparisonExpression_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_ComparisonExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Condition.ComparisonExpression.class, flyteidl.core.Condition.ComparisonExpression.Builder.class);
      }

      // Construct using flyteidl.core.Condition.ComparisonExpression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        operator_ = 0;

        if (leftValueBuilder_ == null) {
          leftValue_ = null;
        } else {
          leftValue_ = null;
          leftValueBuilder_ = null;
        }
        if (rightValueBuilder_ == null) {
          rightValue_ = null;
        } else {
          rightValue_ = null;
          rightValueBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_ComparisonExpression_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Condition.ComparisonExpression getDefaultInstanceForType() {
        return flyteidl.core.Condition.ComparisonExpression.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Condition.ComparisonExpression build() {
        flyteidl.core.Condition.ComparisonExpression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Condition.ComparisonExpression buildPartial() {
        flyteidl.core.Condition.ComparisonExpression result = new flyteidl.core.Condition.ComparisonExpression(this);
        result.operator_ = operator_;
        if (leftValueBuilder_ == null) {
          result.leftValue_ = leftValue_;
        } else {
          result.leftValue_ = leftValueBuilder_.build();
        }
        if (rightValueBuilder_ == null) {
          result.rightValue_ = rightValue_;
        } else {
          result.rightValue_ = rightValueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Condition.ComparisonExpression) {
          return mergeFrom((flyteidl.core.Condition.ComparisonExpression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Condition.ComparisonExpression other) {
        if (other == flyteidl.core.Condition.ComparisonExpression.getDefaultInstance()) return this;
        if (other.operator_ != 0) {
          setOperatorValue(other.getOperatorValue());
        }
        if (other.hasLeftValue()) {
          mergeLeftValue(other.getLeftValue());
        }
        if (other.hasRightValue()) {
          mergeRightValue(other.getRightValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Condition.ComparisonExpression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Condition.ComparisonExpression) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int operator_ = 0;
      /**
       * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
       */
      public int getOperatorValue() {
        return operator_;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
       */
      public Builder setOperatorValue(int value) {
        operator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
       */
      public flyteidl.core.Condition.ComparisonExpression.Operator getOperator() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Condition.ComparisonExpression.Operator result = flyteidl.core.Condition.ComparisonExpression.Operator.valueOf(operator_);
        return result == null ? flyteidl.core.Condition.ComparisonExpression.Operator.UNRECOGNIZED : result;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
       */
      public Builder setOperator(flyteidl.core.Condition.ComparisonExpression.Operator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        operator_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression.Operator operator = 1;</code>
       */
      public Builder clearOperator() {
        
        operator_ = 0;
        onChanged();
        return this;
      }

      private flyteidl.core.Condition.Operand leftValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.Operand, flyteidl.core.Condition.Operand.Builder, flyteidl.core.Condition.OperandOrBuilder> leftValueBuilder_;
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public boolean hasLeftValue() {
        return leftValueBuilder_ != null || leftValue_ != null;
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public flyteidl.core.Condition.Operand getLeftValue() {
        if (leftValueBuilder_ == null) {
          return leftValue_ == null ? flyteidl.core.Condition.Operand.getDefaultInstance() : leftValue_;
        } else {
          return leftValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public Builder setLeftValue(flyteidl.core.Condition.Operand value) {
        if (leftValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leftValue_ = value;
          onChanged();
        } else {
          leftValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public Builder setLeftValue(
          flyteidl.core.Condition.Operand.Builder builderForValue) {
        if (leftValueBuilder_ == null) {
          leftValue_ = builderForValue.build();
          onChanged();
        } else {
          leftValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public Builder mergeLeftValue(flyteidl.core.Condition.Operand value) {
        if (leftValueBuilder_ == null) {
          if (leftValue_ != null) {
            leftValue_ =
              flyteidl.core.Condition.Operand.newBuilder(leftValue_).mergeFrom(value).buildPartial();
          } else {
            leftValue_ = value;
          }
          onChanged();
        } else {
          leftValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public Builder clearLeftValue() {
        if (leftValueBuilder_ == null) {
          leftValue_ = null;
          onChanged();
        } else {
          leftValue_ = null;
          leftValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public flyteidl.core.Condition.Operand.Builder getLeftValueBuilder() {
        
        onChanged();
        return getLeftValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      public flyteidl.core.Condition.OperandOrBuilder getLeftValueOrBuilder() {
        if (leftValueBuilder_ != null) {
          return leftValueBuilder_.getMessageOrBuilder();
        } else {
          return leftValue_ == null ?
              flyteidl.core.Condition.Operand.getDefaultInstance() : leftValue_;
        }
      }
      /**
       * <code>.flyteidl.core.Operand left_value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.Operand, flyteidl.core.Condition.Operand.Builder, flyteidl.core.Condition.OperandOrBuilder> 
          getLeftValueFieldBuilder() {
        if (leftValueBuilder_ == null) {
          leftValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Condition.Operand, flyteidl.core.Condition.Operand.Builder, flyteidl.core.Condition.OperandOrBuilder>(
                  getLeftValue(),
                  getParentForChildren(),
                  isClean());
          leftValue_ = null;
        }
        return leftValueBuilder_;
      }

      private flyteidl.core.Condition.Operand rightValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.Operand, flyteidl.core.Condition.Operand.Builder, flyteidl.core.Condition.OperandOrBuilder> rightValueBuilder_;
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public boolean hasRightValue() {
        return rightValueBuilder_ != null || rightValue_ != null;
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public flyteidl.core.Condition.Operand getRightValue() {
        if (rightValueBuilder_ == null) {
          return rightValue_ == null ? flyteidl.core.Condition.Operand.getDefaultInstance() : rightValue_;
        } else {
          return rightValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public Builder setRightValue(flyteidl.core.Condition.Operand value) {
        if (rightValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rightValue_ = value;
          onChanged();
        } else {
          rightValueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public Builder setRightValue(
          flyteidl.core.Condition.Operand.Builder builderForValue) {
        if (rightValueBuilder_ == null) {
          rightValue_ = builderForValue.build();
          onChanged();
        } else {
          rightValueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public Builder mergeRightValue(flyteidl.core.Condition.Operand value) {
        if (rightValueBuilder_ == null) {
          if (rightValue_ != null) {
            rightValue_ =
              flyteidl.core.Condition.Operand.newBuilder(rightValue_).mergeFrom(value).buildPartial();
          } else {
            rightValue_ = value;
          }
          onChanged();
        } else {
          rightValueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public Builder clearRightValue() {
        if (rightValueBuilder_ == null) {
          rightValue_ = null;
          onChanged();
        } else {
          rightValue_ = null;
          rightValueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public flyteidl.core.Condition.Operand.Builder getRightValueBuilder() {
        
        onChanged();
        return getRightValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      public flyteidl.core.Condition.OperandOrBuilder getRightValueOrBuilder() {
        if (rightValueBuilder_ != null) {
          return rightValueBuilder_.getMessageOrBuilder();
        } else {
          return rightValue_ == null ?
              flyteidl.core.Condition.Operand.getDefaultInstance() : rightValue_;
        }
      }
      /**
       * <code>.flyteidl.core.Operand right_value = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.Operand, flyteidl.core.Condition.Operand.Builder, flyteidl.core.Condition.OperandOrBuilder> 
          getRightValueFieldBuilder() {
        if (rightValueBuilder_ == null) {
          rightValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Condition.Operand, flyteidl.core.Condition.Operand.Builder, flyteidl.core.Condition.OperandOrBuilder>(
                  getRightValue(),
                  getParentForChildren(),
                  isClean());
          rightValue_ = null;
        }
        return rightValueBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.ComparisonExpression)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.ComparisonExpression)
    private static final flyteidl.core.Condition.ComparisonExpression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Condition.ComparisonExpression();
    }

    public static flyteidl.core.Condition.ComparisonExpression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComparisonExpression>
        PARSER = new com.google.protobuf.AbstractParser<ComparisonExpression>() {
      @java.lang.Override
      public ComparisonExpression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ComparisonExpression(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ComparisonExpression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComparisonExpression> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Condition.ComparisonExpression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OperandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.Operand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Can be a constant
     * </pre>
     *
     * <code>.flyteidl.core.Primitive primitive = 1;</code>
     */
    boolean hasPrimitive();
    /**
     * <pre>
     * Can be a constant
     * </pre>
     *
     * <code>.flyteidl.core.Primitive primitive = 1;</code>
     */
    flyteidl.core.Literals.Primitive getPrimitive();
    /**
     * <pre>
     * Can be a constant
     * </pre>
     *
     * <code>.flyteidl.core.Primitive primitive = 1;</code>
     */
    flyteidl.core.Literals.PrimitiveOrBuilder getPrimitiveOrBuilder();

    /**
     * <pre>
     * Or one of this node's input variables
     * </pre>
     *
     * <code>string var = 2;</code>
     */
    java.lang.String getVar();
    /**
     * <pre>
     * Or one of this node's input variables
     * </pre>
     *
     * <code>string var = 2;</code>
     */
    com.google.protobuf.ByteString
        getVarBytes();

    public flyteidl.core.Condition.Operand.ValCase getValCase();
  }
  /**
   * <pre>
   * Defines an operand to a comparison expression.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.Operand}
   */
  public  static final class Operand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.Operand)
      OperandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Operand.newBuilder() to construct.
    private Operand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Operand() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Operand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              flyteidl.core.Literals.Primitive.Builder subBuilder = null;
              if (valCase_ == 1) {
                subBuilder = ((flyteidl.core.Literals.Primitive) val_).toBuilder();
              }
              val_ =
                  input.readMessage(flyteidl.core.Literals.Primitive.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.core.Literals.Primitive) val_);
                val_ = subBuilder.buildPartial();
              }
              valCase_ = 1;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              valCase_ = 2;
              val_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_Operand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_Operand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Condition.Operand.class, flyteidl.core.Condition.Operand.Builder.class);
    }

    private int valCase_ = 0;
    private java.lang.Object val_;
    public enum ValCase
        implements com.google.protobuf.Internal.EnumLite {
      PRIMITIVE(1),
      VAR(2),
      VAL_NOT_SET(0);
      private final int value;
      private ValCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValCase forNumber(int value) {
        switch (value) {
          case 1: return PRIMITIVE;
          case 2: return VAR;
          case 0: return VAL_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValCase
    getValCase() {
      return ValCase.forNumber(
          valCase_);
    }

    public static final int PRIMITIVE_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Can be a constant
     * </pre>
     *
     * <code>.flyteidl.core.Primitive primitive = 1;</code>
     */
    public boolean hasPrimitive() {
      return valCase_ == 1;
    }
    /**
     * <pre>
     * Can be a constant
     * </pre>
     *
     * <code>.flyteidl.core.Primitive primitive = 1;</code>
     */
    public flyteidl.core.Literals.Primitive getPrimitive() {
      if (valCase_ == 1) {
         return (flyteidl.core.Literals.Primitive) val_;
      }
      return flyteidl.core.Literals.Primitive.getDefaultInstance();
    }
    /**
     * <pre>
     * Can be a constant
     * </pre>
     *
     * <code>.flyteidl.core.Primitive primitive = 1;</code>
     */
    public flyteidl.core.Literals.PrimitiveOrBuilder getPrimitiveOrBuilder() {
      if (valCase_ == 1) {
         return (flyteidl.core.Literals.Primitive) val_;
      }
      return flyteidl.core.Literals.Primitive.getDefaultInstance();
    }

    public static final int VAR_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Or one of this node's input variables
     * </pre>
     *
     * <code>string var = 2;</code>
     */
    public java.lang.String getVar() {
      java.lang.Object ref = "";
      if (valCase_ == 2) {
        ref = val_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valCase_ == 2) {
          val_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Or one of this node's input variables
     * </pre>
     *
     * <code>string var = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVarBytes() {
      java.lang.Object ref = "";
      if (valCase_ == 2) {
        ref = val_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valCase_ == 2) {
          val_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valCase_ == 1) {
        output.writeMessage(1, (flyteidl.core.Literals.Primitive) val_);
      }
      if (valCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, val_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (flyteidl.core.Literals.Primitive) val_);
      }
      if (valCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, val_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Condition.Operand)) {
        return super.equals(obj);
      }
      flyteidl.core.Condition.Operand other = (flyteidl.core.Condition.Operand) obj;

      if (!getValCase().equals(other.getValCase())) return false;
      switch (valCase_) {
        case 1:
          if (!getPrimitive()
              .equals(other.getPrimitive())) return false;
          break;
        case 2:
          if (!getVar()
              .equals(other.getVar())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (valCase_) {
        case 1:
          hash = (37 * hash) + PRIMITIVE_FIELD_NUMBER;
          hash = (53 * hash) + getPrimitive().hashCode();
          break;
        case 2:
          hash = (37 * hash) + VAR_FIELD_NUMBER;
          hash = (53 * hash) + getVar().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Condition.Operand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.Operand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.Operand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.Operand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.Operand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.Operand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.Operand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.Operand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.Operand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.Operand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.Operand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.Operand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Condition.Operand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines an operand to a comparison expression.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.Operand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.Operand)
        flyteidl.core.Condition.OperandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_Operand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_Operand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Condition.Operand.class, flyteidl.core.Condition.Operand.Builder.class);
      }

      // Construct using flyteidl.core.Condition.Operand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        valCase_ = 0;
        val_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_Operand_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Condition.Operand getDefaultInstanceForType() {
        return flyteidl.core.Condition.Operand.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Condition.Operand build() {
        flyteidl.core.Condition.Operand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Condition.Operand buildPartial() {
        flyteidl.core.Condition.Operand result = new flyteidl.core.Condition.Operand(this);
        if (valCase_ == 1) {
          if (primitiveBuilder_ == null) {
            result.val_ = val_;
          } else {
            result.val_ = primitiveBuilder_.build();
          }
        }
        if (valCase_ == 2) {
          result.val_ = val_;
        }
        result.valCase_ = valCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Condition.Operand) {
          return mergeFrom((flyteidl.core.Condition.Operand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Condition.Operand other) {
        if (other == flyteidl.core.Condition.Operand.getDefaultInstance()) return this;
        switch (other.getValCase()) {
          case PRIMITIVE: {
            mergePrimitive(other.getPrimitive());
            break;
          }
          case VAR: {
            valCase_ = 2;
            val_ = other.val_;
            onChanged();
            break;
          }
          case VAL_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Condition.Operand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Condition.Operand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valCase_ = 0;
      private java.lang.Object val_;
      public ValCase
          getValCase() {
        return ValCase.forNumber(
            valCase_);
      }

      public Builder clearVal() {
        valCase_ = 0;
        val_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Literals.Primitive, flyteidl.core.Literals.Primitive.Builder, flyteidl.core.Literals.PrimitiveOrBuilder> primitiveBuilder_;
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public boolean hasPrimitive() {
        return valCase_ == 1;
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public flyteidl.core.Literals.Primitive getPrimitive() {
        if (primitiveBuilder_ == null) {
          if (valCase_ == 1) {
            return (flyteidl.core.Literals.Primitive) val_;
          }
          return flyteidl.core.Literals.Primitive.getDefaultInstance();
        } else {
          if (valCase_ == 1) {
            return primitiveBuilder_.getMessage();
          }
          return flyteidl.core.Literals.Primitive.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public Builder setPrimitive(flyteidl.core.Literals.Primitive value) {
        if (primitiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          val_ = value;
          onChanged();
        } else {
          primitiveBuilder_.setMessage(value);
        }
        valCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public Builder setPrimitive(
          flyteidl.core.Literals.Primitive.Builder builderForValue) {
        if (primitiveBuilder_ == null) {
          val_ = builderForValue.build();
          onChanged();
        } else {
          primitiveBuilder_.setMessage(builderForValue.build());
        }
        valCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public Builder mergePrimitive(flyteidl.core.Literals.Primitive value) {
        if (primitiveBuilder_ == null) {
          if (valCase_ == 1 &&
              val_ != flyteidl.core.Literals.Primitive.getDefaultInstance()) {
            val_ = flyteidl.core.Literals.Primitive.newBuilder((flyteidl.core.Literals.Primitive) val_)
                .mergeFrom(value).buildPartial();
          } else {
            val_ = value;
          }
          onChanged();
        } else {
          if (valCase_ == 1) {
            primitiveBuilder_.mergeFrom(value);
          }
          primitiveBuilder_.setMessage(value);
        }
        valCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public Builder clearPrimitive() {
        if (primitiveBuilder_ == null) {
          if (valCase_ == 1) {
            valCase_ = 0;
            val_ = null;
            onChanged();
          }
        } else {
          if (valCase_ == 1) {
            valCase_ = 0;
            val_ = null;
          }
          primitiveBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public flyteidl.core.Literals.Primitive.Builder getPrimitiveBuilder() {
        return getPrimitiveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      public flyteidl.core.Literals.PrimitiveOrBuilder getPrimitiveOrBuilder() {
        if ((valCase_ == 1) && (primitiveBuilder_ != null)) {
          return primitiveBuilder_.getMessageOrBuilder();
        } else {
          if (valCase_ == 1) {
            return (flyteidl.core.Literals.Primitive) val_;
          }
          return flyteidl.core.Literals.Primitive.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Can be a constant
       * </pre>
       *
       * <code>.flyteidl.core.Primitive primitive = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Literals.Primitive, flyteidl.core.Literals.Primitive.Builder, flyteidl.core.Literals.PrimitiveOrBuilder> 
          getPrimitiveFieldBuilder() {
        if (primitiveBuilder_ == null) {
          if (!(valCase_ == 1)) {
            val_ = flyteidl.core.Literals.Primitive.getDefaultInstance();
          }
          primitiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Literals.Primitive, flyteidl.core.Literals.Primitive.Builder, flyteidl.core.Literals.PrimitiveOrBuilder>(
                  (flyteidl.core.Literals.Primitive) val_,
                  getParentForChildren(),
                  isClean());
          val_ = null;
        }
        valCase_ = 1;
        onChanged();;
        return primitiveBuilder_;
      }

      /**
       * <pre>
       * Or one of this node's input variables
       * </pre>
       *
       * <code>string var = 2;</code>
       */
      public java.lang.String getVar() {
        java.lang.Object ref = "";
        if (valCase_ == 2) {
          ref = val_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valCase_ == 2) {
            val_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Or one of this node's input variables
       * </pre>
       *
       * <code>string var = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVarBytes() {
        java.lang.Object ref = "";
        if (valCase_ == 2) {
          ref = val_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valCase_ == 2) {
            val_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Or one of this node's input variables
       * </pre>
       *
       * <code>string var = 2;</code>
       */
      public Builder setVar(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valCase_ = 2;
        val_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Or one of this node's input variables
       * </pre>
       *
       * <code>string var = 2;</code>
       */
      public Builder clearVar() {
        if (valCase_ == 2) {
          valCase_ = 0;
          val_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Or one of this node's input variables
       * </pre>
       *
       * <code>string var = 2;</code>
       */
      public Builder setVarBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        valCase_ = 2;
        val_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.Operand)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.Operand)
    private static final flyteidl.core.Condition.Operand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Condition.Operand();
    }

    public static flyteidl.core.Condition.Operand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Operand>
        PARSER = new com.google.protobuf.AbstractParser<Operand>() {
      @java.lang.Override
      public Operand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Operand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Operand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Operand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Condition.Operand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BooleanExpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.BooleanExpression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
     */
    boolean hasConjunction();
    /**
     * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
     */
    flyteidl.core.Condition.ConjunctionExpression getConjunction();
    /**
     * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
     */
    flyteidl.core.Condition.ConjunctionExpressionOrBuilder getConjunctionOrBuilder();

    /**
     * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
     */
    boolean hasComparison();
    /**
     * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
     */
    flyteidl.core.Condition.ComparisonExpression getComparison();
    /**
     * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
     */
    flyteidl.core.Condition.ComparisonExpressionOrBuilder getComparisonOrBuilder();

    public flyteidl.core.Condition.BooleanExpression.ExprCase getExprCase();
  }
  /**
   * <pre>
   * Defines a boolean expression tree. It can be a simple or a conjunction expression.
   * Multiple expressions can be combined using a conjunction or a disjunction to result in a final boolean result.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.BooleanExpression}
   */
  public  static final class BooleanExpression extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.BooleanExpression)
      BooleanExpressionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BooleanExpression.newBuilder() to construct.
    private BooleanExpression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BooleanExpression() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BooleanExpression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              flyteidl.core.Condition.ConjunctionExpression.Builder subBuilder = null;
              if (exprCase_ == 1) {
                subBuilder = ((flyteidl.core.Condition.ConjunctionExpression) expr_).toBuilder();
              }
              expr_ =
                  input.readMessage(flyteidl.core.Condition.ConjunctionExpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.core.Condition.ConjunctionExpression) expr_);
                expr_ = subBuilder.buildPartial();
              }
              exprCase_ = 1;
              break;
            }
            case 18: {
              flyteidl.core.Condition.ComparisonExpression.Builder subBuilder = null;
              if (exprCase_ == 2) {
                subBuilder = ((flyteidl.core.Condition.ComparisonExpression) expr_).toBuilder();
              }
              expr_ =
                  input.readMessage(flyteidl.core.Condition.ComparisonExpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.core.Condition.ComparisonExpression) expr_);
                expr_ = subBuilder.buildPartial();
              }
              exprCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_BooleanExpression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_BooleanExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Condition.BooleanExpression.class, flyteidl.core.Condition.BooleanExpression.Builder.class);
    }

    private int exprCase_ = 0;
    private java.lang.Object expr_;
    public enum ExprCase
        implements com.google.protobuf.Internal.EnumLite {
      CONJUNCTION(1),
      COMPARISON(2),
      EXPR_NOT_SET(0);
      private final int value;
      private ExprCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ExprCase valueOf(int value) {
        return forNumber(value);
      }

      public static ExprCase forNumber(int value) {
        switch (value) {
          case 1: return CONJUNCTION;
          case 2: return COMPARISON;
          case 0: return EXPR_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ExprCase
    getExprCase() {
      return ExprCase.forNumber(
          exprCase_);
    }

    public static final int CONJUNCTION_FIELD_NUMBER = 1;
    /**
     * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
     */
    public boolean hasConjunction() {
      return exprCase_ == 1;
    }
    /**
     * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
     */
    public flyteidl.core.Condition.ConjunctionExpression getConjunction() {
      if (exprCase_ == 1) {
         return (flyteidl.core.Condition.ConjunctionExpression) expr_;
      }
      return flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
     */
    public flyteidl.core.Condition.ConjunctionExpressionOrBuilder getConjunctionOrBuilder() {
      if (exprCase_ == 1) {
         return (flyteidl.core.Condition.ConjunctionExpression) expr_;
      }
      return flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance();
    }

    public static final int COMPARISON_FIELD_NUMBER = 2;
    /**
     * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
     */
    public boolean hasComparison() {
      return exprCase_ == 2;
    }
    /**
     * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
     */
    public flyteidl.core.Condition.ComparisonExpression getComparison() {
      if (exprCase_ == 2) {
         return (flyteidl.core.Condition.ComparisonExpression) expr_;
      }
      return flyteidl.core.Condition.ComparisonExpression.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
     */
    public flyteidl.core.Condition.ComparisonExpressionOrBuilder getComparisonOrBuilder() {
      if (exprCase_ == 2) {
         return (flyteidl.core.Condition.ComparisonExpression) expr_;
      }
      return flyteidl.core.Condition.ComparisonExpression.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (exprCase_ == 1) {
        output.writeMessage(1, (flyteidl.core.Condition.ConjunctionExpression) expr_);
      }
      if (exprCase_ == 2) {
        output.writeMessage(2, (flyteidl.core.Condition.ComparisonExpression) expr_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (exprCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (flyteidl.core.Condition.ConjunctionExpression) expr_);
      }
      if (exprCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (flyteidl.core.Condition.ComparisonExpression) expr_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Condition.BooleanExpression)) {
        return super.equals(obj);
      }
      flyteidl.core.Condition.BooleanExpression other = (flyteidl.core.Condition.BooleanExpression) obj;

      if (!getExprCase().equals(other.getExprCase())) return false;
      switch (exprCase_) {
        case 1:
          if (!getConjunction()
              .equals(other.getConjunction())) return false;
          break;
        case 2:
          if (!getComparison()
              .equals(other.getComparison())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (exprCase_) {
        case 1:
          hash = (37 * hash) + CONJUNCTION_FIELD_NUMBER;
          hash = (53 * hash) + getConjunction().hashCode();
          break;
        case 2:
          hash = (37 * hash) + COMPARISON_FIELD_NUMBER;
          hash = (53 * hash) + getComparison().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.BooleanExpression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.BooleanExpression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.BooleanExpression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Condition.BooleanExpression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a boolean expression tree. It can be a simple or a conjunction expression.
     * Multiple expressions can be combined using a conjunction or a disjunction to result in a final boolean result.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.BooleanExpression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.BooleanExpression)
        flyteidl.core.Condition.BooleanExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_BooleanExpression_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_BooleanExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Condition.BooleanExpression.class, flyteidl.core.Condition.BooleanExpression.Builder.class);
      }

      // Construct using flyteidl.core.Condition.BooleanExpression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        exprCase_ = 0;
        expr_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_BooleanExpression_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Condition.BooleanExpression getDefaultInstanceForType() {
        return flyteidl.core.Condition.BooleanExpression.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Condition.BooleanExpression build() {
        flyteidl.core.Condition.BooleanExpression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Condition.BooleanExpression buildPartial() {
        flyteidl.core.Condition.BooleanExpression result = new flyteidl.core.Condition.BooleanExpression(this);
        if (exprCase_ == 1) {
          if (conjunctionBuilder_ == null) {
            result.expr_ = expr_;
          } else {
            result.expr_ = conjunctionBuilder_.build();
          }
        }
        if (exprCase_ == 2) {
          if (comparisonBuilder_ == null) {
            result.expr_ = expr_;
          } else {
            result.expr_ = comparisonBuilder_.build();
          }
        }
        result.exprCase_ = exprCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Condition.BooleanExpression) {
          return mergeFrom((flyteidl.core.Condition.BooleanExpression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Condition.BooleanExpression other) {
        if (other == flyteidl.core.Condition.BooleanExpression.getDefaultInstance()) return this;
        switch (other.getExprCase()) {
          case CONJUNCTION: {
            mergeConjunction(other.getConjunction());
            break;
          }
          case COMPARISON: {
            mergeComparison(other.getComparison());
            break;
          }
          case EXPR_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Condition.BooleanExpression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Condition.BooleanExpression) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int exprCase_ = 0;
      private java.lang.Object expr_;
      public ExprCase
          getExprCase() {
        return ExprCase.forNumber(
            exprCase_);
      }

      public Builder clearExpr() {
        exprCase_ = 0;
        expr_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.ConjunctionExpression, flyteidl.core.Condition.ConjunctionExpression.Builder, flyteidl.core.Condition.ConjunctionExpressionOrBuilder> conjunctionBuilder_;
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public boolean hasConjunction() {
        return exprCase_ == 1;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public flyteidl.core.Condition.ConjunctionExpression getConjunction() {
        if (conjunctionBuilder_ == null) {
          if (exprCase_ == 1) {
            return (flyteidl.core.Condition.ConjunctionExpression) expr_;
          }
          return flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance();
        } else {
          if (exprCase_ == 1) {
            return conjunctionBuilder_.getMessage();
          }
          return flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public Builder setConjunction(flyteidl.core.Condition.ConjunctionExpression value) {
        if (conjunctionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expr_ = value;
          onChanged();
        } else {
          conjunctionBuilder_.setMessage(value);
        }
        exprCase_ = 1;
        return this;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public Builder setConjunction(
          flyteidl.core.Condition.ConjunctionExpression.Builder builderForValue) {
        if (conjunctionBuilder_ == null) {
          expr_ = builderForValue.build();
          onChanged();
        } else {
          conjunctionBuilder_.setMessage(builderForValue.build());
        }
        exprCase_ = 1;
        return this;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public Builder mergeConjunction(flyteidl.core.Condition.ConjunctionExpression value) {
        if (conjunctionBuilder_ == null) {
          if (exprCase_ == 1 &&
              expr_ != flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance()) {
            expr_ = flyteidl.core.Condition.ConjunctionExpression.newBuilder((flyteidl.core.Condition.ConjunctionExpression) expr_)
                .mergeFrom(value).buildPartial();
          } else {
            expr_ = value;
          }
          onChanged();
        } else {
          if (exprCase_ == 1) {
            conjunctionBuilder_.mergeFrom(value);
          }
          conjunctionBuilder_.setMessage(value);
        }
        exprCase_ = 1;
        return this;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public Builder clearConjunction() {
        if (conjunctionBuilder_ == null) {
          if (exprCase_ == 1) {
            exprCase_ = 0;
            expr_ = null;
            onChanged();
          }
        } else {
          if (exprCase_ == 1) {
            exprCase_ = 0;
            expr_ = null;
          }
          conjunctionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public flyteidl.core.Condition.ConjunctionExpression.Builder getConjunctionBuilder() {
        return getConjunctionFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      public flyteidl.core.Condition.ConjunctionExpressionOrBuilder getConjunctionOrBuilder() {
        if ((exprCase_ == 1) && (conjunctionBuilder_ != null)) {
          return conjunctionBuilder_.getMessageOrBuilder();
        } else {
          if (exprCase_ == 1) {
            return (flyteidl.core.Condition.ConjunctionExpression) expr_;
          }
          return flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression conjunction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.ConjunctionExpression, flyteidl.core.Condition.ConjunctionExpression.Builder, flyteidl.core.Condition.ConjunctionExpressionOrBuilder> 
          getConjunctionFieldBuilder() {
        if (conjunctionBuilder_ == null) {
          if (!(exprCase_ == 1)) {
            expr_ = flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance();
          }
          conjunctionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Condition.ConjunctionExpression, flyteidl.core.Condition.ConjunctionExpression.Builder, flyteidl.core.Condition.ConjunctionExpressionOrBuilder>(
                  (flyteidl.core.Condition.ConjunctionExpression) expr_,
                  getParentForChildren(),
                  isClean());
          expr_ = null;
        }
        exprCase_ = 1;
        onChanged();;
        return conjunctionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.ComparisonExpression, flyteidl.core.Condition.ComparisonExpression.Builder, flyteidl.core.Condition.ComparisonExpressionOrBuilder> comparisonBuilder_;
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public boolean hasComparison() {
        return exprCase_ == 2;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public flyteidl.core.Condition.ComparisonExpression getComparison() {
        if (comparisonBuilder_ == null) {
          if (exprCase_ == 2) {
            return (flyteidl.core.Condition.ComparisonExpression) expr_;
          }
          return flyteidl.core.Condition.ComparisonExpression.getDefaultInstance();
        } else {
          if (exprCase_ == 2) {
            return comparisonBuilder_.getMessage();
          }
          return flyteidl.core.Condition.ComparisonExpression.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public Builder setComparison(flyteidl.core.Condition.ComparisonExpression value) {
        if (comparisonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expr_ = value;
          onChanged();
        } else {
          comparisonBuilder_.setMessage(value);
        }
        exprCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public Builder setComparison(
          flyteidl.core.Condition.ComparisonExpression.Builder builderForValue) {
        if (comparisonBuilder_ == null) {
          expr_ = builderForValue.build();
          onChanged();
        } else {
          comparisonBuilder_.setMessage(builderForValue.build());
        }
        exprCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public Builder mergeComparison(flyteidl.core.Condition.ComparisonExpression value) {
        if (comparisonBuilder_ == null) {
          if (exprCase_ == 2 &&
              expr_ != flyteidl.core.Condition.ComparisonExpression.getDefaultInstance()) {
            expr_ = flyteidl.core.Condition.ComparisonExpression.newBuilder((flyteidl.core.Condition.ComparisonExpression) expr_)
                .mergeFrom(value).buildPartial();
          } else {
            expr_ = value;
          }
          onChanged();
        } else {
          if (exprCase_ == 2) {
            comparisonBuilder_.mergeFrom(value);
          }
          comparisonBuilder_.setMessage(value);
        }
        exprCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public Builder clearComparison() {
        if (comparisonBuilder_ == null) {
          if (exprCase_ == 2) {
            exprCase_ = 0;
            expr_ = null;
            onChanged();
          }
        } else {
          if (exprCase_ == 2) {
            exprCase_ = 0;
            expr_ = null;
          }
          comparisonBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public flyteidl.core.Condition.ComparisonExpression.Builder getComparisonBuilder() {
        return getComparisonFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      public flyteidl.core.Condition.ComparisonExpressionOrBuilder getComparisonOrBuilder() {
        if ((exprCase_ == 2) && (comparisonBuilder_ != null)) {
          return comparisonBuilder_.getMessageOrBuilder();
        } else {
          if (exprCase_ == 2) {
            return (flyteidl.core.Condition.ComparisonExpression) expr_;
          }
          return flyteidl.core.Condition.ComparisonExpression.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.core.ComparisonExpression comparison = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.ComparisonExpression, flyteidl.core.Condition.ComparisonExpression.Builder, flyteidl.core.Condition.ComparisonExpressionOrBuilder> 
          getComparisonFieldBuilder() {
        if (comparisonBuilder_ == null) {
          if (!(exprCase_ == 2)) {
            expr_ = flyteidl.core.Condition.ComparisonExpression.getDefaultInstance();
          }
          comparisonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Condition.ComparisonExpression, flyteidl.core.Condition.ComparisonExpression.Builder, flyteidl.core.Condition.ComparisonExpressionOrBuilder>(
                  (flyteidl.core.Condition.ComparisonExpression) expr_,
                  getParentForChildren(),
                  isClean());
          expr_ = null;
        }
        exprCase_ = 2;
        onChanged();;
        return comparisonBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.BooleanExpression)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.BooleanExpression)
    private static final flyteidl.core.Condition.BooleanExpression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Condition.BooleanExpression();
    }

    public static flyteidl.core.Condition.BooleanExpression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BooleanExpression>
        PARSER = new com.google.protobuf.AbstractParser<BooleanExpression>() {
      @java.lang.Override
      public BooleanExpression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BooleanExpression(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BooleanExpression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BooleanExpression> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Condition.BooleanExpression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConjunctionExpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.ConjunctionExpression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
     */
    int getOperatorValue();
    /**
     * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
     */
    flyteidl.core.Condition.ConjunctionExpression.LogicalOperator getOperator();

    /**
     * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
     */
    boolean hasLeftExpression();
    /**
     * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
     */
    flyteidl.core.Condition.BooleanExpression getLeftExpression();
    /**
     * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
     */
    flyteidl.core.Condition.BooleanExpressionOrBuilder getLeftExpressionOrBuilder();

    /**
     * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
     */
    boolean hasRightExpression();
    /**
     * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
     */
    flyteidl.core.Condition.BooleanExpression getRightExpression();
    /**
     * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
     */
    flyteidl.core.Condition.BooleanExpressionOrBuilder getRightExpressionOrBuilder();
  }
  /**
   * <pre>
   * Defines a conjunction expression of two boolean expressions.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.ConjunctionExpression}
   */
  public  static final class ConjunctionExpression extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.ConjunctionExpression)
      ConjunctionExpressionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConjunctionExpression.newBuilder() to construct.
    private ConjunctionExpression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConjunctionExpression() {
      operator_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConjunctionExpression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              operator_ = rawValue;
              break;
            }
            case 18: {
              flyteidl.core.Condition.BooleanExpression.Builder subBuilder = null;
              if (leftExpression_ != null) {
                subBuilder = leftExpression_.toBuilder();
              }
              leftExpression_ = input.readMessage(flyteidl.core.Condition.BooleanExpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leftExpression_);
                leftExpression_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              flyteidl.core.Condition.BooleanExpression.Builder subBuilder = null;
              if (rightExpression_ != null) {
                subBuilder = rightExpression_.toBuilder();
              }
              rightExpression_ = input.readMessage(flyteidl.core.Condition.BooleanExpression.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rightExpression_);
                rightExpression_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_ConjunctionExpression_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Condition.internal_static_flyteidl_core_ConjunctionExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Condition.ConjunctionExpression.class, flyteidl.core.Condition.ConjunctionExpression.Builder.class);
    }

    /**
     * <pre>
     * Nested conditions. They can be conjoined using AND / OR
     * Order of evaluation is not important as the operators are Commutative
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.ConjunctionExpression.LogicalOperator}
     */
    public enum LogicalOperator
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Conjunction
       * </pre>
       *
       * <code>AND = 0;</code>
       */
      AND(0),
      /**
       * <code>OR = 1;</code>
       */
      OR(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Conjunction
       * </pre>
       *
       * <code>AND = 0;</code>
       */
      public static final int AND_VALUE = 0;
      /**
       * <code>OR = 1;</code>
       */
      public static final int OR_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogicalOperator valueOf(int value) {
        return forNumber(value);
      }

      public static LogicalOperator forNumber(int value) {
        switch (value) {
          case 0: return AND;
          case 1: return OR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogicalOperator>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogicalOperator> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogicalOperator>() {
              public LogicalOperator findValueByNumber(int number) {
                return LogicalOperator.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Condition.ConjunctionExpression.getDescriptor().getEnumTypes().get(0);
      }

      private static final LogicalOperator[] VALUES = values();

      public static LogicalOperator valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogicalOperator(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.ConjunctionExpression.LogicalOperator)
    }

    public static final int OPERATOR_FIELD_NUMBER = 1;
    private int operator_;
    /**
     * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
     */
    public int getOperatorValue() {
      return operator_;
    }
    /**
     * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
     */
    public flyteidl.core.Condition.ConjunctionExpression.LogicalOperator getOperator() {
      @SuppressWarnings("deprecation")
      flyteidl.core.Condition.ConjunctionExpression.LogicalOperator result = flyteidl.core.Condition.ConjunctionExpression.LogicalOperator.valueOf(operator_);
      return result == null ? flyteidl.core.Condition.ConjunctionExpression.LogicalOperator.UNRECOGNIZED : result;
    }

    public static final int LEFT_EXPRESSION_FIELD_NUMBER = 2;
    private flyteidl.core.Condition.BooleanExpression leftExpression_;
    /**
     * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
     */
    public boolean hasLeftExpression() {
      return leftExpression_ != null;
    }
    /**
     * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
     */
    public flyteidl.core.Condition.BooleanExpression getLeftExpression() {
      return leftExpression_ == null ? flyteidl.core.Condition.BooleanExpression.getDefaultInstance() : leftExpression_;
    }
    /**
     * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
     */
    public flyteidl.core.Condition.BooleanExpressionOrBuilder getLeftExpressionOrBuilder() {
      return getLeftExpression();
    }

    public static final int RIGHT_EXPRESSION_FIELD_NUMBER = 3;
    private flyteidl.core.Condition.BooleanExpression rightExpression_;
    /**
     * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
     */
    public boolean hasRightExpression() {
      return rightExpression_ != null;
    }
    /**
     * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
     */
    public flyteidl.core.Condition.BooleanExpression getRightExpression() {
      return rightExpression_ == null ? flyteidl.core.Condition.BooleanExpression.getDefaultInstance() : rightExpression_;
    }
    /**
     * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
     */
    public flyteidl.core.Condition.BooleanExpressionOrBuilder getRightExpressionOrBuilder() {
      return getRightExpression();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (operator_ != flyteidl.core.Condition.ConjunctionExpression.LogicalOperator.AND.getNumber()) {
        output.writeEnum(1, operator_);
      }
      if (leftExpression_ != null) {
        output.writeMessage(2, getLeftExpression());
      }
      if (rightExpression_ != null) {
        output.writeMessage(3, getRightExpression());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (operator_ != flyteidl.core.Condition.ConjunctionExpression.LogicalOperator.AND.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, operator_);
      }
      if (leftExpression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLeftExpression());
      }
      if (rightExpression_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRightExpression());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Condition.ConjunctionExpression)) {
        return super.equals(obj);
      }
      flyteidl.core.Condition.ConjunctionExpression other = (flyteidl.core.Condition.ConjunctionExpression) obj;

      if (operator_ != other.operator_) return false;
      if (hasLeftExpression() != other.hasLeftExpression()) return false;
      if (hasLeftExpression()) {
        if (!getLeftExpression()
            .equals(other.getLeftExpression())) return false;
      }
      if (hasRightExpression() != other.hasRightExpression()) return false;
      if (hasRightExpression()) {
        if (!getRightExpression()
            .equals(other.getRightExpression())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
      hash = (53 * hash) + operator_;
      if (hasLeftExpression()) {
        hash = (37 * hash) + LEFT_EXPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getLeftExpression().hashCode();
      }
      if (hasRightExpression()) {
        hash = (37 * hash) + RIGHT_EXPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getRightExpression().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Condition.ConjunctionExpression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Condition.ConjunctionExpression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a conjunction expression of two boolean expressions.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.ConjunctionExpression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.ConjunctionExpression)
        flyteidl.core.Condition.ConjunctionExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_ConjunctionExpression_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_ConjunctionExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Condition.ConjunctionExpression.class, flyteidl.core.Condition.ConjunctionExpression.Builder.class);
      }

      // Construct using flyteidl.core.Condition.ConjunctionExpression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        operator_ = 0;

        if (leftExpressionBuilder_ == null) {
          leftExpression_ = null;
        } else {
          leftExpression_ = null;
          leftExpressionBuilder_ = null;
        }
        if (rightExpressionBuilder_ == null) {
          rightExpression_ = null;
        } else {
          rightExpression_ = null;
          rightExpressionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Condition.internal_static_flyteidl_core_ConjunctionExpression_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Condition.ConjunctionExpression getDefaultInstanceForType() {
        return flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Condition.ConjunctionExpression build() {
        flyteidl.core.Condition.ConjunctionExpression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Condition.ConjunctionExpression buildPartial() {
        flyteidl.core.Condition.ConjunctionExpression result = new flyteidl.core.Condition.ConjunctionExpression(this);
        result.operator_ = operator_;
        if (leftExpressionBuilder_ == null) {
          result.leftExpression_ = leftExpression_;
        } else {
          result.leftExpression_ = leftExpressionBuilder_.build();
        }
        if (rightExpressionBuilder_ == null) {
          result.rightExpression_ = rightExpression_;
        } else {
          result.rightExpression_ = rightExpressionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Condition.ConjunctionExpression) {
          return mergeFrom((flyteidl.core.Condition.ConjunctionExpression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Condition.ConjunctionExpression other) {
        if (other == flyteidl.core.Condition.ConjunctionExpression.getDefaultInstance()) return this;
        if (other.operator_ != 0) {
          setOperatorValue(other.getOperatorValue());
        }
        if (other.hasLeftExpression()) {
          mergeLeftExpression(other.getLeftExpression());
        }
        if (other.hasRightExpression()) {
          mergeRightExpression(other.getRightExpression());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Condition.ConjunctionExpression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Condition.ConjunctionExpression) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int operator_ = 0;
      /**
       * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
       */
      public int getOperatorValue() {
        return operator_;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
       */
      public Builder setOperatorValue(int value) {
        operator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
       */
      public flyteidl.core.Condition.ConjunctionExpression.LogicalOperator getOperator() {
        @SuppressWarnings("deprecation")
        flyteidl.core.Condition.ConjunctionExpression.LogicalOperator result = flyteidl.core.Condition.ConjunctionExpression.LogicalOperator.valueOf(operator_);
        return result == null ? flyteidl.core.Condition.ConjunctionExpression.LogicalOperator.UNRECOGNIZED : result;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
       */
      public Builder setOperator(flyteidl.core.Condition.ConjunctionExpression.LogicalOperator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        operator_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.core.ConjunctionExpression.LogicalOperator operator = 1;</code>
       */
      public Builder clearOperator() {
        
        operator_ = 0;
        onChanged();
        return this;
      }

      private flyteidl.core.Condition.BooleanExpression leftExpression_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.BooleanExpression, flyteidl.core.Condition.BooleanExpression.Builder, flyteidl.core.Condition.BooleanExpressionOrBuilder> leftExpressionBuilder_;
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public boolean hasLeftExpression() {
        return leftExpressionBuilder_ != null || leftExpression_ != null;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public flyteidl.core.Condition.BooleanExpression getLeftExpression() {
        if (leftExpressionBuilder_ == null) {
          return leftExpression_ == null ? flyteidl.core.Condition.BooleanExpression.getDefaultInstance() : leftExpression_;
        } else {
          return leftExpressionBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public Builder setLeftExpression(flyteidl.core.Condition.BooleanExpression value) {
        if (leftExpressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leftExpression_ = value;
          onChanged();
        } else {
          leftExpressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public Builder setLeftExpression(
          flyteidl.core.Condition.BooleanExpression.Builder builderForValue) {
        if (leftExpressionBuilder_ == null) {
          leftExpression_ = builderForValue.build();
          onChanged();
        } else {
          leftExpressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public Builder mergeLeftExpression(flyteidl.core.Condition.BooleanExpression value) {
        if (leftExpressionBuilder_ == null) {
          if (leftExpression_ != null) {
            leftExpression_ =
              flyteidl.core.Condition.BooleanExpression.newBuilder(leftExpression_).mergeFrom(value).buildPartial();
          } else {
            leftExpression_ = value;
          }
          onChanged();
        } else {
          leftExpressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public Builder clearLeftExpression() {
        if (leftExpressionBuilder_ == null) {
          leftExpression_ = null;
          onChanged();
        } else {
          leftExpression_ = null;
          leftExpressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public flyteidl.core.Condition.BooleanExpression.Builder getLeftExpressionBuilder() {
        
        onChanged();
        return getLeftExpressionFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      public flyteidl.core.Condition.BooleanExpressionOrBuilder getLeftExpressionOrBuilder() {
        if (leftExpressionBuilder_ != null) {
          return leftExpressionBuilder_.getMessageOrBuilder();
        } else {
          return leftExpression_ == null ?
              flyteidl.core.Condition.BooleanExpression.getDefaultInstance() : leftExpression_;
        }
      }
      /**
       * <code>.flyteidl.core.BooleanExpression left_expression = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.BooleanExpression, flyteidl.core.Condition.BooleanExpression.Builder, flyteidl.core.Condition.BooleanExpressionOrBuilder> 
          getLeftExpressionFieldBuilder() {
        if (leftExpressionBuilder_ == null) {
          leftExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Condition.BooleanExpression, flyteidl.core.Condition.BooleanExpression.Builder, flyteidl.core.Condition.BooleanExpressionOrBuilder>(
                  getLeftExpression(),
                  getParentForChildren(),
                  isClean());
          leftExpression_ = null;
        }
        return leftExpressionBuilder_;
      }

      private flyteidl.core.Condition.BooleanExpression rightExpression_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.BooleanExpression, flyteidl.core.Condition.BooleanExpression.Builder, flyteidl.core.Condition.BooleanExpressionOrBuilder> rightExpressionBuilder_;
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public boolean hasRightExpression() {
        return rightExpressionBuilder_ != null || rightExpression_ != null;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public flyteidl.core.Condition.BooleanExpression getRightExpression() {
        if (rightExpressionBuilder_ == null) {
          return rightExpression_ == null ? flyteidl.core.Condition.BooleanExpression.getDefaultInstance() : rightExpression_;
        } else {
          return rightExpressionBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public Builder setRightExpression(flyteidl.core.Condition.BooleanExpression value) {
        if (rightExpressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rightExpression_ = value;
          onChanged();
        } else {
          rightExpressionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public Builder setRightExpression(
          flyteidl.core.Condition.BooleanExpression.Builder builderForValue) {
        if (rightExpressionBuilder_ == null) {
          rightExpression_ = builderForValue.build();
          onChanged();
        } else {
          rightExpressionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public Builder mergeRightExpression(flyteidl.core.Condition.BooleanExpression value) {
        if (rightExpressionBuilder_ == null) {
          if (rightExpression_ != null) {
            rightExpression_ =
              flyteidl.core.Condition.BooleanExpression.newBuilder(rightExpression_).mergeFrom(value).buildPartial();
          } else {
            rightExpression_ = value;
          }
          onChanged();
        } else {
          rightExpressionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public Builder clearRightExpression() {
        if (rightExpressionBuilder_ == null) {
          rightExpression_ = null;
          onChanged();
        } else {
          rightExpression_ = null;
          rightExpressionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public flyteidl.core.Condition.BooleanExpression.Builder getRightExpressionBuilder() {
        
        onChanged();
        return getRightExpressionFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      public flyteidl.core.Condition.BooleanExpressionOrBuilder getRightExpressionOrBuilder() {
        if (rightExpressionBuilder_ != null) {
          return rightExpressionBuilder_.getMessageOrBuilder();
        } else {
          return rightExpression_ == null ?
              flyteidl.core.Condition.BooleanExpression.getDefaultInstance() : rightExpression_;
        }
      }
      /**
       * <code>.flyteidl.core.BooleanExpression right_expression = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Condition.BooleanExpression, flyteidl.core.Condition.BooleanExpression.Builder, flyteidl.core.Condition.BooleanExpressionOrBuilder> 
          getRightExpressionFieldBuilder() {
        if (rightExpressionBuilder_ == null) {
          rightExpressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Condition.BooleanExpression, flyteidl.core.Condition.BooleanExpression.Builder, flyteidl.core.Condition.BooleanExpressionOrBuilder>(
                  getRightExpression(),
                  getParentForChildren(),
                  isClean());
          rightExpression_ = null;
        }
        return rightExpressionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.ConjunctionExpression)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.ConjunctionExpression)
    private static final flyteidl.core.Condition.ConjunctionExpression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Condition.ConjunctionExpression();
    }

    public static flyteidl.core.Condition.ConjunctionExpression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConjunctionExpression>
        PARSER = new com.google.protobuf.AbstractParser<ConjunctionExpression>() {
      @java.lang.Override
      public ConjunctionExpression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConjunctionExpression(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConjunctionExpression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConjunctionExpression> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Condition.ConjunctionExpression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_ComparisonExpression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_ComparisonExpression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_Operand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_Operand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_BooleanExpression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_BooleanExpression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_ConjunctionExpression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_ConjunctionExpression_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035flyteidl/core/condition.proto\022\rflyteid" +
      "l.core\032\034flyteidl/core/literals.proto\"\356\001\n" +
      "\024ComparisonExpression\022>\n\010operator\030\001 \001(\0162" +
      ",.flyteidl.core.ComparisonExpression.Ope" +
      "rator\022*\n\nleft_value\030\002 \001(\0132\026.flyteidl.cor" +
      "e.Operand\022+\n\013right_value\030\003 \001(\0132\026.flyteid" +
      "l.core.Operand\"=\n\010Operator\022\006\n\002EQ\020\000\022\007\n\003NE" +
      "Q\020\001\022\006\n\002GT\020\002\022\007\n\003GTE\020\003\022\006\n\002LT\020\004\022\007\n\003LTE\020\005\"N\n" +
      "\007Operand\022-\n\tprimitive\030\001 \001(\0132\030.flyteidl.c" +
      "ore.PrimitiveH\000\022\r\n\003var\030\002 \001(\tH\000B\005\n\003val\"\223\001" +
      "\n\021BooleanExpression\022;\n\013conjunction\030\001 \001(\013" +
      "2$.flyteidl.core.ConjunctionExpressionH\000" +
      "\0229\n\ncomparison\030\002 \001(\0132#.flyteidl.core.Com" +
      "parisonExpressionH\000B\006\n\004expr\"\372\001\n\025Conjunct" +
      "ionExpression\022F\n\010operator\030\001 \001(\01624.flytei" +
      "dl.core.ConjunctionExpression.LogicalOpe" +
      "rator\0229\n\017left_expression\030\002 \001(\0132 .flyteid" +
      "l.core.BooleanExpression\022:\n\020right_expres" +
      "sion\030\003 \001(\0132 .flyteidl.core.BooleanExpres" +
      "sion\"\"\n\017LogicalOperator\022\007\n\003AND\020\000\022\006\n\002OR\020\001" +
      "B6Z4github.com/flyteorg/flyteidl/gen/pb-" +
      "go/flyteidl/coreb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          flyteidl.core.Literals.getDescriptor(),
        }, assigner);
    internal_static_flyteidl_core_ComparisonExpression_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_core_ComparisonExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_ComparisonExpression_descriptor,
        new java.lang.String[] { "Operator", "LeftValue", "RightValue", });
    internal_static_flyteidl_core_Operand_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_core_Operand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_Operand_descriptor,
        new java.lang.String[] { "Primitive", "Var", "Val", });
    internal_static_flyteidl_core_BooleanExpression_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flyteidl_core_BooleanExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_BooleanExpression_descriptor,
        new java.lang.String[] { "Conjunction", "Comparison", "Expr", });
    internal_static_flyteidl_core_ConjunctionExpression_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_flyteidl_core_ConjunctionExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_ConjunctionExpression_descriptor,
        new java.lang.String[] { "Operator", "LeftExpression", "RightExpression", });
    flyteidl.core.Literals.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
