// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/event/event.proto

package com.flyteidl.event;

public interface ExternalResourceInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.event.ExternalResourceInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier for an external resource created by this task execution, for example Qubole query ID or presto query ids.
   * </pre>
   *
   * <code>string external_id = 1 [json_name = "externalId"];</code>
   * @return The externalId.
   */
  java.lang.String getExternalId();
  /**
   * <pre>
   * Identifier for an external resource created by this task execution, for example Qubole query ID or presto query ids.
   * </pre>
   *
   * <code>string external_id = 1 [json_name = "externalId"];</code>
   * @return The bytes for externalId.
   */
  com.google.protobuf.ByteString
      getExternalIdBytes();

  /**
   * <pre>
   * A unique index for the external resource with respect to all external resources for this task. Although the
   * identifier may change between task reporting events or retries, this will remain the same to enable aggregating
   * information from multiple reports.
   * </pre>
   *
   * <code>uint32 index = 2 [json_name = "index"];</code>
   * @return The index.
   */
  int getIndex();

  /**
   * <pre>
   * Retry attempt number for this external resource, ie., 2 for the second attempt
   * </pre>
   *
   * <code>uint32 retry_attempt = 3 [json_name = "retryAttempt"];</code>
   * @return The retryAttempt.
   */
  int getRetryAttempt();

  /**
   * <pre>
   * Phase associated with the external resource
   * </pre>
   *
   * <code>.flyteidl.core.TaskExecution.Phase phase = 4 [json_name = "phase"];</code>
   * @return The enum numeric value on the wire for phase.
   */
  int getPhaseValue();
  /**
   * <pre>
   * Phase associated with the external resource
   * </pre>
   *
   * <code>.flyteidl.core.TaskExecution.Phase phase = 4 [json_name = "phase"];</code>
   * @return The phase.
   */
  com.flyteidl.core.TaskExecution.Phase getPhase();

  /**
   * <pre>
   * Captures the status of caching for this external resource execution.
   * </pre>
   *
   * <code>.flyteidl.core.CatalogCacheStatus cache_status = 5 [json_name = "cacheStatus"];</code>
   * @return The enum numeric value on the wire for cacheStatus.
   */
  int getCacheStatusValue();
  /**
   * <pre>
   * Captures the status of caching for this external resource execution.
   * </pre>
   *
   * <code>.flyteidl.core.CatalogCacheStatus cache_status = 5 [json_name = "cacheStatus"];</code>
   * @return The cacheStatus.
   */
  com.flyteidl.core.CatalogCacheStatus getCacheStatus();

  /**
   * <pre>
   * log information for the external resource execution
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskLog logs = 6 [json_name = "logs"];</code>
   */
  java.util.List<com.flyteidl.core.TaskLog> 
      getLogsList();
  /**
   * <pre>
   * log information for the external resource execution
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskLog logs = 6 [json_name = "logs"];</code>
   */
  com.flyteidl.core.TaskLog getLogs(int index);
  /**
   * <pre>
   * log information for the external resource execution
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskLog logs = 6 [json_name = "logs"];</code>
   */
  int getLogsCount();
  /**
   * <pre>
   * log information for the external resource execution
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskLog logs = 6 [json_name = "logs"];</code>
   */
  java.util.List<? extends com.flyteidl.core.TaskLogOrBuilder> 
      getLogsOrBuilderList();
  /**
   * <pre>
   * log information for the external resource execution
   * </pre>
   *
   * <code>repeated .flyteidl.core.TaskLog logs = 6 [json_name = "logs"];</code>
   */
  com.flyteidl.core.TaskLogOrBuilder getLogsOrBuilder(
      int index);
}
