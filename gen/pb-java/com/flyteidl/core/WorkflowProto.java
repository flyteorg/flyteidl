// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/workflow.proto

package com.flyteidl.core;

public final class WorkflowProto {
  private WorkflowProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface IfBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.IfBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
     * @return Whether the condition field is set.
     */
    boolean hasCondition();
    /**
     * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
     * @return The condition.
     */
    com.flyteidl.core.ConditionProto.BooleanExpression getCondition();
    /**
     * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
     */
    com.flyteidl.core.ConditionProto.BooleanExpressionOrBuilder getConditionOrBuilder();

    /**
     * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
     * @return Whether the thenNode field is set.
     */
    boolean hasThenNode();
    /**
     * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
     * @return The thenNode.
     */
    com.flyteidl.core.WorkflowProto.Node getThenNode();
    /**
     * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
     */
    com.flyteidl.core.WorkflowProto.NodeOrBuilder getThenNodeOrBuilder();
  }
  /**
   * <pre>
   * Defines a condition and the execution unit that should be executed if the condition is satisfied.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.IfBlock}
   */
  public static final class IfBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.IfBlock)
      IfBlockOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IfBlock.newBuilder() to construct.
    private IfBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IfBlock() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IfBlock();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.IfBlock.class, com.flyteidl.core.WorkflowProto.IfBlock.Builder.class);
    }

    public static final int CONDITION_FIELD_NUMBER = 1;
    private com.flyteidl.core.ConditionProto.BooleanExpression condition_;
    /**
     * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
     * @return Whether the condition field is set.
     */
    @java.lang.Override
    public boolean hasCondition() {
      return condition_ != null;
    }
    /**
     * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
     * @return The condition.
     */
    @java.lang.Override
    public com.flyteidl.core.ConditionProto.BooleanExpression getCondition() {
      return condition_ == null ? com.flyteidl.core.ConditionProto.BooleanExpression.getDefaultInstance() : condition_;
    }
    /**
     * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.ConditionProto.BooleanExpressionOrBuilder getConditionOrBuilder() {
      return getCondition();
    }

    public static final int THEN_NODE_FIELD_NUMBER = 2;
    private com.flyteidl.core.WorkflowProto.Node thenNode_;
    /**
     * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
     * @return Whether the thenNode field is set.
     */
    @java.lang.Override
    public boolean hasThenNode() {
      return thenNode_ != null;
    }
    /**
     * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
     * @return The thenNode.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Node getThenNode() {
      return thenNode_ == null ? com.flyteidl.core.WorkflowProto.Node.getDefaultInstance() : thenNode_;
    }
    /**
     * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeOrBuilder getThenNodeOrBuilder() {
      return getThenNode();
    }

    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.IfBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.IfBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a condition and the execution unit that should be executed if the condition is satisfied.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.IfBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.IfBlock)
        com.flyteidl.core.WorkflowProto.IfBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfBlock_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.IfBlock.class, com.flyteidl.core.WorkflowProto.IfBlock.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.IfBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (conditionBuilder_ == null) {
          condition_ = null;
        } else {
          condition_ = null;
          conditionBuilder_ = null;
        }
        if (thenNodeBuilder_ == null) {
          thenNode_ = null;
        } else {
          thenNode_ = null;
          thenNodeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfBlock_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.IfBlock getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.IfBlock.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.IfBlock build() {
        com.flyteidl.core.WorkflowProto.IfBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.IfBlock buildPartial() {
        com.flyteidl.core.WorkflowProto.IfBlock result = new com.flyteidl.core.WorkflowProto.IfBlock(this);
        if (conditionBuilder_ == null) {
          result.condition_ = condition_;
        } else {
          result.condition_ = conditionBuilder_.build();
        }
        if (thenNodeBuilder_ == null) {
          result.thenNode_ = thenNode_;
        } else {
          result.thenNode_ = thenNodeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private com.flyteidl.core.ConditionProto.BooleanExpression condition_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.ConditionProto.BooleanExpression, com.flyteidl.core.ConditionProto.BooleanExpression.Builder, com.flyteidl.core.ConditionProto.BooleanExpressionOrBuilder> conditionBuilder_;
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       * @return Whether the condition field is set.
       */
      public boolean hasCondition() {
        return conditionBuilder_ != null || condition_ != null;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       * @return The condition.
       */
      public com.flyteidl.core.ConditionProto.BooleanExpression getCondition() {
        if (conditionBuilder_ == null) {
          return condition_ == null ? com.flyteidl.core.ConditionProto.BooleanExpression.getDefaultInstance() : condition_;
        } else {
          return conditionBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       */
      public Builder setCondition(com.flyteidl.core.ConditionProto.BooleanExpression value) {
        if (conditionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          condition_ = value;
          onChanged();
        } else {
          conditionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       */
      public Builder setCondition(
          com.flyteidl.core.ConditionProto.BooleanExpression.Builder builderForValue) {
        if (conditionBuilder_ == null) {
          condition_ = builderForValue.build();
          onChanged();
        } else {
          conditionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       */
      public Builder mergeCondition(com.flyteidl.core.ConditionProto.BooleanExpression value) {
        if (conditionBuilder_ == null) {
          if (condition_ != null) {
            condition_ =
              com.flyteidl.core.ConditionProto.BooleanExpression.newBuilder(condition_).mergeFrom(value).buildPartial();
          } else {
            condition_ = value;
          }
          onChanged();
        } else {
          conditionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       */
      public Builder clearCondition() {
        if (conditionBuilder_ == null) {
          condition_ = null;
          onChanged();
        } else {
          condition_ = null;
          conditionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       */
      public com.flyteidl.core.ConditionProto.BooleanExpression.Builder getConditionBuilder() {
        
        onChanged();
        return getConditionFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       */
      public com.flyteidl.core.ConditionProto.BooleanExpressionOrBuilder getConditionOrBuilder() {
        if (conditionBuilder_ != null) {
          return conditionBuilder_.getMessageOrBuilder();
        } else {
          return condition_ == null ?
              com.flyteidl.core.ConditionProto.BooleanExpression.getDefaultInstance() : condition_;
        }
      }
      /**
       * <code>.flyteidl.core.BooleanExpression condition = 1 [json_name = "condition"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.ConditionProto.BooleanExpression, com.flyteidl.core.ConditionProto.BooleanExpression.Builder, com.flyteidl.core.ConditionProto.BooleanExpressionOrBuilder> 
          getConditionFieldBuilder() {
        if (conditionBuilder_ == null) {
          conditionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.ConditionProto.BooleanExpression, com.flyteidl.core.ConditionProto.BooleanExpression.Builder, com.flyteidl.core.ConditionProto.BooleanExpressionOrBuilder>(
                  getCondition(),
                  getParentForChildren(),
                  isClean());
          condition_ = null;
        }
        return conditionBuilder_;
      }

      private com.flyteidl.core.WorkflowProto.Node thenNode_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> thenNodeBuilder_;
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       * @return Whether the thenNode field is set.
       */
      public boolean hasThenNode() {
        return thenNodeBuilder_ != null || thenNode_ != null;
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       * @return The thenNode.
       */
      public com.flyteidl.core.WorkflowProto.Node getThenNode() {
        if (thenNodeBuilder_ == null) {
          return thenNode_ == null ? com.flyteidl.core.WorkflowProto.Node.getDefaultInstance() : thenNode_;
        } else {
          return thenNodeBuilder_.getMessage();
        }
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       */
      public Builder setThenNode(com.flyteidl.core.WorkflowProto.Node value) {
        if (thenNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thenNode_ = value;
          onChanged();
        } else {
          thenNodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       */
      public Builder setThenNode(
          com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (thenNodeBuilder_ == null) {
          thenNode_ = builderForValue.build();
          onChanged();
        } else {
          thenNodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       */
      public Builder mergeThenNode(com.flyteidl.core.WorkflowProto.Node value) {
        if (thenNodeBuilder_ == null) {
          if (thenNode_ != null) {
            thenNode_ =
              com.flyteidl.core.WorkflowProto.Node.newBuilder(thenNode_).mergeFrom(value).buildPartial();
          } else {
            thenNode_ = value;
          }
          onChanged();
        } else {
          thenNodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       */
      public Builder clearThenNode() {
        if (thenNodeBuilder_ == null) {
          thenNode_ = null;
          onChanged();
        } else {
          thenNode_ = null;
          thenNodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder getThenNodeBuilder() {
        
        onChanged();
        return getThenNodeFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.NodeOrBuilder getThenNodeOrBuilder() {
        if (thenNodeBuilder_ != null) {
          return thenNodeBuilder_.getMessageOrBuilder();
        } else {
          return thenNode_ == null ?
              com.flyteidl.core.WorkflowProto.Node.getDefaultInstance() : thenNode_;
        }
      }
      /**
       * <code>.flyteidl.core.Node then_node = 2 [json_name = "thenNode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
          getThenNodeFieldBuilder() {
        if (thenNodeBuilder_ == null) {
          thenNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder>(
                  getThenNode(),
                  getParentForChildren(),
                  isClean());
          thenNode_ = null;
        }
        return thenNodeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.IfBlock)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.IfBlock)
    private static final com.flyteidl.core.WorkflowProto.IfBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.IfBlock();
    }

    public static com.flyteidl.core.WorkflowProto.IfBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IfBlock>
        PARSER = new com.google.protobuf.AbstractParser<IfBlock>() {
      @java.lang.Override
      public IfBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IfBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IfBlock> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IfElseBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.IfElseBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     * @return Whether the case field is set.
     */
    boolean hasCase();
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     * @return The case.
     */
    com.flyteidl.core.WorkflowProto.IfBlock getCase();
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    com.flyteidl.core.WorkflowProto.IfBlockOrBuilder getCaseOrBuilder();

    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    java.util.List<com.flyteidl.core.WorkflowProto.IfBlock> 
        getOtherList();
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    com.flyteidl.core.WorkflowProto.IfBlock getOther(int index);
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    int getOtherCount();
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    java.util.List<? extends com.flyteidl.core.WorkflowProto.IfBlockOrBuilder> 
        getOtherOrBuilderList();
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    com.flyteidl.core.WorkflowProto.IfBlockOrBuilder getOtherOrBuilder(
        int index);

    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     * @return Whether the elseNode field is set.
     */
    boolean hasElseNode();
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     * @return The elseNode.
     */
    com.flyteidl.core.WorkflowProto.Node getElseNode();
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    com.flyteidl.core.WorkflowProto.NodeOrBuilder getElseNodeOrBuilder();

    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     * @return Whether the error field is set.
     */
    boolean hasError();
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     * @return The error.
     */
    com.flyteidl.core.TypesProto.Error getError();
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    com.flyteidl.core.TypesProto.ErrorOrBuilder getErrorOrBuilder();

    public com.flyteidl.core.WorkflowProto.IfElseBlock.DefaultCase getDefaultCase();
  }
  /**
   * <pre>
   * Defines a series of if/else blocks. The first branch whose condition evaluates to true is the one to execute.
   * If no conditions were satisfied, the else_node or the error will execute.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.IfElseBlock}
   */
  public static final class IfElseBlock extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.IfElseBlock)
      IfElseBlockOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IfElseBlock.newBuilder() to construct.
    private IfElseBlock(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IfElseBlock() {
      other_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IfElseBlock();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.IfElseBlock.class, com.flyteidl.core.WorkflowProto.IfElseBlock.Builder.class);
    }

    private int defaultCase_ = 0;
    private java.lang.Object default_;
    public enum DefaultCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ELSE_NODE(3),
      ERROR(4),
      DEFAULT_NOT_SET(0);
      private final int value;
      private DefaultCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DefaultCase valueOf(int value) {
        return forNumber(value);
      }

      public static DefaultCase forNumber(int value) {
        switch (value) {
          case 3: return ELSE_NODE;
          case 4: return ERROR;
          case 0: return DEFAULT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public DefaultCase
    getDefaultCase() {
      return DefaultCase.forNumber(
          defaultCase_);
    }

    public static final int CASE_FIELD_NUMBER = 1;
    private com.flyteidl.core.WorkflowProto.IfBlock case_;
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     * @return Whether the case field is set.
     */
    @java.lang.Override
    public boolean hasCase() {
      return case_ != null;
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     * @return The case.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfBlock getCase() {
      return case_ == null ? com.flyteidl.core.WorkflowProto.IfBlock.getDefaultInstance() : case_;
    }
    /**
     * <pre>
     *+required. First condition to evaluate.
     * </pre>
     *
     * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfBlockOrBuilder getCaseOrBuilder() {
      return getCase();
    }

    public static final int OTHER_FIELD_NUMBER = 2;
    private java.util.List<com.flyteidl.core.WorkflowProto.IfBlock> other_;
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.WorkflowProto.IfBlock> getOtherList() {
      return other_;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.WorkflowProto.IfBlockOrBuilder> 
        getOtherOrBuilderList() {
      return other_;
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    @java.lang.Override
    public int getOtherCount() {
      return other_.size();
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfBlock getOther(int index) {
      return other_.get(index);
    }
    /**
     * <pre>
     *+optional. Additional branches to evaluate.
     * </pre>
     *
     * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfBlockOrBuilder getOtherOrBuilder(
        int index) {
      return other_.get(index);
    }

    public static final int ELSE_NODE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     * @return Whether the elseNode field is set.
     */
    @java.lang.Override
    public boolean hasElseNode() {
      return defaultCase_ == 3;
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     * @return The elseNode.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Node getElseNode() {
      if (defaultCase_ == 3) {
         return (com.flyteidl.core.WorkflowProto.Node) default_;
      }
      return com.flyteidl.core.WorkflowProto.Node.getDefaultInstance();
    }
    /**
     * <pre>
     * The node to execute in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeOrBuilder getElseNodeOrBuilder() {
      if (defaultCase_ == 3) {
         return (com.flyteidl.core.WorkflowProto.Node) default_;
      }
      return com.flyteidl.core.WorkflowProto.Node.getDefaultInstance();
    }

    public static final int ERROR_FIELD_NUMBER = 4;
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     * @return Whether the error field is set.
     */
    @java.lang.Override
    public boolean hasError() {
      return defaultCase_ == 4;
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     * @return The error.
     */
    @java.lang.Override
    public com.flyteidl.core.TypesProto.Error getError() {
      if (defaultCase_ == 4) {
         return (com.flyteidl.core.TypesProto.Error) default_;
      }
      return com.flyteidl.core.TypesProto.Error.getDefaultInstance();
    }
    /**
     * <pre>
     * An error to throw in case none of the branches were taken.
     * </pre>
     *
     * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.TypesProto.ErrorOrBuilder getErrorOrBuilder() {
      if (defaultCase_ == 4) {
         return (com.flyteidl.core.TypesProto.Error) default_;
      }
      return com.flyteidl.core.TypesProto.Error.getDefaultInstance();
    }

    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.IfElseBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.IfElseBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines a series of if/else blocks. The first branch whose condition evaluates to true is the one to execute.
     * If no conditions were satisfied, the else_node or the error will execute.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.IfElseBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.IfElseBlock)
        com.flyteidl.core.WorkflowProto.IfElseBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.IfElseBlock.class, com.flyteidl.core.WorkflowProto.IfElseBlock.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.IfElseBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOtherFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (caseBuilder_ == null) {
          case_ = null;
        } else {
          case_ = null;
          caseBuilder_ = null;
        }
        if (otherBuilder_ == null) {
          other_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          otherBuilder_.clear();
        }
        defaultCase_ = 0;
        default_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_IfElseBlock_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.IfElseBlock getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.IfElseBlock.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.IfElseBlock build() {
        com.flyteidl.core.WorkflowProto.IfElseBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.IfElseBlock buildPartial() {
        com.flyteidl.core.WorkflowProto.IfElseBlock result = new com.flyteidl.core.WorkflowProto.IfElseBlock(this);
        int from_bitField0_ = bitField0_;
        if (caseBuilder_ == null) {
          result.case_ = case_;
        } else {
          result.case_ = caseBuilder_.build();
        }
        if (otherBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            other_ = java.util.Collections.unmodifiableList(other_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.other_ = other_;
        } else {
          result.other_ = otherBuilder_.build();
        }
        if (defaultCase_ == 3) {
          if (elseNodeBuilder_ == null) {
            result.default_ = default_;
          } else {
            result.default_ = elseNodeBuilder_.build();
          }
        }
        if (defaultCase_ == 4) {
          if (errorBuilder_ == null) {
            result.default_ = default_;
          } else {
            result.default_ = errorBuilder_.build();
          }
        }
        result.defaultCase_ = defaultCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int defaultCase_ = 0;
      private java.lang.Object default_;
      public DefaultCase
          getDefaultCase() {
        return DefaultCase.forNumber(
            defaultCase_);
      }

      public Builder clearDefault() {
        defaultCase_ = 0;
        default_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.flyteidl.core.WorkflowProto.IfBlock case_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.IfBlock, com.flyteidl.core.WorkflowProto.IfBlock.Builder, com.flyteidl.core.WorkflowProto.IfBlockOrBuilder> caseBuilder_;
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       * @return Whether the case field is set.
       */
      public boolean hasCase() {
        return caseBuilder_ != null || case_ != null;
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       * @return The case.
       */
      public com.flyteidl.core.WorkflowProto.IfBlock getCase() {
        if (caseBuilder_ == null) {
          return case_ == null ? com.flyteidl.core.WorkflowProto.IfBlock.getDefaultInstance() : case_;
        } else {
          return caseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       */
      public Builder setCase(com.flyteidl.core.WorkflowProto.IfBlock value) {
        if (caseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          case_ = value;
          onChanged();
        } else {
          caseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       */
      public Builder setCase(
          com.flyteidl.core.WorkflowProto.IfBlock.Builder builderForValue) {
        if (caseBuilder_ == null) {
          case_ = builderForValue.build();
          onChanged();
        } else {
          caseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       */
      public Builder mergeCase(com.flyteidl.core.WorkflowProto.IfBlock value) {
        if (caseBuilder_ == null) {
          if (case_ != null) {
            case_ =
              com.flyteidl.core.WorkflowProto.IfBlock.newBuilder(case_).mergeFrom(value).buildPartial();
          } else {
            case_ = value;
          }
          onChanged();
        } else {
          caseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       */
      public Builder clearCase() {
        if (caseBuilder_ == null) {
          case_ = null;
          onChanged();
        } else {
          case_ = null;
          caseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfBlock.Builder getCaseBuilder() {
        
        onChanged();
        return getCaseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfBlockOrBuilder getCaseOrBuilder() {
        if (caseBuilder_ != null) {
          return caseBuilder_.getMessageOrBuilder();
        } else {
          return case_ == null ?
              com.flyteidl.core.WorkflowProto.IfBlock.getDefaultInstance() : case_;
        }
      }
      /**
       * <pre>
       *+required. First condition to evaluate.
       * </pre>
       *
       * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.IfBlock, com.flyteidl.core.WorkflowProto.IfBlock.Builder, com.flyteidl.core.WorkflowProto.IfBlockOrBuilder> 
          getCaseFieldBuilder() {
        if (caseBuilder_ == null) {
          caseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.IfBlock, com.flyteidl.core.WorkflowProto.IfBlock.Builder, com.flyteidl.core.WorkflowProto.IfBlockOrBuilder>(
                  getCase(),
                  getParentForChildren(),
                  isClean());
          case_ = null;
        }
        return caseBuilder_;
      }

      private java.util.List<com.flyteidl.core.WorkflowProto.IfBlock> other_ =
        java.util.Collections.emptyList();
      private void ensureOtherIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          other_ = new java.util.ArrayList<com.flyteidl.core.WorkflowProto.IfBlock>(other_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.IfBlock, com.flyteidl.core.WorkflowProto.IfBlock.Builder, com.flyteidl.core.WorkflowProto.IfBlockOrBuilder> otherBuilder_;

      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.IfBlock> getOtherList() {
        if (otherBuilder_ == null) {
          return java.util.Collections.unmodifiableList(other_);
        } else {
          return otherBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public int getOtherCount() {
        if (otherBuilder_ == null) {
          return other_.size();
        } else {
          return otherBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfBlock getOther(int index) {
        if (otherBuilder_ == null) {
          return other_.get(index);
        } else {
          return otherBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder setOther(
          int index, com.flyteidl.core.WorkflowProto.IfBlock value) {
        if (otherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherIsMutable();
          other_.set(index, value);
          onChanged();
        } else {
          otherBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder setOther(
          int index, com.flyteidl.core.WorkflowProto.IfBlock.Builder builderForValue) {
        if (otherBuilder_ == null) {
          ensureOtherIsMutable();
          other_.set(index, builderForValue.build());
          onChanged();
        } else {
          otherBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder addOther(com.flyteidl.core.WorkflowProto.IfBlock value) {
        if (otherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherIsMutable();
          other_.add(value);
          onChanged();
        } else {
          otherBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder addOther(
          int index, com.flyteidl.core.WorkflowProto.IfBlock value) {
        if (otherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOtherIsMutable();
          other_.add(index, value);
          onChanged();
        } else {
          otherBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder addOther(
          com.flyteidl.core.WorkflowProto.IfBlock.Builder builderForValue) {
        if (otherBuilder_ == null) {
          ensureOtherIsMutable();
          other_.add(builderForValue.build());
          onChanged();
        } else {
          otherBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder addOther(
          int index, com.flyteidl.core.WorkflowProto.IfBlock.Builder builderForValue) {
        if (otherBuilder_ == null) {
          ensureOtherIsMutable();
          other_.add(index, builderForValue.build());
          onChanged();
        } else {
          otherBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder addAllOther(
          java.lang.Iterable<? extends com.flyteidl.core.WorkflowProto.IfBlock> values) {
        if (otherBuilder_ == null) {
          ensureOtherIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, other_);
          onChanged();
        } else {
          otherBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder clearOther() {
        if (otherBuilder_ == null) {
          other_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          otherBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public Builder removeOther(int index) {
        if (otherBuilder_ == null) {
          ensureOtherIsMutable();
          other_.remove(index);
          onChanged();
        } else {
          otherBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfBlock.Builder getOtherBuilder(
          int index) {
        return getOtherFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfBlockOrBuilder getOtherOrBuilder(
          int index) {
        if (otherBuilder_ == null) {
          return other_.get(index);  } else {
          return otherBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.WorkflowProto.IfBlockOrBuilder> 
           getOtherOrBuilderList() {
        if (otherBuilder_ != null) {
          return otherBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(other_);
        }
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfBlock.Builder addOtherBuilder() {
        return getOtherFieldBuilder().addBuilder(
            com.flyteidl.core.WorkflowProto.IfBlock.getDefaultInstance());
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfBlock.Builder addOtherBuilder(
          int index) {
        return getOtherFieldBuilder().addBuilder(
            index, com.flyteidl.core.WorkflowProto.IfBlock.getDefaultInstance());
      }
      /**
       * <pre>
       *+optional. Additional branches to evaluate.
       * </pre>
       *
       * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.IfBlock.Builder> 
           getOtherBuilderList() {
        return getOtherFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.IfBlock, com.flyteidl.core.WorkflowProto.IfBlock.Builder, com.flyteidl.core.WorkflowProto.IfBlockOrBuilder> 
          getOtherFieldBuilder() {
        if (otherBuilder_ == null) {
          otherBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.IfBlock, com.flyteidl.core.WorkflowProto.IfBlock.Builder, com.flyteidl.core.WorkflowProto.IfBlockOrBuilder>(
                  other_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          other_ = null;
        }
        return otherBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> elseNodeBuilder_;
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       * @return Whether the elseNode field is set.
       */
      @java.lang.Override
      public boolean hasElseNode() {
        return defaultCase_ == 3;
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       * @return The elseNode.
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.Node getElseNode() {
        if (elseNodeBuilder_ == null) {
          if (defaultCase_ == 3) {
            return (com.flyteidl.core.WorkflowProto.Node) default_;
          }
          return com.flyteidl.core.WorkflowProto.Node.getDefaultInstance();
        } else {
          if (defaultCase_ == 3) {
            return elseNodeBuilder_.getMessage();
          }
          return com.flyteidl.core.WorkflowProto.Node.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       */
      public Builder setElseNode(com.flyteidl.core.WorkflowProto.Node value) {
        if (elseNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          default_ = value;
          onChanged();
        } else {
          elseNodeBuilder_.setMessage(value);
        }
        defaultCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       */
      public Builder setElseNode(
          com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (elseNodeBuilder_ == null) {
          default_ = builderForValue.build();
          onChanged();
        } else {
          elseNodeBuilder_.setMessage(builderForValue.build());
        }
        defaultCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       */
      public Builder mergeElseNode(com.flyteidl.core.WorkflowProto.Node value) {
        if (elseNodeBuilder_ == null) {
          if (defaultCase_ == 3 &&
              default_ != com.flyteidl.core.WorkflowProto.Node.getDefaultInstance()) {
            default_ = com.flyteidl.core.WorkflowProto.Node.newBuilder((com.flyteidl.core.WorkflowProto.Node) default_)
                .mergeFrom(value).buildPartial();
          } else {
            default_ = value;
          }
          onChanged();
        } else {
          if (defaultCase_ == 3) {
            elseNodeBuilder_.mergeFrom(value);
          }
          elseNodeBuilder_.setMessage(value);
        }
        defaultCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       */
      public Builder clearElseNode() {
        if (elseNodeBuilder_ == null) {
          if (defaultCase_ == 3) {
            defaultCase_ = 0;
            default_ = null;
            onChanged();
          }
        } else {
          if (defaultCase_ == 3) {
            defaultCase_ = 0;
            default_ = null;
          }
          elseNodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder getElseNodeBuilder() {
        return getElseNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.NodeOrBuilder getElseNodeOrBuilder() {
        if ((defaultCase_ == 3) && (elseNodeBuilder_ != null)) {
          return elseNodeBuilder_.getMessageOrBuilder();
        } else {
          if (defaultCase_ == 3) {
            return (com.flyteidl.core.WorkflowProto.Node) default_;
          }
          return com.flyteidl.core.WorkflowProto.Node.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The node to execute in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
          getElseNodeFieldBuilder() {
        if (elseNodeBuilder_ == null) {
          if (!(defaultCase_ == 3)) {
            default_ = com.flyteidl.core.WorkflowProto.Node.getDefaultInstance();
          }
          elseNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder>(
                  (com.flyteidl.core.WorkflowProto.Node) default_,
                  getParentForChildren(),
                  isClean());
          default_ = null;
        }
        defaultCase_ = 3;
        onChanged();;
        return elseNodeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.TypesProto.Error, com.flyteidl.core.TypesProto.Error.Builder, com.flyteidl.core.TypesProto.ErrorOrBuilder> errorBuilder_;
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       * @return Whether the error field is set.
       */
      @java.lang.Override
      public boolean hasError() {
        return defaultCase_ == 4;
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       * @return The error.
       */
      @java.lang.Override
      public com.flyteidl.core.TypesProto.Error getError() {
        if (errorBuilder_ == null) {
          if (defaultCase_ == 4) {
            return (com.flyteidl.core.TypesProto.Error) default_;
          }
          return com.flyteidl.core.TypesProto.Error.getDefaultInstance();
        } else {
          if (defaultCase_ == 4) {
            return errorBuilder_.getMessage();
          }
          return com.flyteidl.core.TypesProto.Error.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       */
      public Builder setError(com.flyteidl.core.TypesProto.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          default_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }
        defaultCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       */
      public Builder setError(
          com.flyteidl.core.TypesProto.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          default_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }
        defaultCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       */
      public Builder mergeError(com.flyteidl.core.TypesProto.Error value) {
        if (errorBuilder_ == null) {
          if (defaultCase_ == 4 &&
              default_ != com.flyteidl.core.TypesProto.Error.getDefaultInstance()) {
            default_ = com.flyteidl.core.TypesProto.Error.newBuilder((com.flyteidl.core.TypesProto.Error) default_)
                .mergeFrom(value).buildPartial();
          } else {
            default_ = value;
          }
          onChanged();
        } else {
          if (defaultCase_ == 4) {
            errorBuilder_.mergeFrom(value);
          }
          errorBuilder_.setMessage(value);
        }
        defaultCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          if (defaultCase_ == 4) {
            defaultCase_ = 0;
            default_ = null;
            onChanged();
          }
        } else {
          if (defaultCase_ == 4) {
            defaultCase_ = 0;
            default_ = null;
          }
          errorBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       */
      public com.flyteidl.core.TypesProto.Error.Builder getErrorBuilder() {
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.TypesProto.ErrorOrBuilder getErrorOrBuilder() {
        if ((defaultCase_ == 4) && (errorBuilder_ != null)) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          if (defaultCase_ == 4) {
            return (com.flyteidl.core.TypesProto.Error) default_;
          }
          return com.flyteidl.core.TypesProto.Error.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * An error to throw in case none of the branches were taken.
       * </pre>
       *
       * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.TypesProto.Error, com.flyteidl.core.TypesProto.Error.Builder, com.flyteidl.core.TypesProto.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          if (!(defaultCase_ == 4)) {
            default_ = com.flyteidl.core.TypesProto.Error.getDefaultInstance();
          }
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.TypesProto.Error, com.flyteidl.core.TypesProto.Error.Builder, com.flyteidl.core.TypesProto.ErrorOrBuilder>(
                  (com.flyteidl.core.TypesProto.Error) default_,
                  getParentForChildren(),
                  isClean());
          default_ = null;
        }
        defaultCase_ = 4;
        onChanged();;
        return errorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.IfElseBlock)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.IfElseBlock)
    private static final com.flyteidl.core.WorkflowProto.IfElseBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.IfElseBlock();
    }

    public static com.flyteidl.core.WorkflowProto.IfElseBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IfElseBlock>
        PARSER = new com.google.protobuf.AbstractParser<IfElseBlock>() {
      @java.lang.Override
      public IfElseBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IfElseBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IfElseBlock> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfElseBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BranchNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.BranchNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *+required
     * </pre>
     *
     * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
     * @return Whether the ifElse field is set.
     */
    boolean hasIfElse();
    /**
     * <pre>
     *+required
     * </pre>
     *
     * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
     * @return The ifElse.
     */
    com.flyteidl.core.WorkflowProto.IfElseBlock getIfElse();
    /**
     * <pre>
     *+required
     * </pre>
     *
     * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
     */
    com.flyteidl.core.WorkflowProto.IfElseBlockOrBuilder getIfElseOrBuilder();
  }
  /**
   * <pre>
   * BranchNode is a special node that alter the flow of the workflow graph. It allows the control flow to branch at
   * runtime based on a series of conditions that get evaluated on various parameters (e.g. inputs, primitives).
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.BranchNode}
   */
  public static final class BranchNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.BranchNode)
      BranchNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BranchNode.newBuilder() to construct.
    private BranchNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BranchNode() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BranchNode();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_BranchNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_BranchNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.BranchNode.class, com.flyteidl.core.WorkflowProto.BranchNode.Builder.class);
    }

    public static final int IF_ELSE_FIELD_NUMBER = 1;
    private com.flyteidl.core.WorkflowProto.IfElseBlock ifElse_;
    /**
     * <pre>
     *+required
     * </pre>
     *
     * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
     * @return Whether the ifElse field is set.
     */
    @java.lang.Override
    public boolean hasIfElse() {
      return ifElse_ != null;
    }
    /**
     * <pre>
     *+required
     * </pre>
     *
     * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
     * @return The ifElse.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfElseBlock getIfElse() {
      return ifElse_ == null ? com.flyteidl.core.WorkflowProto.IfElseBlock.getDefaultInstance() : ifElse_;
    }
    /**
     * <pre>
     *+required
     * </pre>
     *
     * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.IfElseBlockOrBuilder getIfElseOrBuilder() {
      return getIfElse();
    }

    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.BranchNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.BranchNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BranchNode is a special node that alter the flow of the workflow graph. It allows the control flow to branch at
     * runtime based on a series of conditions that get evaluated on various parameters (e.g. inputs, primitives).
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.BranchNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.BranchNode)
        com.flyteidl.core.WorkflowProto.BranchNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_BranchNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_BranchNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.BranchNode.class, com.flyteidl.core.WorkflowProto.BranchNode.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.BranchNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ifElseBuilder_ == null) {
          ifElse_ = null;
        } else {
          ifElse_ = null;
          ifElseBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_BranchNode_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.BranchNode getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.BranchNode build() {
        com.flyteidl.core.WorkflowProto.BranchNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.BranchNode buildPartial() {
        com.flyteidl.core.WorkflowProto.BranchNode result = new com.flyteidl.core.WorkflowProto.BranchNode(this);
        if (ifElseBuilder_ == null) {
          result.ifElse_ = ifElse_;
        } else {
          result.ifElse_ = ifElseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private com.flyteidl.core.WorkflowProto.IfElseBlock ifElse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.IfElseBlock, com.flyteidl.core.WorkflowProto.IfElseBlock.Builder, com.flyteidl.core.WorkflowProto.IfElseBlockOrBuilder> ifElseBuilder_;
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       * @return Whether the ifElse field is set.
       */
      public boolean hasIfElse() {
        return ifElseBuilder_ != null || ifElse_ != null;
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       * @return The ifElse.
       */
      public com.flyteidl.core.WorkflowProto.IfElseBlock getIfElse() {
        if (ifElseBuilder_ == null) {
          return ifElse_ == null ? com.flyteidl.core.WorkflowProto.IfElseBlock.getDefaultInstance() : ifElse_;
        } else {
          return ifElseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       */
      public Builder setIfElse(com.flyteidl.core.WorkflowProto.IfElseBlock value) {
        if (ifElseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ifElse_ = value;
          onChanged();
        } else {
          ifElseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       */
      public Builder setIfElse(
          com.flyteidl.core.WorkflowProto.IfElseBlock.Builder builderForValue) {
        if (ifElseBuilder_ == null) {
          ifElse_ = builderForValue.build();
          onChanged();
        } else {
          ifElseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       */
      public Builder mergeIfElse(com.flyteidl.core.WorkflowProto.IfElseBlock value) {
        if (ifElseBuilder_ == null) {
          if (ifElse_ != null) {
            ifElse_ =
              com.flyteidl.core.WorkflowProto.IfElseBlock.newBuilder(ifElse_).mergeFrom(value).buildPartial();
          } else {
            ifElse_ = value;
          }
          onChanged();
        } else {
          ifElseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       */
      public Builder clearIfElse() {
        if (ifElseBuilder_ == null) {
          ifElse_ = null;
          onChanged();
        } else {
          ifElse_ = null;
          ifElseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfElseBlock.Builder getIfElseBuilder() {
        
        onChanged();
        return getIfElseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       */
      public com.flyteidl.core.WorkflowProto.IfElseBlockOrBuilder getIfElseOrBuilder() {
        if (ifElseBuilder_ != null) {
          return ifElseBuilder_.getMessageOrBuilder();
        } else {
          return ifElse_ == null ?
              com.flyteidl.core.WorkflowProto.IfElseBlock.getDefaultInstance() : ifElse_;
        }
      }
      /**
       * <pre>
       *+required
       * </pre>
       *
       * <code>.flyteidl.core.IfElseBlock if_else = 1 [json_name = "ifElse"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.IfElseBlock, com.flyteidl.core.WorkflowProto.IfElseBlock.Builder, com.flyteidl.core.WorkflowProto.IfElseBlockOrBuilder> 
          getIfElseFieldBuilder() {
        if (ifElseBuilder_ == null) {
          ifElseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.IfElseBlock, com.flyteidl.core.WorkflowProto.IfElseBlock.Builder, com.flyteidl.core.WorkflowProto.IfElseBlockOrBuilder>(
                  getIfElse(),
                  getParentForChildren(),
                  isClean());
          ifElse_ = null;
        }
        return ifElseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.BranchNode)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.BranchNode)
    private static final com.flyteidl.core.WorkflowProto.BranchNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.BranchNode();
    }

    public static com.flyteidl.core.WorkflowProto.BranchNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BranchNode>
        PARSER = new com.google.protobuf.AbstractParser<BranchNode>() {
      @java.lang.Override
      public BranchNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BranchNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BranchNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.BranchNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TaskNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.TaskNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A globally unique identifier for the task.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
     * @return Whether the referenceId field is set.
     */
    boolean hasReferenceId();
    /**
     * <pre>
     * A globally unique identifier for the task.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
     * @return The referenceId.
     */
    com.flyteidl.core.IdentifierProto.Identifier getReferenceId();
    /**
     * <pre>
     * A globally unique identifier for the task.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
     */
    com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getReferenceIdOrBuilder();

    /**
     * <pre>
     * Optional overrides applied at task execution time.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
     * @return Whether the overrides field is set.
     */
    boolean hasOverrides();
    /**
     * <pre>
     * Optional overrides applied at task execution time.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
     * @return The overrides.
     */
    com.flyteidl.core.WorkflowProto.TaskNodeOverrides getOverrides();
    /**
     * <pre>
     * Optional overrides applied at task execution time.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
     */
    com.flyteidl.core.WorkflowProto.TaskNodeOverridesOrBuilder getOverridesOrBuilder();

    public com.flyteidl.core.WorkflowProto.TaskNode.ReferenceCase getReferenceCase();
  }
  /**
   * <pre>
   * Refers to the task that the Node is to execute.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.TaskNode}
   */
  public static final class TaskNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.TaskNode)
      TaskNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TaskNode.newBuilder() to construct.
    private TaskNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskNode() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TaskNode();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.TaskNode.class, com.flyteidl.core.WorkflowProto.TaskNode.Builder.class);
    }

    private int referenceCase_ = 0;
    private java.lang.Object reference_;
    public enum ReferenceCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      REFERENCE_ID(1),
      REFERENCE_NOT_SET(0);
      private final int value;
      private ReferenceCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReferenceCase valueOf(int value) {
        return forNumber(value);
      }

      public static ReferenceCase forNumber(int value) {
        switch (value) {
          case 1: return REFERENCE_ID;
          case 0: return REFERENCE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ReferenceCase
    getReferenceCase() {
      return ReferenceCase.forNumber(
          referenceCase_);
    }

    public static final int REFERENCE_ID_FIELD_NUMBER = 1;
    /**
     * <pre>
     * A globally unique identifier for the task.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
     * @return Whether the referenceId field is set.
     */
    @java.lang.Override
    public boolean hasReferenceId() {
      return referenceCase_ == 1;
    }
    /**
     * <pre>
     * A globally unique identifier for the task.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
     * @return The referenceId.
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.Identifier getReferenceId() {
      if (referenceCase_ == 1) {
         return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
      }
      return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
    }
    /**
     * <pre>
     * A globally unique identifier for the task.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getReferenceIdOrBuilder() {
      if (referenceCase_ == 1) {
         return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
      }
      return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
    }

    public static final int OVERRIDES_FIELD_NUMBER = 2;
    private com.flyteidl.core.WorkflowProto.TaskNodeOverrides overrides_;
    /**
     * <pre>
     * Optional overrides applied at task execution time.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
     * @return Whether the overrides field is set.
     */
    @java.lang.Override
    public boolean hasOverrides() {
      return overrides_ != null;
    }
    /**
     * <pre>
     * Optional overrides applied at task execution time.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
     * @return The overrides.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.TaskNodeOverrides getOverrides() {
      return overrides_ == null ? com.flyteidl.core.WorkflowProto.TaskNodeOverrides.getDefaultInstance() : overrides_;
    }
    /**
     * <pre>
     * Optional overrides applied at task execution time.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.TaskNodeOverridesOrBuilder getOverridesOrBuilder() {
      return getOverrides();
    }

    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.TaskNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Refers to the task that the Node is to execute.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.TaskNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.TaskNode)
        com.flyteidl.core.WorkflowProto.TaskNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.TaskNode.class, com.flyteidl.core.WorkflowProto.TaskNode.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.TaskNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (overridesBuilder_ == null) {
          overrides_ = null;
        } else {
          overrides_ = null;
          overridesBuilder_ = null;
        }
        referenceCase_ = 0;
        reference_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNode_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNode getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNode build() {
        com.flyteidl.core.WorkflowProto.TaskNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNode buildPartial() {
        com.flyteidl.core.WorkflowProto.TaskNode result = new com.flyteidl.core.WorkflowProto.TaskNode(this);
        if (referenceCase_ == 1) {
          if (referenceIdBuilder_ == null) {
            result.reference_ = reference_;
          } else {
            result.reference_ = referenceIdBuilder_.build();
          }
        }
        if (overridesBuilder_ == null) {
          result.overrides_ = overrides_;
        } else {
          result.overrides_ = overridesBuilder_.build();
        }
        result.referenceCase_ = referenceCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int referenceCase_ = 0;
      private java.lang.Object reference_;
      public ReferenceCase
          getReferenceCase() {
        return ReferenceCase.forNumber(
            referenceCase_);
      }

      public Builder clearReference() {
        referenceCase_ = 0;
        reference_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> referenceIdBuilder_;
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       * @return Whether the referenceId field is set.
       */
      @java.lang.Override
      public boolean hasReferenceId() {
        return referenceCase_ == 1;
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       * @return The referenceId.
       */
      @java.lang.Override
      public com.flyteidl.core.IdentifierProto.Identifier getReferenceId() {
        if (referenceIdBuilder_ == null) {
          if (referenceCase_ == 1) {
            return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        } else {
          if (referenceCase_ == 1) {
            return referenceIdBuilder_.getMessage();
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       */
      public Builder setReferenceId(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (referenceIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reference_ = value;
          onChanged();
        } else {
          referenceIdBuilder_.setMessage(value);
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       */
      public Builder setReferenceId(
          com.flyteidl.core.IdentifierProto.Identifier.Builder builderForValue) {
        if (referenceIdBuilder_ == null) {
          reference_ = builderForValue.build();
          onChanged();
        } else {
          referenceIdBuilder_.setMessage(builderForValue.build());
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       */
      public Builder mergeReferenceId(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (referenceIdBuilder_ == null) {
          if (referenceCase_ == 1 &&
              reference_ != com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance()) {
            reference_ = com.flyteidl.core.IdentifierProto.Identifier.newBuilder((com.flyteidl.core.IdentifierProto.Identifier) reference_)
                .mergeFrom(value).buildPartial();
          } else {
            reference_ = value;
          }
          onChanged();
        } else {
          if (referenceCase_ == 1) {
            referenceIdBuilder_.mergeFrom(value);
          }
          referenceIdBuilder_.setMessage(value);
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       */
      public Builder clearReferenceId() {
        if (referenceIdBuilder_ == null) {
          if (referenceCase_ == 1) {
            referenceCase_ = 0;
            reference_ = null;
            onChanged();
          }
        } else {
          if (referenceCase_ == 1) {
            referenceCase_ = 0;
            reference_ = null;
          }
          referenceIdBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       */
      public com.flyteidl.core.IdentifierProto.Identifier.Builder getReferenceIdBuilder() {
        return getReferenceIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getReferenceIdOrBuilder() {
        if ((referenceCase_ == 1) && (referenceIdBuilder_ != null)) {
          return referenceIdBuilder_.getMessageOrBuilder();
        } else {
          if (referenceCase_ == 1) {
            return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A globally unique identifier for the task.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier reference_id = 1 [json_name = "referenceId"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> 
          getReferenceIdFieldBuilder() {
        if (referenceIdBuilder_ == null) {
          if (!(referenceCase_ == 1)) {
            reference_ = com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
          }
          referenceIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder>(
                  (com.flyteidl.core.IdentifierProto.Identifier) reference_,
                  getParentForChildren(),
                  isClean());
          reference_ = null;
        }
        referenceCase_ = 1;
        onChanged();;
        return referenceIdBuilder_;
      }

      private com.flyteidl.core.WorkflowProto.TaskNodeOverrides overrides_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.TaskNodeOverrides, com.flyteidl.core.WorkflowProto.TaskNodeOverrides.Builder, com.flyteidl.core.WorkflowProto.TaskNodeOverridesOrBuilder> overridesBuilder_;
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       * @return Whether the overrides field is set.
       */
      public boolean hasOverrides() {
        return overridesBuilder_ != null || overrides_ != null;
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       * @return The overrides.
       */
      public com.flyteidl.core.WorkflowProto.TaskNodeOverrides getOverrides() {
        if (overridesBuilder_ == null) {
          return overrides_ == null ? com.flyteidl.core.WorkflowProto.TaskNodeOverrides.getDefaultInstance() : overrides_;
        } else {
          return overridesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       */
      public Builder setOverrides(com.flyteidl.core.WorkflowProto.TaskNodeOverrides value) {
        if (overridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          overrides_ = value;
          onChanged();
        } else {
          overridesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       */
      public Builder setOverrides(
          com.flyteidl.core.WorkflowProto.TaskNodeOverrides.Builder builderForValue) {
        if (overridesBuilder_ == null) {
          overrides_ = builderForValue.build();
          onChanged();
        } else {
          overridesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       */
      public Builder mergeOverrides(com.flyteidl.core.WorkflowProto.TaskNodeOverrides value) {
        if (overridesBuilder_ == null) {
          if (overrides_ != null) {
            overrides_ =
              com.flyteidl.core.WorkflowProto.TaskNodeOverrides.newBuilder(overrides_).mergeFrom(value).buildPartial();
          } else {
            overrides_ = value;
          }
          onChanged();
        } else {
          overridesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       */
      public Builder clearOverrides() {
        if (overridesBuilder_ == null) {
          overrides_ = null;
          onChanged();
        } else {
          overrides_ = null;
          overridesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       */
      public com.flyteidl.core.WorkflowProto.TaskNodeOverrides.Builder getOverridesBuilder() {
        
        onChanged();
        return getOverridesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       */
      public com.flyteidl.core.WorkflowProto.TaskNodeOverridesOrBuilder getOverridesOrBuilder() {
        if (overridesBuilder_ != null) {
          return overridesBuilder_.getMessageOrBuilder();
        } else {
          return overrides_ == null ?
              com.flyteidl.core.WorkflowProto.TaskNodeOverrides.getDefaultInstance() : overrides_;
        }
      }
      /**
       * <pre>
       * Optional overrides applied at task execution time.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNodeOverrides overrides = 2 [json_name = "overrides"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.TaskNodeOverrides, com.flyteidl.core.WorkflowProto.TaskNodeOverrides.Builder, com.flyteidl.core.WorkflowProto.TaskNodeOverridesOrBuilder> 
          getOverridesFieldBuilder() {
        if (overridesBuilder_ == null) {
          overridesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.TaskNodeOverrides, com.flyteidl.core.WorkflowProto.TaskNodeOverrides.Builder, com.flyteidl.core.WorkflowProto.TaskNodeOverridesOrBuilder>(
                  getOverrides(),
                  getParentForChildren(),
                  isClean());
          overrides_ = null;
        }
        return overridesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.TaskNode)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.TaskNode)
    private static final com.flyteidl.core.WorkflowProto.TaskNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.TaskNode();
    }

    public static com.flyteidl.core.WorkflowProto.TaskNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskNode>
        PARSER = new com.google.protobuf.AbstractParser<TaskNode>() {
      @java.lang.Override
      public TaskNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TaskNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.TaskNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkflowNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.WorkflowNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     * @return Whether the launchplanRef field is set.
     */
    boolean hasLaunchplanRef();
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     * @return The launchplanRef.
     */
    com.flyteidl.core.IdentifierProto.Identifier getLaunchplanRef();
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getLaunchplanRefOrBuilder();

    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     * @return Whether the subWorkflowRef field is set.
     */
    boolean hasSubWorkflowRef();
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     * @return The subWorkflowRef.
     */
    com.flyteidl.core.IdentifierProto.Identifier getSubWorkflowRef();
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getSubWorkflowRefOrBuilder();

    public com.flyteidl.core.WorkflowProto.WorkflowNode.ReferenceCase getReferenceCase();
  }
  /**
   * <pre>
   * Refers to a the workflow the node is to execute.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.WorkflowNode}
   */
  public static final class WorkflowNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.WorkflowNode)
      WorkflowNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkflowNode.newBuilder() to construct.
    private WorkflowNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkflowNode() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkflowNode();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.WorkflowNode.class, com.flyteidl.core.WorkflowProto.WorkflowNode.Builder.class);
    }

    private int referenceCase_ = 0;
    private java.lang.Object reference_;
    public enum ReferenceCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      LAUNCHPLAN_REF(1),
      SUB_WORKFLOW_REF(2),
      REFERENCE_NOT_SET(0);
      private final int value;
      private ReferenceCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReferenceCase valueOf(int value) {
        return forNumber(value);
      }

      public static ReferenceCase forNumber(int value) {
        switch (value) {
          case 1: return LAUNCHPLAN_REF;
          case 2: return SUB_WORKFLOW_REF;
          case 0: return REFERENCE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ReferenceCase
    getReferenceCase() {
      return ReferenceCase.forNumber(
          referenceCase_);
    }

    public static final int LAUNCHPLAN_REF_FIELD_NUMBER = 1;
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     * @return Whether the launchplanRef field is set.
     */
    @java.lang.Override
    public boolean hasLaunchplanRef() {
      return referenceCase_ == 1;
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     * @return The launchplanRef.
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.Identifier getLaunchplanRef() {
      if (referenceCase_ == 1) {
         return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
      }
      return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getLaunchplanRefOrBuilder() {
      if (referenceCase_ == 1) {
         return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
      }
      return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
    }

    public static final int SUB_WORKFLOW_REF_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     * @return Whether the subWorkflowRef field is set.
     */
    @java.lang.Override
    public boolean hasSubWorkflowRef() {
      return referenceCase_ == 2;
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     * @return The subWorkflowRef.
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.Identifier getSubWorkflowRef() {
      if (referenceCase_ == 2) {
         return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
      }
      return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getSubWorkflowRefOrBuilder() {
      if (referenceCase_ == 2) {
         return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
      }
      return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.WorkflowNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Refers to a the workflow the node is to execute.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.WorkflowNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.WorkflowNode)
        com.flyteidl.core.WorkflowProto.WorkflowNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.WorkflowNode.class, com.flyteidl.core.WorkflowProto.WorkflowNode.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.WorkflowNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        referenceCase_ = 0;
        reference_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowNode getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowNode build() {
        com.flyteidl.core.WorkflowProto.WorkflowNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowNode buildPartial() {
        com.flyteidl.core.WorkflowProto.WorkflowNode result = new com.flyteidl.core.WorkflowProto.WorkflowNode(this);
        if (referenceCase_ == 1) {
          if (launchplanRefBuilder_ == null) {
            result.reference_ = reference_;
          } else {
            result.reference_ = launchplanRefBuilder_.build();
          }
        }
        if (referenceCase_ == 2) {
          if (subWorkflowRefBuilder_ == null) {
            result.reference_ = reference_;
          } else {
            result.reference_ = subWorkflowRefBuilder_.build();
          }
        }
        result.referenceCase_ = referenceCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int referenceCase_ = 0;
      private java.lang.Object reference_;
      public ReferenceCase
          getReferenceCase() {
        return ReferenceCase.forNumber(
            referenceCase_);
      }

      public Builder clearReference() {
        referenceCase_ = 0;
        reference_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> launchplanRefBuilder_;
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       * @return Whether the launchplanRef field is set.
       */
      @java.lang.Override
      public boolean hasLaunchplanRef() {
        return referenceCase_ == 1;
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       * @return The launchplanRef.
       */
      @java.lang.Override
      public com.flyteidl.core.IdentifierProto.Identifier getLaunchplanRef() {
        if (launchplanRefBuilder_ == null) {
          if (referenceCase_ == 1) {
            return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        } else {
          if (referenceCase_ == 1) {
            return launchplanRefBuilder_.getMessage();
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       */
      public Builder setLaunchplanRef(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (launchplanRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reference_ = value;
          onChanged();
        } else {
          launchplanRefBuilder_.setMessage(value);
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       */
      public Builder setLaunchplanRef(
          com.flyteidl.core.IdentifierProto.Identifier.Builder builderForValue) {
        if (launchplanRefBuilder_ == null) {
          reference_ = builderForValue.build();
          onChanged();
        } else {
          launchplanRefBuilder_.setMessage(builderForValue.build());
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       */
      public Builder mergeLaunchplanRef(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (launchplanRefBuilder_ == null) {
          if (referenceCase_ == 1 &&
              reference_ != com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance()) {
            reference_ = com.flyteidl.core.IdentifierProto.Identifier.newBuilder((com.flyteidl.core.IdentifierProto.Identifier) reference_)
                .mergeFrom(value).buildPartial();
          } else {
            reference_ = value;
          }
          onChanged();
        } else {
          if (referenceCase_ == 1) {
            launchplanRefBuilder_.mergeFrom(value);
          }
          launchplanRefBuilder_.setMessage(value);
        }
        referenceCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       */
      public Builder clearLaunchplanRef() {
        if (launchplanRefBuilder_ == null) {
          if (referenceCase_ == 1) {
            referenceCase_ = 0;
            reference_ = null;
            onChanged();
          }
        } else {
          if (referenceCase_ == 1) {
            referenceCase_ = 0;
            reference_ = null;
          }
          launchplanRefBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       */
      public com.flyteidl.core.IdentifierProto.Identifier.Builder getLaunchplanRefBuilder() {
        return getLaunchplanRefFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getLaunchplanRefOrBuilder() {
        if ((referenceCase_ == 1) && (launchplanRefBuilder_ != null)) {
          return launchplanRefBuilder_.getMessageOrBuilder();
        } else {
          if (referenceCase_ == 1) {
            return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * A globally unique identifier for the launch plan.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> 
          getLaunchplanRefFieldBuilder() {
        if (launchplanRefBuilder_ == null) {
          if (!(referenceCase_ == 1)) {
            reference_ = com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
          }
          launchplanRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder>(
                  (com.flyteidl.core.IdentifierProto.Identifier) reference_,
                  getParentForChildren(),
                  isClean());
          reference_ = null;
        }
        referenceCase_ = 1;
        onChanged();;
        return launchplanRefBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> subWorkflowRefBuilder_;
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       * @return Whether the subWorkflowRef field is set.
       */
      @java.lang.Override
      public boolean hasSubWorkflowRef() {
        return referenceCase_ == 2;
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       * @return The subWorkflowRef.
       */
      @java.lang.Override
      public com.flyteidl.core.IdentifierProto.Identifier getSubWorkflowRef() {
        if (subWorkflowRefBuilder_ == null) {
          if (referenceCase_ == 2) {
            return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        } else {
          if (referenceCase_ == 2) {
            return subWorkflowRefBuilder_.getMessage();
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       */
      public Builder setSubWorkflowRef(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (subWorkflowRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reference_ = value;
          onChanged();
        } else {
          subWorkflowRefBuilder_.setMessage(value);
        }
        referenceCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       */
      public Builder setSubWorkflowRef(
          com.flyteidl.core.IdentifierProto.Identifier.Builder builderForValue) {
        if (subWorkflowRefBuilder_ == null) {
          reference_ = builderForValue.build();
          onChanged();
        } else {
          subWorkflowRefBuilder_.setMessage(builderForValue.build());
        }
        referenceCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       */
      public Builder mergeSubWorkflowRef(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (subWorkflowRefBuilder_ == null) {
          if (referenceCase_ == 2 &&
              reference_ != com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance()) {
            reference_ = com.flyteidl.core.IdentifierProto.Identifier.newBuilder((com.flyteidl.core.IdentifierProto.Identifier) reference_)
                .mergeFrom(value).buildPartial();
          } else {
            reference_ = value;
          }
          onChanged();
        } else {
          if (referenceCase_ == 2) {
            subWorkflowRefBuilder_.mergeFrom(value);
          }
          subWorkflowRefBuilder_.setMessage(value);
        }
        referenceCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       */
      public Builder clearSubWorkflowRef() {
        if (subWorkflowRefBuilder_ == null) {
          if (referenceCase_ == 2) {
            referenceCase_ = 0;
            reference_ = null;
            onChanged();
          }
        } else {
          if (referenceCase_ == 2) {
            referenceCase_ = 0;
            reference_ = null;
          }
          subWorkflowRefBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       */
      public com.flyteidl.core.IdentifierProto.Identifier.Builder getSubWorkflowRefBuilder() {
        return getSubWorkflowRefFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getSubWorkflowRefOrBuilder() {
        if ((referenceCase_ == 2) && (subWorkflowRefBuilder_ != null)) {
          return subWorkflowRefBuilder_.getMessageOrBuilder();
        } else {
          if (referenceCase_ == 2) {
            return (com.flyteidl.core.IdentifierProto.Identifier) reference_;
          }
          return com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Reference to a subworkflow, that should be defined with the compiler context
       * </pre>
       *
       * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> 
          getSubWorkflowRefFieldBuilder() {
        if (subWorkflowRefBuilder_ == null) {
          if (!(referenceCase_ == 2)) {
            reference_ = com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance();
          }
          subWorkflowRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder>(
                  (com.flyteidl.core.IdentifierProto.Identifier) reference_,
                  getParentForChildren(),
                  isClean());
          reference_ = null;
        }
        referenceCase_ = 2;
        onChanged();;
        return subWorkflowRefBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.WorkflowNode)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowNode)
    private static final com.flyteidl.core.WorkflowProto.WorkflowNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.WorkflowNode();
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkflowNode>
        PARSER = new com.google.protobuf.AbstractParser<WorkflowNode>() {
      @java.lang.Override
      public WorkflowNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WorkflowNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkflowNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.NodeMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A friendly name for the Node
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * A friendly name for the Node
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The overall timeout of a task.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
     * @return Whether the timeout field is set.
     */
    boolean hasTimeout();
    /**
     * <pre>
     * The overall timeout of a task.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
     * @return The timeout.
     */
    com.google.protobuf.Duration getTimeout();
    /**
     * <pre>
     * The overall timeout of a task.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
     */
    com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
     * @return Whether the retries field is set.
     */
    boolean hasRetries();
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
     * @return The retries.
     */
    com.flyteidl.core.LiteralsProto.RetryStrategy getRetries();
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
     */
    com.flyteidl.core.LiteralsProto.RetryStrategyOrBuilder getRetriesOrBuilder();

    /**
     * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
     * @return Whether the interruptible field is set.
     */
    boolean hasInterruptible();
    /**
     * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
     * @return The interruptible.
     */
    boolean getInterruptible();

    public com.flyteidl.core.WorkflowProto.NodeMetadata.InterruptibleValueCase getInterruptibleValueCase();
  }
  /**
   * <pre>
   * Defines extra information about the Node.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.NodeMetadata}
   */
  public static final class NodeMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.NodeMetadata)
      NodeMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeMetadata.newBuilder() to construct.
    private NodeMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeMetadata() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NodeMetadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_NodeMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_NodeMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.NodeMetadata.class, com.flyteidl.core.WorkflowProto.NodeMetadata.Builder.class);
    }

    private int interruptibleValueCase_ = 0;
    private java.lang.Object interruptibleValue_;
    public enum InterruptibleValueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      INTERRUPTIBLE(6),
      INTERRUPTIBLEVALUE_NOT_SET(0);
      private final int value;
      private InterruptibleValueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static InterruptibleValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static InterruptibleValueCase forNumber(int value) {
        switch (value) {
          case 6: return INTERRUPTIBLE;
          case 0: return INTERRUPTIBLEVALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public InterruptibleValueCase
    getInterruptibleValueCase() {
      return InterruptibleValueCase.forNumber(
          interruptibleValueCase_);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * A friendly name for the Node
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A friendly name for the Node
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMEOUT_FIELD_NUMBER = 4;
    private com.google.protobuf.Duration timeout_;
    /**
     * <pre>
     * The overall timeout of a task.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
     * @return Whether the timeout field is set.
     */
    @java.lang.Override
    public boolean hasTimeout() {
      return timeout_ != null;
    }
    /**
     * <pre>
     * The overall timeout of a task.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
     * @return The timeout.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getTimeout() {
      return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
    }
    /**
     * <pre>
     * The overall timeout of a task.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
      return getTimeout();
    }

    public static final int RETRIES_FIELD_NUMBER = 5;
    private com.flyteidl.core.LiteralsProto.RetryStrategy retries_;
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
     * @return Whether the retries field is set.
     */
    @java.lang.Override
    public boolean hasRetries() {
      return retries_ != null;
    }
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
     * @return The retries.
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.RetryStrategy getRetries() {
      return retries_ == null ? com.flyteidl.core.LiteralsProto.RetryStrategy.getDefaultInstance() : retries_;
    }
    /**
     * <pre>
     * Number of retries per task.
     * </pre>
     *
     * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.RetryStrategyOrBuilder getRetriesOrBuilder() {
      return getRetries();
    }

    public static final int INTERRUPTIBLE_FIELD_NUMBER = 6;
    /**
     * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
     * @return Whether the interruptible field is set.
     */
    @java.lang.Override
    public boolean hasInterruptible() {
      return interruptibleValueCase_ == 6;
    }
    /**
     * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
     * @return The interruptible.
     */
    @java.lang.Override
    public boolean getInterruptible() {
      if (interruptibleValueCase_ == 6) {
        return (java.lang.Boolean) interruptibleValue_;
      }
      return false;
    }

    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.NodeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.NodeMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines extra information about the Node.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.NodeMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.NodeMetadata)
        com.flyteidl.core.WorkflowProto.NodeMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_NodeMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_NodeMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.NodeMetadata.class, com.flyteidl.core.WorkflowProto.NodeMetadata.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.NodeMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (timeoutBuilder_ == null) {
          timeout_ = null;
        } else {
          timeout_ = null;
          timeoutBuilder_ = null;
        }
        if (retriesBuilder_ == null) {
          retries_ = null;
        } else {
          retries_ = null;
          retriesBuilder_ = null;
        }
        interruptibleValueCase_ = 0;
        interruptibleValue_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_NodeMetadata_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.NodeMetadata getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.NodeMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.NodeMetadata build() {
        com.flyteidl.core.WorkflowProto.NodeMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.NodeMetadata buildPartial() {
        com.flyteidl.core.WorkflowProto.NodeMetadata result = new com.flyteidl.core.WorkflowProto.NodeMetadata(this);
        result.name_ = name_;
        if (timeoutBuilder_ == null) {
          result.timeout_ = timeout_;
        } else {
          result.timeout_ = timeoutBuilder_.build();
        }
        if (retriesBuilder_ == null) {
          result.retries_ = retries_;
        } else {
          result.retries_ = retriesBuilder_.build();
        }
        if (interruptibleValueCase_ == 6) {
          result.interruptibleValue_ = interruptibleValue_;
        }
        result.interruptibleValueCase_ = interruptibleValueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int interruptibleValueCase_ = 0;
      private java.lang.Object interruptibleValue_;
      public InterruptibleValueCase
          getInterruptibleValueCase() {
        return InterruptibleValueCase.forNumber(
            interruptibleValueCase_);
      }

      public Builder clearInterruptibleValue() {
        interruptibleValueCase_ = 0;
        interruptibleValue_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A friendly name for the Node
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A friendly name for the Node
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A friendly name for the Node
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A friendly name for the Node
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A friendly name for the Node
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration timeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeoutBuilder_;
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       * @return Whether the timeout field is set.
       */
      public boolean hasTimeout() {
        return timeoutBuilder_ != null || timeout_ != null;
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       * @return The timeout.
       */
      public com.google.protobuf.Duration getTimeout() {
        if (timeoutBuilder_ == null) {
          return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
        } else {
          return timeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       */
      public Builder setTimeout(com.google.protobuf.Duration value) {
        if (timeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeout_ = value;
          onChanged();
        } else {
          timeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       */
      public Builder setTimeout(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (timeoutBuilder_ == null) {
          timeout_ = builderForValue.build();
          onChanged();
        } else {
          timeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       */
      public Builder mergeTimeout(com.google.protobuf.Duration value) {
        if (timeoutBuilder_ == null) {
          if (timeout_ != null) {
            timeout_ =
              com.google.protobuf.Duration.newBuilder(timeout_).mergeFrom(value).buildPartial();
          } else {
            timeout_ = value;
          }
          onChanged();
        } else {
          timeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       */
      public Builder clearTimeout() {
        if (timeoutBuilder_ == null) {
          timeout_ = null;
          onChanged();
        } else {
          timeout_ = null;
          timeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       */
      public com.google.protobuf.Duration.Builder getTimeoutBuilder() {
        
        onChanged();
        return getTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       */
      public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
        if (timeoutBuilder_ != null) {
          return timeoutBuilder_.getMessageOrBuilder();
        } else {
          return timeout_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : timeout_;
        }
      }
      /**
       * <pre>
       * The overall timeout of a task.
       * </pre>
       *
       * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getTimeoutFieldBuilder() {
        if (timeoutBuilder_ == null) {
          timeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getTimeout(),
                  getParentForChildren(),
                  isClean());
          timeout_ = null;
        }
        return timeoutBuilder_;
      }

      private com.flyteidl.core.LiteralsProto.RetryStrategy retries_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.RetryStrategy, com.flyteidl.core.LiteralsProto.RetryStrategy.Builder, com.flyteidl.core.LiteralsProto.RetryStrategyOrBuilder> retriesBuilder_;
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       * @return Whether the retries field is set.
       */
      public boolean hasRetries() {
        return retriesBuilder_ != null || retries_ != null;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       * @return The retries.
       */
      public com.flyteidl.core.LiteralsProto.RetryStrategy getRetries() {
        if (retriesBuilder_ == null) {
          return retries_ == null ? com.flyteidl.core.LiteralsProto.RetryStrategy.getDefaultInstance() : retries_;
        } else {
          return retriesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       */
      public Builder setRetries(com.flyteidl.core.LiteralsProto.RetryStrategy value) {
        if (retriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          retries_ = value;
          onChanged();
        } else {
          retriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       */
      public Builder setRetries(
          com.flyteidl.core.LiteralsProto.RetryStrategy.Builder builderForValue) {
        if (retriesBuilder_ == null) {
          retries_ = builderForValue.build();
          onChanged();
        } else {
          retriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       */
      public Builder mergeRetries(com.flyteidl.core.LiteralsProto.RetryStrategy value) {
        if (retriesBuilder_ == null) {
          if (retries_ != null) {
            retries_ =
              com.flyteidl.core.LiteralsProto.RetryStrategy.newBuilder(retries_).mergeFrom(value).buildPartial();
          } else {
            retries_ = value;
          }
          onChanged();
        } else {
          retriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       */
      public Builder clearRetries() {
        if (retriesBuilder_ == null) {
          retries_ = null;
          onChanged();
        } else {
          retries_ = null;
          retriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       */
      public com.flyteidl.core.LiteralsProto.RetryStrategy.Builder getRetriesBuilder() {
        
        onChanged();
        return getRetriesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       */
      public com.flyteidl.core.LiteralsProto.RetryStrategyOrBuilder getRetriesOrBuilder() {
        if (retriesBuilder_ != null) {
          return retriesBuilder_.getMessageOrBuilder();
        } else {
          return retries_ == null ?
              com.flyteidl.core.LiteralsProto.RetryStrategy.getDefaultInstance() : retries_;
        }
      }
      /**
       * <pre>
       * Number of retries per task.
       * </pre>
       *
       * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.RetryStrategy, com.flyteidl.core.LiteralsProto.RetryStrategy.Builder, com.flyteidl.core.LiteralsProto.RetryStrategyOrBuilder> 
          getRetriesFieldBuilder() {
        if (retriesBuilder_ == null) {
          retriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.LiteralsProto.RetryStrategy, com.flyteidl.core.LiteralsProto.RetryStrategy.Builder, com.flyteidl.core.LiteralsProto.RetryStrategyOrBuilder>(
                  getRetries(),
                  getParentForChildren(),
                  isClean());
          retries_ = null;
        }
        return retriesBuilder_;
      }

      /**
       * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
       * @return Whether the interruptible field is set.
       */
      public boolean hasInterruptible() {
        return interruptibleValueCase_ == 6;
      }
      /**
       * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
       * @return The interruptible.
       */
      public boolean getInterruptible() {
        if (interruptibleValueCase_ == 6) {
          return (java.lang.Boolean) interruptibleValue_;
        }
        return false;
      }
      /**
       * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
       * @param value The interruptible to set.
       * @return This builder for chaining.
       */
      public Builder setInterruptible(boolean value) {
        interruptibleValueCase_ = 6;
        interruptibleValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool interruptible = 6 [json_name = "interruptible"];</code>
       * @return This builder for chaining.
       */
      public Builder clearInterruptible() {
        if (interruptibleValueCase_ == 6) {
          interruptibleValueCase_ = 0;
          interruptibleValue_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.NodeMetadata)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.NodeMetadata)
    private static final com.flyteidl.core.WorkflowProto.NodeMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.NodeMetadata();
    }

    public static com.flyteidl.core.WorkflowProto.NodeMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeMetadata>
        PARSER = new com.google.protobuf.AbstractParser<NodeMetadata>() {
      @java.lang.Override
      public NodeMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NodeMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AliasOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.Alias)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Must match one of the output variable names on a node.
     * </pre>
     *
     * <code>string var = 1 [json_name = "var"];</code>
     * @return The var.
     */
    java.lang.String getVar();
    /**
     * <pre>
     * Must match one of the output variable names on a node.
     * </pre>
     *
     * <code>string var = 1 [json_name = "var"];</code>
     * @return The bytes for var.
     */
    com.google.protobuf.ByteString
        getVarBytes();

    /**
     * <pre>
     * A workflow-level unique alias that downstream nodes can refer to in their input.
     * </pre>
     *
     * <code>string alias = 2 [json_name = "alias"];</code>
     * @return The alias.
     */
    java.lang.String getAlias();
    /**
     * <pre>
     * A workflow-level unique alias that downstream nodes can refer to in their input.
     * </pre>
     *
     * <code>string alias = 2 [json_name = "alias"];</code>
     * @return The bytes for alias.
     */
    com.google.protobuf.ByteString
        getAliasBytes();
  }
  /**
   * <pre>
   * Links a variable to an alias.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.Alias}
   */
  public static final class Alias extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.Alias)
      AliasOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Alias.newBuilder() to construct.
    private Alias(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Alias() {
      var_ = "";
      alias_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Alias();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Alias_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Alias_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.Alias.class, com.flyteidl.core.WorkflowProto.Alias.Builder.class);
    }

    public static final int VAR_FIELD_NUMBER = 1;
    private volatile java.lang.Object var_;
    /**
     * <pre>
     * Must match one of the output variable names on a node.
     * </pre>
     *
     * <code>string var = 1 [json_name = "var"];</code>
     * @return The var.
     */
    @java.lang.Override
    public java.lang.String getVar() {
      java.lang.Object ref = var_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        var_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Must match one of the output variable names on a node.
     * </pre>
     *
     * <code>string var = 1 [json_name = "var"];</code>
     * @return The bytes for var.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVarBytes() {
      java.lang.Object ref = var_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        var_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALIAS_FIELD_NUMBER = 2;
    private volatile java.lang.Object alias_;
    /**
     * <pre>
     * A workflow-level unique alias that downstream nodes can refer to in their input.
     * </pre>
     *
     * <code>string alias = 2 [json_name = "alias"];</code>
     * @return The alias.
     */
    @java.lang.Override
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        alias_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A workflow-level unique alias that downstream nodes can refer to in their input.
     * </pre>
     *
     * <code>string alias = 2 [json_name = "alias"];</code>
     * @return The bytes for alias.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.Alias parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.Alias prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Links a variable to an alias.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.Alias}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.Alias)
        com.flyteidl.core.WorkflowProto.AliasOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Alias_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Alias_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.Alias.class, com.flyteidl.core.WorkflowProto.Alias.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.Alias.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        var_ = "";

        alias_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Alias_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.Alias getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.Alias.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.Alias build() {
        com.flyteidl.core.WorkflowProto.Alias result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.Alias buildPartial() {
        com.flyteidl.core.WorkflowProto.Alias result = new com.flyteidl.core.WorkflowProto.Alias(this);
        result.var_ = var_;
        result.alias_ = alias_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private java.lang.Object var_ = "";
      /**
       * <pre>
       * Must match one of the output variable names on a node.
       * </pre>
       *
       * <code>string var = 1 [json_name = "var"];</code>
       * @return The var.
       */
      public java.lang.String getVar() {
        java.lang.Object ref = var_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          var_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Must match one of the output variable names on a node.
       * </pre>
       *
       * <code>string var = 1 [json_name = "var"];</code>
       * @return The bytes for var.
       */
      public com.google.protobuf.ByteString
          getVarBytes() {
        java.lang.Object ref = var_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          var_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Must match one of the output variable names on a node.
       * </pre>
       *
       * <code>string var = 1 [json_name = "var"];</code>
       * @param value The var to set.
       * @return This builder for chaining.
       */
      public Builder setVar(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        var_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Must match one of the output variable names on a node.
       * </pre>
       *
       * <code>string var = 1 [json_name = "var"];</code>
       * @return This builder for chaining.
       */
      public Builder clearVar() {
        
        var_ = getDefaultInstance().getVar();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Must match one of the output variable names on a node.
       * </pre>
       *
       * <code>string var = 1 [json_name = "var"];</code>
       * @param value The bytes for var to set.
       * @return This builder for chaining.
       */
      public Builder setVarBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        var_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object alias_ = "";
      /**
       * <pre>
       * A workflow-level unique alias that downstream nodes can refer to in their input.
       * </pre>
       *
       * <code>string alias = 2 [json_name = "alias"];</code>
       * @return The alias.
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A workflow-level unique alias that downstream nodes can refer to in their input.
       * </pre>
       *
       * <code>string alias = 2 [json_name = "alias"];</code>
       * @return The bytes for alias.
       */
      public com.google.protobuf.ByteString
          getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A workflow-level unique alias that downstream nodes can refer to in their input.
       * </pre>
       *
       * <code>string alias = 2 [json_name = "alias"];</code>
       * @param value The alias to set.
       * @return This builder for chaining.
       */
      public Builder setAlias(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A workflow-level unique alias that downstream nodes can refer to in their input.
       * </pre>
       *
       * <code>string alias = 2 [json_name = "alias"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAlias() {
        
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A workflow-level unique alias that downstream nodes can refer to in their input.
       * </pre>
       *
       * <code>string alias = 2 [json_name = "alias"];</code>
       * @param value The bytes for alias to set.
       * @return This builder for chaining.
       */
      public Builder setAliasBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        alias_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.Alias)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.Alias)
    private static final com.flyteidl.core.WorkflowProto.Alias DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.Alias();
    }

    public static com.flyteidl.core.WorkflowProto.Alias getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Alias>
        PARSER = new com.google.protobuf.AbstractParser<Alias>() {
      @java.lang.Override
      public Alias parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Alias> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Alias> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Alias getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.Node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
     * node ids that cannot be used by other nodes.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
     * node ids that cannot be used by other nodes.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Extra metadata about the node.
     * </pre>
     *
     * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Extra metadata about the node.
     * </pre>
     *
     * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return The metadata.
     */
    com.flyteidl.core.WorkflowProto.NodeMetadata getMetadata();
    /**
     * <pre>
     * Extra metadata about the node.
     * </pre>
     *
     * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
     */
    com.flyteidl.core.WorkflowProto.NodeMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    java.util.List<com.flyteidl.core.LiteralsProto.Binding> 
        getInputsList();
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    com.flyteidl.core.LiteralsProto.Binding getInputs(int index);
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    int getInputsCount();
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
        getInputsOrBuilderList();
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    com.flyteidl.core.LiteralsProto.BindingOrBuilder getInputsOrBuilder(
        int index);

    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @return A list containing the upstreamNodeIds.
     */
    java.util.List<java.lang.String>
        getUpstreamNodeIdsList();
    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @return The count of upstreamNodeIds.
     */
    int getUpstreamNodeIdsCount();
    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @param index The index of the element to return.
     * @return The upstreamNodeIds at the given index.
     */
    java.lang.String getUpstreamNodeIds(int index);
    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the upstreamNodeIds at the given index.
     */
    com.google.protobuf.ByteString
        getUpstreamNodeIdsBytes(int index);

    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    java.util.List<com.flyteidl.core.WorkflowProto.Alias> 
        getOutputAliasesList();
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    com.flyteidl.core.WorkflowProto.Alias getOutputAliases(int index);
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    int getOutputAliasesCount();
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    java.util.List<? extends com.flyteidl.core.WorkflowProto.AliasOrBuilder> 
        getOutputAliasesOrBuilderList();
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    com.flyteidl.core.WorkflowProto.AliasOrBuilder getOutputAliasesOrBuilder(
        int index);

    /**
     * <pre>
     * Information about the Task to execute in this node.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
     * @return Whether the taskNode field is set.
     */
    boolean hasTaskNode();
    /**
     * <pre>
     * Information about the Task to execute in this node.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
     * @return The taskNode.
     */
    com.flyteidl.core.WorkflowProto.TaskNode getTaskNode();
    /**
     * <pre>
     * Information about the Task to execute in this node.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
     */
    com.flyteidl.core.WorkflowProto.TaskNodeOrBuilder getTaskNodeOrBuilder();

    /**
     * <pre>
     * Information about the Workflow to execute in this mode.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
     * @return Whether the workflowNode field is set.
     */
    boolean hasWorkflowNode();
    /**
     * <pre>
     * Information about the Workflow to execute in this mode.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
     * @return The workflowNode.
     */
    com.flyteidl.core.WorkflowProto.WorkflowNode getWorkflowNode();
    /**
     * <pre>
     * Information about the Workflow to execute in this mode.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
     */
    com.flyteidl.core.WorkflowProto.WorkflowNodeOrBuilder getWorkflowNodeOrBuilder();

    /**
     * <pre>
     * Information about the branch node to evaluate in this node.
     * </pre>
     *
     * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
     * @return Whether the branchNode field is set.
     */
    boolean hasBranchNode();
    /**
     * <pre>
     * Information about the branch node to evaluate in this node.
     * </pre>
     *
     * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
     * @return The branchNode.
     */
    com.flyteidl.core.WorkflowProto.BranchNode getBranchNode();
    /**
     * <pre>
     * Information about the branch node to evaluate in this node.
     * </pre>
     *
     * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
     */
    com.flyteidl.core.WorkflowProto.BranchNodeOrBuilder getBranchNodeOrBuilder();

    public com.flyteidl.core.WorkflowProto.Node.TargetCase getTargetCase();
  }
  /**
   * <pre>
   * A Workflow graph Node. One unit of execution in the graph. Each node can be linked to a Task, a Workflow or a branch
   * node.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.Node}
   */
  public static final class Node extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.Node)
      NodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Node() {
      id_ = "";
      inputs_ = java.util.Collections.emptyList();
      upstreamNodeIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      outputAliases_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Node();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Node_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.Node.class, com.flyteidl.core.WorkflowProto.Node.Builder.class);
    }

    private int targetCase_ = 0;
    private java.lang.Object target_;
    public enum TargetCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      TASK_NODE(6),
      WORKFLOW_NODE(7),
      BRANCH_NODE(8),
      TARGET_NOT_SET(0);
      private final int value;
      private TargetCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TargetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TargetCase forNumber(int value) {
        switch (value) {
          case 6: return TASK_NODE;
          case 7: return WORKFLOW_NODE;
          case 8: return BRANCH_NODE;
          case 0: return TARGET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TargetCase
    getTargetCase() {
      return TargetCase.forNumber(
          targetCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
     * node ids that cannot be used by other nodes.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
     * node ids that cannot be used by other nodes.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METADATA_FIELD_NUMBER = 2;
    private com.flyteidl.core.WorkflowProto.NodeMetadata metadata_;
    /**
     * <pre>
     * Extra metadata about the node.
     * </pre>
     *
     * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <pre>
     * Extra metadata about the node.
     * </pre>
     *
     * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return The metadata.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeMetadata getMetadata() {
      return metadata_ == null ? com.flyteidl.core.WorkflowProto.NodeMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Extra metadata about the node.
     * </pre>
     *
     * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int INPUTS_FIELD_NUMBER = 3;
    private java.util.List<com.flyteidl.core.LiteralsProto.Binding> inputs_;
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.LiteralsProto.Binding> getInputsList() {
      return inputs_;
    }
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    @java.lang.Override
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.Binding getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <pre>
     * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
     * must be fulfilled.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.BindingOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }

    public static final int UPSTREAM_NODE_IDS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList upstreamNodeIds_;
    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @return A list containing the upstreamNodeIds.
     */
    public com.google.protobuf.ProtocolStringList
        getUpstreamNodeIdsList() {
      return upstreamNodeIds_;
    }
    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @return The count of upstreamNodeIds.
     */
    public int getUpstreamNodeIdsCount() {
      return upstreamNodeIds_.size();
    }
    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @param index The index of the element to return.
     * @return The upstreamNodeIds at the given index.
     */
    public java.lang.String getUpstreamNodeIds(int index) {
      return upstreamNodeIds_.get(index);
    }
    /**
     * <pre>
     *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
     * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
     * field.
     * </pre>
     *
     * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the upstreamNodeIds at the given index.
     */
    public com.google.protobuf.ByteString
        getUpstreamNodeIdsBytes(int index) {
      return upstreamNodeIds_.getByteString(index);
    }

    public static final int OUTPUT_ALIASES_FIELD_NUMBER = 5;
    private java.util.List<com.flyteidl.core.WorkflowProto.Alias> outputAliases_;
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.WorkflowProto.Alias> getOutputAliasesList() {
      return outputAliases_;
    }
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.WorkflowProto.AliasOrBuilder> 
        getOutputAliasesOrBuilderList() {
      return outputAliases_;
    }
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    @java.lang.Override
    public int getOutputAliasesCount() {
      return outputAliases_.size();
    }
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Alias getOutputAliases(int index) {
      return outputAliases_.get(index);
    }
    /**
     * <pre>
     *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
     * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
     * nodes outputs using the alias if one's specified.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.AliasOrBuilder getOutputAliasesOrBuilder(
        int index) {
      return outputAliases_.get(index);
    }

    public static final int TASK_NODE_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Information about the Task to execute in this node.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
     * @return Whether the taskNode field is set.
     */
    @java.lang.Override
    public boolean hasTaskNode() {
      return targetCase_ == 6;
    }
    /**
     * <pre>
     * Information about the Task to execute in this node.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
     * @return The taskNode.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.TaskNode getTaskNode() {
      if (targetCase_ == 6) {
         return (com.flyteidl.core.WorkflowProto.TaskNode) target_;
      }
      return com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance();
    }
    /**
     * <pre>
     * Information about the Task to execute in this node.
     * </pre>
     *
     * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.TaskNodeOrBuilder getTaskNodeOrBuilder() {
      if (targetCase_ == 6) {
         return (com.flyteidl.core.WorkflowProto.TaskNode) target_;
      }
      return com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance();
    }

    public static final int WORKFLOW_NODE_FIELD_NUMBER = 7;
    /**
     * <pre>
     * Information about the Workflow to execute in this mode.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
     * @return Whether the workflowNode field is set.
     */
    @java.lang.Override
    public boolean hasWorkflowNode() {
      return targetCase_ == 7;
    }
    /**
     * <pre>
     * Information about the Workflow to execute in this mode.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
     * @return The workflowNode.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowNode getWorkflowNode() {
      if (targetCase_ == 7) {
         return (com.flyteidl.core.WorkflowProto.WorkflowNode) target_;
      }
      return com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance();
    }
    /**
     * <pre>
     * Information about the Workflow to execute in this mode.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowNodeOrBuilder getWorkflowNodeOrBuilder() {
      if (targetCase_ == 7) {
         return (com.flyteidl.core.WorkflowProto.WorkflowNode) target_;
      }
      return com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance();
    }

    public static final int BRANCH_NODE_FIELD_NUMBER = 8;
    /**
     * <pre>
     * Information about the branch node to evaluate in this node.
     * </pre>
     *
     * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
     * @return Whether the branchNode field is set.
     */
    @java.lang.Override
    public boolean hasBranchNode() {
      return targetCase_ == 8;
    }
    /**
     * <pre>
     * Information about the branch node to evaluate in this node.
     * </pre>
     *
     * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
     * @return The branchNode.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.BranchNode getBranchNode() {
      if (targetCase_ == 8) {
         return (com.flyteidl.core.WorkflowProto.BranchNode) target_;
      }
      return com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance();
    }
    /**
     * <pre>
     * Information about the branch node to evaluate in this node.
     * </pre>
     *
     * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.BranchNodeOrBuilder getBranchNodeOrBuilder() {
      if (targetCase_ == 8) {
         return (com.flyteidl.core.WorkflowProto.BranchNode) target_;
      }
      return com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance();
    }

    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.Node prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Workflow graph Node. One unit of execution in the graph. Each node can be linked to a Task, a Workflow or a branch
     * node.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.Node)
        com.flyteidl.core.WorkflowProto.NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Node_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.Node.class, com.flyteidl.core.WorkflowProto.Node.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInputsFieldBuilder();
          getOutputAliasesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          inputsBuilder_.clear();
        }
        upstreamNodeIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (outputAliasesBuilder_ == null) {
          outputAliases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          outputAliasesBuilder_.clear();
        }
        targetCase_ = 0;
        target_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_Node_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.Node getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.Node.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.Node build() {
        com.flyteidl.core.WorkflowProto.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.Node buildPartial() {
        com.flyteidl.core.WorkflowProto.Node result = new com.flyteidl.core.WorkflowProto.Node(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (inputsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            inputs_ = java.util.Collections.unmodifiableList(inputs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.inputs_ = inputs_;
        } else {
          result.inputs_ = inputsBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          upstreamNodeIds_ = upstreamNodeIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.upstreamNodeIds_ = upstreamNodeIds_;
        if (outputAliasesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            outputAliases_ = java.util.Collections.unmodifiableList(outputAliases_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.outputAliases_ = outputAliases_;
        } else {
          result.outputAliases_ = outputAliasesBuilder_.build();
        }
        if (targetCase_ == 6) {
          if (taskNodeBuilder_ == null) {
            result.target_ = target_;
          } else {
            result.target_ = taskNodeBuilder_.build();
          }
        }
        if (targetCase_ == 7) {
          if (workflowNodeBuilder_ == null) {
            result.target_ = target_;
          } else {
            result.target_ = workflowNodeBuilder_.build();
          }
        }
        if (targetCase_ == 8) {
          if (branchNodeBuilder_ == null) {
            result.target_ = target_;
          } else {
            result.target_ = branchNodeBuilder_.build();
          }
        }
        result.targetCase_ = targetCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int targetCase_ = 0;
      private java.lang.Object target_;
      public TargetCase
          getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public Builder clearTarget() {
        targetCase_ = 0;
        target_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
       * node ids that cannot be used by other nodes.
       * </pre>
       *
       * <code>string id = 1 [json_name = "id"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
       * node ids that cannot be used by other nodes.
       * </pre>
       *
       * <code>string id = 1 [json_name = "id"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
       * node ids that cannot be used by other nodes.
       * </pre>
       *
       * <code>string id = 1 [json_name = "id"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
       * node ids that cannot be used by other nodes.
       * </pre>
       *
       * <code>string id = 1 [json_name = "id"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A workflow-level unique identifier that identifies this node in the workflow. "inputs" and "outputs" are reserved
       * node ids that cannot be used by other nodes.
       * </pre>
       *
       * <code>string id = 1 [json_name = "id"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.flyteidl.core.WorkflowProto.NodeMetadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.NodeMetadata, com.flyteidl.core.WorkflowProto.NodeMetadata.Builder, com.flyteidl.core.WorkflowProto.NodeMetadataOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       * @return The metadata.
       */
      public com.flyteidl.core.WorkflowProto.NodeMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? com.flyteidl.core.WorkflowProto.NodeMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder setMetadata(com.flyteidl.core.WorkflowProto.NodeMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder setMetadata(
          com.flyteidl.core.WorkflowProto.NodeMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder mergeMetadata(com.flyteidl.core.WorkflowProto.NodeMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              com.flyteidl.core.WorkflowProto.NodeMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public com.flyteidl.core.WorkflowProto.NodeMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public com.flyteidl.core.WorkflowProto.NodeMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              com.flyteidl.core.WorkflowProto.NodeMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Extra metadata about the node.
       * </pre>
       *
       * <code>.flyteidl.core.NodeMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.NodeMetadata, com.flyteidl.core.WorkflowProto.NodeMetadata.Builder, com.flyteidl.core.WorkflowProto.NodeMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.NodeMetadata, com.flyteidl.core.WorkflowProto.NodeMetadata.Builder, com.flyteidl.core.WorkflowProto.NodeMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.util.List<com.flyteidl.core.LiteralsProto.Binding> inputs_ =
        java.util.Collections.emptyList();
      private void ensureInputsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          inputs_ = new java.util.ArrayList<com.flyteidl.core.LiteralsProto.Binding>(inputs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder> inputsBuilder_;

      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public java.util.List<com.flyteidl.core.LiteralsProto.Binding> getInputsList() {
        if (inputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputs_);
        } else {
          return inputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public int getInputsCount() {
        if (inputsBuilder_ == null) {
          return inputs_.size();
        } else {
          return inputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding getInputs(int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);
        } else {
          return inputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder setInputs(
          int index, com.flyteidl.core.LiteralsProto.Binding value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.set(index, value);
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder setInputs(
          int index, com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder addInputs(com.flyteidl.core.LiteralsProto.Binding value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder addInputs(
          int index, com.flyteidl.core.LiteralsProto.Binding value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(index, value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder addInputs(
          com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder addInputs(
          int index, com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends com.flyteidl.core.LiteralsProto.Binding> values) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputs_);
          onChanged();
        } else {
          inputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder clearInputs() {
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          inputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public Builder removeInputs(int index) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.remove(index);
          onChanged();
        } else {
          inputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder getInputsBuilder(
          int index) {
        return getInputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.BindingOrBuilder getInputsOrBuilder(
          int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);  } else {
          return inputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
           getInputsOrBuilderList() {
        if (inputsBuilder_ != null) {
          return inputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputs_);
        }
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder addInputsBuilder() {
        return getInputsFieldBuilder().addBuilder(
            com.flyteidl.core.LiteralsProto.Binding.getDefaultInstance());
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder addInputsBuilder(
          int index) {
        return getInputsFieldBuilder().addBuilder(
            index, com.flyteidl.core.LiteralsProto.Binding.getDefaultInstance());
      }
      /**
       * <pre>
       * Specifies how to bind the underlying interface's inputs. All required inputs specified in the underlying interface
       * must be fulfilled.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding inputs = 3 [json_name = "inputs"];</code>
       */
      public java.util.List<com.flyteidl.core.LiteralsProto.Binding.Builder> 
           getInputsBuilderList() {
        return getInputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
          getInputsFieldBuilder() {
        if (inputsBuilder_ == null) {
          inputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder>(
                  inputs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          inputs_ = null;
        }
        return inputsBuilder_;
      }

      private com.google.protobuf.LazyStringList upstreamNodeIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUpstreamNodeIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          upstreamNodeIds_ = new com.google.protobuf.LazyStringArrayList(upstreamNodeIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @return A list containing the upstreamNodeIds.
       */
      public com.google.protobuf.ProtocolStringList
          getUpstreamNodeIdsList() {
        return upstreamNodeIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @return The count of upstreamNodeIds.
       */
      public int getUpstreamNodeIdsCount() {
        return upstreamNodeIds_.size();
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @param index The index of the element to return.
       * @return The upstreamNodeIds at the given index.
       */
      public java.lang.String getUpstreamNodeIds(int index) {
        return upstreamNodeIds_.get(index);
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the upstreamNodeIds at the given index.
       */
      public com.google.protobuf.ByteString
          getUpstreamNodeIdsBytes(int index) {
        return upstreamNodeIds_.getByteString(index);
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @param index The index to set the value at.
       * @param value The upstreamNodeIds to set.
       * @return This builder for chaining.
       */
      public Builder setUpstreamNodeIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUpstreamNodeIdsIsMutable();
        upstreamNodeIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @param value The upstreamNodeIds to add.
       * @return This builder for chaining.
       */
      public Builder addUpstreamNodeIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUpstreamNodeIdsIsMutable();
        upstreamNodeIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @param values The upstreamNodeIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllUpstreamNodeIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureUpstreamNodeIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, upstreamNodeIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @return This builder for chaining.
       */
      public Builder clearUpstreamNodeIds() {
        upstreamNodeIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *+optional Specifies execution dependency for this node ensuring it will only get scheduled to run after all its
       * upstream nodes have completed. This node will have an implicit dependency on any node that appears in inputs
       * field.
       * </pre>
       *
       * <code>repeated string upstream_node_ids = 4 [json_name = "upstreamNodeIds"];</code>
       * @param value The bytes of the upstreamNodeIds to add.
       * @return This builder for chaining.
       */
      public Builder addUpstreamNodeIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureUpstreamNodeIdsIsMutable();
        upstreamNodeIds_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.flyteidl.core.WorkflowProto.Alias> outputAliases_ =
        java.util.Collections.emptyList();
      private void ensureOutputAliasesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          outputAliases_ = new java.util.ArrayList<com.flyteidl.core.WorkflowProto.Alias>(outputAliases_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Alias, com.flyteidl.core.WorkflowProto.Alias.Builder, com.flyteidl.core.WorkflowProto.AliasOrBuilder> outputAliasesBuilder_;

      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.Alias> getOutputAliasesList() {
        if (outputAliasesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputAliases_);
        } else {
          return outputAliasesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public int getOutputAliasesCount() {
        if (outputAliasesBuilder_ == null) {
          return outputAliases_.size();
        } else {
          return outputAliasesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Alias getOutputAliases(int index) {
        if (outputAliasesBuilder_ == null) {
          return outputAliases_.get(index);
        } else {
          return outputAliasesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder setOutputAliases(
          int index, com.flyteidl.core.WorkflowProto.Alias value) {
        if (outputAliasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputAliasesIsMutable();
          outputAliases_.set(index, value);
          onChanged();
        } else {
          outputAliasesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder setOutputAliases(
          int index, com.flyteidl.core.WorkflowProto.Alias.Builder builderForValue) {
        if (outputAliasesBuilder_ == null) {
          ensureOutputAliasesIsMutable();
          outputAliases_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputAliasesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder addOutputAliases(com.flyteidl.core.WorkflowProto.Alias value) {
        if (outputAliasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputAliasesIsMutable();
          outputAliases_.add(value);
          onChanged();
        } else {
          outputAliasesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder addOutputAliases(
          int index, com.flyteidl.core.WorkflowProto.Alias value) {
        if (outputAliasesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputAliasesIsMutable();
          outputAliases_.add(index, value);
          onChanged();
        } else {
          outputAliasesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder addOutputAliases(
          com.flyteidl.core.WorkflowProto.Alias.Builder builderForValue) {
        if (outputAliasesBuilder_ == null) {
          ensureOutputAliasesIsMutable();
          outputAliases_.add(builderForValue.build());
          onChanged();
        } else {
          outputAliasesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder addOutputAliases(
          int index, com.flyteidl.core.WorkflowProto.Alias.Builder builderForValue) {
        if (outputAliasesBuilder_ == null) {
          ensureOutputAliasesIsMutable();
          outputAliases_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputAliasesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder addAllOutputAliases(
          java.lang.Iterable<? extends com.flyteidl.core.WorkflowProto.Alias> values) {
        if (outputAliasesBuilder_ == null) {
          ensureOutputAliasesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputAliases_);
          onChanged();
        } else {
          outputAliasesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder clearOutputAliases() {
        if (outputAliasesBuilder_ == null) {
          outputAliases_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          outputAliasesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public Builder removeOutputAliases(int index) {
        if (outputAliasesBuilder_ == null) {
          ensureOutputAliasesIsMutable();
          outputAliases_.remove(index);
          onChanged();
        } else {
          outputAliasesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Alias.Builder getOutputAliasesBuilder(
          int index) {
        return getOutputAliasesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public com.flyteidl.core.WorkflowProto.AliasOrBuilder getOutputAliasesOrBuilder(
          int index) {
        if (outputAliasesBuilder_ == null) {
          return outputAliases_.get(index);  } else {
          return outputAliasesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.WorkflowProto.AliasOrBuilder> 
           getOutputAliasesOrBuilderList() {
        if (outputAliasesBuilder_ != null) {
          return outputAliasesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputAliases_);
        }
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Alias.Builder addOutputAliasesBuilder() {
        return getOutputAliasesFieldBuilder().addBuilder(
            com.flyteidl.core.WorkflowProto.Alias.getDefaultInstance());
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Alias.Builder addOutputAliasesBuilder(
          int index) {
        return getOutputAliasesFieldBuilder().addBuilder(
            index, com.flyteidl.core.WorkflowProto.Alias.getDefaultInstance());
      }
      /**
       * <pre>
       *+optional. A node can define aliases for a subset of its outputs. This is particularly useful if different nodes
       * need to conform to the same interface (e.g. all branches in a branch node). Downstream nodes must refer to this
       * nodes outputs using the alias if one's specified.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Alias output_aliases = 5 [json_name = "outputAliases"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.Alias.Builder> 
           getOutputAliasesBuilderList() {
        return getOutputAliasesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Alias, com.flyteidl.core.WorkflowProto.Alias.Builder, com.flyteidl.core.WorkflowProto.AliasOrBuilder> 
          getOutputAliasesFieldBuilder() {
        if (outputAliasesBuilder_ == null) {
          outputAliasesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.Alias, com.flyteidl.core.WorkflowProto.Alias.Builder, com.flyteidl.core.WorkflowProto.AliasOrBuilder>(
                  outputAliases_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          outputAliases_ = null;
        }
        return outputAliasesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.TaskNode, com.flyteidl.core.WorkflowProto.TaskNode.Builder, com.flyteidl.core.WorkflowProto.TaskNodeOrBuilder> taskNodeBuilder_;
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       * @return Whether the taskNode field is set.
       */
      @java.lang.Override
      public boolean hasTaskNode() {
        return targetCase_ == 6;
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       * @return The taskNode.
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNode getTaskNode() {
        if (taskNodeBuilder_ == null) {
          if (targetCase_ == 6) {
            return (com.flyteidl.core.WorkflowProto.TaskNode) target_;
          }
          return com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance();
        } else {
          if (targetCase_ == 6) {
            return taskNodeBuilder_.getMessage();
          }
          return com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       */
      public Builder setTaskNode(com.flyteidl.core.WorkflowProto.TaskNode value) {
        if (taskNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          taskNodeBuilder_.setMessage(value);
        }
        targetCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       */
      public Builder setTaskNode(
          com.flyteidl.core.WorkflowProto.TaskNode.Builder builderForValue) {
        if (taskNodeBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          taskNodeBuilder_.setMessage(builderForValue.build());
        }
        targetCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       */
      public Builder mergeTaskNode(com.flyteidl.core.WorkflowProto.TaskNode value) {
        if (taskNodeBuilder_ == null) {
          if (targetCase_ == 6 &&
              target_ != com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance()) {
            target_ = com.flyteidl.core.WorkflowProto.TaskNode.newBuilder((com.flyteidl.core.WorkflowProto.TaskNode) target_)
                .mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          if (targetCase_ == 6) {
            taskNodeBuilder_.mergeFrom(value);
          }
          taskNodeBuilder_.setMessage(value);
        }
        targetCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       */
      public Builder clearTaskNode() {
        if (taskNodeBuilder_ == null) {
          if (targetCase_ == 6) {
            targetCase_ = 0;
            target_ = null;
            onChanged();
          }
        } else {
          if (targetCase_ == 6) {
            targetCase_ = 0;
            target_ = null;
          }
          taskNodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.TaskNode.Builder getTaskNodeBuilder() {
        return getTaskNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNodeOrBuilder getTaskNodeOrBuilder() {
        if ((targetCase_ == 6) && (taskNodeBuilder_ != null)) {
          return taskNodeBuilder_.getMessageOrBuilder();
        } else {
          if (targetCase_ == 6) {
            return (com.flyteidl.core.WorkflowProto.TaskNode) target_;
          }
          return com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the Task to execute in this node.
       * </pre>
       *
       * <code>.flyteidl.core.TaskNode task_node = 6 [json_name = "taskNode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.TaskNode, com.flyteidl.core.WorkflowProto.TaskNode.Builder, com.flyteidl.core.WorkflowProto.TaskNodeOrBuilder> 
          getTaskNodeFieldBuilder() {
        if (taskNodeBuilder_ == null) {
          if (!(targetCase_ == 6)) {
            target_ = com.flyteidl.core.WorkflowProto.TaskNode.getDefaultInstance();
          }
          taskNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.TaskNode, com.flyteidl.core.WorkflowProto.TaskNode.Builder, com.flyteidl.core.WorkflowProto.TaskNodeOrBuilder>(
                  (com.flyteidl.core.WorkflowProto.TaskNode) target_,
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        targetCase_ = 6;
        onChanged();;
        return taskNodeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowNode, com.flyteidl.core.WorkflowProto.WorkflowNode.Builder, com.flyteidl.core.WorkflowProto.WorkflowNodeOrBuilder> workflowNodeBuilder_;
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       * @return Whether the workflowNode field is set.
       */
      @java.lang.Override
      public boolean hasWorkflowNode() {
        return targetCase_ == 7;
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       * @return The workflowNode.
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowNode getWorkflowNode() {
        if (workflowNodeBuilder_ == null) {
          if (targetCase_ == 7) {
            return (com.flyteidl.core.WorkflowProto.WorkflowNode) target_;
          }
          return com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance();
        } else {
          if (targetCase_ == 7) {
            return workflowNodeBuilder_.getMessage();
          }
          return com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       */
      public Builder setWorkflowNode(com.flyteidl.core.WorkflowProto.WorkflowNode value) {
        if (workflowNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          workflowNodeBuilder_.setMessage(value);
        }
        targetCase_ = 7;
        return this;
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       */
      public Builder setWorkflowNode(
          com.flyteidl.core.WorkflowProto.WorkflowNode.Builder builderForValue) {
        if (workflowNodeBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          workflowNodeBuilder_.setMessage(builderForValue.build());
        }
        targetCase_ = 7;
        return this;
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       */
      public Builder mergeWorkflowNode(com.flyteidl.core.WorkflowProto.WorkflowNode value) {
        if (workflowNodeBuilder_ == null) {
          if (targetCase_ == 7 &&
              target_ != com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance()) {
            target_ = com.flyteidl.core.WorkflowProto.WorkflowNode.newBuilder((com.flyteidl.core.WorkflowProto.WorkflowNode) target_)
                .mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          if (targetCase_ == 7) {
            workflowNodeBuilder_.mergeFrom(value);
          }
          workflowNodeBuilder_.setMessage(value);
        }
        targetCase_ = 7;
        return this;
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       */
      public Builder clearWorkflowNode() {
        if (workflowNodeBuilder_ == null) {
          if (targetCase_ == 7) {
            targetCase_ = 0;
            target_ = null;
            onChanged();
          }
        } else {
          if (targetCase_ == 7) {
            targetCase_ = 0;
            target_ = null;
          }
          workflowNodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowNode.Builder getWorkflowNodeBuilder() {
        return getWorkflowNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowNodeOrBuilder getWorkflowNodeOrBuilder() {
        if ((targetCase_ == 7) && (workflowNodeBuilder_ != null)) {
          return workflowNodeBuilder_.getMessageOrBuilder();
        } else {
          if (targetCase_ == 7) {
            return (com.flyteidl.core.WorkflowProto.WorkflowNode) target_;
          }
          return com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the Workflow to execute in this mode.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowNode workflow_node = 7 [json_name = "workflowNode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowNode, com.flyteidl.core.WorkflowProto.WorkflowNode.Builder, com.flyteidl.core.WorkflowProto.WorkflowNodeOrBuilder> 
          getWorkflowNodeFieldBuilder() {
        if (workflowNodeBuilder_ == null) {
          if (!(targetCase_ == 7)) {
            target_ = com.flyteidl.core.WorkflowProto.WorkflowNode.getDefaultInstance();
          }
          workflowNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.WorkflowNode, com.flyteidl.core.WorkflowProto.WorkflowNode.Builder, com.flyteidl.core.WorkflowProto.WorkflowNodeOrBuilder>(
                  (com.flyteidl.core.WorkflowProto.WorkflowNode) target_,
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        targetCase_ = 7;
        onChanged();;
        return workflowNodeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.BranchNode, com.flyteidl.core.WorkflowProto.BranchNode.Builder, com.flyteidl.core.WorkflowProto.BranchNodeOrBuilder> branchNodeBuilder_;
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       * @return Whether the branchNode field is set.
       */
      @java.lang.Override
      public boolean hasBranchNode() {
        return targetCase_ == 8;
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       * @return The branchNode.
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.BranchNode getBranchNode() {
        if (branchNodeBuilder_ == null) {
          if (targetCase_ == 8) {
            return (com.flyteidl.core.WorkflowProto.BranchNode) target_;
          }
          return com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance();
        } else {
          if (targetCase_ == 8) {
            return branchNodeBuilder_.getMessage();
          }
          return com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       */
      public Builder setBranchNode(com.flyteidl.core.WorkflowProto.BranchNode value) {
        if (branchNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          target_ = value;
          onChanged();
        } else {
          branchNodeBuilder_.setMessage(value);
        }
        targetCase_ = 8;
        return this;
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       */
      public Builder setBranchNode(
          com.flyteidl.core.WorkflowProto.BranchNode.Builder builderForValue) {
        if (branchNodeBuilder_ == null) {
          target_ = builderForValue.build();
          onChanged();
        } else {
          branchNodeBuilder_.setMessage(builderForValue.build());
        }
        targetCase_ = 8;
        return this;
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       */
      public Builder mergeBranchNode(com.flyteidl.core.WorkflowProto.BranchNode value) {
        if (branchNodeBuilder_ == null) {
          if (targetCase_ == 8 &&
              target_ != com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance()) {
            target_ = com.flyteidl.core.WorkflowProto.BranchNode.newBuilder((com.flyteidl.core.WorkflowProto.BranchNode) target_)
                .mergeFrom(value).buildPartial();
          } else {
            target_ = value;
          }
          onChanged();
        } else {
          if (targetCase_ == 8) {
            branchNodeBuilder_.mergeFrom(value);
          }
          branchNodeBuilder_.setMessage(value);
        }
        targetCase_ = 8;
        return this;
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       */
      public Builder clearBranchNode() {
        if (branchNodeBuilder_ == null) {
          if (targetCase_ == 8) {
            targetCase_ = 0;
            target_ = null;
            onChanged();
          }
        } else {
          if (targetCase_ == 8) {
            targetCase_ = 0;
            target_ = null;
          }
          branchNodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.BranchNode.Builder getBranchNodeBuilder() {
        return getBranchNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.BranchNodeOrBuilder getBranchNodeOrBuilder() {
        if ((targetCase_ == 8) && (branchNodeBuilder_ != null)) {
          return branchNodeBuilder_.getMessageOrBuilder();
        } else {
          if (targetCase_ == 8) {
            return (com.flyteidl.core.WorkflowProto.BranchNode) target_;
          }
          return com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Information about the branch node to evaluate in this node.
       * </pre>
       *
       * <code>.flyteidl.core.BranchNode branch_node = 8 [json_name = "branchNode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.BranchNode, com.flyteidl.core.WorkflowProto.BranchNode.Builder, com.flyteidl.core.WorkflowProto.BranchNodeOrBuilder> 
          getBranchNodeFieldBuilder() {
        if (branchNodeBuilder_ == null) {
          if (!(targetCase_ == 8)) {
            target_ = com.flyteidl.core.WorkflowProto.BranchNode.getDefaultInstance();
          }
          branchNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.BranchNode, com.flyteidl.core.WorkflowProto.BranchNode.Builder, com.flyteidl.core.WorkflowProto.BranchNodeOrBuilder>(
                  (com.flyteidl.core.WorkflowProto.BranchNode) target_,
                  getParentForChildren(),
                  isClean());
          target_ = null;
        }
        targetCase_ = 8;
        onChanged();;
        return branchNodeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.Node)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.Node)
    private static final com.flyteidl.core.WorkflowProto.Node DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.Node();
    }

    public static com.flyteidl.core.WorkflowProto.Node getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Node>
        PARSER = new com.google.protobuf.AbstractParser<Node>() {
      @java.lang.Override
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Node> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Node getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkflowMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.WorkflowMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Indicates the runtime priority of workflow executions. 
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
     * @return Whether the qualityOfService field is set.
     */
    boolean hasQualityOfService();
    /**
     * <pre>
     * Indicates the runtime priority of workflow executions. 
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
     * @return The qualityOfService.
     */
    com.flyteidl.core.ExecutionProto.QualityOfService getQualityOfService();
    /**
     * <pre>
     * Indicates the runtime priority of workflow executions. 
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
     */
    com.flyteidl.core.ExecutionProto.QualityOfServiceOrBuilder getQualityOfServiceOrBuilder();

    /**
     * <pre>
     * Defines how the system should behave when a failure is detected in the workflow execution.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
     * @return The enum numeric value on the wire for onFailure.
     */
    int getOnFailureValue();
    /**
     * <pre>
     * Defines how the system should behave when a failure is detected in the workflow execution.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
     * @return The onFailure.
     */
    com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy getOnFailure();
  }
  /**
   * <pre>
   * This is workflow layer metadata. These settings are only applicable to the workflow as a whole, and do not
   * percolate down to child entities (like tasks) launched by the workflow.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.WorkflowMetadata}
   */
  public static final class WorkflowMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.WorkflowMetadata)
      WorkflowMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkflowMetadata.newBuilder() to construct.
    private WorkflowMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkflowMetadata() {
      onFailure_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkflowMetadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.WorkflowMetadata.class, com.flyteidl.core.WorkflowProto.WorkflowMetadata.Builder.class);
    }

    /**
     * <pre>
     * Failure Handling Strategy
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.WorkflowMetadata.OnFailurePolicy}
     */
    public enum OnFailurePolicy
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * FAIL_IMMEDIATELY instructs the system to fail as soon as a node fails in the workflow. It'll automatically
       * abort all currently running nodes and clean up resources before finally marking the workflow executions as
       * failed.
       * </pre>
       *
       * <code>FAIL_IMMEDIATELY = 0;</code>
       */
      FAIL_IMMEDIATELY(0),
      /**
       * <pre>
       * FAIL_AFTER_EXECUTABLE_NODES_COMPLETE instructs the system to make as much progress as it can. The system will
       * not alter the dependencies of the execution graph so any node that depend on the failed node will not be run.
       * Other nodes that will be executed to completion before cleaning up resources and marking the workflow
       * execution as failed.
       * </pre>
       *
       * <code>FAIL_AFTER_EXECUTABLE_NODES_COMPLETE = 1;</code>
       */
      FAIL_AFTER_EXECUTABLE_NODES_COMPLETE(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * FAIL_IMMEDIATELY instructs the system to fail as soon as a node fails in the workflow. It'll automatically
       * abort all currently running nodes and clean up resources before finally marking the workflow executions as
       * failed.
       * </pre>
       *
       * <code>FAIL_IMMEDIATELY = 0;</code>
       */
      public static final int FAIL_IMMEDIATELY_VALUE = 0;
      /**
       * <pre>
       * FAIL_AFTER_EXECUTABLE_NODES_COMPLETE instructs the system to make as much progress as it can. The system will
       * not alter the dependencies of the execution graph so any node that depend on the failed node will not be run.
       * Other nodes that will be executed to completion before cleaning up resources and marking the workflow
       * execution as failed.
       * </pre>
       *
       * <code>FAIL_AFTER_EXECUTABLE_NODES_COMPLETE = 1;</code>
       */
      public static final int FAIL_AFTER_EXECUTABLE_NODES_COMPLETE_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OnFailurePolicy valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static OnFailurePolicy forNumber(int value) {
        switch (value) {
          case 0: return FAIL_IMMEDIATELY;
          case 1: return FAIL_AFTER_EXECUTABLE_NODES_COMPLETE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OnFailurePolicy>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          OnFailurePolicy> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OnFailurePolicy>() {
              public OnFailurePolicy findValueByNumber(int number) {
                return OnFailurePolicy.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.WorkflowMetadata.getDescriptor().getEnumTypes().get(0);
      }

      private static final OnFailurePolicy[] VALUES = values();

      public static OnFailurePolicy valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private OnFailurePolicy(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.WorkflowMetadata.OnFailurePolicy)
    }

    public static final int QUALITY_OF_SERVICE_FIELD_NUMBER = 1;
    private com.flyteidl.core.ExecutionProto.QualityOfService qualityOfService_;
    /**
     * <pre>
     * Indicates the runtime priority of workflow executions. 
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
     * @return Whether the qualityOfService field is set.
     */
    @java.lang.Override
    public boolean hasQualityOfService() {
      return qualityOfService_ != null;
    }
    /**
     * <pre>
     * Indicates the runtime priority of workflow executions. 
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
     * @return The qualityOfService.
     */
    @java.lang.Override
    public com.flyteidl.core.ExecutionProto.QualityOfService getQualityOfService() {
      return qualityOfService_ == null ? com.flyteidl.core.ExecutionProto.QualityOfService.getDefaultInstance() : qualityOfService_;
    }
    /**
     * <pre>
     * Indicates the runtime priority of workflow executions. 
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.ExecutionProto.QualityOfServiceOrBuilder getQualityOfServiceOrBuilder() {
      return getQualityOfService();
    }

    public static final int ON_FAILURE_FIELD_NUMBER = 2;
    private int onFailure_;
    /**
     * <pre>
     * Defines how the system should behave when a failure is detected in the workflow execution.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
     * @return The enum numeric value on the wire for onFailure.
     */
    @java.lang.Override public int getOnFailureValue() {
      return onFailure_;
    }
    /**
     * <pre>
     * Defines how the system should behave when a failure is detected in the workflow execution.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
     * @return The onFailure.
     */
    @java.lang.Override public com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy getOnFailure() {
      @SuppressWarnings("deprecation")
      com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy result = com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy.valueOf(onFailure_);
      return result == null ? com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy.UNRECOGNIZED : result;
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.WorkflowMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This is workflow layer metadata. These settings are only applicable to the workflow as a whole, and do not
     * percolate down to child entities (like tasks) launched by the workflow.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.WorkflowMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.WorkflowMetadata)
        com.flyteidl.core.WorkflowProto.WorkflowMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.WorkflowMetadata.class, com.flyteidl.core.WorkflowProto.WorkflowMetadata.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.WorkflowMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (qualityOfServiceBuilder_ == null) {
          qualityOfService_ = null;
        } else {
          qualityOfService_ = null;
          qualityOfServiceBuilder_ = null;
        }
        onFailure_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadata_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowMetadata getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.WorkflowMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowMetadata build() {
        com.flyteidl.core.WorkflowProto.WorkflowMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowMetadata buildPartial() {
        com.flyteidl.core.WorkflowProto.WorkflowMetadata result = new com.flyteidl.core.WorkflowProto.WorkflowMetadata(this);
        if (qualityOfServiceBuilder_ == null) {
          result.qualityOfService_ = qualityOfService_;
        } else {
          result.qualityOfService_ = qualityOfServiceBuilder_.build();
        }
        result.onFailure_ = onFailure_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private com.flyteidl.core.ExecutionProto.QualityOfService qualityOfService_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.ExecutionProto.QualityOfService, com.flyteidl.core.ExecutionProto.QualityOfService.Builder, com.flyteidl.core.ExecutionProto.QualityOfServiceOrBuilder> qualityOfServiceBuilder_;
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       * @return Whether the qualityOfService field is set.
       */
      public boolean hasQualityOfService() {
        return qualityOfServiceBuilder_ != null || qualityOfService_ != null;
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       * @return The qualityOfService.
       */
      public com.flyteidl.core.ExecutionProto.QualityOfService getQualityOfService() {
        if (qualityOfServiceBuilder_ == null) {
          return qualityOfService_ == null ? com.flyteidl.core.ExecutionProto.QualityOfService.getDefaultInstance() : qualityOfService_;
        } else {
          return qualityOfServiceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       */
      public Builder setQualityOfService(com.flyteidl.core.ExecutionProto.QualityOfService value) {
        if (qualityOfServiceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          qualityOfService_ = value;
          onChanged();
        } else {
          qualityOfServiceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       */
      public Builder setQualityOfService(
          com.flyteidl.core.ExecutionProto.QualityOfService.Builder builderForValue) {
        if (qualityOfServiceBuilder_ == null) {
          qualityOfService_ = builderForValue.build();
          onChanged();
        } else {
          qualityOfServiceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       */
      public Builder mergeQualityOfService(com.flyteidl.core.ExecutionProto.QualityOfService value) {
        if (qualityOfServiceBuilder_ == null) {
          if (qualityOfService_ != null) {
            qualityOfService_ =
              com.flyteidl.core.ExecutionProto.QualityOfService.newBuilder(qualityOfService_).mergeFrom(value).buildPartial();
          } else {
            qualityOfService_ = value;
          }
          onChanged();
        } else {
          qualityOfServiceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       */
      public Builder clearQualityOfService() {
        if (qualityOfServiceBuilder_ == null) {
          qualityOfService_ = null;
          onChanged();
        } else {
          qualityOfService_ = null;
          qualityOfServiceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       */
      public com.flyteidl.core.ExecutionProto.QualityOfService.Builder getQualityOfServiceBuilder() {
        
        onChanged();
        return getQualityOfServiceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       */
      public com.flyteidl.core.ExecutionProto.QualityOfServiceOrBuilder getQualityOfServiceOrBuilder() {
        if (qualityOfServiceBuilder_ != null) {
          return qualityOfServiceBuilder_.getMessageOrBuilder();
        } else {
          return qualityOfService_ == null ?
              com.flyteidl.core.ExecutionProto.QualityOfService.getDefaultInstance() : qualityOfService_;
        }
      }
      /**
       * <pre>
       * Indicates the runtime priority of workflow executions. 
       * </pre>
       *
       * <code>.flyteidl.core.QualityOfService quality_of_service = 1 [json_name = "qualityOfService"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.ExecutionProto.QualityOfService, com.flyteidl.core.ExecutionProto.QualityOfService.Builder, com.flyteidl.core.ExecutionProto.QualityOfServiceOrBuilder> 
          getQualityOfServiceFieldBuilder() {
        if (qualityOfServiceBuilder_ == null) {
          qualityOfServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.ExecutionProto.QualityOfService, com.flyteidl.core.ExecutionProto.QualityOfService.Builder, com.flyteidl.core.ExecutionProto.QualityOfServiceOrBuilder>(
                  getQualityOfService(),
                  getParentForChildren(),
                  isClean());
          qualityOfService_ = null;
        }
        return qualityOfServiceBuilder_;
      }

      private int onFailure_ = 0;
      /**
       * <pre>
       * Defines how the system should behave when a failure is detected in the workflow execution.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
       * @return The enum numeric value on the wire for onFailure.
       */
      @java.lang.Override public int getOnFailureValue() {
        return onFailure_;
      }
      /**
       * <pre>
       * Defines how the system should behave when a failure is detected in the workflow execution.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
       * @param value The enum numeric value on the wire for onFailure to set.
       * @return This builder for chaining.
       */
      public Builder setOnFailureValue(int value) {
        
        onFailure_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines how the system should behave when a failure is detected in the workflow execution.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
       * @return The onFailure.
       */
      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy getOnFailure() {
        @SuppressWarnings("deprecation")
        com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy result = com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy.valueOf(onFailure_);
        return result == null ? com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Defines how the system should behave when a failure is detected in the workflow execution.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
       * @param value The onFailure to set.
       * @return This builder for chaining.
       */
      public Builder setOnFailure(com.flyteidl.core.WorkflowProto.WorkflowMetadata.OnFailurePolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        onFailure_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines how the system should behave when a failure is detected in the workflow execution.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata.OnFailurePolicy on_failure = 2 [json_name = "onFailure"];</code>
       * @return This builder for chaining.
       */
      public Builder clearOnFailure() {
        
        onFailure_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.WorkflowMetadata)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowMetadata)
    private static final com.flyteidl.core.WorkflowProto.WorkflowMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.WorkflowMetadata();
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkflowMetadata>
        PARSER = new com.google.protobuf.AbstractParser<WorkflowMetadata>() {
      @java.lang.Override
      public WorkflowMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WorkflowMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkflowMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkflowMetadataDefaultsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.WorkflowMetadataDefaults)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Whether child nodes of the workflow are interruptible.
     * </pre>
     *
     * <code>bool interruptible = 1 [json_name = "interruptible"];</code>
     * @return The interruptible.
     */
    boolean getInterruptible();
  }
  /**
   * <pre>
   * The difference between these settings and the WorkflowMetadata ones is that these are meant to be passed down to
   * a workflow's underlying entities (like tasks). For instance, 'interruptible' has no meaning at the workflow layer, it
   * is only relevant when a task executes. The settings here are the defaults that are passed to all nodes
   * unless explicitly overridden at the node layer.
   * If you are adding a setting that applies to both the Workflow itself, and everything underneath it, it should be
   * added to both this object and the WorkflowMetadata object above.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.WorkflowMetadataDefaults}
   */
  public static final class WorkflowMetadataDefaults extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.WorkflowMetadataDefaults)
      WorkflowMetadataDefaultsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkflowMetadataDefaults.newBuilder() to construct.
    private WorkflowMetadataDefaults(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkflowMetadataDefaults() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkflowMetadataDefaults();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadataDefaults_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadataDefaults_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.class, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.Builder.class);
    }

    public static final int INTERRUPTIBLE_FIELD_NUMBER = 1;
    private boolean interruptible_;
    /**
     * <pre>
     * Whether child nodes of the workflow are interruptible.
     * </pre>
     *
     * <code>bool interruptible = 1 [json_name = "interruptible"];</code>
     * @return The interruptible.
     */
    @java.lang.Override
    public boolean getInterruptible() {
      return interruptible_;
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The difference between these settings and the WorkflowMetadata ones is that these are meant to be passed down to
     * a workflow's underlying entities (like tasks). For instance, 'interruptible' has no meaning at the workflow layer, it
     * is only relevant when a task executes. The settings here are the defaults that are passed to all nodes
     * unless explicitly overridden at the node layer.
     * If you are adding a setting that applies to both the Workflow itself, and everything underneath it, it should be
     * added to both this object and the WorkflowMetadata object above.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.WorkflowMetadataDefaults}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.WorkflowMetadataDefaults)
        com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaultsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadataDefaults_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadataDefaults_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.class, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        interruptible_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowMetadataDefaults_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults build() {
        com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults buildPartial() {
        com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults result = new com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults(this);
        result.interruptible_ = interruptible_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private boolean interruptible_ ;
      /**
       * <pre>
       * Whether child nodes of the workflow are interruptible.
       * </pre>
       *
       * <code>bool interruptible = 1 [json_name = "interruptible"];</code>
       * @return The interruptible.
       */
      @java.lang.Override
      public boolean getInterruptible() {
        return interruptible_;
      }
      /**
       * <pre>
       * Whether child nodes of the workflow are interruptible.
       * </pre>
       *
       * <code>bool interruptible = 1 [json_name = "interruptible"];</code>
       * @param value The interruptible to set.
       * @return This builder for chaining.
       */
      public Builder setInterruptible(boolean value) {
        
        interruptible_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether child nodes of the workflow are interruptible.
       * </pre>
       *
       * <code>bool interruptible = 1 [json_name = "interruptible"];</code>
       * @return This builder for chaining.
       */
      public Builder clearInterruptible() {
        
        interruptible_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.WorkflowMetadataDefaults)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowMetadataDefaults)
    private static final com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults();
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkflowMetadataDefaults>
        PARSER = new com.google.protobuf.AbstractParser<WorkflowMetadataDefaults>() {
      @java.lang.Override
      public WorkflowMetadataDefaults parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WorkflowMetadataDefaults> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkflowMetadataDefaults> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkflowTemplateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.WorkflowTemplate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A globally unique identifier for the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * A globally unique identifier for the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    com.flyteidl.core.IdentifierProto.Identifier getId();
    /**
     * <pre>
     * A globally unique identifier for the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
     */
    com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getIdOrBuilder();

    /**
     * <pre>
     * Extra metadata about the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Extra metadata about the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return The metadata.
     */
    com.flyteidl.core.WorkflowProto.WorkflowMetadata getMetadata();
    /**
     * <pre>
     * Extra metadata about the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
     */
    com.flyteidl.core.WorkflowProto.WorkflowMetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
     * @return Whether the interface field is set.
     */
    boolean hasInterface();
    /**
     * <pre>
     * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
     * @return The interface.
     */
    com.flyteidl.core.InterfaceProto.TypedInterface getInterface();
    /**
     * <pre>
     * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
     */
    com.flyteidl.core.InterfaceProto.TypedInterfaceOrBuilder getInterfaceOrBuilder();

    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    java.util.List<com.flyteidl.core.WorkflowProto.Node> 
        getNodesList();
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    com.flyteidl.core.WorkflowProto.Node getNodes(int index);
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    int getNodesCount();
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    java.util.List<? extends com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    com.flyteidl.core.WorkflowProto.NodeOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    java.util.List<com.flyteidl.core.LiteralsProto.Binding> 
        getOutputsList();
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    com.flyteidl.core.LiteralsProto.Binding getOutputs(int index);
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    com.flyteidl.core.LiteralsProto.BindingOrBuilder getOutputsOrBuilder(
        int index);

    /**
     * <pre>
     *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
     * The interface of this node must match the Workflow interface with an additional input named "error" of type
     * pb.lyft.flyte.core.Error.
     * </pre>
     *
     * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
     * @return Whether the failureNode field is set.
     */
    boolean hasFailureNode();
    /**
     * <pre>
     *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
     * The interface of this node must match the Workflow interface with an additional input named "error" of type
     * pb.lyft.flyte.core.Error.
     * </pre>
     *
     * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
     * @return The failureNode.
     */
    com.flyteidl.core.WorkflowProto.Node getFailureNode();
    /**
     * <pre>
     *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
     * The interface of this node must match the Workflow interface with an additional input named "error" of type
     * pb.lyft.flyte.core.Error.
     * </pre>
     *
     * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
     */
    com.flyteidl.core.WorkflowProto.NodeOrBuilder getFailureNodeOrBuilder();

    /**
     * <pre>
     * workflow defaults
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
     * @return Whether the metadataDefaults field is set.
     */
    boolean hasMetadataDefaults();
    /**
     * <pre>
     * workflow defaults
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
     * @return The metadataDefaults.
     */
    com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults getMetadataDefaults();
    /**
     * <pre>
     * workflow defaults
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
     */
    com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaultsOrBuilder getMetadataDefaultsOrBuilder();
  }
  /**
   * <pre>
   * Flyte Workflow Structure that encapsulates task, branch and subworkflow nodes to form a statically analyzable,
   * directed acyclic graph.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.WorkflowTemplate}
   */
  public static final class WorkflowTemplate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.WorkflowTemplate)
      WorkflowTemplateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkflowTemplate.newBuilder() to construct.
    private WorkflowTemplate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkflowTemplate() {
      nodes_ = java.util.Collections.emptyList();
      outputs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkflowTemplate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowTemplate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowTemplate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.WorkflowTemplate.class, com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private com.flyteidl.core.IdentifierProto.Identifier id_;
    /**
     * <pre>
     * A globally unique identifier for the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <pre>
     * A globally unique identifier for the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.Identifier getId() {
      return id_ == null ? com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance() : id_;
    }
    /**
     * <pre>
     * A globally unique identifier for the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getIdOrBuilder() {
      return getId();
    }

    public static final int METADATA_FIELD_NUMBER = 2;
    private com.flyteidl.core.WorkflowProto.WorkflowMetadata metadata_;
    /**
     * <pre>
     * Extra metadata about the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <pre>
     * Extra metadata about the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
     * @return The metadata.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowMetadata getMetadata() {
      return metadata_ == null ? com.flyteidl.core.WorkflowProto.WorkflowMetadata.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Extra metadata about the workflow.
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowMetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int INTERFACE_FIELD_NUMBER = 3;
    private com.flyteidl.core.InterfaceProto.TypedInterface interface_;
    /**
     * <pre>
     * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
     * @return Whether the interface field is set.
     */
    @java.lang.Override
    public boolean hasInterface() {
      return interface_ != null;
    }
    /**
     * <pre>
     * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
     * @return The interface.
     */
    @java.lang.Override
    public com.flyteidl.core.InterfaceProto.TypedInterface getInterface() {
      return interface_ == null ? com.flyteidl.core.InterfaceProto.TypedInterface.getDefaultInstance() : interface_;
    }
    /**
     * <pre>
     * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
     * </pre>
     *
     * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.InterfaceProto.TypedInterfaceOrBuilder getInterfaceOrBuilder() {
      return getInterface();
    }

    public static final int NODES_FIELD_NUMBER = 4;
    private java.util.List<com.flyteidl.core.WorkflowProto.Node> nodes_;
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.WorkflowProto.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 5;
    private java.util.List<com.flyteidl.core.LiteralsProto.Binding> outputs_;
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.LiteralsProto.Binding> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.Binding getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
     * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
     * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
     * bind final outputs.
     * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
     * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
     * outputs from the output of a task.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.BindingOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    public static final int FAILURE_NODE_FIELD_NUMBER = 6;
    private com.flyteidl.core.WorkflowProto.Node failureNode_;
    /**
     * <pre>
     *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
     * The interface of this node must match the Workflow interface with an additional input named "error" of type
     * pb.lyft.flyte.core.Error.
     * </pre>
     *
     * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
     * @return Whether the failureNode field is set.
     */
    @java.lang.Override
    public boolean hasFailureNode() {
      return failureNode_ != null;
    }
    /**
     * <pre>
     *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
     * The interface of this node must match the Workflow interface with an additional input named "error" of type
     * pb.lyft.flyte.core.Error.
     * </pre>
     *
     * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
     * @return The failureNode.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Node getFailureNode() {
      return failureNode_ == null ? com.flyteidl.core.WorkflowProto.Node.getDefaultInstance() : failureNode_;
    }
    /**
     * <pre>
     *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
     * The interface of this node must match the Workflow interface with an additional input named "error" of type
     * pb.lyft.flyte.core.Error.
     * </pre>
     *
     * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeOrBuilder getFailureNodeOrBuilder() {
      return getFailureNode();
    }

    public static final int METADATA_DEFAULTS_FIELD_NUMBER = 7;
    private com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults metadataDefaults_;
    /**
     * <pre>
     * workflow defaults
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
     * @return Whether the metadataDefaults field is set.
     */
    @java.lang.Override
    public boolean hasMetadataDefaults() {
      return metadataDefaults_ != null;
    }
    /**
     * <pre>
     * workflow defaults
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
     * @return The metadataDefaults.
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults getMetadataDefaults() {
      return metadataDefaults_ == null ? com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.getDefaultInstance() : metadataDefaults_;
    }
    /**
     * <pre>
     * workflow defaults
     * </pre>
     *
     * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaultsOrBuilder getMetadataDefaultsOrBuilder() {
      return getMetadataDefaults();
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.WorkflowTemplate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Flyte Workflow Structure that encapsulates task, branch and subworkflow nodes to form a statically analyzable,
     * directed acyclic graph.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.WorkflowTemplate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.WorkflowTemplate)
        com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowTemplate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowTemplate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.WorkflowTemplate.class, com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.WorkflowTemplate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
          getOutputsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          id_ = null;
          idBuilder_ = null;
        }
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (interfaceBuilder_ == null) {
          interface_ = null;
        } else {
          interface_ = null;
          interfaceBuilder_ = null;
        }
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          outputsBuilder_.clear();
        }
        if (failureNodeBuilder_ == null) {
          failureNode_ = null;
        } else {
          failureNode_ = null;
          failureNodeBuilder_ = null;
        }
        if (metadataDefaultsBuilder_ == null) {
          metadataDefaults_ = null;
        } else {
          metadataDefaults_ = null;
          metadataDefaultsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowTemplate_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowTemplate getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.WorkflowTemplate.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowTemplate build() {
        com.flyteidl.core.WorkflowProto.WorkflowTemplate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.WorkflowTemplate buildPartial() {
        com.flyteidl.core.WorkflowProto.WorkflowTemplate result = new com.flyteidl.core.WorkflowProto.WorkflowTemplate(this);
        int from_bitField0_ = bitField0_;
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (interfaceBuilder_ == null) {
          result.interface_ = interface_;
        } else {
          result.interface_ = interfaceBuilder_.build();
        }
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        if (failureNodeBuilder_ == null) {
          result.failureNode_ = failureNode_;
        } else {
          result.failureNode_ = failureNodeBuilder_.build();
        }
        if (metadataDefaultsBuilder_ == null) {
          result.metadataDefaults_ = metadataDefaults_;
        } else {
          result.metadataDefaults_ = metadataDefaultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private com.flyteidl.core.IdentifierProto.Identifier id_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> idBuilder_;
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return idBuilder_ != null || id_ != null;
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       * @return The id.
       */
      public com.flyteidl.core.IdentifierProto.Identifier getId() {
        if (idBuilder_ == null) {
          return id_ == null ? com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       */
      public Builder setId(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       */
      public Builder setId(
          com.flyteidl.core.IdentifierProto.Identifier.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       */
      public Builder mergeId(com.flyteidl.core.IdentifierProto.Identifier value) {
        if (idBuilder_ == null) {
          if (id_ != null) {
            id_ =
              com.flyteidl.core.IdentifierProto.Identifier.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          id_ = null;
          idBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       */
      public com.flyteidl.core.IdentifierProto.Identifier.Builder getIdBuilder() {
        
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       */
      public com.flyteidl.core.IdentifierProto.IdentifierOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              com.flyteidl.core.IdentifierProto.Identifier.getDefaultInstance() : id_;
        }
      }
      /**
       * <pre>
       * A globally unique identifier for the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.Identifier id = 1 [json_name = "id"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.IdentifierProto.Identifier, com.flyteidl.core.IdentifierProto.Identifier.Builder, com.flyteidl.core.IdentifierProto.IdentifierOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private com.flyteidl.core.WorkflowProto.WorkflowMetadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowMetadata, com.flyteidl.core.WorkflowProto.WorkflowMetadata.Builder, com.flyteidl.core.WorkflowProto.WorkflowMetadataOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       * @return The metadata.
       */
      public com.flyteidl.core.WorkflowProto.WorkflowMetadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? com.flyteidl.core.WorkflowProto.WorkflowMetadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder setMetadata(com.flyteidl.core.WorkflowProto.WorkflowMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder setMetadata(
          com.flyteidl.core.WorkflowProto.WorkflowMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder mergeMetadata(com.flyteidl.core.WorkflowProto.WorkflowMetadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              com.flyteidl.core.WorkflowProto.WorkflowMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowMetadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowMetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              com.flyteidl.core.WorkflowProto.WorkflowMetadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Extra metadata about the workflow.
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadata metadata = 2 [json_name = "metadata"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowMetadata, com.flyteidl.core.WorkflowProto.WorkflowMetadata.Builder, com.flyteidl.core.WorkflowProto.WorkflowMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.WorkflowMetadata, com.flyteidl.core.WorkflowProto.WorkflowMetadata.Builder, com.flyteidl.core.WorkflowProto.WorkflowMetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private com.flyteidl.core.InterfaceProto.TypedInterface interface_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.InterfaceProto.TypedInterface, com.flyteidl.core.InterfaceProto.TypedInterface.Builder, com.flyteidl.core.InterfaceProto.TypedInterfaceOrBuilder> interfaceBuilder_;
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       * @return Whether the interface field is set.
       */
      public boolean hasInterface() {
        return interfaceBuilder_ != null || interface_ != null;
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       * @return The interface.
       */
      public com.flyteidl.core.InterfaceProto.TypedInterface getInterface() {
        if (interfaceBuilder_ == null) {
          return interface_ == null ? com.flyteidl.core.InterfaceProto.TypedInterface.getDefaultInstance() : interface_;
        } else {
          return interfaceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       */
      public Builder setInterface(com.flyteidl.core.InterfaceProto.TypedInterface value) {
        if (interfaceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          interface_ = value;
          onChanged();
        } else {
          interfaceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       */
      public Builder setInterface(
          com.flyteidl.core.InterfaceProto.TypedInterface.Builder builderForValue) {
        if (interfaceBuilder_ == null) {
          interface_ = builderForValue.build();
          onChanged();
        } else {
          interfaceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       */
      public Builder mergeInterface(com.flyteidl.core.InterfaceProto.TypedInterface value) {
        if (interfaceBuilder_ == null) {
          if (interface_ != null) {
            interface_ =
              com.flyteidl.core.InterfaceProto.TypedInterface.newBuilder(interface_).mergeFrom(value).buildPartial();
          } else {
            interface_ = value;
          }
          onChanged();
        } else {
          interfaceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       */
      public Builder clearInterface() {
        if (interfaceBuilder_ == null) {
          interface_ = null;
          onChanged();
        } else {
          interface_ = null;
          interfaceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       */
      public com.flyteidl.core.InterfaceProto.TypedInterface.Builder getInterfaceBuilder() {
        
        onChanged();
        return getInterfaceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       */
      public com.flyteidl.core.InterfaceProto.TypedInterfaceOrBuilder getInterfaceOrBuilder() {
        if (interfaceBuilder_ != null) {
          return interfaceBuilder_.getMessageOrBuilder();
        } else {
          return interface_ == null ?
              com.flyteidl.core.InterfaceProto.TypedInterface.getDefaultInstance() : interface_;
        }
      }
      /**
       * <pre>
       * Defines a strongly typed interface for the Workflow. This can include some optional parameters.
       * </pre>
       *
       * <code>.flyteidl.core.TypedInterface interface = 3 [json_name = "interface"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.InterfaceProto.TypedInterface, com.flyteidl.core.InterfaceProto.TypedInterface.Builder, com.flyteidl.core.InterfaceProto.TypedInterfaceOrBuilder> 
          getInterfaceFieldBuilder() {
        if (interfaceBuilder_ == null) {
          interfaceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.InterfaceProto.TypedInterface, com.flyteidl.core.InterfaceProto.TypedInterface.Builder, com.flyteidl.core.InterfaceProto.TypedInterfaceOrBuilder>(
                  getInterface(),
                  getParentForChildren(),
                  isClean());
          interface_ = null;
        }
        return interfaceBuilder_;
      }

      private java.util.List<com.flyteidl.core.WorkflowProto.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nodes_ = new java.util.ArrayList<com.flyteidl.core.WorkflowProto.Node>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> nodesBuilder_;

      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder setNodes(
          int index, com.flyteidl.core.WorkflowProto.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder setNodes(
          int index, com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder addNodes(com.flyteidl.core.WorkflowProto.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder addNodes(
          int index, com.flyteidl.core.WorkflowProto.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder addNodes(
          com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder addNodes(
          int index, com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends com.flyteidl.core.WorkflowProto.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            com.flyteidl.core.WorkflowProto.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, com.flyteidl.core.WorkflowProto.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of nodes. In addition, "globals" is a special reserved node id that can be used to consume workflow inputs.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 4 [json_name = "nodes"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.Node.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private java.util.List<com.flyteidl.core.LiteralsProto.Binding> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          outputs_ = new java.util.ArrayList<com.flyteidl.core.LiteralsProto.Binding>(outputs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder> outputsBuilder_;

      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public java.util.List<com.flyteidl.core.LiteralsProto.Binding> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder setOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder setOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(com.flyteidl.core.LiteralsProto.Binding value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(
          com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends com.flyteidl.core.LiteralsProto.Binding> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.BindingOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            com.flyteidl.core.LiteralsProto.Binding.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, com.flyteidl.core.LiteralsProto.Binding.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of output bindings that specify how to construct workflow outputs. Bindings can pull node outputs or
       * specify literals. All workflow outputs specified in the interface field must be bound in order for the workflow
       * to be validated. A workflow has an implicit dependency on all of its nodes to execute successfully in order to
       * bind final outputs.
       * Most of these outputs will be Binding's with a BindingData of type OutputReference.  That is, your workflow can
       * just have an output of some constant (`Output(5)`), but usually, the workflow will be pulling
       * outputs from the output of a task.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 5 [json_name = "outputs"];</code>
       */
      public java.util.List<com.flyteidl.core.LiteralsProto.Binding.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      private com.flyteidl.core.WorkflowProto.Node failureNode_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> failureNodeBuilder_;
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       * @return Whether the failureNode field is set.
       */
      public boolean hasFailureNode() {
        return failureNodeBuilder_ != null || failureNode_ != null;
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       * @return The failureNode.
       */
      public com.flyteidl.core.WorkflowProto.Node getFailureNode() {
        if (failureNodeBuilder_ == null) {
          return failureNode_ == null ? com.flyteidl.core.WorkflowProto.Node.getDefaultInstance() : failureNode_;
        } else {
          return failureNodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       */
      public Builder setFailureNode(com.flyteidl.core.WorkflowProto.Node value) {
        if (failureNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          failureNode_ = value;
          onChanged();
        } else {
          failureNodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       */
      public Builder setFailureNode(
          com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (failureNodeBuilder_ == null) {
          failureNode_ = builderForValue.build();
          onChanged();
        } else {
          failureNodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       */
      public Builder mergeFailureNode(com.flyteidl.core.WorkflowProto.Node value) {
        if (failureNodeBuilder_ == null) {
          if (failureNode_ != null) {
            failureNode_ =
              com.flyteidl.core.WorkflowProto.Node.newBuilder(failureNode_).mergeFrom(value).buildPartial();
          } else {
            failureNode_ = value;
          }
          onChanged();
        } else {
          failureNodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       */
      public Builder clearFailureNode() {
        if (failureNodeBuilder_ == null) {
          failureNode_ = null;
          onChanged();
        } else {
          failureNode_ = null;
          failureNodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder getFailureNodeBuilder() {
        
        onChanged();
        return getFailureNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       */
      public com.flyteidl.core.WorkflowProto.NodeOrBuilder getFailureNodeOrBuilder() {
        if (failureNodeBuilder_ != null) {
          return failureNodeBuilder_.getMessageOrBuilder();
        } else {
          return failureNode_ == null ?
              com.flyteidl.core.WorkflowProto.Node.getDefaultInstance() : failureNode_;
        }
      }
      /**
       * <pre>
       *+optional A catch-all node. This node is executed whenever the execution engine determines the workflow has failed.
       * The interface of this node must match the Workflow interface with an additional input named "error" of type
       * pb.lyft.flyte.core.Error.
       * </pre>
       *
       * <code>.flyteidl.core.Node failure_node = 6 [json_name = "failureNode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
          getFailureNodeFieldBuilder() {
        if (failureNodeBuilder_ == null) {
          failureNodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder>(
                  getFailureNode(),
                  getParentForChildren(),
                  isClean());
          failureNode_ = null;
        }
        return failureNodeBuilder_;
      }

      private com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults metadataDefaults_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.Builder, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaultsOrBuilder> metadataDefaultsBuilder_;
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       * @return Whether the metadataDefaults field is set.
       */
      public boolean hasMetadataDefaults() {
        return metadataDefaultsBuilder_ != null || metadataDefaults_ != null;
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       * @return The metadataDefaults.
       */
      public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults getMetadataDefaults() {
        if (metadataDefaultsBuilder_ == null) {
          return metadataDefaults_ == null ? com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.getDefaultInstance() : metadataDefaults_;
        } else {
          return metadataDefaultsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       */
      public Builder setMetadataDefaults(com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults value) {
        if (metadataDefaultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadataDefaults_ = value;
          onChanged();
        } else {
          metadataDefaultsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       */
      public Builder setMetadataDefaults(
          com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.Builder builderForValue) {
        if (metadataDefaultsBuilder_ == null) {
          metadataDefaults_ = builderForValue.build();
          onChanged();
        } else {
          metadataDefaultsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       */
      public Builder mergeMetadataDefaults(com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults value) {
        if (metadataDefaultsBuilder_ == null) {
          if (metadataDefaults_ != null) {
            metadataDefaults_ =
              com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.newBuilder(metadataDefaults_).mergeFrom(value).buildPartial();
          } else {
            metadataDefaults_ = value;
          }
          onChanged();
        } else {
          metadataDefaultsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       */
      public Builder clearMetadataDefaults() {
        if (metadataDefaultsBuilder_ == null) {
          metadataDefaults_ = null;
          onChanged();
        } else {
          metadataDefaults_ = null;
          metadataDefaultsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.Builder getMetadataDefaultsBuilder() {
        
        onChanged();
        return getMetadataDefaultsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaultsOrBuilder getMetadataDefaultsOrBuilder() {
        if (metadataDefaultsBuilder_ != null) {
          return metadataDefaultsBuilder_.getMessageOrBuilder();
        } else {
          return metadataDefaults_ == null ?
              com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.getDefaultInstance() : metadataDefaults_;
        }
      }
      /**
       * <pre>
       * workflow defaults
       * </pre>
       *
       * <code>.flyteidl.core.WorkflowMetadataDefaults metadata_defaults = 7 [json_name = "metadataDefaults"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.Builder, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaultsOrBuilder> 
          getMetadataDefaultsFieldBuilder() {
        if (metadataDefaultsBuilder_ == null) {
          metadataDefaultsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaults.Builder, com.flyteidl.core.WorkflowProto.WorkflowMetadataDefaultsOrBuilder>(
                  getMetadataDefaults(),
                  getParentForChildren(),
                  isClean());
          metadataDefaults_ = null;
        }
        return metadataDefaultsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.WorkflowTemplate)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowTemplate)
    private static final com.flyteidl.core.WorkflowProto.WorkflowTemplate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.WorkflowTemplate();
    }

    public static com.flyteidl.core.WorkflowProto.WorkflowTemplate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WorkflowTemplate>
        PARSER = new com.google.protobuf.AbstractParser<WorkflowTemplate>() {
      @java.lang.Override
      public WorkflowTemplate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WorkflowTemplate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkflowTemplate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowTemplate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TaskNodeOverridesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.TaskNodeOverrides)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A customizable interface to convey resources requested for a task container. 
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
     * @return Whether the resources field is set.
     */
    boolean hasResources();
    /**
     * <pre>
     * A customizable interface to convey resources requested for a task container. 
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
     * @return The resources.
     */
    com.flyteidl.core.TasksProto.Resources getResources();
    /**
     * <pre>
     * A customizable interface to convey resources requested for a task container. 
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
     */
    com.flyteidl.core.TasksProto.ResourcesOrBuilder getResourcesOrBuilder();
  }
  /**
   * <pre>
   * Optional task node overrides that will be applied at task execution time.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.TaskNodeOverrides}
   */
  public static final class TaskNodeOverrides extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.TaskNodeOverrides)
      TaskNodeOverridesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TaskNodeOverrides.newBuilder() to construct.
    private TaskNodeOverrides(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskNodeOverrides() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TaskNodeOverrides();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNodeOverrides_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNodeOverrides_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowProto.TaskNodeOverrides.class, com.flyteidl.core.WorkflowProto.TaskNodeOverrides.Builder.class);
    }

    public static final int RESOURCES_FIELD_NUMBER = 1;
    private com.flyteidl.core.TasksProto.Resources resources_;
    /**
     * <pre>
     * A customizable interface to convey resources requested for a task container. 
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
     * @return Whether the resources field is set.
     */
    @java.lang.Override
    public boolean hasResources() {
      return resources_ != null;
    }
    /**
     * <pre>
     * A customizable interface to convey resources requested for a task container. 
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
     * @return The resources.
     */
    @java.lang.Override
    public com.flyteidl.core.TasksProto.Resources getResources() {
      return resources_ == null ? com.flyteidl.core.TasksProto.Resources.getDefaultInstance() : resources_;
    }
    /**
     * <pre>
     * A customizable interface to convey resources requested for a task container. 
     * </pre>
     *
     * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.TasksProto.ResourcesOrBuilder getResourcesOrBuilder() {
      return getResources();
    }

    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.WorkflowProto.TaskNodeOverrides prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Optional task node overrides that will be applied at task execution time.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.TaskNodeOverrides}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.TaskNodeOverrides)
        com.flyteidl.core.WorkflowProto.TaskNodeOverridesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNodeOverrides_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNodeOverrides_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.WorkflowProto.TaskNodeOverrides.class, com.flyteidl.core.WorkflowProto.TaskNodeOverrides.Builder.class);
      }

      // Construct using com.flyteidl.core.WorkflowProto.TaskNodeOverrides.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (resourcesBuilder_ == null) {
          resources_ = null;
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_TaskNodeOverrides_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNodeOverrides getDefaultInstanceForType() {
        return com.flyteidl.core.WorkflowProto.TaskNodeOverrides.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNodeOverrides build() {
        com.flyteidl.core.WorkflowProto.TaskNodeOverrides result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.WorkflowProto.TaskNodeOverrides buildPartial() {
        com.flyteidl.core.WorkflowProto.TaskNodeOverrides result = new com.flyteidl.core.WorkflowProto.TaskNodeOverrides(this);
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private com.flyteidl.core.TasksProto.Resources resources_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.TasksProto.Resources, com.flyteidl.core.TasksProto.Resources.Builder, com.flyteidl.core.TasksProto.ResourcesOrBuilder> resourcesBuilder_;
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       * @return Whether the resources field is set.
       */
      public boolean hasResources() {
        return resourcesBuilder_ != null || resources_ != null;
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       * @return The resources.
       */
      public com.flyteidl.core.TasksProto.Resources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_ == null ? com.flyteidl.core.TasksProto.Resources.getDefaultInstance() : resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       */
      public Builder setResources(com.flyteidl.core.TasksProto.Resources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       */
      public Builder setResources(
          com.flyteidl.core.TasksProto.Resources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       */
      public Builder mergeResources(com.flyteidl.core.TasksProto.Resources value) {
        if (resourcesBuilder_ == null) {
          if (resources_ != null) {
            resources_ =
              com.flyteidl.core.TasksProto.Resources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = null;
          onChanged();
        } else {
          resources_ = null;
          resourcesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       */
      public com.flyteidl.core.TasksProto.Resources.Builder getResourcesBuilder() {
        
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       */
      public com.flyteidl.core.TasksProto.ResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_ == null ?
              com.flyteidl.core.TasksProto.Resources.getDefaultInstance() : resources_;
        }
      }
      /**
       * <pre>
       * A customizable interface to convey resources requested for a task container. 
       * </pre>
       *
       * <code>.flyteidl.core.Resources resources = 1 [json_name = "resources"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.core.TasksProto.Resources, com.flyteidl.core.TasksProto.Resources.Builder, com.flyteidl.core.TasksProto.ResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.core.TasksProto.Resources, com.flyteidl.core.TasksProto.Resources.Builder, com.flyteidl.core.TasksProto.ResourcesOrBuilder>(
                  getResources(),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.TaskNodeOverrides)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.TaskNodeOverrides)
    private static final com.flyteidl.core.WorkflowProto.TaskNodeOverrides DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowProto.TaskNodeOverrides();
    }

    public static com.flyteidl.core.WorkflowProto.TaskNodeOverrides getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskNodeOverrides>
        PARSER = new com.google.protobuf.AbstractParser<TaskNodeOverrides>() {
      @java.lang.Override
      public TaskNodeOverrides parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TaskNodeOverrides> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskNodeOverrides> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.TaskNodeOverrides getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_IfBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_IfBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_IfElseBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_IfElseBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_BranchNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_BranchNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_TaskNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_TaskNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_WorkflowNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_WorkflowNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_NodeMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_NodeMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_Alias_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_Alias_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_Node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_WorkflowMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_WorkflowMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_WorkflowMetadataDefaults_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_WorkflowMetadataDefaults_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_WorkflowTemplate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_WorkflowTemplate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_TaskNodeOverrides_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_TaskNodeOverrides_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034flyteidl/core/workflow.proto\022\rflyteidl" +
      ".core\032\035flyteidl/core/condition.proto\032\035fl" +
      "yteidl/core/execution.proto\032\036flyteidl/co" +
      "re/identifier.proto\032\035flyteidl/core/inter" +
      "face.proto\032\034flyteidl/core/literals.proto" +
      "\032\031flyteidl/core/tasks.proto\032\031flyteidl/co" +
      "re/types.proto\032\034flyteidl/core/security.p" +
      "roto\032\036google/protobuf/duration.proto\"{\n\007" +
      "IfBlock\022>\n\tcondition\030\001 \001(\0132 .flyteidl.co" +
      "re.BooleanExpressionR\tcondition\0220\n\tthen_" +
      "node\030\002 \001(\0132\023.flyteidl.core.NodeR\010thenNod" +
      "e\"\324\001\n\013IfElseBlock\022*\n\004case\030\001 \001(\0132\026.flytei" +
      "dl.core.IfBlockR\004case\022,\n\005other\030\002 \003(\0132\026.f" +
      "lyteidl.core.IfBlockR\005other\0222\n\telse_node" +
      "\030\003 \001(\0132\023.flyteidl.core.NodeH\000R\010elseNode\022" +
      ",\n\005error\030\004 \001(\0132\024.flyteidl.core.ErrorH\000R\005" +
      "errorB\t\n\007default\"A\n\nBranchNode\0223\n\007if_els" +
      "e\030\001 \001(\0132\032.flyteidl.core.IfElseBlockR\006ifE" +
      "lse\"\227\001\n\010TaskNode\022>\n\014reference_id\030\001 \001(\0132\031" +
      ".flyteidl.core.IdentifierH\000R\013referenceId" +
      "\022>\n\toverrides\030\002 \001(\0132 .flyteidl.core.Task" +
      "NodeOverridesR\toverridesB\013\n\treference\"\246\001" +
      "\n\014WorkflowNode\022B\n\016launchplan_ref\030\001 \001(\0132\031" +
      ".flyteidl.core.IdentifierH\000R\rlaunchplanR" +
      "ef\022E\n\020sub_workflow_ref\030\002 \001(\0132\031.flyteidl." +
      "core.IdentifierH\000R\016subWorkflowRefB\013\n\tref" +
      "erence\"\316\001\n\014NodeMetadata\022\022\n\004name\030\001 \001(\tR\004n" +
      "ame\0223\n\007timeout\030\004 \001(\0132\031.google.protobuf.D" +
      "urationR\007timeout\0226\n\007retries\030\005 \001(\0132\034.flyt" +
      "eidl.core.RetryStrategyR\007retries\022&\n\rinte" +
      "rruptible\030\006 \001(\010H\000R\rinterruptibleB\025\n\023inte" +
      "rruptible_value\"/\n\005Alias\022\020\n\003var\030\001 \001(\tR\003v" +
      "ar\022\024\n\005alias\030\002 \001(\tR\005alias\"\254\003\n\004Node\022\016\n\002id\030" +
      "\001 \001(\tR\002id\0227\n\010metadata\030\002 \001(\0132\033.flyteidl.c" +
      "ore.NodeMetadataR\010metadata\022.\n\006inputs\030\003 \003" +
      "(\0132\026.flyteidl.core.BindingR\006inputs\022*\n\021up" +
      "stream_node_ids\030\004 \003(\tR\017upstreamNodeIds\022;" +
      "\n\016output_aliases\030\005 \003(\0132\024.flyteidl.core.A" +
      "liasR\routputAliases\0226\n\ttask_node\030\006 \001(\0132\027" +
      ".flyteidl.core.TaskNodeH\000R\010taskNode\022B\n\rw" +
      "orkflow_node\030\007 \001(\0132\033.flyteidl.core.Workf" +
      "lowNodeH\000R\014workflowNode\022<\n\013branch_node\030\010" +
      " \001(\0132\031.flyteidl.core.BranchNodeH\000R\nbranc" +
      "hNodeB\010\n\006target\"\204\002\n\020WorkflowMetadata\022M\n\022" +
      "quality_of_service\030\001 \001(\0132\037.flyteidl.core" +
      ".QualityOfServiceR\020qualityOfService\022N\n\no" +
      "n_failure\030\002 \001(\0162/.flyteidl.core.Workflow" +
      "Metadata.OnFailurePolicyR\tonFailure\"Q\n\017O" +
      "nFailurePolicy\022\024\n\020FAIL_IMMEDIATELY\020\000\022(\n$" +
      "FAIL_AFTER_EXECUTABLE_NODES_COMPLETE\020\001\"@" +
      "\n\030WorkflowMetadataDefaults\022$\n\rinterrupti" +
      "ble\030\001 \001(\010R\rinterruptible\"\242\003\n\020WorkflowTem" +
      "plate\022)\n\002id\030\001 \001(\0132\031.flyteidl.core.Identi" +
      "fierR\002id\022;\n\010metadata\030\002 \001(\0132\037.flyteidl.co" +
      "re.WorkflowMetadataR\010metadata\022;\n\tinterfa" +
      "ce\030\003 \001(\0132\035.flyteidl.core.TypedInterfaceR" +
      "\tinterface\022)\n\005nodes\030\004 \003(\0132\023.flyteidl.cor" +
      "e.NodeR\005nodes\0220\n\007outputs\030\005 \003(\0132\026.flyteid" +
      "l.core.BindingR\007outputs\0226\n\014failure_node\030" +
      "\006 \001(\0132\023.flyteidl.core.NodeR\013failureNode\022" +
      "T\n\021metadata_defaults\030\007 \001(\0132\'.flyteidl.co" +
      "re.WorkflowMetadataDefaultsR\020metadataDef" +
      "aults\"K\n\021TaskNodeOverrides\0226\n\tresources\030" +
      "\001 \001(\0132\030.flyteidl.core.ResourcesR\tresourc" +
      "esB\260\001\n\021com.flyteidl.coreB\rWorkflowProtoH" +
      "\002Z4github.com/flyteorg/flyteidl/gen/pb-g" +
      "o/flyteidl/core\370\001\000\242\002\003FCX\252\002\rFlyteidl.Core" +
      "\312\002\rFlyteidl\\Core\342\002\031Flyteidl\\Core\\GPBMeta" +
      "data\352\002\016Flyteidl::Coreb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.flyteidl.core.ConditionProto.getDescriptor(),
          com.flyteidl.core.ExecutionProto.getDescriptor(),
          com.flyteidl.core.IdentifierProto.getDescriptor(),
          com.flyteidl.core.InterfaceProto.getDescriptor(),
          com.flyteidl.core.LiteralsProto.getDescriptor(),
          com.flyteidl.core.TasksProto.getDescriptor(),
          com.flyteidl.core.TypesProto.getDescriptor(),
          com.flyteidl.core.SecurityProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_flyteidl_core_IfBlock_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_core_IfBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_IfBlock_descriptor,
        new java.lang.String[] { "Condition", "ThenNode", });
    internal_static_flyteidl_core_IfElseBlock_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_core_IfElseBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_IfElseBlock_descriptor,
        new java.lang.String[] { "Case", "Other", "ElseNode", "Error", "Default", });
    internal_static_flyteidl_core_BranchNode_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flyteidl_core_BranchNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_BranchNode_descriptor,
        new java.lang.String[] { "IfElse", });
    internal_static_flyteidl_core_TaskNode_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_flyteidl_core_TaskNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_TaskNode_descriptor,
        new java.lang.String[] { "ReferenceId", "Overrides", "Reference", });
    internal_static_flyteidl_core_WorkflowNode_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_flyteidl_core_WorkflowNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_WorkflowNode_descriptor,
        new java.lang.String[] { "LaunchplanRef", "SubWorkflowRef", "Reference", });
    internal_static_flyteidl_core_NodeMetadata_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_flyteidl_core_NodeMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_NodeMetadata_descriptor,
        new java.lang.String[] { "Name", "Timeout", "Retries", "Interruptible", "InterruptibleValue", });
    internal_static_flyteidl_core_Alias_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_flyteidl_core_Alias_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_Alias_descriptor,
        new java.lang.String[] { "Var", "Alias", });
    internal_static_flyteidl_core_Node_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_flyteidl_core_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_Node_descriptor,
        new java.lang.String[] { "Id", "Metadata", "Inputs", "UpstreamNodeIds", "OutputAliases", "TaskNode", "WorkflowNode", "BranchNode", "Target", });
    internal_static_flyteidl_core_WorkflowMetadata_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_flyteidl_core_WorkflowMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_WorkflowMetadata_descriptor,
        new java.lang.String[] { "QualityOfService", "OnFailure", });
    internal_static_flyteidl_core_WorkflowMetadataDefaults_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_flyteidl_core_WorkflowMetadataDefaults_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_WorkflowMetadataDefaults_descriptor,
        new java.lang.String[] { "Interruptible", });
    internal_static_flyteidl_core_WorkflowTemplate_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_flyteidl_core_WorkflowTemplate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_WorkflowTemplate_descriptor,
        new java.lang.String[] { "Id", "Metadata", "Interface", "Nodes", "Outputs", "FailureNode", "MetadataDefaults", });
    internal_static_flyteidl_core_TaskNodeOverrides_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_flyteidl_core_TaskNodeOverrides_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_TaskNodeOverrides_descriptor,
        new java.lang.String[] { "Resources", });
    com.flyteidl.core.ConditionProto.getDescriptor();
    com.flyteidl.core.ExecutionProto.getDescriptor();
    com.flyteidl.core.IdentifierProto.getDescriptor();
    com.flyteidl.core.InterfaceProto.getDescriptor();
    com.flyteidl.core.LiteralsProto.getDescriptor();
    com.flyteidl.core.TasksProto.getDescriptor();
    com.flyteidl.core.TypesProto.getDescriptor();
    com.flyteidl.core.SecurityProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
