// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/notification.proto

#include "flyteidl/admin/notification.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace admin {
constexpr EmailMessage::EmailMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recipients_email_()
  , sender_email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subject_line_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , body_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct EmailMessageDefaultTypeInternal {
  constexpr EmailMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EmailMessageDefaultTypeInternal() {}
  union {
    EmailMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EmailMessageDefaultTypeInternal _EmailMessage_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fadmin_2fnotification_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fadmin_2fnotification_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2fnotification_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fadmin_2fnotification_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::EmailMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::EmailMessage, recipients_email_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::EmailMessage, sender_email_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::EmailMessage, subject_line_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::EmailMessage, body_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::admin::EmailMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_EmailMessage_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fadmin_2fnotification_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!flyteidl/admin/notification.proto\022\016fly"
  "teidl.admin\"\223\001\n\014EmailMessage\022)\n\020recipien"
  "ts_email\030\001 \003(\tR\017recipientsEmail\022!\n\014sende"
  "r_email\030\002 \001(\tR\013senderEmail\022!\n\014subject_li"
  "ne\030\003 \001(\tR\013subjectLine\022\022\n\004body\030\004 \001(\tR\004bod"
  "yB\272\001\n\022com.flyteidl.adminB\021NotificationPr"
  "otoH\002Z5github.com/flyteorg/flyteidl/gen/"
  "pb-go/flyteidl/admin\370\001\000\242\002\003FAX\252\002\016Flyteidl"
  ".Admin\312\002\016Flyteidl\\Admin\342\002\032Flyteidl\\Admin"
  "\\GPBMetadata\352\002\017Flyteidl::Adminb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fadmin_2fnotification_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2fnotification_2eproto = {
  false, false, 398, descriptor_table_protodef_flyteidl_2fadmin_2fnotification_2eproto, "flyteidl/admin/notification.proto", 
  &descriptor_table_flyteidl_2fadmin_2fnotification_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_flyteidl_2fadmin_2fnotification_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2fnotification_2eproto, file_level_enum_descriptors_flyteidl_2fadmin_2fnotification_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2fnotification_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fadmin_2fnotification_2eproto_getter() {
  return &descriptor_table_flyteidl_2fadmin_2fnotification_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fadmin_2fnotification_2eproto(&descriptor_table_flyteidl_2fadmin_2fnotification_2eproto);
namespace flyteidl {
namespace admin {

// ===================================================================

class EmailMessage::_Internal {
 public:
};

EmailMessage::EmailMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  recipients_email_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.EmailMessage)
}
EmailMessage::EmailMessage(const EmailMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      recipients_email_(from.recipients_email_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender_email().empty()) {
    sender_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender_email(), 
      GetArenaForAllocation());
  }
  subject_line_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subject_line_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subject_line().empty()) {
    subject_line_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subject_line(), 
      GetArenaForAllocation());
  }
  body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    body_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_body().empty()) {
    body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_body(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.EmailMessage)
}

inline void EmailMessage::SharedCtor() {
sender_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
subject_line_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subject_line_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  body_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

EmailMessage::~EmailMessage() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.EmailMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EmailMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subject_line_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EmailMessage::ArenaDtor(void* object) {
  EmailMessage* _this = reinterpret_cast< EmailMessage* >(object);
  (void)_this;
}
void EmailMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmailMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EmailMessage::InternalSwap(EmailMessage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata EmailMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fnotification_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fnotification_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fnotification_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::admin::EmailMessage* Arena::CreateMaybeMessage< ::flyteidl::admin::EmailMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::EmailMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
