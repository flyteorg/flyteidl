# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/service/signal.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from flyteidl.admin import signal_pb2 as flyteidl_dot_admin_dot_signal__pb2
from protoc_gen_swagger.options import annotations_pb2 as protoc__gen__swagger_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='flyteidl/service/signal.proto',
  package='flyteidl.service',
  syntax='proto3',
  serialized_options=_b('Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/service'),
  serialized_pb=_b('\n\x1d\x66lyteidl/service/signal.proto\x12\x10\x66lyteidl.service\x1a\x1cgoogle/api/annotations.proto\x1a\x1b\x66lyteidl/admin/signal.proto\x1a,protoc-gen-swagger/options/annotations.proto2\xbc\x01\n\rSignalService\x12W\n\x11GetOrCreateSignal\x12(.flyteidl.admin.SignalGetOrCreateRequest\x1a\x16.flyteidl.admin.Signal\"\x00\x12R\n\tSetSignal\x12 .flyteidl.admin.SignalSetRequest\x1a!.flyteidl.admin.SignalSetResponse\"\x00\x42\x39Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/serviceb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,flyteidl_dot_admin_dot_signal__pb2.DESCRIPTOR,protoc__gen__swagger_dot_options_dot_annotations__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_SIGNALSERVICE = _descriptor.ServiceDescriptor(
  name='SignalService',
  full_name='flyteidl.service.SignalService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=157,
  serialized_end=345,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetOrCreateSignal',
    full_name='flyteidl.service.SignalService.GetOrCreateSignal',
    index=0,
    containing_service=None,
    input_type=flyteidl_dot_admin_dot_signal__pb2._SIGNALGETORCREATEREQUEST,
    output_type=flyteidl_dot_admin_dot_signal__pb2._SIGNAL,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetSignal',
    full_name='flyteidl.service.SignalService.SetSignal',
    index=1,
    containing_service=None,
    input_type=flyteidl_dot_admin_dot_signal__pb2._SIGNALSETREQUEST,
    output_type=flyteidl_dot_admin_dot_signal__pb2._SIGNALSETRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SIGNALSERVICE)

DESCRIPTOR.services_by_name['SignalService'] = _SIGNALSERVICE

# @@protoc_insertion_point(module_scope)
