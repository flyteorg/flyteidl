// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/matchable_resource.proto

package com.flyteidl.admin;

/**
 * <pre>
 * This MatchableAttribute configures selecting alternate plugin implementations for a given task type.
 * In addition to an override implementation a selection of fallbacks can be provided or other modes
 * for handling cases where the desired plugin override is not enabled in a given Flyte deployment.
 * </pre>
 *
 * Protobuf type {@code flyteidl.admin.PluginOverride}
 */
public final class PluginOverride extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.admin.PluginOverride)
    PluginOverrideOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PluginOverride.newBuilder() to construct.
  private PluginOverride(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PluginOverride() {
    taskType_ = "";
    pluginId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    missingPluginBehavior_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PluginOverride();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PluginOverride(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            taskType_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              pluginId_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            pluginId_.add(s);
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            missingPluginBehavior_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        pluginId_ = pluginId_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.admin.MatchableResourceProto.internal_static_flyteidl_admin_PluginOverride_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.admin.MatchableResourceProto.internal_static_flyteidl_admin_PluginOverride_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.admin.PluginOverride.class, com.flyteidl.admin.PluginOverride.Builder.class);
  }

  /**
   * Protobuf enum {@code flyteidl.admin.PluginOverride.MissingPluginBehavior}
   */
  public enum MissingPluginBehavior
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * By default, if this plugin is not enabled for a Flyte deployment then execution will fail.
     * </pre>
     *
     * <code>FAIL = 0;</code>
     */
    FAIL(0),
    /**
     * <pre>
     * Uses the system-configured default implementation.
     * </pre>
     *
     * <code>USE_DEFAULT = 1;</code>
     */
    USE_DEFAULT(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * By default, if this plugin is not enabled for a Flyte deployment then execution will fail.
     * </pre>
     *
     * <code>FAIL = 0;</code>
     */
    public static final int FAIL_VALUE = 0;
    /**
     * <pre>
     * Uses the system-configured default implementation.
     * </pre>
     *
     * <code>USE_DEFAULT = 1;</code>
     */
    public static final int USE_DEFAULT_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MissingPluginBehavior valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MissingPluginBehavior forNumber(int value) {
      switch (value) {
        case 0: return FAIL;
        case 1: return USE_DEFAULT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MissingPluginBehavior>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MissingPluginBehavior> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MissingPluginBehavior>() {
            public MissingPluginBehavior findValueByNumber(int number) {
              return MissingPluginBehavior.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.flyteidl.admin.PluginOverride.getDescriptor().getEnumTypes().get(0);
    }

    private static final MissingPluginBehavior[] VALUES = values();

    public static MissingPluginBehavior valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MissingPluginBehavior(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.admin.PluginOverride.MissingPluginBehavior)
  }

  public static final int TASK_TYPE_FIELD_NUMBER = 1;
  private volatile java.lang.Object taskType_;
  /**
   * <pre>
   * A predefined yet extensible Task type identifier.
   * </pre>
   *
   * <code>string task_type = 1 [json_name = "taskType"];</code>
   * @return The taskType.
   */
  @java.lang.Override
  public java.lang.String getTaskType() {
    java.lang.Object ref = taskType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      taskType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A predefined yet extensible Task type identifier.
   * </pre>
   *
   * <code>string task_type = 1 [json_name = "taskType"];</code>
   * @return The bytes for taskType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTaskTypeBytes() {
    java.lang.Object ref = taskType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      taskType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLUGIN_ID_FIELD_NUMBER = 2;
  private com.google.protobuf.LazyStringList pluginId_;
  /**
   * <pre>
   * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
   * </pre>
   *
   * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
   * @return A list containing the pluginId.
   */
  public com.google.protobuf.ProtocolStringList
      getPluginIdList() {
    return pluginId_;
  }
  /**
   * <pre>
   * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
   * </pre>
   *
   * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
   * @return The count of pluginId.
   */
  public int getPluginIdCount() {
    return pluginId_.size();
  }
  /**
   * <pre>
   * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
   * </pre>
   *
   * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
   * @param index The index of the element to return.
   * @return The pluginId at the given index.
   */
  public java.lang.String getPluginId(int index) {
    return pluginId_.get(index);
  }
  /**
   * <pre>
   * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
   * </pre>
   *
   * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the pluginId at the given index.
   */
  public com.google.protobuf.ByteString
      getPluginIdBytes(int index) {
    return pluginId_.getByteString(index);
  }

  public static final int MISSING_PLUGIN_BEHAVIOR_FIELD_NUMBER = 4;
  private int missingPluginBehavior_;
  /**
   * <pre>
   * Defines the behavior when no plugin from the plugin_id list is not found.
   * </pre>
   *
   * <code>.flyteidl.admin.PluginOverride.MissingPluginBehavior missing_plugin_behavior = 4 [json_name = "missingPluginBehavior"];</code>
   * @return The enum numeric value on the wire for missingPluginBehavior.
   */
  @java.lang.Override public int getMissingPluginBehaviorValue() {
    return missingPluginBehavior_;
  }
  /**
   * <pre>
   * Defines the behavior when no plugin from the plugin_id list is not found.
   * </pre>
   *
   * <code>.flyteidl.admin.PluginOverride.MissingPluginBehavior missing_plugin_behavior = 4 [json_name = "missingPluginBehavior"];</code>
   * @return The missingPluginBehavior.
   */
  @java.lang.Override public com.flyteidl.admin.PluginOverride.MissingPluginBehavior getMissingPluginBehavior() {
    @SuppressWarnings("deprecation")
    com.flyteidl.admin.PluginOverride.MissingPluginBehavior result = com.flyteidl.admin.PluginOverride.MissingPluginBehavior.valueOf(missingPluginBehavior_);
    return result == null ? com.flyteidl.admin.PluginOverride.MissingPluginBehavior.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, taskType_);
    }
    for (int i = 0; i < pluginId_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pluginId_.getRaw(i));
    }
    if (missingPluginBehavior_ != com.flyteidl.admin.PluginOverride.MissingPluginBehavior.FAIL.getNumber()) {
      output.writeEnum(4, missingPluginBehavior_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(taskType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, taskType_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < pluginId_.size(); i++) {
        dataSize += computeStringSizeNoTag(pluginId_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPluginIdList().size();
    }
    if (missingPluginBehavior_ != com.flyteidl.admin.PluginOverride.MissingPluginBehavior.FAIL.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, missingPluginBehavior_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.admin.PluginOverride)) {
      return super.equals(obj);
    }
    com.flyteidl.admin.PluginOverride other = (com.flyteidl.admin.PluginOverride) obj;

    if (!getTaskType()
        .equals(other.getTaskType())) return false;
    if (!getPluginIdList()
        .equals(other.getPluginIdList())) return false;
    if (missingPluginBehavior_ != other.missingPluginBehavior_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TASK_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getTaskType().hashCode();
    if (getPluginIdCount() > 0) {
      hash = (37 * hash) + PLUGIN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPluginIdList().hashCode();
    }
    hash = (37 * hash) + MISSING_PLUGIN_BEHAVIOR_FIELD_NUMBER;
    hash = (53 * hash) + missingPluginBehavior_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.admin.PluginOverride parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.admin.PluginOverride parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.PluginOverride parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.PluginOverride parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.admin.PluginOverride prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This MatchableAttribute configures selecting alternate plugin implementations for a given task type.
   * In addition to an override implementation a selection of fallbacks can be provided or other modes
   * for handling cases where the desired plugin override is not enabled in a given Flyte deployment.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.PluginOverride}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.admin.PluginOverride)
      com.flyteidl.admin.PluginOverrideOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.admin.MatchableResourceProto.internal_static_flyteidl_admin_PluginOverride_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.admin.MatchableResourceProto.internal_static_flyteidl_admin_PluginOverride_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.admin.PluginOverride.class, com.flyteidl.admin.PluginOverride.Builder.class);
    }

    // Construct using com.flyteidl.admin.PluginOverride.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      taskType_ = "";

      pluginId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      missingPluginBehavior_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.admin.MatchableResourceProto.internal_static_flyteidl_admin_PluginOverride_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.admin.PluginOverride getDefaultInstanceForType() {
      return com.flyteidl.admin.PluginOverride.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.admin.PluginOverride build() {
      com.flyteidl.admin.PluginOverride result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.admin.PluginOverride buildPartial() {
      com.flyteidl.admin.PluginOverride result = new com.flyteidl.admin.PluginOverride(this);
      int from_bitField0_ = bitField0_;
      result.taskType_ = taskType_;
      if (((bitField0_ & 0x00000001) != 0)) {
        pluginId_ = pluginId_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.pluginId_ = pluginId_;
      result.missingPluginBehavior_ = missingPluginBehavior_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.admin.PluginOverride) {
        return mergeFrom((com.flyteidl.admin.PluginOverride)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.admin.PluginOverride other) {
      if (other == com.flyteidl.admin.PluginOverride.getDefaultInstance()) return this;
      if (!other.getTaskType().isEmpty()) {
        taskType_ = other.taskType_;
        onChanged();
      }
      if (!other.pluginId_.isEmpty()) {
        if (pluginId_.isEmpty()) {
          pluginId_ = other.pluginId_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensurePluginIdIsMutable();
          pluginId_.addAll(other.pluginId_);
        }
        onChanged();
      }
      if (other.missingPluginBehavior_ != 0) {
        setMissingPluginBehaviorValue(other.getMissingPluginBehaviorValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.admin.PluginOverride parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.admin.PluginOverride) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object taskType_ = "";
    /**
     * <pre>
     * A predefined yet extensible Task type identifier.
     * </pre>
     *
     * <code>string task_type = 1 [json_name = "taskType"];</code>
     * @return The taskType.
     */
    public java.lang.String getTaskType() {
      java.lang.Object ref = taskType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        taskType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A predefined yet extensible Task type identifier.
     * </pre>
     *
     * <code>string task_type = 1 [json_name = "taskType"];</code>
     * @return The bytes for taskType.
     */
    public com.google.protobuf.ByteString
        getTaskTypeBytes() {
      java.lang.Object ref = taskType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A predefined yet extensible Task type identifier.
     * </pre>
     *
     * <code>string task_type = 1 [json_name = "taskType"];</code>
     * @param value The taskType to set.
     * @return This builder for chaining.
     */
    public Builder setTaskType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      taskType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A predefined yet extensible Task type identifier.
     * </pre>
     *
     * <code>string task_type = 1 [json_name = "taskType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTaskType() {
      
      taskType_ = getDefaultInstance().getTaskType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A predefined yet extensible Task type identifier.
     * </pre>
     *
     * <code>string task_type = 1 [json_name = "taskType"];</code>
     * @param value The bytes for taskType to set.
     * @return This builder for chaining.
     */
    public Builder setTaskTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      taskType_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList pluginId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensurePluginIdIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        pluginId_ = new com.google.protobuf.LazyStringArrayList(pluginId_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @return A list containing the pluginId.
     */
    public com.google.protobuf.ProtocolStringList
        getPluginIdList() {
      return pluginId_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @return The count of pluginId.
     */
    public int getPluginIdCount() {
      return pluginId_.size();
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @param index The index of the element to return.
     * @return The pluginId at the given index.
     */
    public java.lang.String getPluginId(int index) {
      return pluginId_.get(index);
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the pluginId at the given index.
     */
    public com.google.protobuf.ByteString
        getPluginIdBytes(int index) {
      return pluginId_.getByteString(index);
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @param index The index to set the value at.
     * @param value The pluginId to set.
     * @return This builder for chaining.
     */
    public Builder setPluginId(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePluginIdIsMutable();
      pluginId_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @param value The pluginId to add.
     * @return This builder for chaining.
     */
    public Builder addPluginId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePluginIdIsMutable();
      pluginId_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @param values The pluginId to add.
     * @return This builder for chaining.
     */
    public Builder addAllPluginId(
        java.lang.Iterable<java.lang.String> values) {
      ensurePluginIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pluginId_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPluginId() {
      pluginId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A set of plugin ids which should handle tasks of this type instead of the default registered plugin. The list will be tried in order until a plugin is found with that id.
     * </pre>
     *
     * <code>repeated string plugin_id = 2 [json_name = "pluginId"];</code>
     * @param value The bytes of the pluginId to add.
     * @return This builder for chaining.
     */
    public Builder addPluginIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensurePluginIdIsMutable();
      pluginId_.add(value);
      onChanged();
      return this;
    }

    private int missingPluginBehavior_ = 0;
    /**
     * <pre>
     * Defines the behavior when no plugin from the plugin_id list is not found.
     * </pre>
     *
     * <code>.flyteidl.admin.PluginOverride.MissingPluginBehavior missing_plugin_behavior = 4 [json_name = "missingPluginBehavior"];</code>
     * @return The enum numeric value on the wire for missingPluginBehavior.
     */
    @java.lang.Override public int getMissingPluginBehaviorValue() {
      return missingPluginBehavior_;
    }
    /**
     * <pre>
     * Defines the behavior when no plugin from the plugin_id list is not found.
     * </pre>
     *
     * <code>.flyteidl.admin.PluginOverride.MissingPluginBehavior missing_plugin_behavior = 4 [json_name = "missingPluginBehavior"];</code>
     * @param value The enum numeric value on the wire for missingPluginBehavior to set.
     * @return This builder for chaining.
     */
    public Builder setMissingPluginBehaviorValue(int value) {
      
      missingPluginBehavior_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the behavior when no plugin from the plugin_id list is not found.
     * </pre>
     *
     * <code>.flyteidl.admin.PluginOverride.MissingPluginBehavior missing_plugin_behavior = 4 [json_name = "missingPluginBehavior"];</code>
     * @return The missingPluginBehavior.
     */
    @java.lang.Override
    public com.flyteidl.admin.PluginOverride.MissingPluginBehavior getMissingPluginBehavior() {
      @SuppressWarnings("deprecation")
      com.flyteidl.admin.PluginOverride.MissingPluginBehavior result = com.flyteidl.admin.PluginOverride.MissingPluginBehavior.valueOf(missingPluginBehavior_);
      return result == null ? com.flyteidl.admin.PluginOverride.MissingPluginBehavior.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Defines the behavior when no plugin from the plugin_id list is not found.
     * </pre>
     *
     * <code>.flyteidl.admin.PluginOverride.MissingPluginBehavior missing_plugin_behavior = 4 [json_name = "missingPluginBehavior"];</code>
     * @param value The missingPluginBehavior to set.
     * @return This builder for chaining.
     */
    public Builder setMissingPluginBehavior(com.flyteidl.admin.PluginOverride.MissingPluginBehavior value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      missingPluginBehavior_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the behavior when no plugin from the plugin_id list is not found.
     * </pre>
     *
     * <code>.flyteidl.admin.PluginOverride.MissingPluginBehavior missing_plugin_behavior = 4 [json_name = "missingPluginBehavior"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMissingPluginBehavior() {
      
      missingPluginBehavior_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.admin.PluginOverride)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.admin.PluginOverride)
  private static final com.flyteidl.admin.PluginOverride DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.admin.PluginOverride();
  }

  public static com.flyteidl.admin.PluginOverride getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PluginOverride>
      PARSER = new com.google.protobuf.AbstractParser<PluginOverride>() {
    @java.lang.Override
    public PluginOverride parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PluginOverride(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PluginOverride> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PluginOverride> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.admin.PluginOverride getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

