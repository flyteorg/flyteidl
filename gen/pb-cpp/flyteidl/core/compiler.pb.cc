// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/compiler.proto

#include "flyteidl/core/compiler.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace core {
constexpr ConnectionSet_IdList::ConnectionSet_IdList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ids_(){}
struct ConnectionSet_IdListDefaultTypeInternal {
  constexpr ConnectionSet_IdListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConnectionSet_IdListDefaultTypeInternal() {}
  union {
    ConnectionSet_IdList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConnectionSet_IdListDefaultTypeInternal _ConnectionSet_IdList_default_instance_;
constexpr ConnectionSet_DownstreamEntry_DoNotUse::ConnectionSet_DownstreamEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ConnectionSet_DownstreamEntry_DoNotUseDefaultTypeInternal {
  constexpr ConnectionSet_DownstreamEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConnectionSet_DownstreamEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConnectionSet_DownstreamEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConnectionSet_DownstreamEntry_DoNotUseDefaultTypeInternal _ConnectionSet_DownstreamEntry_DoNotUse_default_instance_;
constexpr ConnectionSet_UpstreamEntry_DoNotUse::ConnectionSet_UpstreamEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ConnectionSet_UpstreamEntry_DoNotUseDefaultTypeInternal {
  constexpr ConnectionSet_UpstreamEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConnectionSet_UpstreamEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConnectionSet_UpstreamEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConnectionSet_UpstreamEntry_DoNotUseDefaultTypeInternal _ConnectionSet_UpstreamEntry_DoNotUse_default_instance_;
constexpr ConnectionSet::ConnectionSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : downstream_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , upstream_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ConnectionSetDefaultTypeInternal {
  constexpr ConnectionSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConnectionSetDefaultTypeInternal() {}
  union {
    ConnectionSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConnectionSetDefaultTypeInternal _ConnectionSet_default_instance_;
constexpr CompiledWorkflow::CompiledWorkflow(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : template__(nullptr)
  , connections_(nullptr){}
struct CompiledWorkflowDefaultTypeInternal {
  constexpr CompiledWorkflowDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CompiledWorkflowDefaultTypeInternal() {}
  union {
    CompiledWorkflow _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CompiledWorkflowDefaultTypeInternal _CompiledWorkflow_default_instance_;
constexpr CompiledTask::CompiledTask(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : template__(nullptr){}
struct CompiledTaskDefaultTypeInternal {
  constexpr CompiledTaskDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CompiledTaskDefaultTypeInternal() {}
  union {
    CompiledTask _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CompiledTaskDefaultTypeInternal _CompiledTask_default_instance_;
constexpr CompiledWorkflowClosure::CompiledWorkflowClosure(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sub_workflows_()
  , tasks_()
  , primary_(nullptr){}
struct CompiledWorkflowClosureDefaultTypeInternal {
  constexpr CompiledWorkflowClosureDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CompiledWorkflowClosureDefaultTypeInternal() {}
  union {
    CompiledWorkflowClosure _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CompiledWorkflowClosureDefaultTypeInternal _CompiledWorkflowClosure_default_instance_;
}  // namespace core
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fcore_2fcompiler_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fcore_2fcompiler_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fcore_2fcompiler_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_IdList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_IdList, ids_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet, downstream_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ConnectionSet, upstream_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledWorkflow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledWorkflow, template__),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledWorkflow, connections_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledTask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledTask, template__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledWorkflowClosure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledWorkflowClosure, primary_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledWorkflowClosure, sub_workflows_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::CompiledWorkflowClosure, tasks_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::core::ConnectionSet_IdList)},
  { 7, 15, -1, sizeof(::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse)},
  { 17, 25, -1, sizeof(::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse)},
  { 27, -1, -1, sizeof(::flyteidl::core::ConnectionSet)},
  { 35, -1, -1, sizeof(::flyteidl::core::CompiledWorkflow)},
  { 43, -1, -1, sizeof(::flyteidl::core::CompiledTask)},
  { 50, -1, -1, sizeof(::flyteidl::core::CompiledWorkflowClosure)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_ConnectionSet_IdList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_ConnectionSet_DownstreamEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_ConnectionSet_UpstreamEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_ConnectionSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_CompiledWorkflow_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_CompiledTask_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_CompiledWorkflowClosure_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fcore_2fcompiler_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034flyteidl/core/compiler.proto\022\rflyteidl"
  ".core\032\034flyteidl/core/workflow.proto\032\031fly"
  "teidl/core/tasks.proto\"\207\003\n\rConnectionSet"
  "\022L\n\ndownstream\030\007 \003(\0132,.flyteidl.core.Con"
  "nectionSet.DownstreamEntryR\ndownstream\022F"
  "\n\010upstream\030\010 \003(\0132*.flyteidl.core.Connect"
  "ionSet.UpstreamEntryR\010upstream\032\032\n\006IdList"
  "\022\020\n\003ids\030\001 \003(\tR\003ids\032b\n\017DownstreamEntry\022\020\n"
  "\003key\030\001 \001(\tR\003key\0229\n\005value\030\002 \001(\0132#.flyteid"
  "l.core.ConnectionSet.IdListR\005value:\0028\001\032`"
  "\n\rUpstreamEntry\022\020\n\003key\030\001 \001(\tR\003key\0229\n\005val"
  "ue\030\002 \001(\0132#.flyteidl.core.ConnectionSet.I"
  "dListR\005value:\0028\001\"\217\001\n\020CompiledWorkflow\022;\n"
  "\010template\030\001 \001(\0132\037.flyteidl.core.Workflow"
  "TemplateR\010template\022>\n\013connections\030\002 \001(\0132"
  "\034.flyteidl.core.ConnectionSetR\013connectio"
  "ns\"G\n\014CompiledTask\0227\n\010template\030\001 \001(\0132\033.f"
  "lyteidl.core.TaskTemplateR\010template\"\315\001\n\027"
  "CompiledWorkflowClosure\0229\n\007primary\030\001 \001(\013"
  "2\037.flyteidl.core.CompiledWorkflowR\007prima"
  "ry\022D\n\rsub_workflows\030\002 \003(\0132\037.flyteidl.cor"
  "e.CompiledWorkflowR\014subWorkflows\0221\n\005task"
  "s\030\003 \003(\0132\033.flyteidl.core.CompiledTaskR\005ta"
  "sksB\260\001\n\021com.flyteidl.coreB\rCompilerProto"
  "H\002Z4github.com/flyteorg/flyteidl/gen/pb-"
  "go/flyteidl/core\370\001\000\242\002\003FCX\252\002\rFlyteidl.Cor"
  "e\312\002\rFlyteidl\\Core\342\002\031Flyteidl\\Core\\GPBMet"
  "adata\352\002\016Flyteidl::Coreb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_deps[2] = {
  &::descriptor_table_flyteidl_2fcore_2ftasks_2eproto,
  &::descriptor_table_flyteidl_2fcore_2fworkflow_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fcore_2fcompiler_2eproto = {
  false, false, 1110, descriptor_table_protodef_flyteidl_2fcore_2fcompiler_2eproto, "flyteidl/core/compiler.proto", 
  &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once, descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_deps, 2, 7,
  schemas, file_default_instances, TableStruct_flyteidl_2fcore_2fcompiler_2eproto::offsets,
  file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto, file_level_enum_descriptors_flyteidl_2fcore_2fcompiler_2eproto, file_level_service_descriptors_flyteidl_2fcore_2fcompiler_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter() {
  return &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fcore_2fcompiler_2eproto(&descriptor_table_flyteidl_2fcore_2fcompiler_2eproto);
namespace flyteidl {
namespace core {

// ===================================================================

class ConnectionSet_IdList::_Internal {
 public:
};

ConnectionSet_IdList::ConnectionSet_IdList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ids_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.ConnectionSet.IdList)
}
ConnectionSet_IdList::ConnectionSet_IdList(const ConnectionSet_IdList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ConnectionSet.IdList)
}

inline void ConnectionSet_IdList::SharedCtor() {
}

ConnectionSet_IdList::~ConnectionSet_IdList() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ConnectionSet.IdList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConnectionSet_IdList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ConnectionSet_IdList::ArenaDtor(void* object) {
  ConnectionSet_IdList* _this = reinterpret_cast< ConnectionSet_IdList* >(object);
  (void)_this;
}
void ConnectionSet_IdList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConnectionSet_IdList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConnectionSet_IdList::InternalSwap(ConnectionSet_IdList* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectionSet_IdList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter, &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[0]);
}

// ===================================================================

ConnectionSet_DownstreamEntry_DoNotUse::ConnectionSet_DownstreamEntry_DoNotUse() {}
ConnectionSet_DownstreamEntry_DoNotUse::ConnectionSet_DownstreamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ConnectionSet_DownstreamEntry_DoNotUse::MergeFrom(const ConnectionSet_DownstreamEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ConnectionSet_DownstreamEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter, &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[1]);
}

// ===================================================================

ConnectionSet_UpstreamEntry_DoNotUse::ConnectionSet_UpstreamEntry_DoNotUse() {}
ConnectionSet_UpstreamEntry_DoNotUse::ConnectionSet_UpstreamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ConnectionSet_UpstreamEntry_DoNotUse::MergeFrom(const ConnectionSet_UpstreamEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ConnectionSet_UpstreamEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter, &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[2]);
}

// ===================================================================

class ConnectionSet::_Internal {
 public:
};

ConnectionSet::ConnectionSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  downstream_(arena),
  upstream_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.ConnectionSet)
}
ConnectionSet::ConnectionSet(const ConnectionSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  downstream_.MergeFrom(from.downstream_);
  upstream_.MergeFrom(from.upstream_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ConnectionSet)
}

inline void ConnectionSet::SharedCtor() {
}

ConnectionSet::~ConnectionSet() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ConnectionSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConnectionSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ConnectionSet::ArenaDtor(void* object) {
  ConnectionSet* _this = reinterpret_cast< ConnectionSet* >(object);
  (void)_this;
  _this->downstream_. ~MapField();
  _this->upstream_. ~MapField();
}
inline void ConnectionSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ConnectionSet::ArenaDtor);
  }
}
void ConnectionSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConnectionSet::InternalSwap(ConnectionSet* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectionSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter, &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[3]);
}

// ===================================================================

class CompiledWorkflow::_Internal {
 public:
  static const ::flyteidl::core::WorkflowTemplate& template_(const CompiledWorkflow* msg);
  static const ::flyteidl::core::ConnectionSet& connections(const CompiledWorkflow* msg);
};

const ::flyteidl::core::WorkflowTemplate&
CompiledWorkflow::_Internal::template_(const CompiledWorkflow* msg) {
  return *msg->template__;
}
const ::flyteidl::core::ConnectionSet&
CompiledWorkflow::_Internal::connections(const CompiledWorkflow* msg) {
  return *msg->connections_;
}
void CompiledWorkflow::clear_template_() {
  if (GetArenaForAllocation() == nullptr && template__ != nullptr) {
    delete template__;
  }
  template__ = nullptr;
}
CompiledWorkflow::CompiledWorkflow(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.CompiledWorkflow)
}
CompiledWorkflow::CompiledWorkflow(const CompiledWorkflow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_template_()) {
    template__ = new ::flyteidl::core::WorkflowTemplate(*from.template__);
  } else {
    template__ = nullptr;
  }
  if (from._internal_has_connections()) {
    connections_ = new ::flyteidl::core::ConnectionSet(*from.connections_);
  } else {
    connections_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.CompiledWorkflow)
}

inline void CompiledWorkflow::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&template__) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&connections_) -
    reinterpret_cast<char*>(&template__)) + sizeof(connections_));
}

CompiledWorkflow::~CompiledWorkflow() {
  // @@protoc_insertion_point(destructor:flyteidl.core.CompiledWorkflow)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CompiledWorkflow::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete template__;
  if (this != internal_default_instance()) delete connections_;
}

void CompiledWorkflow::ArenaDtor(void* object) {
  CompiledWorkflow* _this = reinterpret_cast< CompiledWorkflow* >(object);
  (void)_this;
}
void CompiledWorkflow::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompiledWorkflow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CompiledWorkflow::InternalSwap(CompiledWorkflow* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata CompiledWorkflow::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter, &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[4]);
}

// ===================================================================

class CompiledTask::_Internal {
 public:
  static const ::flyteidl::core::TaskTemplate& template_(const CompiledTask* msg);
};

const ::flyteidl::core::TaskTemplate&
CompiledTask::_Internal::template_(const CompiledTask* msg) {
  return *msg->template__;
}
void CompiledTask::clear_template_() {
  if (GetArenaForAllocation() == nullptr && template__ != nullptr) {
    delete template__;
  }
  template__ = nullptr;
}
CompiledTask::CompiledTask(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.CompiledTask)
}
CompiledTask::CompiledTask(const CompiledTask& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_template_()) {
    template__ = new ::flyteidl::core::TaskTemplate(*from.template__);
  } else {
    template__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.CompiledTask)
}

inline void CompiledTask::SharedCtor() {
template__ = nullptr;
}

CompiledTask::~CompiledTask() {
  // @@protoc_insertion_point(destructor:flyteidl.core.CompiledTask)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CompiledTask::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete template__;
}

void CompiledTask::ArenaDtor(void* object) {
  CompiledTask* _this = reinterpret_cast< CompiledTask* >(object);
  (void)_this;
}
void CompiledTask::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompiledTask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CompiledTask::InternalSwap(CompiledTask* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata CompiledTask::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter, &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[5]);
}

// ===================================================================

class CompiledWorkflowClosure::_Internal {
 public:
  static const ::flyteidl::core::CompiledWorkflow& primary(const CompiledWorkflowClosure* msg);
};

const ::flyteidl::core::CompiledWorkflow&
CompiledWorkflowClosure::_Internal::primary(const CompiledWorkflowClosure* msg) {
  return *msg->primary_;
}
CompiledWorkflowClosure::CompiledWorkflowClosure(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  sub_workflows_(arena),
  tasks_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.CompiledWorkflowClosure)
}
CompiledWorkflowClosure::CompiledWorkflowClosure(const CompiledWorkflowClosure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sub_workflows_(from.sub_workflows_),
      tasks_(from.tasks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_primary()) {
    primary_ = new ::flyteidl::core::CompiledWorkflow(*from.primary_);
  } else {
    primary_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.CompiledWorkflowClosure)
}

inline void CompiledWorkflowClosure::SharedCtor() {
primary_ = nullptr;
}

CompiledWorkflowClosure::~CompiledWorkflowClosure() {
  // @@protoc_insertion_point(destructor:flyteidl.core.CompiledWorkflowClosure)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CompiledWorkflowClosure::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete primary_;
}

void CompiledWorkflowClosure::ArenaDtor(void* object) {
  CompiledWorkflowClosure* _this = reinterpret_cast< CompiledWorkflowClosure* >(object);
  (void)_this;
}
void CompiledWorkflowClosure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompiledWorkflowClosure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CompiledWorkflowClosure::InternalSwap(CompiledWorkflowClosure* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata CompiledWorkflowClosure::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_getter, &descriptor_table_flyteidl_2fcore_2fcompiler_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2fcompiler_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::core::ConnectionSet_IdList* Arena::CreateMaybeMessage< ::flyteidl::core::ConnectionSet_IdList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::ConnectionSet_IdList >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::ConnectionSet_DownstreamEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::ConnectionSet_UpstreamEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::ConnectionSet* Arena::CreateMaybeMessage< ::flyteidl::core::ConnectionSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::ConnectionSet >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::CompiledWorkflow* Arena::CreateMaybeMessage< ::flyteidl::core::CompiledWorkflow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::CompiledWorkflow >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::CompiledTask* Arena::CreateMaybeMessage< ::flyteidl::core::CompiledTask >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::CompiledTask >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::CompiledWorkflowClosure* Arena::CreateMaybeMessage< ::flyteidl::core::CompiledWorkflowClosure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::CompiledWorkflowClosure >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
