// source: flyteidl/admin/matchable_resource.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.flyteidl.admin.MatchingAttributes');
goog.provide('proto.flyteidl.admin.MatchingAttributes.TargetCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.flyteidl.admin.ClusterAssignment');
goog.require('proto.flyteidl.admin.ClusterResourceAttributes');
goog.require('proto.flyteidl.admin.ExecutionClusterLabel');
goog.require('proto.flyteidl.admin.ExecutionQueueAttributes');
goog.require('proto.flyteidl.admin.PluginOverrides');
goog.require('proto.flyteidl.admin.TaskResourceAttributes');
goog.require('proto.flyteidl.admin.WorkflowExecutionConfig');
goog.require('proto.flyteidl.core.QualityOfService');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.admin.MatchingAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.admin.MatchingAttributes.oneofGroups_);
};
goog.inherits(proto.flyteidl.admin.MatchingAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.admin.MatchingAttributes.displayName = 'proto.flyteidl.admin.MatchingAttributes';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.admin.MatchingAttributes.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.flyteidl.admin.MatchingAttributes.TargetCase = {
  TARGET_NOT_SET: 0,
  TASK_RESOURCE_ATTRIBUTES: 1,
  CLUSTER_RESOURCE_ATTRIBUTES: 2,
  EXECUTION_QUEUE_ATTRIBUTES: 3,
  EXECUTION_CLUSTER_LABEL: 4,
  QUALITY_OF_SERVICE: 5,
  PLUGIN_OVERRIDES: 6,
  WORKFLOW_EXECUTION_CONFIG: 7,
  CLUSTER_ASSIGNMENT: 8
};

/**
 * @return {proto.flyteidl.admin.MatchingAttributes.TargetCase}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getTargetCase = function() {
  return /** @type {proto.flyteidl.admin.MatchingAttributes.TargetCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.admin.MatchingAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.admin.MatchingAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.MatchingAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskResourceAttributes: (f = msg.getTaskResourceAttributes()) && proto.flyteidl.admin.TaskResourceAttributes.toObject(includeInstance, f),
    clusterResourceAttributes: (f = msg.getClusterResourceAttributes()) && proto.flyteidl.admin.ClusterResourceAttributes.toObject(includeInstance, f),
    executionQueueAttributes: (f = msg.getExecutionQueueAttributes()) && proto.flyteidl.admin.ExecutionQueueAttributes.toObject(includeInstance, f),
    executionClusterLabel: (f = msg.getExecutionClusterLabel()) && proto.flyteidl.admin.ExecutionClusterLabel.toObject(includeInstance, f),
    qualityOfService: (f = msg.getQualityOfService()) && proto.flyteidl.core.QualityOfService.toObject(includeInstance, f),
    pluginOverrides: (f = msg.getPluginOverrides()) && proto.flyteidl.admin.PluginOverrides.toObject(includeInstance, f),
    workflowExecutionConfig: (f = msg.getWorkflowExecutionConfig()) && proto.flyteidl.admin.WorkflowExecutionConfig.toObject(includeInstance, f),
    clusterAssignment: (f = msg.getClusterAssignment()) && proto.flyteidl.admin.ClusterAssignment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.admin.MatchingAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.admin.MatchingAttributes;
  return proto.flyteidl.admin.MatchingAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.admin.MatchingAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.admin.MatchingAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.admin.TaskResourceAttributes;
      reader.readMessage(value,proto.flyteidl.admin.TaskResourceAttributes.deserializeBinaryFromReader);
      msg.setTaskResourceAttributes(value);
      break;
    case 2:
      var value = new proto.flyteidl.admin.ClusterResourceAttributes;
      reader.readMessage(value,proto.flyteidl.admin.ClusterResourceAttributes.deserializeBinaryFromReader);
      msg.setClusterResourceAttributes(value);
      break;
    case 3:
      var value = new proto.flyteidl.admin.ExecutionQueueAttributes;
      reader.readMessage(value,proto.flyteidl.admin.ExecutionQueueAttributes.deserializeBinaryFromReader);
      msg.setExecutionQueueAttributes(value);
      break;
    case 4:
      var value = new proto.flyteidl.admin.ExecutionClusterLabel;
      reader.readMessage(value,proto.flyteidl.admin.ExecutionClusterLabel.deserializeBinaryFromReader);
      msg.setExecutionClusterLabel(value);
      break;
    case 5:
      var value = new proto.flyteidl.core.QualityOfService;
      reader.readMessage(value,proto.flyteidl.core.QualityOfService.deserializeBinaryFromReader);
      msg.setQualityOfService(value);
      break;
    case 6:
      var value = new proto.flyteidl.admin.PluginOverrides;
      reader.readMessage(value,proto.flyteidl.admin.PluginOverrides.deserializeBinaryFromReader);
      msg.setPluginOverrides(value);
      break;
    case 7:
      var value = new proto.flyteidl.admin.WorkflowExecutionConfig;
      reader.readMessage(value,proto.flyteidl.admin.WorkflowExecutionConfig.deserializeBinaryFromReader);
      msg.setWorkflowExecutionConfig(value);
      break;
    case 8:
      var value = new proto.flyteidl.admin.ClusterAssignment;
      reader.readMessage(value,proto.flyteidl.admin.ClusterAssignment.deserializeBinaryFromReader);
      msg.setClusterAssignment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.admin.MatchingAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.admin.MatchingAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.admin.MatchingAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskResourceAttributes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.admin.TaskResourceAttributes.serializeBinaryToWriter
    );
  }
  f = message.getClusterResourceAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.admin.ClusterResourceAttributes.serializeBinaryToWriter
    );
  }
  f = message.getExecutionQueueAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.admin.ExecutionQueueAttributes.serializeBinaryToWriter
    );
  }
  f = message.getExecutionClusterLabel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flyteidl.admin.ExecutionClusterLabel.serializeBinaryToWriter
    );
  }
  f = message.getQualityOfService();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flyteidl.core.QualityOfService.serializeBinaryToWriter
    );
  }
  f = message.getPluginOverrides();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.flyteidl.admin.PluginOverrides.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowExecutionConfig();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.flyteidl.admin.WorkflowExecutionConfig.serializeBinaryToWriter
    );
  }
  f = message.getClusterAssignment();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.flyteidl.admin.ClusterAssignment.serializeBinaryToWriter
    );
  }
};


/**
 * optional TaskResourceAttributes task_resource_attributes = 1;
 * @return {?proto.flyteidl.admin.TaskResourceAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getTaskResourceAttributes = function() {
  return /** @type{?proto.flyteidl.admin.TaskResourceAttributes} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.TaskResourceAttributes, 1));
};


/**
 * @param {?proto.flyteidl.admin.TaskResourceAttributes|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setTaskResourceAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearTaskResourceAttributes = function() {
  return this.setTaskResourceAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasTaskResourceAttributes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClusterResourceAttributes cluster_resource_attributes = 2;
 * @return {?proto.flyteidl.admin.ClusterResourceAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getClusterResourceAttributes = function() {
  return /** @type{?proto.flyteidl.admin.ClusterResourceAttributes} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.ClusterResourceAttributes, 2));
};


/**
 * @param {?proto.flyteidl.admin.ClusterResourceAttributes|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setClusterResourceAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearClusterResourceAttributes = function() {
  return this.setClusterResourceAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasClusterResourceAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ExecutionQueueAttributes execution_queue_attributes = 3;
 * @return {?proto.flyteidl.admin.ExecutionQueueAttributes}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getExecutionQueueAttributes = function() {
  return /** @type{?proto.flyteidl.admin.ExecutionQueueAttributes} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.ExecutionQueueAttributes, 3));
};


/**
 * @param {?proto.flyteidl.admin.ExecutionQueueAttributes|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setExecutionQueueAttributes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearExecutionQueueAttributes = function() {
  return this.setExecutionQueueAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasExecutionQueueAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ExecutionClusterLabel execution_cluster_label = 4;
 * @return {?proto.flyteidl.admin.ExecutionClusterLabel}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getExecutionClusterLabel = function() {
  return /** @type{?proto.flyteidl.admin.ExecutionClusterLabel} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.ExecutionClusterLabel, 4));
};


/**
 * @param {?proto.flyteidl.admin.ExecutionClusterLabel|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setExecutionClusterLabel = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearExecutionClusterLabel = function() {
  return this.setExecutionClusterLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasExecutionClusterLabel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional flyteidl.core.QualityOfService quality_of_service = 5;
 * @return {?proto.flyteidl.core.QualityOfService}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getQualityOfService = function() {
  return /** @type{?proto.flyteidl.core.QualityOfService} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.QualityOfService, 5));
};


/**
 * @param {?proto.flyteidl.core.QualityOfService|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setQualityOfService = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearQualityOfService = function() {
  return this.setQualityOfService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasQualityOfService = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PluginOverrides plugin_overrides = 6;
 * @return {?proto.flyteidl.admin.PluginOverrides}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getPluginOverrides = function() {
  return /** @type{?proto.flyteidl.admin.PluginOverrides} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.PluginOverrides, 6));
};


/**
 * @param {?proto.flyteidl.admin.PluginOverrides|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setPluginOverrides = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearPluginOverrides = function() {
  return this.setPluginOverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasPluginOverrides = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional WorkflowExecutionConfig workflow_execution_config = 7;
 * @return {?proto.flyteidl.admin.WorkflowExecutionConfig}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getWorkflowExecutionConfig = function() {
  return /** @type{?proto.flyteidl.admin.WorkflowExecutionConfig} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.WorkflowExecutionConfig, 7));
};


/**
 * @param {?proto.flyteidl.admin.WorkflowExecutionConfig|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setWorkflowExecutionConfig = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearWorkflowExecutionConfig = function() {
  return this.setWorkflowExecutionConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasWorkflowExecutionConfig = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ClusterAssignment cluster_assignment = 8;
 * @return {?proto.flyteidl.admin.ClusterAssignment}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.getClusterAssignment = function() {
  return /** @type{?proto.flyteidl.admin.ClusterAssignment} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.admin.ClusterAssignment, 8));
};


/**
 * @param {?proto.flyteidl.admin.ClusterAssignment|undefined} value
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
*/
proto.flyteidl.admin.MatchingAttributes.prototype.setClusterAssignment = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.flyteidl.admin.MatchingAttributes.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.admin.MatchingAttributes} returns this
 */
proto.flyteidl.admin.MatchingAttributes.prototype.clearClusterAssignment = function() {
  return this.setClusterAssignment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.admin.MatchingAttributes.prototype.hasClusterAssignment = function() {
  return jspb.Message.getField(this, 8) != null;
};


