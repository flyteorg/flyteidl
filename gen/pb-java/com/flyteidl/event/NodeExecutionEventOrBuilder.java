// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/event/event.proto

package com.flyteidl.event;

public interface NodeExecutionEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.event.NodeExecutionEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique identifier for this node execution
   * </pre>
   *
   * <code>.flyteidl.core.NodeExecutionIdentifier id = 1 [json_name = "id"];</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * Unique identifier for this node execution
   * </pre>
   *
   * <code>.flyteidl.core.NodeExecutionIdentifier id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  com.flyteidl.core.NodeExecutionIdentifier getId();
  /**
   * <pre>
   * Unique identifier for this node execution
   * </pre>
   *
   * <code>.flyteidl.core.NodeExecutionIdentifier id = 1 [json_name = "id"];</code>
   */
  com.flyteidl.core.NodeExecutionIdentifierOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * the id of the originator (Propeller) of the event
   * </pre>
   *
   * <code>string producer_id = 2 [json_name = "producerId"];</code>
   * @return The producerId.
   */
  java.lang.String getProducerId();
  /**
   * <pre>
   * the id of the originator (Propeller) of the event
   * </pre>
   *
   * <code>string producer_id = 2 [json_name = "producerId"];</code>
   * @return The bytes for producerId.
   */
  com.google.protobuf.ByteString
      getProducerIdBytes();

  /**
   * <code>.flyteidl.core.NodeExecution.Phase phase = 3 [json_name = "phase"];</code>
   * @return The enum numeric value on the wire for phase.
   */
  int getPhaseValue();
  /**
   * <code>.flyteidl.core.NodeExecution.Phase phase = 3 [json_name = "phase"];</code>
   * @return The phase.
   */
  com.flyteidl.core.NodeExecution.Phase getPhase();

  /**
   * <pre>
   * This timestamp represents when the original event occurred, it is generated
   * by the executor of the node.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp occurred_at = 4 [json_name = "occurredAt"];</code>
   * @return Whether the occurredAt field is set.
   */
  boolean hasOccurredAt();
  /**
   * <pre>
   * This timestamp represents when the original event occurred, it is generated
   * by the executor of the node.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp occurred_at = 4 [json_name = "occurredAt"];</code>
   * @return The occurredAt.
   */
  com.google.protobuf.Timestamp getOccurredAt();
  /**
   * <pre>
   * This timestamp represents when the original event occurred, it is generated
   * by the executor of the node.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp occurred_at = 4 [json_name = "occurredAt"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getOccurredAtOrBuilder();

  /**
   * <code>string input_uri = 5 [json_name = "inputUri"];</code>
   * @return The inputUri.
   */
  java.lang.String getInputUri();
  /**
   * <code>string input_uri = 5 [json_name = "inputUri"];</code>
   * @return The bytes for inputUri.
   */
  com.google.protobuf.ByteString
      getInputUriBytes();

  /**
   * <pre>
   * URL to the output of the execution, it encodes all the information
   * including Cloud source provider. ie., s3://...
   * </pre>
   *
   * <code>string output_uri = 6 [json_name = "outputUri"];</code>
   * @return Whether the outputUri field is set.
   */
  boolean hasOutputUri();
  /**
   * <pre>
   * URL to the output of the execution, it encodes all the information
   * including Cloud source provider. ie., s3://...
   * </pre>
   *
   * <code>string output_uri = 6 [json_name = "outputUri"];</code>
   * @return The outputUri.
   */
  java.lang.String getOutputUri();
  /**
   * <pre>
   * URL to the output of the execution, it encodes all the information
   * including Cloud source provider. ie., s3://...
   * </pre>
   *
   * <code>string output_uri = 6 [json_name = "outputUri"];</code>
   * @return The bytes for outputUri.
   */
  com.google.protobuf.ByteString
      getOutputUriBytes();

  /**
   * <pre>
   * Error information for the execution
   * </pre>
   *
   * <code>.flyteidl.core.ExecutionError error = 7 [json_name = "error"];</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <pre>
   * Error information for the execution
   * </pre>
   *
   * <code>.flyteidl.core.ExecutionError error = 7 [json_name = "error"];</code>
   * @return The error.
   */
  com.flyteidl.core.ExecutionError getError();
  /**
   * <pre>
   * Error information for the execution
   * </pre>
   *
   * <code>.flyteidl.core.ExecutionError error = 7 [json_name = "error"];</code>
   */
  com.flyteidl.core.ExecutionErrorOrBuilder getErrorOrBuilder();

  /**
   * <pre>
   * Raw output data produced by this node execution.
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap output_data = 15 [json_name = "outputData"];</code>
   * @return Whether the outputData field is set.
   */
  boolean hasOutputData();
  /**
   * <pre>
   * Raw output data produced by this node execution.
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap output_data = 15 [json_name = "outputData"];</code>
   * @return The outputData.
   */
  com.flyteidl.core.LiteralMap getOutputData();
  /**
   * <pre>
   * Raw output data produced by this node execution.
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap output_data = 15 [json_name = "outputData"];</code>
   */
  com.flyteidl.core.LiteralMapOrBuilder getOutputDataOrBuilder();

  /**
   * <code>.flyteidl.event.WorkflowNodeMetadata workflow_node_metadata = 8 [json_name = "workflowNodeMetadata"];</code>
   * @return Whether the workflowNodeMetadata field is set.
   */
  boolean hasWorkflowNodeMetadata();
  /**
   * <code>.flyteidl.event.WorkflowNodeMetadata workflow_node_metadata = 8 [json_name = "workflowNodeMetadata"];</code>
   * @return The workflowNodeMetadata.
   */
  com.flyteidl.event.WorkflowNodeMetadata getWorkflowNodeMetadata();
  /**
   * <code>.flyteidl.event.WorkflowNodeMetadata workflow_node_metadata = 8 [json_name = "workflowNodeMetadata"];</code>
   */
  com.flyteidl.event.WorkflowNodeMetadataOrBuilder getWorkflowNodeMetadataOrBuilder();

  /**
   * <code>.flyteidl.event.TaskNodeMetadata task_node_metadata = 14 [json_name = "taskNodeMetadata"];</code>
   * @return Whether the taskNodeMetadata field is set.
   */
  boolean hasTaskNodeMetadata();
  /**
   * <code>.flyteidl.event.TaskNodeMetadata task_node_metadata = 14 [json_name = "taskNodeMetadata"];</code>
   * @return The taskNodeMetadata.
   */
  com.flyteidl.event.TaskNodeMetadata getTaskNodeMetadata();
  /**
   * <code>.flyteidl.event.TaskNodeMetadata task_node_metadata = 14 [json_name = "taskNodeMetadata"];</code>
   */
  com.flyteidl.event.TaskNodeMetadataOrBuilder getTaskNodeMetadataOrBuilder();

  /**
   * <pre>
   * [To be deprecated] Specifies which task (if any) launched this node.
   * </pre>
   *
   * <code>.flyteidl.event.ParentTaskExecutionMetadata parent_task_metadata = 9 [json_name = "parentTaskMetadata"];</code>
   * @return Whether the parentTaskMetadata field is set.
   */
  boolean hasParentTaskMetadata();
  /**
   * <pre>
   * [To be deprecated] Specifies which task (if any) launched this node.
   * </pre>
   *
   * <code>.flyteidl.event.ParentTaskExecutionMetadata parent_task_metadata = 9 [json_name = "parentTaskMetadata"];</code>
   * @return The parentTaskMetadata.
   */
  com.flyteidl.event.ParentTaskExecutionMetadata getParentTaskMetadata();
  /**
   * <pre>
   * [To be deprecated] Specifies which task (if any) launched this node.
   * </pre>
   *
   * <code>.flyteidl.event.ParentTaskExecutionMetadata parent_task_metadata = 9 [json_name = "parentTaskMetadata"];</code>
   */
  com.flyteidl.event.ParentTaskExecutionMetadataOrBuilder getParentTaskMetadataOrBuilder();

  /**
   * <pre>
   * Specifies the parent node of the current node execution. Node executions at level zero will not have a parent node.
   * </pre>
   *
   * <code>.flyteidl.event.ParentNodeExecutionMetadata parent_node_metadata = 10 [json_name = "parentNodeMetadata"];</code>
   * @return Whether the parentNodeMetadata field is set.
   */
  boolean hasParentNodeMetadata();
  /**
   * <pre>
   * Specifies the parent node of the current node execution. Node executions at level zero will not have a parent node.
   * </pre>
   *
   * <code>.flyteidl.event.ParentNodeExecutionMetadata parent_node_metadata = 10 [json_name = "parentNodeMetadata"];</code>
   * @return The parentNodeMetadata.
   */
  com.flyteidl.event.ParentNodeExecutionMetadata getParentNodeMetadata();
  /**
   * <pre>
   * Specifies the parent node of the current node execution. Node executions at level zero will not have a parent node.
   * </pre>
   *
   * <code>.flyteidl.event.ParentNodeExecutionMetadata parent_node_metadata = 10 [json_name = "parentNodeMetadata"];</code>
   */
  com.flyteidl.event.ParentNodeExecutionMetadataOrBuilder getParentNodeMetadataOrBuilder();

  /**
   * <pre>
   * Retry group to indicate grouping of nodes by retries
   * </pre>
   *
   * <code>string retry_group = 11 [json_name = "retryGroup"];</code>
   * @return The retryGroup.
   */
  java.lang.String getRetryGroup();
  /**
   * <pre>
   * Retry group to indicate grouping of nodes by retries
   * </pre>
   *
   * <code>string retry_group = 11 [json_name = "retryGroup"];</code>
   * @return The bytes for retryGroup.
   */
  com.google.protobuf.ByteString
      getRetryGroupBytes();

  /**
   * <pre>
   * Identifier of the node in the original workflow/graph
   * This maps to value of WorkflowTemplate.nodes[X].id
   * </pre>
   *
   * <code>string spec_node_id = 12 [json_name = "specNodeId"];</code>
   * @return The specNodeId.
   */
  java.lang.String getSpecNodeId();
  /**
   * <pre>
   * Identifier of the node in the original workflow/graph
   * This maps to value of WorkflowTemplate.nodes[X].id
   * </pre>
   *
   * <code>string spec_node_id = 12 [json_name = "specNodeId"];</code>
   * @return The bytes for specNodeId.
   */
  com.google.protobuf.ByteString
      getSpecNodeIdBytes();

  /**
   * <pre>
   * Friendly readable name for the node
   * </pre>
   *
   * <code>string node_name = 13 [json_name = "nodeName"];</code>
   * @return The nodeName.
   */
  java.lang.String getNodeName();
  /**
   * <pre>
   * Friendly readable name for the node
   * </pre>
   *
   * <code>string node_name = 13 [json_name = "nodeName"];</code>
   * @return The bytes for nodeName.
   */
  com.google.protobuf.ByteString
      getNodeNameBytes();

  /**
   * <code>int32 event_version = 16 [json_name = "eventVersion"];</code>
   * @return The eventVersion.
   */
  int getEventVersion();

  /**
   * <pre>
   * Whether this node launched a subworkflow.
   * </pre>
   *
   * <code>bool is_parent = 17 [json_name = "isParent"];</code>
   * @return The isParent.
   */
  boolean getIsParent();

  /**
   * <pre>
   * Whether this node yielded a dynamic workflow.
   * </pre>
   *
   * <code>bool is_dynamic = 18 [json_name = "isDynamic"];</code>
   * @return The isDynamic.
   */
  boolean getIsDynamic();

  public com.flyteidl.event.NodeExecutionEvent.OutputResultCase getOutputResultCase();

  public com.flyteidl.event.NodeExecutionEvent.TargetMetadataCase getTargetMetadataCase();
}
