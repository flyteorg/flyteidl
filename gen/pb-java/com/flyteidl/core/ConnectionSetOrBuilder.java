// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/compiler.proto

package com.flyteidl.core;

public interface ConnectionSetOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.core.ConnectionSet)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A list of all the node ids that are downstream from a given node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; downstream = 7 [json_name = "downstream"];</code>
   */
  int getDownstreamCount();
  /**
   * <pre>
   * A list of all the node ids that are downstream from a given node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; downstream = 7 [json_name = "downstream"];</code>
   */
  boolean containsDownstream(
      java.lang.String key);
  /**
   * Use {@link #getDownstreamMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.flyteidl.core.ConnectionSet.IdList>
  getDownstream();
  /**
   * <pre>
   * A list of all the node ids that are downstream from a given node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; downstream = 7 [json_name = "downstream"];</code>
   */
  java.util.Map<java.lang.String, com.flyteidl.core.ConnectionSet.IdList>
  getDownstreamMap();
  /**
   * <pre>
   * A list of all the node ids that are downstream from a given node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; downstream = 7 [json_name = "downstream"];</code>
   */

  com.flyteidl.core.ConnectionSet.IdList getDownstreamOrDefault(
      java.lang.String key,
      com.flyteidl.core.ConnectionSet.IdList defaultValue);
  /**
   * <pre>
   * A list of all the node ids that are downstream from a given node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; downstream = 7 [json_name = "downstream"];</code>
   */

  com.flyteidl.core.ConnectionSet.IdList getDownstreamOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * A list of all the node ids, that are upstream of this node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; upstream = 8 [json_name = "upstream"];</code>
   */
  int getUpstreamCount();
  /**
   * <pre>
   * A list of all the node ids, that are upstream of this node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; upstream = 8 [json_name = "upstream"];</code>
   */
  boolean containsUpstream(
      java.lang.String key);
  /**
   * Use {@link #getUpstreamMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.flyteidl.core.ConnectionSet.IdList>
  getUpstream();
  /**
   * <pre>
   * A list of all the node ids, that are upstream of this node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; upstream = 8 [json_name = "upstream"];</code>
   */
  java.util.Map<java.lang.String, com.flyteidl.core.ConnectionSet.IdList>
  getUpstreamMap();
  /**
   * <pre>
   * A list of all the node ids, that are upstream of this node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; upstream = 8 [json_name = "upstream"];</code>
   */

  com.flyteidl.core.ConnectionSet.IdList getUpstreamOrDefault(
      java.lang.String key,
      com.flyteidl.core.ConnectionSet.IdList defaultValue);
  /**
   * <pre>
   * A list of all the node ids, that are upstream of this node id
   * </pre>
   *
   * <code>map&lt;string, .flyteidl.core.ConnectionSet.IdList&gt; upstream = 8 [json_name = "upstream"];</code>
   */

  com.flyteidl.core.ConnectionSet.IdList getUpstreamOrThrow(
      java.lang.String key);
}
