// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/parameter_ranges.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class CategoricalParameterRange;
class CategoricalParameterRangeDefaultTypeInternal;
extern CategoricalParameterRangeDefaultTypeInternal _CategoricalParameterRange_default_instance_;
class ContinuousParameterRange;
class ContinuousParameterRangeDefaultTypeInternal;
extern ContinuousParameterRangeDefaultTypeInternal _ContinuousParameterRange_default_instance_;
class HyperparameterScalingType;
class HyperparameterScalingTypeDefaultTypeInternal;
extern HyperparameterScalingTypeDefaultTypeInternal _HyperparameterScalingType_default_instance_;
class IntegerParameterRange;
class IntegerParameterRangeDefaultTypeInternal;
extern IntegerParameterRangeDefaultTypeInternal _IntegerParameterRange_default_instance_;
class ParameterRangeOneOf;
class ParameterRangeOneOfDefaultTypeInternal;
extern ParameterRangeOneOfDefaultTypeInternal _ParameterRangeOneOf_default_instance_;
class ParameterRanges;
class ParameterRangesDefaultTypeInternal;
extern ParameterRangesDefaultTypeInternal _ParameterRanges_default_instance_;
class ParameterRanges_ParameterRangeMapEntry_DoNotUse;
class ParameterRanges_ParameterRangeMapEntry_DoNotUseDefaultTypeInternal;
extern ParameterRanges_ParameterRangeMapEntry_DoNotUseDefaultTypeInternal _ParameterRanges_ParameterRangeMapEntry_DoNotUse_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::plugins::sagemaker::CategoricalParameterRange* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::CategoricalParameterRange>(Arena*);
template<> ::flyteidl::plugins::sagemaker::ContinuousParameterRange* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::ContinuousParameterRange>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HyperparameterScalingType* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterScalingType>(Arena*);
template<> ::flyteidl::plugins::sagemaker::IntegerParameterRange* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::IntegerParameterRange>(Arena*);
template<> ::flyteidl::plugins::sagemaker::ParameterRangeOneOf* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::ParameterRangeOneOf>(Arena*);
template<> ::flyteidl::plugins::sagemaker::ParameterRanges* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::ParameterRanges>(Arena*);
template<> ::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace plugins {
namespace sagemaker {

enum HyperparameterScalingType_Value {
  HyperparameterScalingType_Value_AUTO = 0,
  HyperparameterScalingType_Value_LINEAR = 1,
  HyperparameterScalingType_Value_LOGARITHMIC = 2,
  HyperparameterScalingType_Value_REVERSELOGARITHMIC = 3,
  HyperparameterScalingType_Value_HyperparameterScalingType_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HyperparameterScalingType_Value_HyperparameterScalingType_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HyperparameterScalingType_Value_IsValid(int value);
const HyperparameterScalingType_Value HyperparameterScalingType_Value_Value_MIN = HyperparameterScalingType_Value_AUTO;
const HyperparameterScalingType_Value HyperparameterScalingType_Value_Value_MAX = HyperparameterScalingType_Value_REVERSELOGARITHMIC;
const int HyperparameterScalingType_Value_Value_ARRAYSIZE = HyperparameterScalingType_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* HyperparameterScalingType_Value_descriptor();
inline const ::std::string& HyperparameterScalingType_Value_Name(HyperparameterScalingType_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    HyperparameterScalingType_Value_descriptor(), value);
}
inline bool HyperparameterScalingType_Value_Parse(
    const ::std::string& name, HyperparameterScalingType_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HyperparameterScalingType_Value>(
    HyperparameterScalingType_Value_descriptor(), name, value);
}
// ===================================================================

class HyperparameterScalingType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HyperparameterScalingType) */ {
 public:
  HyperparameterScalingType();
  virtual ~HyperparameterScalingType();

  HyperparameterScalingType(const HyperparameterScalingType& from);

  inline HyperparameterScalingType& operator=(const HyperparameterScalingType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterScalingType(HyperparameterScalingType&& from) noexcept
    : HyperparameterScalingType() {
    *this = ::std::move(from);
  }

  inline HyperparameterScalingType& operator=(HyperparameterScalingType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HyperparameterScalingType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterScalingType* internal_default_instance() {
    return reinterpret_cast<const HyperparameterScalingType*>(
               &_HyperparameterScalingType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HyperparameterScalingType* other);
  friend void swap(HyperparameterScalingType& a, HyperparameterScalingType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterScalingType* New() const final {
    return CreateMaybeMessage<HyperparameterScalingType>(nullptr);
  }

  HyperparameterScalingType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HyperparameterScalingType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HyperparameterScalingType& from);
  void MergeFrom(const HyperparameterScalingType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HyperparameterScalingType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HyperparameterScalingType_Value Value;
  static const Value AUTO =
    HyperparameterScalingType_Value_AUTO;
  static const Value LINEAR =
    HyperparameterScalingType_Value_LINEAR;
  static const Value LOGARITHMIC =
    HyperparameterScalingType_Value_LOGARITHMIC;
  static const Value REVERSELOGARITHMIC =
    HyperparameterScalingType_Value_REVERSELOGARITHMIC;
  static inline bool Value_IsValid(int value) {
    return HyperparameterScalingType_Value_IsValid(value);
  }
  static const Value Value_MIN =
    HyperparameterScalingType_Value_Value_MIN;
  static const Value Value_MAX =
    HyperparameterScalingType_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    HyperparameterScalingType_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return HyperparameterScalingType_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return HyperparameterScalingType_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return HyperparameterScalingType_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterScalingType)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
};
// -------------------------------------------------------------------

class ContinuousParameterRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.ContinuousParameterRange) */ {
 public:
  ContinuousParameterRange();
  virtual ~ContinuousParameterRange();

  ContinuousParameterRange(const ContinuousParameterRange& from);

  inline ContinuousParameterRange& operator=(const ContinuousParameterRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContinuousParameterRange(ContinuousParameterRange&& from) noexcept
    : ContinuousParameterRange() {
    *this = ::std::move(from);
  }

  inline ContinuousParameterRange& operator=(ContinuousParameterRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ContinuousParameterRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContinuousParameterRange* internal_default_instance() {
    return reinterpret_cast<const ContinuousParameterRange*>(
               &_ContinuousParameterRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ContinuousParameterRange* other);
  friend void swap(ContinuousParameterRange& a, ContinuousParameterRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContinuousParameterRange* New() const final {
    return CreateMaybeMessage<ContinuousParameterRange>(nullptr);
  }

  ContinuousParameterRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ContinuousParameterRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ContinuousParameterRange& from);
  void MergeFrom(const ContinuousParameterRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContinuousParameterRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double max_value = 1;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 1;
  double max_value() const;
  void set_max_value(double value);

  // double min_value = 2;
  void clear_min_value();
  static const int kMinValueFieldNumber = 2;
  double min_value() const;
  void set_min_value(double value);

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType.Value scaling_type = 3;
  void clear_scaling_type();
  static const int kScalingTypeFieldNumber = 3;
  ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value scaling_type() const;
  void set_scaling_type(::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.ContinuousParameterRange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double max_value_;
  double min_value_;
  int scaling_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
};
// -------------------------------------------------------------------

class IntegerParameterRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.IntegerParameterRange) */ {
 public:
  IntegerParameterRange();
  virtual ~IntegerParameterRange();

  IntegerParameterRange(const IntegerParameterRange& from);

  inline IntegerParameterRange& operator=(const IntegerParameterRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntegerParameterRange(IntegerParameterRange&& from) noexcept
    : IntegerParameterRange() {
    *this = ::std::move(from);
  }

  inline IntegerParameterRange& operator=(IntegerParameterRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IntegerParameterRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntegerParameterRange* internal_default_instance() {
    return reinterpret_cast<const IntegerParameterRange*>(
               &_IntegerParameterRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IntegerParameterRange* other);
  friend void swap(IntegerParameterRange& a, IntegerParameterRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntegerParameterRange* New() const final {
    return CreateMaybeMessage<IntegerParameterRange>(nullptr);
  }

  IntegerParameterRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntegerParameterRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntegerParameterRange& from);
  void MergeFrom(const IntegerParameterRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntegerParameterRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 max_value = 1;
  void clear_max_value();
  static const int kMaxValueFieldNumber = 1;
  ::google::protobuf::int64 max_value() const;
  void set_max_value(::google::protobuf::int64 value);

  // int64 min_value = 2;
  void clear_min_value();
  static const int kMinValueFieldNumber = 2;
  ::google::protobuf::int64 min_value() const;
  void set_min_value(::google::protobuf::int64 value);

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType.Value scaling_type = 3;
  void clear_scaling_type();
  static const int kScalingTypeFieldNumber = 3;
  ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value scaling_type() const;
  void set_scaling_type(::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.IntegerParameterRange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 max_value_;
  ::google::protobuf::int64 min_value_;
  int scaling_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
};
// -------------------------------------------------------------------

class CategoricalParameterRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.CategoricalParameterRange) */ {
 public:
  CategoricalParameterRange();
  virtual ~CategoricalParameterRange();

  CategoricalParameterRange(const CategoricalParameterRange& from);

  inline CategoricalParameterRange& operator=(const CategoricalParameterRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CategoricalParameterRange(CategoricalParameterRange&& from) noexcept
    : CategoricalParameterRange() {
    *this = ::std::move(from);
  }

  inline CategoricalParameterRange& operator=(CategoricalParameterRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CategoricalParameterRange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CategoricalParameterRange* internal_default_instance() {
    return reinterpret_cast<const CategoricalParameterRange*>(
               &_CategoricalParameterRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CategoricalParameterRange* other);
  friend void swap(CategoricalParameterRange& a, CategoricalParameterRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CategoricalParameterRange* New() const final {
    return CreateMaybeMessage<CategoricalParameterRange>(nullptr);
  }

  CategoricalParameterRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CategoricalParameterRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CategoricalParameterRange& from);
  void MergeFrom(const CategoricalParameterRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CategoricalParameterRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::std::string& values(int index) const;
  ::std::string* mutable_values(int index);
  void set_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_values(int index, ::std::string&& value);
  #endif
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  ::std::string* add_values();
  void add_values(const ::std::string& value);
  #if LANG_CXX11
  void add_values(::std::string&& value);
  #endif
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_values();

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.CategoricalParameterRange)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
};
// -------------------------------------------------------------------

class ParameterRangeOneOf final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.ParameterRangeOneOf) */ {
 public:
  ParameterRangeOneOf();
  virtual ~ParameterRangeOneOf();

  ParameterRangeOneOf(const ParameterRangeOneOf& from);

  inline ParameterRangeOneOf& operator=(const ParameterRangeOneOf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterRangeOneOf(ParameterRangeOneOf&& from) noexcept
    : ParameterRangeOneOf() {
    *this = ::std::move(from);
  }

  inline ParameterRangeOneOf& operator=(ParameterRangeOneOf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ParameterRangeOneOf& default_instance();

  enum ParameterRangeTypeCase {
    kContinuousParameterRange = 1,
    kIntegerParameterRange = 2,
    kCategoricalParameterRange = 3,
    PARAMETER_RANGE_TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterRangeOneOf* internal_default_instance() {
    return reinterpret_cast<const ParameterRangeOneOf*>(
               &_ParameterRangeOneOf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ParameterRangeOneOf* other);
  friend void swap(ParameterRangeOneOf& a, ParameterRangeOneOf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterRangeOneOf* New() const final {
    return CreateMaybeMessage<ParameterRangeOneOf>(nullptr);
  }

  ParameterRangeOneOf* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterRangeOneOf>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterRangeOneOf& from);
  void MergeFrom(const ParameterRangeOneOf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterRangeOneOf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.plugins.sagemaker.ContinuousParameterRange continuous_parameter_range = 1;
  bool has_continuous_parameter_range() const;
  void clear_continuous_parameter_range();
  static const int kContinuousParameterRangeFieldNumber = 1;
  const ::flyteidl::plugins::sagemaker::ContinuousParameterRange& continuous_parameter_range() const;
  ::flyteidl::plugins::sagemaker::ContinuousParameterRange* release_continuous_parameter_range();
  ::flyteidl::plugins::sagemaker::ContinuousParameterRange* mutable_continuous_parameter_range();
  void set_allocated_continuous_parameter_range(::flyteidl::plugins::sagemaker::ContinuousParameterRange* continuous_parameter_range);

  // .flyteidl.plugins.sagemaker.IntegerParameterRange integer_parameter_range = 2;
  bool has_integer_parameter_range() const;
  void clear_integer_parameter_range();
  static const int kIntegerParameterRangeFieldNumber = 2;
  const ::flyteidl::plugins::sagemaker::IntegerParameterRange& integer_parameter_range() const;
  ::flyteidl::plugins::sagemaker::IntegerParameterRange* release_integer_parameter_range();
  ::flyteidl::plugins::sagemaker::IntegerParameterRange* mutable_integer_parameter_range();
  void set_allocated_integer_parameter_range(::flyteidl::plugins::sagemaker::IntegerParameterRange* integer_parameter_range);

  // .flyteidl.plugins.sagemaker.CategoricalParameterRange categorical_parameter_range = 3;
  bool has_categorical_parameter_range() const;
  void clear_categorical_parameter_range();
  static const int kCategoricalParameterRangeFieldNumber = 3;
  const ::flyteidl::plugins::sagemaker::CategoricalParameterRange& categorical_parameter_range() const;
  ::flyteidl::plugins::sagemaker::CategoricalParameterRange* release_categorical_parameter_range();
  ::flyteidl::plugins::sagemaker::CategoricalParameterRange* mutable_categorical_parameter_range();
  void set_allocated_categorical_parameter_range(::flyteidl::plugins::sagemaker::CategoricalParameterRange* categorical_parameter_range);

  void clear_parameter_range_type();
  ParameterRangeTypeCase parameter_range_type_case() const;
  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.ParameterRangeOneOf)
 private:
  class HasBitSetters;
  void set_has_continuous_parameter_range();
  void set_has_integer_parameter_range();
  void set_has_categorical_parameter_range();

  inline bool has_parameter_range_type() const;
  inline void clear_has_parameter_range_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ParameterRangeTypeUnion {
    ParameterRangeTypeUnion() {}
    ::flyteidl::plugins::sagemaker::ContinuousParameterRange* continuous_parameter_range_;
    ::flyteidl::plugins::sagemaker::IntegerParameterRange* integer_parameter_range_;
    ::flyteidl::plugins::sagemaker::CategoricalParameterRange* categorical_parameter_range_;
  } parameter_range_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
};
// -------------------------------------------------------------------

class ParameterRanges_ParameterRangeMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ParameterRanges_ParameterRangeMapEntry_DoNotUse, 
    ::std::string, ::flyteidl::plugins::sagemaker::ParameterRangeOneOf,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<ParameterRanges_ParameterRangeMapEntry_DoNotUse, 
    ::std::string, ::flyteidl::plugins::sagemaker::ParameterRangeOneOf,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ParameterRanges_ParameterRangeMapEntry_DoNotUse();
  ParameterRanges_ParameterRangeMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ParameterRanges_ParameterRangeMapEntry_DoNotUse& other);
  static const ParameterRanges_ParameterRangeMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ParameterRanges_ParameterRangeMapEntry_DoNotUse*>(&_ParameterRanges_ParameterRangeMapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ParameterRanges final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.ParameterRanges) */ {
 public:
  ParameterRanges();
  virtual ~ParameterRanges();

  ParameterRanges(const ParameterRanges& from);

  inline ParameterRanges& operator=(const ParameterRanges& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterRanges(ParameterRanges&& from) noexcept
    : ParameterRanges() {
    *this = ::std::move(from);
  }

  inline ParameterRanges& operator=(ParameterRanges&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ParameterRanges& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterRanges* internal_default_instance() {
    return reinterpret_cast<const ParameterRanges*>(
               &_ParameterRanges_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ParameterRanges* other);
  friend void swap(ParameterRanges& a, ParameterRanges& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterRanges* New() const final {
    return CreateMaybeMessage<ParameterRanges>(nullptr);
  }

  ParameterRanges* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterRanges>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterRanges& from);
  void MergeFrom(const ParameterRanges& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterRanges* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .flyteidl.plugins.sagemaker.ParameterRangeOneOf> parameter_range_map = 1;
  int parameter_range_map_size() const;
  void clear_parameter_range_map();
  static const int kParameterRangeMapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::flyteidl::plugins::sagemaker::ParameterRangeOneOf >&
      parameter_range_map() const;
  ::google::protobuf::Map< ::std::string, ::flyteidl::plugins::sagemaker::ParameterRangeOneOf >*
      mutable_parameter_range_map();

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.ParameterRanges)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ParameterRanges_ParameterRangeMapEntry_DoNotUse,
      ::std::string, ::flyteidl::plugins::sagemaker::ParameterRangeOneOf,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > parameter_range_map_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HyperparameterScalingType

// -------------------------------------------------------------------

// ContinuousParameterRange

// double max_value = 1;
inline void ContinuousParameterRange::clear_max_value() {
  max_value_ = 0;
}
inline double ContinuousParameterRange::max_value() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.ContinuousParameterRange.max_value)
  return max_value_;
}
inline void ContinuousParameterRange::set_max_value(double value) {
  
  max_value_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.ContinuousParameterRange.max_value)
}

// double min_value = 2;
inline void ContinuousParameterRange::clear_min_value() {
  min_value_ = 0;
}
inline double ContinuousParameterRange::min_value() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.ContinuousParameterRange.min_value)
  return min_value_;
}
inline void ContinuousParameterRange::set_min_value(double value) {
  
  min_value_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.ContinuousParameterRange.min_value)
}

// .flyteidl.plugins.sagemaker.HyperparameterScalingType.Value scaling_type = 3;
inline void ContinuousParameterRange::clear_scaling_type() {
  scaling_type_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value ContinuousParameterRange::scaling_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.ContinuousParameterRange.scaling_type)
  return static_cast< ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value >(scaling_type_);
}
inline void ContinuousParameterRange::set_scaling_type(::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value value) {
  
  scaling_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.ContinuousParameterRange.scaling_type)
}

// -------------------------------------------------------------------

// IntegerParameterRange

// int64 max_value = 1;
inline void IntegerParameterRange::clear_max_value() {
  max_value_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 IntegerParameterRange::max_value() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.IntegerParameterRange.max_value)
  return max_value_;
}
inline void IntegerParameterRange::set_max_value(::google::protobuf::int64 value) {
  
  max_value_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.IntegerParameterRange.max_value)
}

// int64 min_value = 2;
inline void IntegerParameterRange::clear_min_value() {
  min_value_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 IntegerParameterRange::min_value() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.IntegerParameterRange.min_value)
  return min_value_;
}
inline void IntegerParameterRange::set_min_value(::google::protobuf::int64 value) {
  
  min_value_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.IntegerParameterRange.min_value)
}

// .flyteidl.plugins.sagemaker.HyperparameterScalingType.Value scaling_type = 3;
inline void IntegerParameterRange::clear_scaling_type() {
  scaling_type_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value IntegerParameterRange::scaling_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.IntegerParameterRange.scaling_type)
  return static_cast< ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value >(scaling_type_);
}
inline void IntegerParameterRange::set_scaling_type(::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value value) {
  
  scaling_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.IntegerParameterRange.scaling_type)
}

// -------------------------------------------------------------------

// CategoricalParameterRange

// repeated string values = 1;
inline int CategoricalParameterRange::values_size() const {
  return values_.size();
}
inline void CategoricalParameterRange::clear_values() {
  values_.Clear();
}
inline const ::std::string& CategoricalParameterRange::values(int index) const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
  return values_.Get(index);
}
inline ::std::string* CategoricalParameterRange::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
  return values_.Mutable(index);
}
inline void CategoricalParameterRange::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
  values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CategoricalParameterRange::set_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
  values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CategoricalParameterRange::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
}
inline void CategoricalParameterRange::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
}
inline ::std::string* CategoricalParameterRange::add_values() {
  // @@protoc_insertion_point(field_add_mutable:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
  return values_.Add();
}
inline void CategoricalParameterRange::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
}
#if LANG_CXX11
inline void CategoricalParameterRange::add_values(::std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
}
#endif
inline void CategoricalParameterRange::add_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
}
inline void CategoricalParameterRange::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CategoricalParameterRange::values() const {
  // @@protoc_insertion_point(field_list:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CategoricalParameterRange::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:flyteidl.plugins.sagemaker.CategoricalParameterRange.values)
  return &values_;
}

// -------------------------------------------------------------------

// ParameterRangeOneOf

// .flyteidl.plugins.sagemaker.ContinuousParameterRange continuous_parameter_range = 1;
inline bool ParameterRangeOneOf::has_continuous_parameter_range() const {
  return parameter_range_type_case() == kContinuousParameterRange;
}
inline void ParameterRangeOneOf::set_has_continuous_parameter_range() {
  _oneof_case_[0] = kContinuousParameterRange;
}
inline void ParameterRangeOneOf::clear_continuous_parameter_range() {
  if (has_continuous_parameter_range()) {
    delete parameter_range_type_.continuous_parameter_range_;
    clear_has_parameter_range_type();
  }
}
inline ::flyteidl::plugins::sagemaker::ContinuousParameterRange* ParameterRangeOneOf::release_continuous_parameter_range() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.ParameterRangeOneOf.continuous_parameter_range)
  if (has_continuous_parameter_range()) {
    clear_has_parameter_range_type();
      ::flyteidl::plugins::sagemaker::ContinuousParameterRange* temp = parameter_range_type_.continuous_parameter_range_;
    parameter_range_type_.continuous_parameter_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::flyteidl::plugins::sagemaker::ContinuousParameterRange& ParameterRangeOneOf::continuous_parameter_range() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.ParameterRangeOneOf.continuous_parameter_range)
  return has_continuous_parameter_range()
      ? *parameter_range_type_.continuous_parameter_range_
      : *reinterpret_cast< ::flyteidl::plugins::sagemaker::ContinuousParameterRange*>(&::flyteidl::plugins::sagemaker::_ContinuousParameterRange_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::ContinuousParameterRange* ParameterRangeOneOf::mutable_continuous_parameter_range() {
  if (!has_continuous_parameter_range()) {
    clear_parameter_range_type();
    set_has_continuous_parameter_range();
    parameter_range_type_.continuous_parameter_range_ = CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ContinuousParameterRange >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.ParameterRangeOneOf.continuous_parameter_range)
  return parameter_range_type_.continuous_parameter_range_;
}

// .flyteidl.plugins.sagemaker.IntegerParameterRange integer_parameter_range = 2;
inline bool ParameterRangeOneOf::has_integer_parameter_range() const {
  return parameter_range_type_case() == kIntegerParameterRange;
}
inline void ParameterRangeOneOf::set_has_integer_parameter_range() {
  _oneof_case_[0] = kIntegerParameterRange;
}
inline void ParameterRangeOneOf::clear_integer_parameter_range() {
  if (has_integer_parameter_range()) {
    delete parameter_range_type_.integer_parameter_range_;
    clear_has_parameter_range_type();
  }
}
inline ::flyteidl::plugins::sagemaker::IntegerParameterRange* ParameterRangeOneOf::release_integer_parameter_range() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.ParameterRangeOneOf.integer_parameter_range)
  if (has_integer_parameter_range()) {
    clear_has_parameter_range_type();
      ::flyteidl::plugins::sagemaker::IntegerParameterRange* temp = parameter_range_type_.integer_parameter_range_;
    parameter_range_type_.integer_parameter_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::flyteidl::plugins::sagemaker::IntegerParameterRange& ParameterRangeOneOf::integer_parameter_range() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.ParameterRangeOneOf.integer_parameter_range)
  return has_integer_parameter_range()
      ? *parameter_range_type_.integer_parameter_range_
      : *reinterpret_cast< ::flyteidl::plugins::sagemaker::IntegerParameterRange*>(&::flyteidl::plugins::sagemaker::_IntegerParameterRange_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::IntegerParameterRange* ParameterRangeOneOf::mutable_integer_parameter_range() {
  if (!has_integer_parameter_range()) {
    clear_parameter_range_type();
    set_has_integer_parameter_range();
    parameter_range_type_.integer_parameter_range_ = CreateMaybeMessage< ::flyteidl::plugins::sagemaker::IntegerParameterRange >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.ParameterRangeOneOf.integer_parameter_range)
  return parameter_range_type_.integer_parameter_range_;
}

// .flyteidl.plugins.sagemaker.CategoricalParameterRange categorical_parameter_range = 3;
inline bool ParameterRangeOneOf::has_categorical_parameter_range() const {
  return parameter_range_type_case() == kCategoricalParameterRange;
}
inline void ParameterRangeOneOf::set_has_categorical_parameter_range() {
  _oneof_case_[0] = kCategoricalParameterRange;
}
inline void ParameterRangeOneOf::clear_categorical_parameter_range() {
  if (has_categorical_parameter_range()) {
    delete parameter_range_type_.categorical_parameter_range_;
    clear_has_parameter_range_type();
  }
}
inline ::flyteidl::plugins::sagemaker::CategoricalParameterRange* ParameterRangeOneOf::release_categorical_parameter_range() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.ParameterRangeOneOf.categorical_parameter_range)
  if (has_categorical_parameter_range()) {
    clear_has_parameter_range_type();
      ::flyteidl::plugins::sagemaker::CategoricalParameterRange* temp = parameter_range_type_.categorical_parameter_range_;
    parameter_range_type_.categorical_parameter_range_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::flyteidl::plugins::sagemaker::CategoricalParameterRange& ParameterRangeOneOf::categorical_parameter_range() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.ParameterRangeOneOf.categorical_parameter_range)
  return has_categorical_parameter_range()
      ? *parameter_range_type_.categorical_parameter_range_
      : *reinterpret_cast< ::flyteidl::plugins::sagemaker::CategoricalParameterRange*>(&::flyteidl::plugins::sagemaker::_CategoricalParameterRange_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::CategoricalParameterRange* ParameterRangeOneOf::mutable_categorical_parameter_range() {
  if (!has_categorical_parameter_range()) {
    clear_parameter_range_type();
    set_has_categorical_parameter_range();
    parameter_range_type_.categorical_parameter_range_ = CreateMaybeMessage< ::flyteidl::plugins::sagemaker::CategoricalParameterRange >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.ParameterRangeOneOf.categorical_parameter_range)
  return parameter_range_type_.categorical_parameter_range_;
}

inline bool ParameterRangeOneOf::has_parameter_range_type() const {
  return parameter_range_type_case() != PARAMETER_RANGE_TYPE_NOT_SET;
}
inline void ParameterRangeOneOf::clear_has_parameter_range_type() {
  _oneof_case_[0] = PARAMETER_RANGE_TYPE_NOT_SET;
}
inline ParameterRangeOneOf::ParameterRangeTypeCase ParameterRangeOneOf::parameter_range_type_case() const {
  return ParameterRangeOneOf::ParameterRangeTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ParameterRanges

// map<string, .flyteidl.plugins.sagemaker.ParameterRangeOneOf> parameter_range_map = 1;
inline int ParameterRanges::parameter_range_map_size() const {
  return parameter_range_map_.size();
}
inline void ParameterRanges::clear_parameter_range_map() {
  parameter_range_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::flyteidl::plugins::sagemaker::ParameterRangeOneOf >&
ParameterRanges::parameter_range_map() const {
  // @@protoc_insertion_point(field_map:flyteidl.plugins.sagemaker.ParameterRanges.parameter_range_map)
  return parameter_range_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::flyteidl::plugins::sagemaker::ParameterRangeOneOf >*
ParameterRanges::mutable_parameter_range_map() {
  // @@protoc_insertion_point(field_mutable_map:flyteidl.plugins.sagemaker.ParameterRanges.parameter_range_map)
  return parameter_range_map_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value>() {
  return ::flyteidl::plugins::sagemaker::HyperparameterScalingType_Value_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto
