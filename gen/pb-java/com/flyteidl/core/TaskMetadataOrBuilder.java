// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/tasks.proto

package com.flyteidl.core;

public interface TaskMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.core.TaskMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
   * </pre>
   *
   * <code>bool discoverable = 1 [json_name = "discoverable"];</code>
   * @return The discoverable.
   */
  boolean getDiscoverable();

  /**
   * <pre>
   * Runtime information about the task.
   * </pre>
   *
   * <code>.flyteidl.core.RuntimeMetadata runtime = 2 [json_name = "runtime"];</code>
   * @return Whether the runtime field is set.
   */
  boolean hasRuntime();
  /**
   * <pre>
   * Runtime information about the task.
   * </pre>
   *
   * <code>.flyteidl.core.RuntimeMetadata runtime = 2 [json_name = "runtime"];</code>
   * @return The runtime.
   */
  com.flyteidl.core.RuntimeMetadata getRuntime();
  /**
   * <pre>
   * Runtime information about the task.
   * </pre>
   *
   * <code>.flyteidl.core.RuntimeMetadata runtime = 2 [json_name = "runtime"];</code>
   */
  com.flyteidl.core.RuntimeMetadataOrBuilder getRuntimeOrBuilder();

  /**
   * <pre>
   * The overall timeout of a task including user-triggered retries.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
   * @return Whether the timeout field is set.
   */
  boolean hasTimeout();
  /**
   * <pre>
   * The overall timeout of a task including user-triggered retries.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
   * @return The timeout.
   */
  com.google.protobuf.Duration getTimeout();
  /**
   * <pre>
   * The overall timeout of a task including user-triggered retries.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4 [json_name = "timeout"];</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

  /**
   * <pre>
   * Number of retries per task.
   * </pre>
   *
   * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
   * @return Whether the retries field is set.
   */
  boolean hasRetries();
  /**
   * <pre>
   * Number of retries per task.
   * </pre>
   *
   * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
   * @return The retries.
   */
  com.flyteidl.core.RetryStrategy getRetries();
  /**
   * <pre>
   * Number of retries per task.
   * </pre>
   *
   * <code>.flyteidl.core.RetryStrategy retries = 5 [json_name = "retries"];</code>
   */
  com.flyteidl.core.RetryStrategyOrBuilder getRetriesOrBuilder();

  /**
   * <pre>
   * Indicates a logical version to apply to this task for the purpose of discovery.
   * </pre>
   *
   * <code>string discovery_version = 6 [json_name = "discoveryVersion"];</code>
   * @return The discoveryVersion.
   */
  java.lang.String getDiscoveryVersion();
  /**
   * <pre>
   * Indicates a logical version to apply to this task for the purpose of discovery.
   * </pre>
   *
   * <code>string discovery_version = 6 [json_name = "discoveryVersion"];</code>
   * @return The bytes for discoveryVersion.
   */
  com.google.protobuf.ByteString
      getDiscoveryVersionBytes();

  /**
   * <pre>
   * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
   * of the ending of support for a given task.
   * </pre>
   *
   * <code>string deprecated_error_message = 7 [json_name = "deprecatedErrorMessage"];</code>
   * @return The deprecatedErrorMessage.
   */
  java.lang.String getDeprecatedErrorMessage();
  /**
   * <pre>
   * If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
   * of the ending of support for a given task.
   * </pre>
   *
   * <code>string deprecated_error_message = 7 [json_name = "deprecatedErrorMessage"];</code>
   * @return The bytes for deprecatedErrorMessage.
   */
  com.google.protobuf.ByteString
      getDeprecatedErrorMessageBytes();

  /**
   * <code>bool interruptible = 8 [json_name = "interruptible"];</code>
   * @return Whether the interruptible field is set.
   */
  boolean hasInterruptible();
  /**
   * <code>bool interruptible = 8 [json_name = "interruptible"];</code>
   * @return The interruptible.
   */
  boolean getInterruptible();

  /**
   * <pre>
   * Indicates whether the system should attempt to execute discoverable instances in serial to avoid duplicate work
   * </pre>
   *
   * <code>bool cache_serializable = 9 [json_name = "cacheSerializable"];</code>
   * @return The cacheSerializable.
   */
  boolean getCacheSerializable();

  public com.flyteidl.core.TaskMetadata.InterruptibleValueCase getInterruptibleValueCase();
}
