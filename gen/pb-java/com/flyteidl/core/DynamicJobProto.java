// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/dynamic_job.proto

package com.flyteidl.core;

public final class DynamicJobProto {
  private DynamicJobProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DynamicJobSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.DynamicJobSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    java.util.List<com.flyteidl.core.WorkflowProto.Node> 
        getNodesList();
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    com.flyteidl.core.WorkflowProto.Node getNodes(int index);
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    int getNodesCount();
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    java.util.List<? extends com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    com.flyteidl.core.WorkflowProto.NodeOrBuilder getNodesOrBuilder(
        int index);

    /**
     * <pre>
     * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
     * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
     * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
     * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
     * specified, is the count of nodes repeated field.
     * </pre>
     *
     * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
     * @return The minSuccesses.
     */
    long getMinSuccesses();

    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    java.util.List<com.flyteidl.core.LiteralsProto.Binding> 
        getOutputsList();
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    com.flyteidl.core.LiteralsProto.Binding getOutputs(int index);
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    com.flyteidl.core.LiteralsProto.BindingOrBuilder getOutputsOrBuilder(
        int index);

    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    java.util.List<com.flyteidl.core.TasksProto.TaskTemplate> 
        getTasksList();
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    com.flyteidl.core.TasksProto.TaskTemplate getTasks(int index);
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    int getTasksCount();
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    java.util.List<? extends com.flyteidl.core.TasksProto.TaskTemplateOrBuilder> 
        getTasksOrBuilderList();
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    com.flyteidl.core.TasksProto.TaskTemplateOrBuilder getTasksOrBuilder(
        int index);

    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    java.util.List<com.flyteidl.core.WorkflowProto.WorkflowTemplate> 
        getSubworkflowsList();
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    com.flyteidl.core.WorkflowProto.WorkflowTemplate getSubworkflows(int index);
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    int getSubworkflowsCount();
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    java.util.List<? extends com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder> 
        getSubworkflowsOrBuilderList();
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder getSubworkflowsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes a set of tasks to execute and how the final outputs are produced.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.DynamicJobSpec}
   */
  public static final class DynamicJobSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.DynamicJobSpec)
      DynamicJobSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DynamicJobSpec.newBuilder() to construct.
    private DynamicJobSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DynamicJobSpec() {
      nodes_ = java.util.Collections.emptyList();
      outputs_ = java.util.Collections.emptyList();
      tasks_ = java.util.Collections.emptyList();
      subworkflows_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DynamicJobSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.DynamicJobProto.DynamicJobSpec.class, com.flyteidl.core.DynamicJobProto.DynamicJobSpec.Builder.class);
    }

    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<com.flyteidl.core.WorkflowProto.Node> nodes_;
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.WorkflowProto.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <pre>
     * A collection of nodes to execute.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    public static final int MIN_SUCCESSES_FIELD_NUMBER = 2;
    private long minSuccesses_;
    /**
     * <pre>
     * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
     * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
     * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
     * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
     * specified, is the count of nodes repeated field.
     * </pre>
     *
     * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
     * @return The minSuccesses.
     */
    @java.lang.Override
    public long getMinSuccesses() {
      return minSuccesses_;
    }

    public static final int OUTPUTS_FIELD_NUMBER = 3;
    private java.util.List<com.flyteidl.core.LiteralsProto.Binding> outputs_;
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.LiteralsProto.Binding> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.Binding getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
     * in bindings should have the generated id for the subtask.
     * </pre>
     *
     * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.LiteralsProto.BindingOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    public static final int TASKS_FIELD_NUMBER = 4;
    private java.util.List<com.flyteidl.core.TasksProto.TaskTemplate> tasks_;
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.TasksProto.TaskTemplate> getTasksList() {
      return tasks_;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.TasksProto.TaskTemplateOrBuilder> 
        getTasksOrBuilderList() {
      return tasks_;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    @java.lang.Override
    public int getTasksCount() {
      return tasks_.size();
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.TasksProto.TaskTemplate getTasks(int index) {
      return tasks_.get(index);
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.TasksProto.TaskTemplateOrBuilder getTasksOrBuilder(
        int index) {
      return tasks_.get(index);
    }

    public static final int SUBWORKFLOWS_FIELD_NUMBER = 5;
    private java.util.List<com.flyteidl.core.WorkflowProto.WorkflowTemplate> subworkflows_;
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    @java.lang.Override
    public java.util.List<com.flyteidl.core.WorkflowProto.WorkflowTemplate> getSubworkflowsList() {
      return subworkflows_;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder> 
        getSubworkflowsOrBuilderList() {
      return subworkflows_;
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    @java.lang.Override
    public int getSubworkflowsCount() {
      return subworkflows_.size();
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowTemplate getSubworkflows(int index) {
      return subworkflows_.get(index);
    }
    /**
     * <pre>
     * [Optional] A complete list of task specs referenced in nodes.
     * </pre>
     *
     * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder getSubworkflowsOrBuilder(
        int index) {
      return subworkflows_.get(index);
    }

    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.DynamicJobProto.DynamicJobSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a set of tasks to execute and how the final outputs are produced.
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.DynamicJobSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.DynamicJobSpec)
        com.flyteidl.core.DynamicJobProto.DynamicJobSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.DynamicJobProto.DynamicJobSpec.class, com.flyteidl.core.DynamicJobProto.DynamicJobSpec.Builder.class);
      }

      // Construct using com.flyteidl.core.DynamicJobProto.DynamicJobSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
          getOutputsFieldBuilder();
          getTasksFieldBuilder();
          getSubworkflowsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        minSuccesses_ = 0L;

        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          outputsBuilder_.clear();
        }
        if (tasksBuilder_ == null) {
          tasks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tasksBuilder_.clear();
        }
        if (subworkflowsBuilder_ == null) {
          subworkflows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          subworkflowsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.DynamicJobProto.internal_static_flyteidl_core_DynamicJobSpec_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.DynamicJobProto.DynamicJobSpec getDefaultInstanceForType() {
        return com.flyteidl.core.DynamicJobProto.DynamicJobSpec.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.DynamicJobProto.DynamicJobSpec build() {
        com.flyteidl.core.DynamicJobProto.DynamicJobSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.DynamicJobProto.DynamicJobSpec buildPartial() {
        com.flyteidl.core.DynamicJobProto.DynamicJobSpec result = new com.flyteidl.core.DynamicJobProto.DynamicJobSpec(this);
        int from_bitField0_ = bitField0_;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        result.minSuccesses_ = minSuccesses_;
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        if (tasksBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tasks_ = java.util.Collections.unmodifiableList(tasks_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tasks_ = tasks_;
        } else {
          result.tasks_ = tasksBuilder_.build();
        }
        if (subworkflowsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            subworkflows_ = java.util.Collections.unmodifiableList(subworkflows_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.subworkflows_ = subworkflows_;
        } else {
          result.subworkflows_ = subworkflowsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int bitField0_;

      private java.util.List<com.flyteidl.core.WorkflowProto.Node> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nodes_ = new java.util.ArrayList<com.flyteidl.core.WorkflowProto.Node>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> nodesBuilder_;

      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.Node> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder setNodes(
          int index, com.flyteidl.core.WorkflowProto.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder setNodes(
          int index, com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder addNodes(com.flyteidl.core.WorkflowProto.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder addNodes(
          int index, com.flyteidl.core.WorkflowProto.Node value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder addNodes(
          com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder addNodes(
          int index, com.flyteidl.core.WorkflowProto.Node.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends com.flyteidl.core.WorkflowProto.Node> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.NodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            com.flyteidl.core.WorkflowProto.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public com.flyteidl.core.WorkflowProto.Node.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, com.flyteidl.core.WorkflowProto.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * A collection of nodes to execute.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Node nodes = 1 [json_name = "nodes"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.Node.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.Node, com.flyteidl.core.WorkflowProto.Node.Builder, com.flyteidl.core.WorkflowProto.NodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      private long minSuccesses_ ;
      /**
       * <pre>
       * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
       * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
       * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
       * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
       * specified, is the count of nodes repeated field.
       * </pre>
       *
       * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
       * @return The minSuccesses.
       */
      @java.lang.Override
      public long getMinSuccesses() {
        return minSuccesses_;
      }
      /**
       * <pre>
       * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
       * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
       * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
       * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
       * specified, is the count of nodes repeated field.
       * </pre>
       *
       * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
       * @param value The minSuccesses to set.
       * @return This builder for chaining.
       */
      public Builder setMinSuccesses(long value) {
        
        minSuccesses_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An absolute number of successful completions of nodes required to mark this job as succeeded. As soon as this
       * criteria is met, the dynamic job will be marked as successful and outputs will be computed. If this number
       * becomes impossible to reach (e.g. number of currently running tasks + number of already succeeded tasks &lt;
       * min_successes) the task will be aborted immediately and marked as failed. The default value of this field, if not
       * specified, is the count of nodes repeated field.
       * </pre>
       *
       * <code>int64 min_successes = 2 [json_name = "minSuccesses"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinSuccesses() {
        
        minSuccesses_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.flyteidl.core.LiteralsProto.Binding> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          outputs_ = new java.util.ArrayList<com.flyteidl.core.LiteralsProto.Binding>(outputs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder> outputsBuilder_;

      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public java.util.List<com.flyteidl.core.LiteralsProto.Binding> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder setOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder setOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(com.flyteidl.core.LiteralsProto.Binding value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(
          com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder addOutputs(
          int index, com.flyteidl.core.LiteralsProto.Binding.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends com.flyteidl.core.LiteralsProto.Binding> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.BindingOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            com.flyteidl.core.LiteralsProto.Binding.getDefaultInstance());
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public com.flyteidl.core.LiteralsProto.Binding.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, com.flyteidl.core.LiteralsProto.Binding.getDefaultInstance());
      }
      /**
       * <pre>
       * Describes how to bind the final output of the dynamic job from the outputs of executed nodes. The referenced ids
       * in bindings should have the generated id for the subtask.
       * </pre>
       *
       * <code>repeated .flyteidl.core.Binding outputs = 3 [json_name = "outputs"];</code>
       */
      public java.util.List<com.flyteidl.core.LiteralsProto.Binding.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.LiteralsProto.Binding, com.flyteidl.core.LiteralsProto.Binding.Builder, com.flyteidl.core.LiteralsProto.BindingOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      private java.util.List<com.flyteidl.core.TasksProto.TaskTemplate> tasks_ =
        java.util.Collections.emptyList();
      private void ensureTasksIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tasks_ = new java.util.ArrayList<com.flyteidl.core.TasksProto.TaskTemplate>(tasks_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.TasksProto.TaskTemplate, com.flyteidl.core.TasksProto.TaskTemplate.Builder, com.flyteidl.core.TasksProto.TaskTemplateOrBuilder> tasksBuilder_;

      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public java.util.List<com.flyteidl.core.TasksProto.TaskTemplate> getTasksList() {
        if (tasksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tasks_);
        } else {
          return tasksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public int getTasksCount() {
        if (tasksBuilder_ == null) {
          return tasks_.size();
        } else {
          return tasksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public com.flyteidl.core.TasksProto.TaskTemplate getTasks(int index) {
        if (tasksBuilder_ == null) {
          return tasks_.get(index);
        } else {
          return tasksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder setTasks(
          int index, com.flyteidl.core.TasksProto.TaskTemplate value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.set(index, value);
          onChanged();
        } else {
          tasksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder setTasks(
          int index, com.flyteidl.core.TasksProto.TaskTemplate.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.set(index, builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder addTasks(com.flyteidl.core.TasksProto.TaskTemplate value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.add(value);
          onChanged();
        } else {
          tasksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder addTasks(
          int index, com.flyteidl.core.TasksProto.TaskTemplate value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.add(index, value);
          onChanged();
        } else {
          tasksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder addTasks(
          com.flyteidl.core.TasksProto.TaskTemplate.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.add(builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder addTasks(
          int index, com.flyteidl.core.TasksProto.TaskTemplate.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.add(index, builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder addAllTasks(
          java.lang.Iterable<? extends com.flyteidl.core.TasksProto.TaskTemplate> values) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tasks_);
          onChanged();
        } else {
          tasksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder clearTasks() {
        if (tasksBuilder_ == null) {
          tasks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tasksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public Builder removeTasks(int index) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.remove(index);
          onChanged();
        } else {
          tasksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public com.flyteidl.core.TasksProto.TaskTemplate.Builder getTasksBuilder(
          int index) {
        return getTasksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public com.flyteidl.core.TasksProto.TaskTemplateOrBuilder getTasksOrBuilder(
          int index) {
        if (tasksBuilder_ == null) {
          return tasks_.get(index);  } else {
          return tasksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.TasksProto.TaskTemplateOrBuilder> 
           getTasksOrBuilderList() {
        if (tasksBuilder_ != null) {
          return tasksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tasks_);
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public com.flyteidl.core.TasksProto.TaskTemplate.Builder addTasksBuilder() {
        return getTasksFieldBuilder().addBuilder(
            com.flyteidl.core.TasksProto.TaskTemplate.getDefaultInstance());
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public com.flyteidl.core.TasksProto.TaskTemplate.Builder addTasksBuilder(
          int index) {
        return getTasksFieldBuilder().addBuilder(
            index, com.flyteidl.core.TasksProto.TaskTemplate.getDefaultInstance());
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.TaskTemplate tasks = 4 [json_name = "tasks"];</code>
       */
      public java.util.List<com.flyteidl.core.TasksProto.TaskTemplate.Builder> 
           getTasksBuilderList() {
        return getTasksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.TasksProto.TaskTemplate, com.flyteidl.core.TasksProto.TaskTemplate.Builder, com.flyteidl.core.TasksProto.TaskTemplateOrBuilder> 
          getTasksFieldBuilder() {
        if (tasksBuilder_ == null) {
          tasksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.TasksProto.TaskTemplate, com.flyteidl.core.TasksProto.TaskTemplate.Builder, com.flyteidl.core.TasksProto.TaskTemplateOrBuilder>(
                  tasks_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tasks_ = null;
        }
        return tasksBuilder_;
      }

      private java.util.List<com.flyteidl.core.WorkflowProto.WorkflowTemplate> subworkflows_ =
        java.util.Collections.emptyList();
      private void ensureSubworkflowsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          subworkflows_ = new java.util.ArrayList<com.flyteidl.core.WorkflowProto.WorkflowTemplate>(subworkflows_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowTemplate, com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder, com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder> subworkflowsBuilder_;

      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.WorkflowTemplate> getSubworkflowsList() {
        if (subworkflowsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subworkflows_);
        } else {
          return subworkflowsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public int getSubworkflowsCount() {
        if (subworkflowsBuilder_ == null) {
          return subworkflows_.size();
        } else {
          return subworkflowsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowTemplate getSubworkflows(int index) {
        if (subworkflowsBuilder_ == null) {
          return subworkflows_.get(index);
        } else {
          return subworkflowsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder setSubworkflows(
          int index, com.flyteidl.core.WorkflowProto.WorkflowTemplate value) {
        if (subworkflowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubworkflowsIsMutable();
          subworkflows_.set(index, value);
          onChanged();
        } else {
          subworkflowsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder setSubworkflows(
          int index, com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder builderForValue) {
        if (subworkflowsBuilder_ == null) {
          ensureSubworkflowsIsMutable();
          subworkflows_.set(index, builderForValue.build());
          onChanged();
        } else {
          subworkflowsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder addSubworkflows(com.flyteidl.core.WorkflowProto.WorkflowTemplate value) {
        if (subworkflowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubworkflowsIsMutable();
          subworkflows_.add(value);
          onChanged();
        } else {
          subworkflowsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder addSubworkflows(
          int index, com.flyteidl.core.WorkflowProto.WorkflowTemplate value) {
        if (subworkflowsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubworkflowsIsMutable();
          subworkflows_.add(index, value);
          onChanged();
        } else {
          subworkflowsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder addSubworkflows(
          com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder builderForValue) {
        if (subworkflowsBuilder_ == null) {
          ensureSubworkflowsIsMutable();
          subworkflows_.add(builderForValue.build());
          onChanged();
        } else {
          subworkflowsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder addSubworkflows(
          int index, com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder builderForValue) {
        if (subworkflowsBuilder_ == null) {
          ensureSubworkflowsIsMutable();
          subworkflows_.add(index, builderForValue.build());
          onChanged();
        } else {
          subworkflowsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder addAllSubworkflows(
          java.lang.Iterable<? extends com.flyteidl.core.WorkflowProto.WorkflowTemplate> values) {
        if (subworkflowsBuilder_ == null) {
          ensureSubworkflowsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subworkflows_);
          onChanged();
        } else {
          subworkflowsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder clearSubworkflows() {
        if (subworkflowsBuilder_ == null) {
          subworkflows_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          subworkflowsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public Builder removeSubworkflows(int index) {
        if (subworkflowsBuilder_ == null) {
          ensureSubworkflowsIsMutable();
          subworkflows_.remove(index);
          onChanged();
        } else {
          subworkflowsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder getSubworkflowsBuilder(
          int index) {
        return getSubworkflowsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder getSubworkflowsOrBuilder(
          int index) {
        if (subworkflowsBuilder_ == null) {
          return subworkflows_.get(index);  } else {
          return subworkflowsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public java.util.List<? extends com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder> 
           getSubworkflowsOrBuilderList() {
        if (subworkflowsBuilder_ != null) {
          return subworkflowsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subworkflows_);
        }
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder addSubworkflowsBuilder() {
        return getSubworkflowsFieldBuilder().addBuilder(
            com.flyteidl.core.WorkflowProto.WorkflowTemplate.getDefaultInstance());
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder addSubworkflowsBuilder(
          int index) {
        return getSubworkflowsFieldBuilder().addBuilder(
            index, com.flyteidl.core.WorkflowProto.WorkflowTemplate.getDefaultInstance());
      }
      /**
       * <pre>
       * [Optional] A complete list of task specs referenced in nodes.
       * </pre>
       *
       * <code>repeated .flyteidl.core.WorkflowTemplate subworkflows = 5 [json_name = "subworkflows"];</code>
       */
      public java.util.List<com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder> 
           getSubworkflowsBuilderList() {
        return getSubworkflowsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.flyteidl.core.WorkflowProto.WorkflowTemplate, com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder, com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder> 
          getSubworkflowsFieldBuilder() {
        if (subworkflowsBuilder_ == null) {
          subworkflowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.flyteidl.core.WorkflowProto.WorkflowTemplate, com.flyteidl.core.WorkflowProto.WorkflowTemplate.Builder, com.flyteidl.core.WorkflowProto.WorkflowTemplateOrBuilder>(
                  subworkflows_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          subworkflows_ = null;
        }
        return subworkflowsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.DynamicJobSpec)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.DynamicJobSpec)
    private static final com.flyteidl.core.DynamicJobProto.DynamicJobSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.DynamicJobProto.DynamicJobSpec();
    }

    public static com.flyteidl.core.DynamicJobProto.DynamicJobSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DynamicJobSpec>
        PARSER = new com.google.protobuf.AbstractParser<DynamicJobSpec>() {
      @java.lang.Override
      public DynamicJobSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DynamicJobSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DynamicJobSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.DynamicJobProto.DynamicJobSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_DynamicJobSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_DynamicJobSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037flyteidl/core/dynamic_job.proto\022\rflyte" +
      "idl.core\032\031flyteidl/core/tasks.proto\032\034fly" +
      "teidl/core/workflow.proto\032\034flyteidl/core" +
      "/literals.proto\"\212\002\n\016DynamicJobSpec\022)\n\005no" +
      "des\030\001 \003(\0132\023.flyteidl.core.NodeR\005nodes\022#\n" +
      "\rmin_successes\030\002 \001(\003R\014minSuccesses\0220\n\007ou" +
      "tputs\030\003 \003(\0132\026.flyteidl.core.BindingR\007out" +
      "puts\0221\n\005tasks\030\004 \003(\0132\033.flyteidl.core.Task" +
      "TemplateR\005tasks\022C\n\014subworkflows\030\005 \003(\0132\037." +
      "flyteidl.core.WorkflowTemplateR\014subworkf" +
      "lowsB\262\001\n\021com.flyteidl.coreB\017DynamicJobPr" +
      "otoH\002Z4github.com/flyteorg/flyteidl/gen/" +
      "pb-go/flyteidl/core\370\001\000\242\002\003FCX\252\002\rFlyteidl." +
      "Core\312\002\rFlyteidl\\Core\342\002\031Flyteidl\\Core\\GPB" +
      "Metadata\352\002\016Flyteidl::Coreb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.flyteidl.core.TasksProto.getDescriptor(),
          com.flyteidl.core.WorkflowProto.getDescriptor(),
          com.flyteidl.core.LiteralsProto.getDescriptor(),
        });
    internal_static_flyteidl_core_DynamicJobSpec_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_core_DynamicJobSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_DynamicJobSpec_descriptor,
        new java.lang.String[] { "Nodes", "MinSuccesses", "Outputs", "Tasks", "Subworkflows", });
    com.flyteidl.core.TasksProto.getDescriptor();
    com.flyteidl.core.WorkflowProto.getDescriptor();
    com.flyteidl.core.LiteralsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
