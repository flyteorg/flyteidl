// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/version.proto

#include "flyteidl/admin/version.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace admin {
constexpr GetVersionResponse::GetVersionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : control_plane_version_(nullptr){}
struct GetVersionResponseDefaultTypeInternal {
  constexpr GetVersionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVersionResponseDefaultTypeInternal() {}
  union {
    GetVersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVersionResponseDefaultTypeInternal _GetVersionResponse_default_instance_;
constexpr Version::Version(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : build_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , buildtime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct VersionDefaultTypeInternal {
  constexpr VersionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VersionDefaultTypeInternal() {}
  union {
    Version _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VersionDefaultTypeInternal _Version_default_instance_;
constexpr GetVersionRequest::GetVersionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetVersionRequestDefaultTypeInternal {
  constexpr GetVersionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetVersionRequestDefaultTypeInternal() {}
  union {
    GetVersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetVersionRequestDefaultTypeInternal _GetVersionRequest_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fadmin_2fversion_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fadmin_2fversion_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2fversion_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fadmin_2fversion_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::GetVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::GetVersionResponse, control_plane_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Version, build_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Version, version_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Version, buildtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::GetVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::admin::GetVersionResponse)},
  { 7, -1, -1, sizeof(::flyteidl::admin::Version)},
  { 16, -1, -1, sizeof(::flyteidl::admin::GetVersionRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_GetVersionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_Version_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_GetVersionRequest_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fadmin_2fversion_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034flyteidl/admin/version.proto\022\016flyteidl"
  ".admin\"a\n\022GetVersionResponse\022K\n\025control_"
  "plane_version\030\001 \001(\0132\027.flyteidl.admin.Ver"
  "sionR\023controlPlaneVersion\"W\n\007Version\022\024\n\005"
  "Build\030\001 \001(\tR\005Build\022\030\n\007Version\030\002 \001(\tR\007Ver"
  "sion\022\034\n\tBuildTime\030\003 \001(\tR\tBuildTime\"\023\n\021Ge"
  "tVersionRequestB\265\001\n\022com.flyteidl.adminB\014"
  "VersionProtoH\002Z5github.com/flyteorg/flyt"
  "eidl/gen/pb-go/flyteidl/admin\370\001\000\242\002\003FAX\252\002"
  "\016Flyteidl.Admin\312\002\016Flyteidl\\Admin\342\002\032Flyte"
  "idl\\Admin\\GPBMetadata\352\002\017Flyteidl::Adminb"
  "\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fadmin_2fversion_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2fversion_2eproto = {
  false, false, 447, descriptor_table_protodef_flyteidl_2fadmin_2fversion_2eproto, "flyteidl/admin/version.proto", 
  &descriptor_table_flyteidl_2fadmin_2fversion_2eproto_once, nullptr, 0, 3,
  schemas, file_default_instances, TableStruct_flyteidl_2fadmin_2fversion_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2fversion_2eproto, file_level_enum_descriptors_flyteidl_2fadmin_2fversion_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2fversion_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fadmin_2fversion_2eproto_getter() {
  return &descriptor_table_flyteidl_2fadmin_2fversion_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fadmin_2fversion_2eproto(&descriptor_table_flyteidl_2fadmin_2fversion_2eproto);
namespace flyteidl {
namespace admin {

// ===================================================================

class GetVersionResponse::_Internal {
 public:
  static const ::flyteidl::admin::Version& control_plane_version(const GetVersionResponse* msg);
};

const ::flyteidl::admin::Version&
GetVersionResponse::_Internal::control_plane_version(const GetVersionResponse* msg) {
  return *msg->control_plane_version_;
}
GetVersionResponse::GetVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.GetVersionResponse)
}
GetVersionResponse::GetVersionResponse(const GetVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_control_plane_version()) {
    control_plane_version_ = new ::flyteidl::admin::Version(*from.control_plane_version_);
  } else {
    control_plane_version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.GetVersionResponse)
}

inline void GetVersionResponse::SharedCtor() {
control_plane_version_ = nullptr;
}

GetVersionResponse::~GetVersionResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.GetVersionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete control_plane_version_;
}

void GetVersionResponse::ArenaDtor(void* object) {
  GetVersionResponse* _this = reinterpret_cast< GetVersionResponse* >(object);
  (void)_this;
}
void GetVersionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetVersionResponse::InternalSwap(GetVersionResponse* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata GetVersionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fversion_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fversion_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fversion_2eproto[0]);
}

// ===================================================================

class Version::_Internal {
 public:
};

Version::Version(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.Version)
}
Version::Version(const Version& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  build_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    build_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_build().empty()) {
    build_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_build(), 
      GetArenaForAllocation());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArenaForAllocation());
  }
  buildtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    buildtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buildtime().empty()) {
    buildtime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buildtime(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.Version)
}

inline void Version::SharedCtor() {
build_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  build_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
buildtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  buildtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.Version)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Version::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  build_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buildtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Version::ArenaDtor(void* object) {
  Version* _this = reinterpret_cast< Version* >(object);
  (void)_this;
}
void Version::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Version::InternalSwap(Version* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Version::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fversion_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fversion_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fversion_2eproto[1]);
}

// ===================================================================

class GetVersionRequest::_Internal {
 public:
};

GetVersionRequest::GetVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.GetVersionRequest)
}
GetVersionRequest::GetVersionRequest(const GetVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.GetVersionRequest)
}



::PROTOBUF_NAMESPACE_ID::Metadata GetVersionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fversion_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fversion_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fversion_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::admin::GetVersionResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::GetVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::GetVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Version* Arena::CreateMaybeMessage< ::flyteidl::admin::Version >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::Version >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::GetVersionRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::GetVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::GetVersionRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
