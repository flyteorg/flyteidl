// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/node_execution.proto

package com.flyteidl.admin;

public interface NodeExecutionListRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.admin.NodeExecutionListRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Indicates the workflow execution to filter by.
   * +required
   * </pre>
   *
   * <code>.flyteidl.core.WorkflowExecutionIdentifier workflow_execution_id = 1 [json_name = "workflowExecutionId"];</code>
   * @return Whether the workflowExecutionId field is set.
   */
  boolean hasWorkflowExecutionId();
  /**
   * <pre>
   * Indicates the workflow execution to filter by.
   * +required
   * </pre>
   *
   * <code>.flyteidl.core.WorkflowExecutionIdentifier workflow_execution_id = 1 [json_name = "workflowExecutionId"];</code>
   * @return The workflowExecutionId.
   */
  com.flyteidl.core.WorkflowExecutionIdentifier getWorkflowExecutionId();
  /**
   * <pre>
   * Indicates the workflow execution to filter by.
   * +required
   * </pre>
   *
   * <code>.flyteidl.core.WorkflowExecutionIdentifier workflow_execution_id = 1 [json_name = "workflowExecutionId"];</code>
   */
  com.flyteidl.core.WorkflowExecutionIdentifierOrBuilder getWorkflowExecutionIdOrBuilder();

  /**
   * <pre>
   * Indicates the number of resources to be returned.
   * +required
   * </pre>
   *
   * <code>uint32 limit = 2 [json_name = "limit"];</code>
   * @return The limit.
   */
  int getLimit();

  /**
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The token.
   */
  java.lang.String getToken();
  /**
   * <code>string token = 3 [json_name = "token"];</code>
   * @return The bytes for token.
   */
  com.google.protobuf.ByteString
      getTokenBytes();

  /**
   * <pre>
   * Indicates a list of filters passed as string.
   * More info on constructing filters : &lt;Link&gt;
   * +optional
   * </pre>
   *
   * <code>string filters = 4 [json_name = "filters"];</code>
   * @return The filters.
   */
  java.lang.String getFilters();
  /**
   * <pre>
   * Indicates a list of filters passed as string.
   * More info on constructing filters : &lt;Link&gt;
   * +optional
   * </pre>
   *
   * <code>string filters = 4 [json_name = "filters"];</code>
   * @return The bytes for filters.
   */
  com.google.protobuf.ByteString
      getFiltersBytes();

  /**
   * <pre>
   * Sort ordering.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.admin.Sort sort_by = 5 [json_name = "sortBy"];</code>
   * @return Whether the sortBy field is set.
   */
  boolean hasSortBy();
  /**
   * <pre>
   * Sort ordering.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.admin.Sort sort_by = 5 [json_name = "sortBy"];</code>
   * @return The sortBy.
   */
  com.flyteidl.admin.Sort getSortBy();
  /**
   * <pre>
   * Sort ordering.
   * +optional
   * </pre>
   *
   * <code>.flyteidl.admin.Sort sort_by = 5 [json_name = "sortBy"];</code>
   */
  com.flyteidl.admin.SortOrBuilder getSortByOrBuilder();

  /**
   * <pre>
   * Unique identifier of the parent node in the execution
   * +optional
   * </pre>
   *
   * <code>string unique_parent_id = 6 [json_name = "uniqueParentId"];</code>
   * @return The uniqueParentId.
   */
  java.lang.String getUniqueParentId();
  /**
   * <pre>
   * Unique identifier of the parent node in the execution
   * +optional
   * </pre>
   *
   * <code>string unique_parent_id = 6 [json_name = "uniqueParentId"];</code>
   * @return The bytes for uniqueParentId.
   */
  com.google.protobuf.ByteString
      getUniqueParentIdBytes();
}
