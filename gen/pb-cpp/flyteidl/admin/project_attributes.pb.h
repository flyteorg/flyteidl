// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/project_attributes.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fattributes_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fattributes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/admin/matchable_resource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fproject_5fattributes_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto();
namespace flyteidl {
namespace admin {
class ProjectAttributes;
class ProjectAttributesDefaultTypeInternal;
extern ProjectAttributesDefaultTypeInternal _ProjectAttributes_default_instance_;
class ProjectAttributesDeleteRequest;
class ProjectAttributesDeleteRequestDefaultTypeInternal;
extern ProjectAttributesDeleteRequestDefaultTypeInternal _ProjectAttributesDeleteRequest_default_instance_;
class ProjectAttributesDeleteResponse;
class ProjectAttributesDeleteResponseDefaultTypeInternal;
extern ProjectAttributesDeleteResponseDefaultTypeInternal _ProjectAttributesDeleteResponse_default_instance_;
class ProjectAttributesGetRequest;
class ProjectAttributesGetRequestDefaultTypeInternal;
extern ProjectAttributesGetRequestDefaultTypeInternal _ProjectAttributesGetRequest_default_instance_;
class ProjectAttributesGetResponse;
class ProjectAttributesGetResponseDefaultTypeInternal;
extern ProjectAttributesGetResponseDefaultTypeInternal _ProjectAttributesGetResponse_default_instance_;
class ProjectAttributesUpdateRequest;
class ProjectAttributesUpdateRequestDefaultTypeInternal;
extern ProjectAttributesUpdateRequestDefaultTypeInternal _ProjectAttributesUpdateRequest_default_instance_;
class ProjectAttributesUpdateResponse;
class ProjectAttributesUpdateResponseDefaultTypeInternal;
extern ProjectAttributesUpdateResponseDefaultTypeInternal _ProjectAttributesUpdateResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::admin::ProjectAttributes* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributes>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesDeleteRequest* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesDeleteRequest>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesDeleteResponse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesDeleteResponse>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesGetRequest* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesGetRequest>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesGetResponse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesGetResponse>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesUpdateRequest* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesUpdateRequest>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesUpdateResponse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesUpdateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace admin {

// ===================================================================

class ProjectAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributes) */ {
 public:
  ProjectAttributes();
  virtual ~ProjectAttributes();

  ProjectAttributes(const ProjectAttributes& from);

  inline ProjectAttributes& operator=(const ProjectAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributes(ProjectAttributes&& from) noexcept
    : ProjectAttributes() {
    *this = ::std::move(from);
  }

  inline ProjectAttributes& operator=(ProjectAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributes* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributes*>(
               &_ProjectAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProjectAttributes* other);
  friend void swap(ProjectAttributes& a, ProjectAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributes* New() const final {
    return CreateMaybeMessage<ProjectAttributes>(nullptr);
  }

  ProjectAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributes& from);
  void MergeFrom(const ProjectAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // .flyteidl.admin.MatchingAttributes matching_attributes = 2;
  bool has_matching_attributes() const;
  void clear_matching_attributes();
  static const int kMatchingAttributesFieldNumber = 2;
  const ::flyteidl::admin::MatchingAttributes& matching_attributes() const;
  ::flyteidl::admin::MatchingAttributes* release_matching_attributes();
  ::flyteidl::admin::MatchingAttributes* mutable_matching_attributes();
  void set_allocated_matching_attributes(::flyteidl::admin::MatchingAttributes* matching_attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::flyteidl::admin::MatchingAttributes* matching_attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesUpdateRequest) */ {
 public:
  ProjectAttributesUpdateRequest();
  virtual ~ProjectAttributesUpdateRequest();

  ProjectAttributesUpdateRequest(const ProjectAttributesUpdateRequest& from);

  inline ProjectAttributesUpdateRequest& operator=(const ProjectAttributesUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesUpdateRequest(ProjectAttributesUpdateRequest&& from) noexcept
    : ProjectAttributesUpdateRequest() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesUpdateRequest& operator=(ProjectAttributesUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesUpdateRequest*>(
               &_ProjectAttributesUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ProjectAttributesUpdateRequest* other);
  friend void swap(ProjectAttributesUpdateRequest& a, ProjectAttributesUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesUpdateRequest* New() const final {
    return CreateMaybeMessage<ProjectAttributesUpdateRequest>(nullptr);
  }

  ProjectAttributesUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesUpdateRequest& from);
  void MergeFrom(const ProjectAttributesUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.ProjectAttributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::flyteidl::admin::ProjectAttributes& attributes() const;
  ::flyteidl::admin::ProjectAttributes* release_attributes();
  ::flyteidl::admin::ProjectAttributes* mutable_attributes();
  void set_allocated_attributes(::flyteidl::admin::ProjectAttributes* attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::ProjectAttributes* attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesUpdateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesUpdateResponse) */ {
 public:
  ProjectAttributesUpdateResponse();
  virtual ~ProjectAttributesUpdateResponse();

  ProjectAttributesUpdateResponse(const ProjectAttributesUpdateResponse& from);

  inline ProjectAttributesUpdateResponse& operator=(const ProjectAttributesUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesUpdateResponse(ProjectAttributesUpdateResponse&& from) noexcept
    : ProjectAttributesUpdateResponse() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesUpdateResponse& operator=(ProjectAttributesUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesUpdateResponse*>(
               &_ProjectAttributesUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ProjectAttributesUpdateResponse* other);
  friend void swap(ProjectAttributesUpdateResponse& a, ProjectAttributesUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesUpdateResponse* New() const final {
    return CreateMaybeMessage<ProjectAttributesUpdateResponse>(nullptr);
  }

  ProjectAttributesUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesUpdateResponse& from);
  void MergeFrom(const ProjectAttributesUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesGetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesGetRequest) */ {
 public:
  ProjectAttributesGetRequest();
  virtual ~ProjectAttributesGetRequest();

  ProjectAttributesGetRequest(const ProjectAttributesGetRequest& from);

  inline ProjectAttributesGetRequest& operator=(const ProjectAttributesGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesGetRequest(ProjectAttributesGetRequest&& from) noexcept
    : ProjectAttributesGetRequest() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesGetRequest& operator=(ProjectAttributesGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesGetRequest* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesGetRequest*>(
               &_ProjectAttributesGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ProjectAttributesGetRequest* other);
  friend void swap(ProjectAttributesGetRequest& a, ProjectAttributesGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesGetRequest* New() const final {
    return CreateMaybeMessage<ProjectAttributesGetRequest>(nullptr);
  }

  ProjectAttributesGetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesGetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesGetRequest& from);
  void MergeFrom(const ProjectAttributesGetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // .flyteidl.admin.MatchableResource resource_type = 2;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 2;
  ::flyteidl::admin::MatchableResource resource_type() const;
  void set_resource_type(::flyteidl::admin::MatchableResource value);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesGetRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  int resource_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesGetResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesGetResponse) */ {
 public:
  ProjectAttributesGetResponse();
  virtual ~ProjectAttributesGetResponse();

  ProjectAttributesGetResponse(const ProjectAttributesGetResponse& from);

  inline ProjectAttributesGetResponse& operator=(const ProjectAttributesGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesGetResponse(ProjectAttributesGetResponse&& from) noexcept
    : ProjectAttributesGetResponse() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesGetResponse& operator=(ProjectAttributesGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesGetResponse* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesGetResponse*>(
               &_ProjectAttributesGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ProjectAttributesGetResponse* other);
  friend void swap(ProjectAttributesGetResponse& a, ProjectAttributesGetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesGetResponse* New() const final {
    return CreateMaybeMessage<ProjectAttributesGetResponse>(nullptr);
  }

  ProjectAttributesGetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesGetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesGetResponse& from);
  void MergeFrom(const ProjectAttributesGetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.ProjectAttributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::flyteidl::admin::ProjectAttributes& attributes() const;
  ::flyteidl::admin::ProjectAttributes* release_attributes();
  ::flyteidl::admin::ProjectAttributes* mutable_attributes();
  void set_allocated_attributes(::flyteidl::admin::ProjectAttributes* attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesGetResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::ProjectAttributes* attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesDeleteRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesDeleteRequest) */ {
 public:
  ProjectAttributesDeleteRequest();
  virtual ~ProjectAttributesDeleteRequest();

  ProjectAttributesDeleteRequest(const ProjectAttributesDeleteRequest& from);

  inline ProjectAttributesDeleteRequest& operator=(const ProjectAttributesDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesDeleteRequest(ProjectAttributesDeleteRequest&& from) noexcept
    : ProjectAttributesDeleteRequest() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesDeleteRequest& operator=(ProjectAttributesDeleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesDeleteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesDeleteRequest* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesDeleteRequest*>(
               &_ProjectAttributesDeleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ProjectAttributesDeleteRequest* other);
  friend void swap(ProjectAttributesDeleteRequest& a, ProjectAttributesDeleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesDeleteRequest* New() const final {
    return CreateMaybeMessage<ProjectAttributesDeleteRequest>(nullptr);
  }

  ProjectAttributesDeleteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesDeleteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesDeleteRequest& from);
  void MergeFrom(const ProjectAttributesDeleteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesDeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // .flyteidl.admin.MatchableResource resource_type = 2;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 2;
  ::flyteidl::admin::MatchableResource resource_type() const;
  void set_resource_type(::flyteidl::admin::MatchableResource value);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesDeleteRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  int resource_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesDeleteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesDeleteResponse) */ {
 public:
  ProjectAttributesDeleteResponse();
  virtual ~ProjectAttributesDeleteResponse();

  ProjectAttributesDeleteResponse(const ProjectAttributesDeleteResponse& from);

  inline ProjectAttributesDeleteResponse& operator=(const ProjectAttributesDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesDeleteResponse(ProjectAttributesDeleteResponse&& from) noexcept
    : ProjectAttributesDeleteResponse() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesDeleteResponse& operator=(ProjectAttributesDeleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesDeleteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesDeleteResponse* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesDeleteResponse*>(
               &_ProjectAttributesDeleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ProjectAttributesDeleteResponse* other);
  friend void swap(ProjectAttributesDeleteResponse& a, ProjectAttributesDeleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesDeleteResponse* New() const final {
    return CreateMaybeMessage<ProjectAttributesDeleteResponse>(nullptr);
  }

  ProjectAttributesDeleteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesDeleteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesDeleteResponse& from);
  void MergeFrom(const ProjectAttributesDeleteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesDeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesDeleteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProjectAttributes

// string project = 1;
inline void ProjectAttributes::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectAttributes::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributes.project)
  return project_.GetNoArena();
}
inline void ProjectAttributes::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributes.project)
}
#if LANG_CXX11
inline void ProjectAttributes::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectAttributes.project)
}
#endif
inline void ProjectAttributes::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectAttributes.project)
}
inline void ProjectAttributes::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectAttributes.project)
}
inline ::std::string* ProjectAttributes::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributes.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectAttributes::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributes.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectAttributes::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributes.project)
}

// .flyteidl.admin.MatchingAttributes matching_attributes = 2;
inline bool ProjectAttributes::has_matching_attributes() const {
  return this != internal_default_instance() && matching_attributes_ != nullptr;
}
inline const ::flyteidl::admin::MatchingAttributes& ProjectAttributes::matching_attributes() const {
  const ::flyteidl::admin::MatchingAttributes* p = matching_attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributes.matching_attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::MatchingAttributes*>(
      &::flyteidl::admin::_MatchingAttributes_default_instance_);
}
inline ::flyteidl::admin::MatchingAttributes* ProjectAttributes::release_matching_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributes.matching_attributes)
  
  ::flyteidl::admin::MatchingAttributes* temp = matching_attributes_;
  matching_attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::MatchingAttributes* ProjectAttributes::mutable_matching_attributes() {
  
  if (matching_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::MatchingAttributes>(GetArenaNoVirtual());
    matching_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributes.matching_attributes)
  return matching_attributes_;
}
inline void ProjectAttributes::set_allocated_matching_attributes(::flyteidl::admin::MatchingAttributes* matching_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(matching_attributes_);
  }
  if (matching_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      matching_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, matching_attributes, submessage_arena);
    }
    
  } else {
    
  }
  matching_attributes_ = matching_attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributes.matching_attributes)
}

// -------------------------------------------------------------------

// ProjectAttributesUpdateRequest

// .flyteidl.admin.ProjectAttributes attributes = 1;
inline bool ProjectAttributesUpdateRequest::has_attributes() const {
  return this != internal_default_instance() && attributes_ != nullptr;
}
inline void ProjectAttributesUpdateRequest::clear_attributes() {
  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
}
inline const ::flyteidl::admin::ProjectAttributes& ProjectAttributesUpdateRequest::attributes() const {
  const ::flyteidl::admin::ProjectAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::ProjectAttributes*>(
      &::flyteidl::admin::_ProjectAttributes_default_instance_);
}
inline ::flyteidl::admin::ProjectAttributes* ProjectAttributesUpdateRequest::release_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
  
  ::flyteidl::admin::ProjectAttributes* temp = attributes_;
  attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::ProjectAttributes* ProjectAttributesUpdateRequest::mutable_attributes() {
  
  if (attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::ProjectAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
  return attributes_;
}
inline void ProjectAttributesUpdateRequest::set_allocated_attributes(::flyteidl::admin::ProjectAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
}

// -------------------------------------------------------------------

// ProjectAttributesUpdateResponse

// -------------------------------------------------------------------

// ProjectAttributesGetRequest

// string project = 1;
inline void ProjectAttributesGetRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectAttributesGetRequest::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributesGetRequest.project)
  return project_.GetNoArena();
}
inline void ProjectAttributesGetRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributesGetRequest.project)
}
#if LANG_CXX11
inline void ProjectAttributesGetRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectAttributesGetRequest.project)
}
#endif
inline void ProjectAttributesGetRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectAttributesGetRequest.project)
}
inline void ProjectAttributesGetRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectAttributesGetRequest.project)
}
inline ::std::string* ProjectAttributesGetRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributesGetRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectAttributesGetRequest::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributesGetRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectAttributesGetRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributesGetRequest.project)
}

// .flyteidl.admin.MatchableResource resource_type = 2;
inline void ProjectAttributesGetRequest::clear_resource_type() {
  resource_type_ = 0;
}
inline ::flyteidl::admin::MatchableResource ProjectAttributesGetRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributesGetRequest.resource_type)
  return static_cast< ::flyteidl::admin::MatchableResource >(resource_type_);
}
inline void ProjectAttributesGetRequest::set_resource_type(::flyteidl::admin::MatchableResource value) {
  
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributesGetRequest.resource_type)
}

// -------------------------------------------------------------------

// ProjectAttributesGetResponse

// .flyteidl.admin.ProjectAttributes attributes = 1;
inline bool ProjectAttributesGetResponse::has_attributes() const {
  return this != internal_default_instance() && attributes_ != nullptr;
}
inline void ProjectAttributesGetResponse::clear_attributes() {
  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
}
inline const ::flyteidl::admin::ProjectAttributes& ProjectAttributesGetResponse::attributes() const {
  const ::flyteidl::admin::ProjectAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributesGetResponse.attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::ProjectAttributes*>(
      &::flyteidl::admin::_ProjectAttributes_default_instance_);
}
inline ::flyteidl::admin::ProjectAttributes* ProjectAttributesGetResponse::release_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributesGetResponse.attributes)
  
  ::flyteidl::admin::ProjectAttributes* temp = attributes_;
  attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::ProjectAttributes* ProjectAttributesGetResponse::mutable_attributes() {
  
  if (attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::ProjectAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributesGetResponse.attributes)
  return attributes_;
}
inline void ProjectAttributesGetResponse::set_allocated_attributes(::flyteidl::admin::ProjectAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributesGetResponse.attributes)
}

// -------------------------------------------------------------------

// ProjectAttributesDeleteRequest

// string project = 1;
inline void ProjectAttributesDeleteRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectAttributesDeleteRequest::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributesDeleteRequest.project)
  return project_.GetNoArena();
}
inline void ProjectAttributesDeleteRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributesDeleteRequest.project)
}
#if LANG_CXX11
inline void ProjectAttributesDeleteRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectAttributesDeleteRequest.project)
}
#endif
inline void ProjectAttributesDeleteRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectAttributesDeleteRequest.project)
}
inline void ProjectAttributesDeleteRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectAttributesDeleteRequest.project)
}
inline ::std::string* ProjectAttributesDeleteRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributesDeleteRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectAttributesDeleteRequest::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributesDeleteRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectAttributesDeleteRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributesDeleteRequest.project)
}

// .flyteidl.admin.MatchableResource resource_type = 2;
inline void ProjectAttributesDeleteRequest::clear_resource_type() {
  resource_type_ = 0;
}
inline ::flyteidl::admin::MatchableResource ProjectAttributesDeleteRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributesDeleteRequest.resource_type)
  return static_cast< ::flyteidl::admin::MatchableResource >(resource_type_);
}
inline void ProjectAttributesDeleteRequest::set_resource_type(::flyteidl::admin::MatchableResource value) {
  
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributesDeleteRequest.resource_type)
}

// -------------------------------------------------------------------

// ProjectAttributesDeleteResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fattributes_2eproto
