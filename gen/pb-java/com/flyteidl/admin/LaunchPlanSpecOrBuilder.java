// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/launch_plan.proto

package com.flyteidl.admin;

public interface LaunchPlanSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.admin.LaunchPlanSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Reference to the Workflow template that the launch plan references
   * </pre>
   *
   * <code>.flyteidl.core.Identifier workflow_id = 1 [json_name = "workflowId"];</code>
   * @return Whether the workflowId field is set.
   */
  boolean hasWorkflowId();
  /**
   * <pre>
   * Reference to the Workflow template that the launch plan references
   * </pre>
   *
   * <code>.flyteidl.core.Identifier workflow_id = 1 [json_name = "workflowId"];</code>
   * @return The workflowId.
   */
  com.flyteidl.core.Identifier getWorkflowId();
  /**
   * <pre>
   * Reference to the Workflow template that the launch plan references
   * </pre>
   *
   * <code>.flyteidl.core.Identifier workflow_id = 1 [json_name = "workflowId"];</code>
   */
  com.flyteidl.core.IdentifierOrBuilder getWorkflowIdOrBuilder();

  /**
   * <pre>
   * Metadata for the Launch Plan
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanMetadata entity_metadata = 2 [json_name = "entityMetadata"];</code>
   * @return Whether the entityMetadata field is set.
   */
  boolean hasEntityMetadata();
  /**
   * <pre>
   * Metadata for the Launch Plan
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanMetadata entity_metadata = 2 [json_name = "entityMetadata"];</code>
   * @return The entityMetadata.
   */
  com.flyteidl.admin.LaunchPlanMetadata getEntityMetadata();
  /**
   * <pre>
   * Metadata for the Launch Plan
   * </pre>
   *
   * <code>.flyteidl.admin.LaunchPlanMetadata entity_metadata = 2 [json_name = "entityMetadata"];</code>
   */
  com.flyteidl.admin.LaunchPlanMetadataOrBuilder getEntityMetadataOrBuilder();

  /**
   * <pre>
   * Input values to be passed for the execution.
   * These can be overriden when an execution is created with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.ParameterMap default_inputs = 3 [json_name = "defaultInputs"];</code>
   * @return Whether the defaultInputs field is set.
   */
  boolean hasDefaultInputs();
  /**
   * <pre>
   * Input values to be passed for the execution.
   * These can be overriden when an execution is created with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.ParameterMap default_inputs = 3 [json_name = "defaultInputs"];</code>
   * @return The defaultInputs.
   */
  com.flyteidl.core.ParameterMap getDefaultInputs();
  /**
   * <pre>
   * Input values to be passed for the execution.
   * These can be overriden when an execution is created with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.ParameterMap default_inputs = 3 [json_name = "defaultInputs"];</code>
   */
  com.flyteidl.core.ParameterMapOrBuilder getDefaultInputsOrBuilder();

  /**
   * <pre>
   * Fixed, non-overridable inputs for the Launch Plan.
   * These can not be overriden when an execution is created with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap fixed_inputs = 4 [json_name = "fixedInputs"];</code>
   * @return Whether the fixedInputs field is set.
   */
  boolean hasFixedInputs();
  /**
   * <pre>
   * Fixed, non-overridable inputs for the Launch Plan.
   * These can not be overriden when an execution is created with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap fixed_inputs = 4 [json_name = "fixedInputs"];</code>
   * @return The fixedInputs.
   */
  com.flyteidl.core.LiteralMap getFixedInputs();
  /**
   * <pre>
   * Fixed, non-overridable inputs for the Launch Plan.
   * These can not be overriden when an execution is created with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap fixed_inputs = 4 [json_name = "fixedInputs"];</code>
   */
  com.flyteidl.core.LiteralMapOrBuilder getFixedInputsOrBuilder();

  /**
   * <pre>
   * String to indicate the role to use to execute the workflow underneath
   * </pre>
   *
   * <code>string role = 5 [json_name = "role", deprecated = true];</code>
   * @deprecated
   * @return The role.
   */
  @java.lang.Deprecated java.lang.String getRole();
  /**
   * <pre>
   * String to indicate the role to use to execute the workflow underneath
   * </pre>
   *
   * <code>string role = 5 [json_name = "role", deprecated = true];</code>
   * @deprecated
   * @return The bytes for role.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getRoleBytes();

  /**
   * <pre>
   * Custom labels to be applied to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 6 [json_name = "labels"];</code>
   * @return Whether the labels field is set.
   */
  boolean hasLabels();
  /**
   * <pre>
   * Custom labels to be applied to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 6 [json_name = "labels"];</code>
   * @return The labels.
   */
  com.flyteidl.admin.Labels getLabels();
  /**
   * <pre>
   * Custom labels to be applied to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 6 [json_name = "labels"];</code>
   */
  com.flyteidl.admin.LabelsOrBuilder getLabelsOrBuilder();

  /**
   * <pre>
   * Custom annotations to be applied to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 7 [json_name = "annotations"];</code>
   * @return Whether the annotations field is set.
   */
  boolean hasAnnotations();
  /**
   * <pre>
   * Custom annotations to be applied to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 7 [json_name = "annotations"];</code>
   * @return The annotations.
   */
  com.flyteidl.admin.Annotations getAnnotations();
  /**
   * <pre>
   * Custom annotations to be applied to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 7 [json_name = "annotations"];</code>
   */
  com.flyteidl.admin.AnnotationsOrBuilder getAnnotationsOrBuilder();

  /**
   * <pre>
   * Indicates the permission associated with workflow executions triggered with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.admin.Auth auth = 8 [json_name = "auth", deprecated = true];</code>
   * @deprecated
   * @return Whether the auth field is set.
   */
  @java.lang.Deprecated boolean hasAuth();
  /**
   * <pre>
   * Indicates the permission associated with workflow executions triggered with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.admin.Auth auth = 8 [json_name = "auth", deprecated = true];</code>
   * @deprecated
   * @return The auth.
   */
  @java.lang.Deprecated com.flyteidl.admin.Auth getAuth();
  /**
   * <pre>
   * Indicates the permission associated with workflow executions triggered with this launch plan.
   * </pre>
   *
   * <code>.flyteidl.admin.Auth auth = 8 [json_name = "auth", deprecated = true];</code>
   */
  @java.lang.Deprecated com.flyteidl.admin.AuthOrBuilder getAuthOrBuilder();

  /**
   * <code>.flyteidl.admin.AuthRole auth_role = 9 [json_name = "authRole", deprecated = true];</code>
   * @deprecated
   * @return Whether the authRole field is set.
   */
  @java.lang.Deprecated boolean hasAuthRole();
  /**
   * <code>.flyteidl.admin.AuthRole auth_role = 9 [json_name = "authRole", deprecated = true];</code>
   * @deprecated
   * @return The authRole.
   */
  @java.lang.Deprecated com.flyteidl.admin.AuthRole getAuthRole();
  /**
   * <code>.flyteidl.admin.AuthRole auth_role = 9 [json_name = "authRole", deprecated = true];</code>
   */
  @java.lang.Deprecated com.flyteidl.admin.AuthRoleOrBuilder getAuthRoleOrBuilder();

  /**
   * <pre>
   * Indicates security context for permissions triggered with this launch plan
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   * @return Whether the securityContext field is set.
   */
  boolean hasSecurityContext();
  /**
   * <pre>
   * Indicates security context for permissions triggered with this launch plan
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   * @return The securityContext.
   */
  com.flyteidl.core.SecurityContext getSecurityContext();
  /**
   * <pre>
   * Indicates security context for permissions triggered with this launch plan
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   */
  com.flyteidl.core.SecurityContextOrBuilder getSecurityContextOrBuilder();

  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 16 [json_name = "qualityOfService"];</code>
   * @return Whether the qualityOfService field is set.
   */
  boolean hasQualityOfService();
  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 16 [json_name = "qualityOfService"];</code>
   * @return The qualityOfService.
   */
  com.flyteidl.core.QualityOfService getQualityOfService();
  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 16 [json_name = "qualityOfService"];</code>
   */
  com.flyteidl.core.QualityOfServiceOrBuilder getQualityOfServiceOrBuilder();

  /**
   * <pre>
   * Encapsulates user settings pertaining to offloaded data (i.e. Blobs, Schema, query data, etc.).
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 17 [json_name = "rawOutputDataConfig"];</code>
   * @return Whether the rawOutputDataConfig field is set.
   */
  boolean hasRawOutputDataConfig();
  /**
   * <pre>
   * Encapsulates user settings pertaining to offloaded data (i.e. Blobs, Schema, query data, etc.).
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 17 [json_name = "rawOutputDataConfig"];</code>
   * @return The rawOutputDataConfig.
   */
  com.flyteidl.admin.RawOutputDataConfig getRawOutputDataConfig();
  /**
   * <pre>
   * Encapsulates user settings pertaining to offloaded data (i.e. Blobs, Schema, query data, etc.).
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 17 [json_name = "rawOutputDataConfig"];</code>
   */
  com.flyteidl.admin.RawOutputDataConfigOrBuilder getRawOutputDataConfigOrBuilder();

  /**
   * <pre>
   * Controls the maximum number of tasknodes that can be run in parallel for the entire workflow.
   * This is useful to achieve fairness. Note: MapTasks are regarded as one unit,
   * and parallelism/concurrency of MapTasks is independent from this.
   * </pre>
   *
   * <code>int32 max_parallelism = 18 [json_name = "maxParallelism"];</code>
   * @return The maxParallelism.
   */
  int getMaxParallelism();
}
