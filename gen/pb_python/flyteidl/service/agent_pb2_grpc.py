# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from flyteidl.admin import agent_pb2 as flyteidl_dot_admin_dot_agent__pb2


class AsyncAgentServiceStub(object):
  """AgentService defines an RPC Service that allows propeller to send the request to the agent server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateTask = channel.unary_unary(
        '/flyteidl.service.AsyncAgentService/CreateTask',
        request_serializer=flyteidl_dot_admin_dot_agent__pb2.CreateTaskRequest.SerializeToString,
        response_deserializer=flyteidl_dot_admin_dot_agent__pb2.CreateTaskResponse.FromString,
        )
    self.GetTask = channel.unary_unary(
        '/flyteidl.service.AsyncAgentService/GetTask',
        request_serializer=flyteidl_dot_admin_dot_agent__pb2.GetTaskRequest.SerializeToString,
        response_deserializer=flyteidl_dot_admin_dot_agent__pb2.GetTaskResponse.FromString,
        )
    self.DeleteTask = channel.unary_unary(
        '/flyteidl.service.AsyncAgentService/DeleteTask',
        request_serializer=flyteidl_dot_admin_dot_agent__pb2.DeleteTaskRequest.SerializeToString,
        response_deserializer=flyteidl_dot_admin_dot_agent__pb2.DeleteTaskResponse.FromString,
        )


class AsyncAgentServiceServicer(object):
  """AgentService defines an RPC Service that allows propeller to send the request to the agent server.
  """

  def CreateTask(self, request, context):
    """Send a task create request to the agent server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTask(self, request, context):
    """Get job status.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteTask(self, request, context):
    """Delete the task resource.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AsyncAgentServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateTask': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTask,
          request_deserializer=flyteidl_dot_admin_dot_agent__pb2.CreateTaskRequest.FromString,
          response_serializer=flyteidl_dot_admin_dot_agent__pb2.CreateTaskResponse.SerializeToString,
      ),
      'GetTask': grpc.unary_unary_rpc_method_handler(
          servicer.GetTask,
          request_deserializer=flyteidl_dot_admin_dot_agent__pb2.GetTaskRequest.FromString,
          response_serializer=flyteidl_dot_admin_dot_agent__pb2.GetTaskResponse.SerializeToString,
      ),
      'DeleteTask': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteTask,
          request_deserializer=flyteidl_dot_admin_dot_agent__pb2.DeleteTaskRequest.FromString,
          response_serializer=flyteidl_dot_admin_dot_agent__pb2.DeleteTaskResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'flyteidl.service.AsyncAgentService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
