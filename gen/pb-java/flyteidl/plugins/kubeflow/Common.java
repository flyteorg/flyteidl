// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/kubeflow/common.proto

package flyteidl.plugins.kubeflow;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code flyteidl.plugins.kubeflow.RestartPolicy}
   */
  public enum RestartPolicy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESTART_POLICY_ALWAYS = 0;</code>
     */
    RESTART_POLICY_ALWAYS(0),
    /**
     * <code>RESTART_POLICY_ON_FAILURE = 1;</code>
     */
    RESTART_POLICY_ON_FAILURE(1),
    /**
     * <code>RESTART_POLICY_NEVER = 2;</code>
     */
    RESTART_POLICY_NEVER(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RESTART_POLICY_ALWAYS = 0;</code>
     */
    public static final int RESTART_POLICY_ALWAYS_VALUE = 0;
    /**
     * <code>RESTART_POLICY_ON_FAILURE = 1;</code>
     */
    public static final int RESTART_POLICY_ON_FAILURE_VALUE = 1;
    /**
     * <code>RESTART_POLICY_NEVER = 2;</code>
     */
    public static final int RESTART_POLICY_NEVER_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RestartPolicy valueOf(int value) {
      return forNumber(value);
    }

    public static RestartPolicy forNumber(int value) {
      switch (value) {
        case 0: return RESTART_POLICY_ALWAYS;
        case 1: return RESTART_POLICY_ON_FAILURE;
        case 2: return RESTART_POLICY_NEVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RestartPolicy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RestartPolicy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RestartPolicy>() {
            public RestartPolicy findValueByNumber(int number) {
              return RestartPolicy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return flyteidl.plugins.kubeflow.Common.getDescriptor().getEnumTypes().get(0);
    }

    private static final RestartPolicy[] VALUES = values();

    public static RestartPolicy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RestartPolicy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.plugins.kubeflow.RestartPolicy)
  }

  /**
   * Protobuf enum {@code flyteidl.plugins.kubeflow.CleanPodPolicy}
   */
  public enum CleanPodPolicy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLEANPOD_POLICY_NONE = 0;</code>
     */
    CLEANPOD_POLICY_NONE(0),
    /**
     * <code>CLEANPOD_POLICY_RUNNING = 1;</code>
     */
    CLEANPOD_POLICY_RUNNING(1),
    /**
     * <code>CLEANPOD_POLICY_ALL = 2;</code>
     */
    CLEANPOD_POLICY_ALL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CLEANPOD_POLICY_NONE = 0;</code>
     */
    public static final int CLEANPOD_POLICY_NONE_VALUE = 0;
    /**
     * <code>CLEANPOD_POLICY_RUNNING = 1;</code>
     */
    public static final int CLEANPOD_POLICY_RUNNING_VALUE = 1;
    /**
     * <code>CLEANPOD_POLICY_ALL = 2;</code>
     */
    public static final int CLEANPOD_POLICY_ALL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CleanPodPolicy valueOf(int value) {
      return forNumber(value);
    }

    public static CleanPodPolicy forNumber(int value) {
      switch (value) {
        case 0: return CLEANPOD_POLICY_NONE;
        case 1: return CLEANPOD_POLICY_RUNNING;
        case 2: return CLEANPOD_POLICY_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CleanPodPolicy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CleanPodPolicy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CleanPodPolicy>() {
            public CleanPodPolicy findValueByNumber(int number) {
              return CleanPodPolicy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return flyteidl.plugins.kubeflow.Common.getDescriptor().getEnumTypes().get(1);
    }

    private static final CleanPodPolicy[] VALUES = values();

    public static CleanPodPolicy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CleanPodPolicy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.plugins.kubeflow.CleanPodPolicy)
  }

  public interface RunPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.plugins.kubeflow.RunPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Defines the policy to kill pods after the job completes. Default to None.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
     */
    int getCleanPodPolicyValue();
    /**
     * <pre>
     * Defines the policy to kill pods after the job completes. Default to None.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
     */
    flyteidl.plugins.kubeflow.Common.CleanPodPolicy getCleanPodPolicy();

    /**
     * <pre>
     * TTL to clean up jobs. Default to infinite.
     * </pre>
     *
     * <code>int32 ttl_seconds_after_finished = 2;</code>
     */
    int getTtlSecondsAfterFinished();

    /**
     * <pre>
     * Specifies the duration in seconds relative to the startTime that the job may be active
     * before the system tries to terminate it; value must be positive integer.
     * </pre>
     *
     * <code>int32 active_deadline_seconds = 3;</code>
     */
    int getActiveDeadlineSeconds();

    /**
     * <pre>
     * Number of retries before marking this job failed.
     * </pre>
     *
     * <code>int32 backoff_limit = 4;</code>
     */
    int getBackoffLimit();
  }
  /**
   * Protobuf type {@code flyteidl.plugins.kubeflow.RunPolicy}
   */
  public  static final class RunPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.plugins.kubeflow.RunPolicy)
      RunPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RunPolicy.newBuilder() to construct.
    private RunPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RunPolicy() {
      cleanPodPolicy_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RunPolicy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              cleanPodPolicy_ = rawValue;
              break;
            }
            case 16: {

              ttlSecondsAfterFinished_ = input.readInt32();
              break;
            }
            case 24: {

              activeDeadlineSeconds_ = input.readInt32();
              break;
            }
            case 32: {

              backoffLimit_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.plugins.kubeflow.Common.internal_static_flyteidl_plugins_kubeflow_RunPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.plugins.kubeflow.Common.internal_static_flyteidl_plugins_kubeflow_RunPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.plugins.kubeflow.Common.RunPolicy.class, flyteidl.plugins.kubeflow.Common.RunPolicy.Builder.class);
    }

    public static final int CLEAN_POD_POLICY_FIELD_NUMBER = 1;
    private int cleanPodPolicy_;
    /**
     * <pre>
     * Defines the policy to kill pods after the job completes. Default to None.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
     */
    public int getCleanPodPolicyValue() {
      return cleanPodPolicy_;
    }
    /**
     * <pre>
     * Defines the policy to kill pods after the job completes. Default to None.
     * </pre>
     *
     * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
     */
    public flyteidl.plugins.kubeflow.Common.CleanPodPolicy getCleanPodPolicy() {
      @SuppressWarnings("deprecation")
      flyteidl.plugins.kubeflow.Common.CleanPodPolicy result = flyteidl.plugins.kubeflow.Common.CleanPodPolicy.valueOf(cleanPodPolicy_);
      return result == null ? flyteidl.plugins.kubeflow.Common.CleanPodPolicy.UNRECOGNIZED : result;
    }

    public static final int TTL_SECONDS_AFTER_FINISHED_FIELD_NUMBER = 2;
    private int ttlSecondsAfterFinished_;
    /**
     * <pre>
     * TTL to clean up jobs. Default to infinite.
     * </pre>
     *
     * <code>int32 ttl_seconds_after_finished = 2;</code>
     */
    public int getTtlSecondsAfterFinished() {
      return ttlSecondsAfterFinished_;
    }

    public static final int ACTIVE_DEADLINE_SECONDS_FIELD_NUMBER = 3;
    private int activeDeadlineSeconds_;
    /**
     * <pre>
     * Specifies the duration in seconds relative to the startTime that the job may be active
     * before the system tries to terminate it; value must be positive integer.
     * </pre>
     *
     * <code>int32 active_deadline_seconds = 3;</code>
     */
    public int getActiveDeadlineSeconds() {
      return activeDeadlineSeconds_;
    }

    public static final int BACKOFF_LIMIT_FIELD_NUMBER = 4;
    private int backoffLimit_;
    /**
     * <pre>
     * Number of retries before marking this job failed.
     * </pre>
     *
     * <code>int32 backoff_limit = 4;</code>
     */
    public int getBackoffLimit() {
      return backoffLimit_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cleanPodPolicy_ != flyteidl.plugins.kubeflow.Common.CleanPodPolicy.CLEANPOD_POLICY_NONE.getNumber()) {
        output.writeEnum(1, cleanPodPolicy_);
      }
      if (ttlSecondsAfterFinished_ != 0) {
        output.writeInt32(2, ttlSecondsAfterFinished_);
      }
      if (activeDeadlineSeconds_ != 0) {
        output.writeInt32(3, activeDeadlineSeconds_);
      }
      if (backoffLimit_ != 0) {
        output.writeInt32(4, backoffLimit_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cleanPodPolicy_ != flyteidl.plugins.kubeflow.Common.CleanPodPolicy.CLEANPOD_POLICY_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cleanPodPolicy_);
      }
      if (ttlSecondsAfterFinished_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ttlSecondsAfterFinished_);
      }
      if (activeDeadlineSeconds_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, activeDeadlineSeconds_);
      }
      if (backoffLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, backoffLimit_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.plugins.kubeflow.Common.RunPolicy)) {
        return super.equals(obj);
      }
      flyteidl.plugins.kubeflow.Common.RunPolicy other = (flyteidl.plugins.kubeflow.Common.RunPolicy) obj;

      if (cleanPodPolicy_ != other.cleanPodPolicy_) return false;
      if (getTtlSecondsAfterFinished()
          != other.getTtlSecondsAfterFinished()) return false;
      if (getActiveDeadlineSeconds()
          != other.getActiveDeadlineSeconds()) return false;
      if (getBackoffLimit()
          != other.getBackoffLimit()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLEAN_POD_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + cleanPodPolicy_;
      hash = (37 * hash) + TTL_SECONDS_AFTER_FINISHED_FIELD_NUMBER;
      hash = (53 * hash) + getTtlSecondsAfterFinished();
      hash = (37 * hash) + ACTIVE_DEADLINE_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + getActiveDeadlineSeconds();
      hash = (37 * hash) + BACKOFF_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getBackoffLimit();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.plugins.kubeflow.Common.RunPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.plugins.kubeflow.Common.RunPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flyteidl.plugins.kubeflow.RunPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.plugins.kubeflow.RunPolicy)
        flyteidl.plugins.kubeflow.Common.RunPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.plugins.kubeflow.Common.internal_static_flyteidl_plugins_kubeflow_RunPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.plugins.kubeflow.Common.internal_static_flyteidl_plugins_kubeflow_RunPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.plugins.kubeflow.Common.RunPolicy.class, flyteidl.plugins.kubeflow.Common.RunPolicy.Builder.class);
      }

      // Construct using flyteidl.plugins.kubeflow.Common.RunPolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cleanPodPolicy_ = 0;

        ttlSecondsAfterFinished_ = 0;

        activeDeadlineSeconds_ = 0;

        backoffLimit_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.plugins.kubeflow.Common.internal_static_flyteidl_plugins_kubeflow_RunPolicy_descriptor;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Common.RunPolicy getDefaultInstanceForType() {
        return flyteidl.plugins.kubeflow.Common.RunPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Common.RunPolicy build() {
        flyteidl.plugins.kubeflow.Common.RunPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.plugins.kubeflow.Common.RunPolicy buildPartial() {
        flyteidl.plugins.kubeflow.Common.RunPolicy result = new flyteidl.plugins.kubeflow.Common.RunPolicy(this);
        result.cleanPodPolicy_ = cleanPodPolicy_;
        result.ttlSecondsAfterFinished_ = ttlSecondsAfterFinished_;
        result.activeDeadlineSeconds_ = activeDeadlineSeconds_;
        result.backoffLimit_ = backoffLimit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.plugins.kubeflow.Common.RunPolicy) {
          return mergeFrom((flyteidl.plugins.kubeflow.Common.RunPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.plugins.kubeflow.Common.RunPolicy other) {
        if (other == flyteidl.plugins.kubeflow.Common.RunPolicy.getDefaultInstance()) return this;
        if (other.cleanPodPolicy_ != 0) {
          setCleanPodPolicyValue(other.getCleanPodPolicyValue());
        }
        if (other.getTtlSecondsAfterFinished() != 0) {
          setTtlSecondsAfterFinished(other.getTtlSecondsAfterFinished());
        }
        if (other.getActiveDeadlineSeconds() != 0) {
          setActiveDeadlineSeconds(other.getActiveDeadlineSeconds());
        }
        if (other.getBackoffLimit() != 0) {
          setBackoffLimit(other.getBackoffLimit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.plugins.kubeflow.Common.RunPolicy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.plugins.kubeflow.Common.RunPolicy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int cleanPodPolicy_ = 0;
      /**
       * <pre>
       * Defines the policy to kill pods after the job completes. Default to None.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
       */
      public int getCleanPodPolicyValue() {
        return cleanPodPolicy_;
      }
      /**
       * <pre>
       * Defines the policy to kill pods after the job completes. Default to None.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
       */
      public Builder setCleanPodPolicyValue(int value) {
        cleanPodPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines the policy to kill pods after the job completes. Default to None.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
       */
      public flyteidl.plugins.kubeflow.Common.CleanPodPolicy getCleanPodPolicy() {
        @SuppressWarnings("deprecation")
        flyteidl.plugins.kubeflow.Common.CleanPodPolicy result = flyteidl.plugins.kubeflow.Common.CleanPodPolicy.valueOf(cleanPodPolicy_);
        return result == null ? flyteidl.plugins.kubeflow.Common.CleanPodPolicy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Defines the policy to kill pods after the job completes. Default to None.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
       */
      public Builder setCleanPodPolicy(flyteidl.plugins.kubeflow.Common.CleanPodPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cleanPodPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines the policy to kill pods after the job completes. Default to None.
       * </pre>
       *
       * <code>.flyteidl.plugins.kubeflow.CleanPodPolicy clean_pod_policy = 1;</code>
       */
      public Builder clearCleanPodPolicy() {
        
        cleanPodPolicy_ = 0;
        onChanged();
        return this;
      }

      private int ttlSecondsAfterFinished_ ;
      /**
       * <pre>
       * TTL to clean up jobs. Default to infinite.
       * </pre>
       *
       * <code>int32 ttl_seconds_after_finished = 2;</code>
       */
      public int getTtlSecondsAfterFinished() {
        return ttlSecondsAfterFinished_;
      }
      /**
       * <pre>
       * TTL to clean up jobs. Default to infinite.
       * </pre>
       *
       * <code>int32 ttl_seconds_after_finished = 2;</code>
       */
      public Builder setTtlSecondsAfterFinished(int value) {
        
        ttlSecondsAfterFinished_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TTL to clean up jobs. Default to infinite.
       * </pre>
       *
       * <code>int32 ttl_seconds_after_finished = 2;</code>
       */
      public Builder clearTtlSecondsAfterFinished() {
        
        ttlSecondsAfterFinished_ = 0;
        onChanged();
        return this;
      }

      private int activeDeadlineSeconds_ ;
      /**
       * <pre>
       * Specifies the duration in seconds relative to the startTime that the job may be active
       * before the system tries to terminate it; value must be positive integer.
       * </pre>
       *
       * <code>int32 active_deadline_seconds = 3;</code>
       */
      public int getActiveDeadlineSeconds() {
        return activeDeadlineSeconds_;
      }
      /**
       * <pre>
       * Specifies the duration in seconds relative to the startTime that the job may be active
       * before the system tries to terminate it; value must be positive integer.
       * </pre>
       *
       * <code>int32 active_deadline_seconds = 3;</code>
       */
      public Builder setActiveDeadlineSeconds(int value) {
        
        activeDeadlineSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the duration in seconds relative to the startTime that the job may be active
       * before the system tries to terminate it; value must be positive integer.
       * </pre>
       *
       * <code>int32 active_deadline_seconds = 3;</code>
       */
      public Builder clearActiveDeadlineSeconds() {
        
        activeDeadlineSeconds_ = 0;
        onChanged();
        return this;
      }

      private int backoffLimit_ ;
      /**
       * <pre>
       * Number of retries before marking this job failed.
       * </pre>
       *
       * <code>int32 backoff_limit = 4;</code>
       */
      public int getBackoffLimit() {
        return backoffLimit_;
      }
      /**
       * <pre>
       * Number of retries before marking this job failed.
       * </pre>
       *
       * <code>int32 backoff_limit = 4;</code>
       */
      public Builder setBackoffLimit(int value) {
        
        backoffLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of retries before marking this job failed.
       * </pre>
       *
       * <code>int32 backoff_limit = 4;</code>
       */
      public Builder clearBackoffLimit() {
        
        backoffLimit_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.plugins.kubeflow.RunPolicy)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.plugins.kubeflow.RunPolicy)
    private static final flyteidl.plugins.kubeflow.Common.RunPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.plugins.kubeflow.Common.RunPolicy();
    }

    public static flyteidl.plugins.kubeflow.Common.RunPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RunPolicy>
        PARSER = new com.google.protobuf.AbstractParser<RunPolicy>() {
      @java.lang.Override
      public RunPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RunPolicy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RunPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RunPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.plugins.kubeflow.Common.RunPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_plugins_kubeflow_RunPolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_plugins_kubeflow_RunPolicy_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&flyteidl/plugins/kubeflow/common.proto" +
      "\022\031flyteidl.plugins.kubeflow\"\254\001\n\tRunPolic" +
      "y\022C\n\020clean_pod_policy\030\001 \001(\0162).flyteidl.p" +
      "lugins.kubeflow.CleanPodPolicy\022\"\n\032ttl_se" +
      "conds_after_finished\030\002 \001(\005\022\037\n\027active_dea" +
      "dline_seconds\030\003 \001(\005\022\025\n\rbackoff_limit\030\004 \001" +
      "(\005*c\n\rRestartPolicy\022\031\n\025RESTART_POLICY_AL" +
      "WAYS\020\000\022\035\n\031RESTART_POLICY_ON_FAILURE\020\001\022\030\n" +
      "\024RESTART_POLICY_NEVER\020\002*`\n\016CleanPodPolic" +
      "y\022\030\n\024CLEANPOD_POLICY_NONE\020\000\022\033\n\027CLEANPOD_" +
      "POLICY_RUNNING\020\001\022\027\n\023CLEANPOD_POLICY_ALL\020" +
      "\002B9Z7github.com/flyteorg/flyteidl/gen/pb" +
      "-go/flyteidl/pluginsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_flyteidl_plugins_kubeflow_RunPolicy_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_plugins_kubeflow_RunPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_plugins_kubeflow_RunPolicy_descriptor,
        new java.lang.String[] { "CleanPodPolicy", "TtlSecondsAfterFinished", "ActiveDeadlineSeconds", "BackoffLimit", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
