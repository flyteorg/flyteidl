# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/admin/cluster_assignment.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='flyteidl/admin/cluster_assignment.proto',
  package='flyteidl.admin',
  syntax='proto3',
  serialized_options=_b('Z5github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/admin'),
  serialized_pb=_b('\n\'flyteidl/admin/cluster_assignment.proto\x12\x0e\x66lyteidl.admin\"o\n\x11\x43lusterAssignment\x12*\n\x08\x61\x66\x66inity\x18\x01 \x01(\x0b\x32\x18.flyteidl.admin.Affinity\x12.\n\ntoleration\x18\x02 \x01(\x0b\x32\x1a.flyteidl.admin.Toleration\"7\n\x08\x41\x66\x66inity\x12+\n\tselectors\x18\x01 \x03(\x0b\x32\x18.flyteidl.admin.Selector\"9\n\nToleration\x12+\n\tselectors\x18\x01 \x03(\x0b\x32\x18.flyteidl.admin.Selector\"\xa3\x01\n\x08Selector\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x03(\t\x12\x33\n\x08operator\x18\x03 \x01(\x0e\x32!.flyteidl.admin.Selector.Operator\"F\n\x08Operator\x12\n\n\x06\x45QUALS\x10\x00\x12\x0e\n\nNOT_EQUALS\x10\x01\x12\x06\n\x02IN\x10\x02\x12\n\n\x06NOT_IN\x10\x03\x12\n\n\x06\x45XISTS\x10\x04\x42\x37Z5github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/adminb\x06proto3')
)



_SELECTOR_OPERATOR = _descriptor.EnumDescriptor(
  name='Operator',
  full_name='flyteidl.admin.Selector.Operator',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EQUALS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_EQUALS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IN', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_IN', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXISTS', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=382,
  serialized_end=452,
)
_sym_db.RegisterEnumDescriptor(_SELECTOR_OPERATOR)


_CLUSTERASSIGNMENT = _descriptor.Descriptor(
  name='ClusterAssignment',
  full_name='flyteidl.admin.ClusterAssignment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='affinity', full_name='flyteidl.admin.ClusterAssignment.affinity', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='toleration', full_name='flyteidl.admin.ClusterAssignment.toleration', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=170,
)


_AFFINITY = _descriptor.Descriptor(
  name='Affinity',
  full_name='flyteidl.admin.Affinity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='selectors', full_name='flyteidl.admin.Affinity.selectors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=172,
  serialized_end=227,
)


_TOLERATION = _descriptor.Descriptor(
  name='Toleration',
  full_name='flyteidl.admin.Toleration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='selectors', full_name='flyteidl.admin.Toleration.selectors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=229,
  serialized_end=286,
)


_SELECTOR = _descriptor.Descriptor(
  name='Selector',
  full_name='flyteidl.admin.Selector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='flyteidl.admin.Selector.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='flyteidl.admin.Selector.value', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='operator', full_name='flyteidl.admin.Selector.operator', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SELECTOR_OPERATOR,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=289,
  serialized_end=452,
)

_CLUSTERASSIGNMENT.fields_by_name['affinity'].message_type = _AFFINITY
_CLUSTERASSIGNMENT.fields_by_name['toleration'].message_type = _TOLERATION
_AFFINITY.fields_by_name['selectors'].message_type = _SELECTOR
_TOLERATION.fields_by_name['selectors'].message_type = _SELECTOR
_SELECTOR.fields_by_name['operator'].enum_type = _SELECTOR_OPERATOR
_SELECTOR_OPERATOR.containing_type = _SELECTOR
DESCRIPTOR.message_types_by_name['ClusterAssignment'] = _CLUSTERASSIGNMENT
DESCRIPTOR.message_types_by_name['Affinity'] = _AFFINITY
DESCRIPTOR.message_types_by_name['Toleration'] = _TOLERATION
DESCRIPTOR.message_types_by_name['Selector'] = _SELECTOR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ClusterAssignment = _reflection.GeneratedProtocolMessageType('ClusterAssignment', (_message.Message,), dict(
  DESCRIPTOR = _CLUSTERASSIGNMENT,
  __module__ = 'flyteidl.admin.cluster_assignment_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.admin.ClusterAssignment)
  ))
_sym_db.RegisterMessage(ClusterAssignment)

Affinity = _reflection.GeneratedProtocolMessageType('Affinity', (_message.Message,), dict(
  DESCRIPTOR = _AFFINITY,
  __module__ = 'flyteidl.admin.cluster_assignment_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.admin.Affinity)
  ))
_sym_db.RegisterMessage(Affinity)

Toleration = _reflection.GeneratedProtocolMessageType('Toleration', (_message.Message,), dict(
  DESCRIPTOR = _TOLERATION,
  __module__ = 'flyteidl.admin.cluster_assignment_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.admin.Toleration)
  ))
_sym_db.RegisterMessage(Toleration)

Selector = _reflection.GeneratedProtocolMessageType('Selector', (_message.Message,), dict(
  DESCRIPTOR = _SELECTOR,
  __module__ = 'flyteidl.admin.cluster_assignment_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.admin.Selector)
  ))
_sym_db.RegisterMessage(Selector)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
