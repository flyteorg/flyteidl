# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/plugins/pytorch.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1e\x66lyteidl/plugins/pytorch.proto\x12\x10\x66lyteidl.plugins\":\n\x1e\x44istributedPyTorchTrainingTask\x12\x18\n\x07workers\x18\x01 \x01(\x05R\x07workersB\xc1\x01\n\x14\x63om.flyteidl.pluginsB\x0cPytorchProtoH\x02Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/plugins\xf8\x01\x00\xa2\x02\x03\x46PX\xaa\x02\x10\x46lyteidl.Plugins\xca\x02\x10\x46lyteidl\\Plugins\xe2\x02\x1c\x46lyteidl\\Plugins\\GPBMetadata\xea\x02\x11\x46lyteidl::Pluginsb\x06proto3')



_DISTRIBUTEDPYTORCHTRAININGTASK = DESCRIPTOR.message_types_by_name['DistributedPyTorchTrainingTask']
DistributedPyTorchTrainingTask = _reflection.GeneratedProtocolMessageType('DistributedPyTorchTrainingTask', (_message.Message,), {
  'DESCRIPTOR' : _DISTRIBUTEDPYTORCHTRAININGTASK,
  '__module__' : 'flyteidl.plugins.pytorch_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.plugins.DistributedPyTorchTrainingTask)
  })
_sym_db.RegisterMessage(DistributedPyTorchTrainingTask)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\024com.flyteidl.pluginsB\014PytorchProtoH\002Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/plugins\370\001\000\242\002\003FPX\252\002\020Flyteidl.Plugins\312\002\020Flyteidl\\Plugins\342\002\034Flyteidl\\Plugins\\GPBMetadata\352\002\021Flyteidl::Plugins'
  _DISTRIBUTEDPYTORCHTRAININGTASK._serialized_start=52
  _DISTRIBUTEDPYTORCHTRAININGTASK._serialized_end=110
# @@protoc_insertion_point(module_scope)
