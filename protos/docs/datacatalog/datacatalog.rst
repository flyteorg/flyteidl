######################
Protocol Documentation
######################




.. _ref_flyteidl/datacatalog/datacatalog.proto:

flyteidl/datacatalog/datacatalog.proto
==================================================================





.. _ref_datacatalog.AddTagRequest:

AddTagRequest
------------------------------------------------------------------

Request message for tagging an Artifact.



.. csv-table:: AddTagRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "tag", ":ref:`ref_datacatalog.Tag`", "", ""







.. _ref_datacatalog.AddTagResponse:

AddTagResponse
------------------------------------------------------------------

Response message for tagging an Artifact.








.. _ref_datacatalog.Artifact:

Artifact
------------------------------------------------------------------

Artifact message. It is composed of several string fields.



.. csv-table:: Artifact type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "id", ":ref:`ref_string`", "", "The unique ID of the artifact"
   "dataset", ":ref:`ref_datacatalog.DatasetID`", "", "The Dataset that the artifact belongs to"
   "data", ":ref:`ref_datacatalog.ArtifactData`", "repeated", "A list of data that is associated with the artifact"
   "metadata", ":ref:`ref_datacatalog.Metadata`", "", "Free-form metadata associated with the artifact"
   "partitions", ":ref:`ref_datacatalog.Partition`", "repeated", ""
   "tags", ":ref:`ref_datacatalog.Tag`", "repeated", ""
   "created_at", ":ref:`ref_google.protobuf.Timestamp`", "", "creation timestamp of artifact, autogenerated by service"







.. _ref_datacatalog.ArtifactData:

ArtifactData
------------------------------------------------------------------

ArtifactData that belongs to an artifact



.. csv-table:: ArtifactData type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "name", ":ref:`ref_string`", "", ""
   "value", ":ref:`ref_flyteidl.core.Literal`", "", ""







.. _ref_datacatalog.ArtifactPropertyFilter:

ArtifactPropertyFilter
------------------------------------------------------------------

Artifact properties we can filter by



.. csv-table:: ArtifactPropertyFilter type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "artifact_id", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.CreateArtifactRequest:

CreateArtifactRequest
------------------------------------------------------------------

Request message for creating an Artifact and its associated artifact Data.



.. csv-table:: CreateArtifactRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "artifact", ":ref:`ref_datacatalog.Artifact`", "", ""







.. _ref_datacatalog.CreateArtifactResponse:

CreateArtifactResponse
------------------------------------------------------------------

Response message for creating an Artifact.








.. _ref_datacatalog.CreateDatasetRequest:

CreateDatasetRequest
------------------------------------------------------------------

Request message for creating a Dataset.



.. csv-table:: CreateDatasetRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset", ":ref:`ref_datacatalog.Dataset`", "", ""







.. _ref_datacatalog.CreateDatasetResponse:

CreateDatasetResponse
------------------------------------------------------------------

Response message for creating a Dataset








.. _ref_datacatalog.Dataset:

Dataset
------------------------------------------------------------------

Dataset message. It is uniquely identified by DatasetID.



.. csv-table:: Dataset type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "id", ":ref:`ref_datacatalog.DatasetID`", "", ""
   "metadata", ":ref:`ref_datacatalog.Metadata`", "", ""
   "partitionKeys", ":ref:`ref_string`", "repeated", ""







.. _ref_datacatalog.DatasetID:

DatasetID
------------------------------------------------------------------

DatasetID message that is composed of several string fields.



.. csv-table:: DatasetID type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "project", ":ref:`ref_string`", "", "The name of the project"
   "name", ":ref:`ref_string`", "", "The name of the dataset"
   "domain", ":ref:`ref_string`", "", "The domain (eg. environment)"
   "version", ":ref:`ref_string`", "", "Version of the data schema"
   "UUID", ":ref:`ref_string`", "", "UUID for the dataset (if set the above fields are optional)"







.. _ref_datacatalog.DatasetPropertyFilter:

DatasetPropertyFilter
------------------------------------------------------------------

Dataset properties we can filter by



.. csv-table:: DatasetPropertyFilter type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "project", ":ref:`ref_string`", "", ""
   "name", ":ref:`ref_string`", "", ""
   "domain", ":ref:`ref_string`", "", ""
   "version", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.ExtendReservationRequest:

ExtendReservationRequest
------------------------------------------------------------------

Request to extend reservation



.. csv-table:: ExtendReservationRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset_id", ":ref:`ref_datacatalog.DatasetID`", "", ""
   "tag_name", ":ref:`ref_string`", "", ""
   "owner_id", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.ExtendReservationResponse:

ExtendReservationResponse
------------------------------------------------------------------

Response to extend reservation








.. _ref_datacatalog.FilterExpression:

FilterExpression
------------------------------------------------------------------

Filter expression that is composed of a combination of single filters



.. csv-table:: FilterExpression type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "filters", ":ref:`ref_datacatalog.SinglePropertyFilter`", "repeated", ""







.. _ref_datacatalog.GetArtifactRequest:

GetArtifactRequest
------------------------------------------------------------------

Request message for retrieving an Artifact. Retrieve an artifact based on a query handle that
can be one of artifact_id or tag. The result returned will include the artifact data and metadata
associated with the artifact.



.. csv-table:: GetArtifactRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset", ":ref:`ref_datacatalog.DatasetID`", "", ""
   "artifact_id", ":ref:`ref_string`", "", ""
   "tag_name", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.GetArtifactResponse:

GetArtifactResponse
------------------------------------------------------------------

Response message for retrieving an Artifact. The result returned will include the artifact data
and metadata associated with the artifact.



.. csv-table:: GetArtifactResponse type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "artifact", ":ref:`ref_datacatalog.Artifact`", "", ""







.. _ref_datacatalog.GetDatasetRequest:

GetDatasetRequest
------------------------------------------------------------------

Request message for retrieving a Dataset. The Dataset is retrieved by it's unique identifier
which is a combination of several fields.



.. csv-table:: GetDatasetRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset", ":ref:`ref_datacatalog.DatasetID`", "", ""







.. _ref_datacatalog.GetDatasetResponse:

GetDatasetResponse
------------------------------------------------------------------

Response message for retrieving a Dataset. The response will include the metadata for the
Dataset.



.. csv-table:: GetDatasetResponse type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset", ":ref:`ref_datacatalog.Dataset`", "", ""







.. _ref_datacatalog.GetOrReserveArtifactRequest:

GetOrReserveArtifactRequest
------------------------------------------------------------------

Get the Artifact or try to reserve a spot if the Artifact does not exist.



.. csv-table:: GetOrReserveArtifactRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset_id", ":ref:`ref_datacatalog.DatasetID`", "", ""
   "tag_name", ":ref:`ref_string`", "", ""
   "owner_id", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.GetOrReserveArtifactResponse:

GetOrReserveArtifactResponse
------------------------------------------------------------------

Response to get artifact or reserve spot.



.. csv-table:: GetOrReserveArtifactResponse type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "artifact", ":ref:`ref_datacatalog.Artifact`", "", ""
   "reservation_status", ":ref:`ref_datacatalog.ReservationStatus`", "", ""







.. _ref_datacatalog.KeyValuePair:

KeyValuePair
------------------------------------------------------------------





.. csv-table:: KeyValuePair type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "key", ":ref:`ref_string`", "", ""
   "value", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.ListArtifactsRequest:

ListArtifactsRequest
------------------------------------------------------------------

List the artifacts that belong to the Dataset, optionally filtered using filtered expression.



.. csv-table:: ListArtifactsRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset", ":ref:`ref_datacatalog.DatasetID`", "", "Use a datasetID for which you want to retrieve the artifacts"
   "filter", ":ref:`ref_datacatalog.FilterExpression`", "", "Apply the filter expression to this query"
   "pagination", ":ref:`ref_datacatalog.PaginationOptions`", "", "Pagination options to get a page of artifacts"







.. _ref_datacatalog.ListArtifactsResponse:

ListArtifactsResponse
------------------------------------------------------------------

Response to list artifacts



.. csv-table:: ListArtifactsResponse type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "artifacts", ":ref:`ref_datacatalog.Artifact`", "repeated", "The list of artifacts"
   "next_token", ":ref:`ref_string`", "", "Token to use to request the next page, pass this into the next requests PaginationOptions"







.. _ref_datacatalog.ListDatasetsRequest:

ListDatasetsRequest
------------------------------------------------------------------

List the datasets for the given query



.. csv-table:: ListDatasetsRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "filter", ":ref:`ref_datacatalog.FilterExpression`", "", "Apply the filter expression to this query"
   "pagination", ":ref:`ref_datacatalog.PaginationOptions`", "", "Pagination options to get a page of datasets"







.. _ref_datacatalog.ListDatasetsResponse:

ListDatasetsResponse
------------------------------------------------------------------

List the datasets response with token for next pagination



.. csv-table:: ListDatasetsResponse type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "datasets", ":ref:`ref_datacatalog.Dataset`", "repeated", "The list of datasets"
   "next_token", ":ref:`ref_string`", "", "Token to use to request the next page, pass this into the next requests PaginationOptions"







.. _ref_datacatalog.Metadata:

Metadata
------------------------------------------------------------------

Metadata representation for artifacts and datasets



.. csv-table:: Metadata type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "key_map", ":ref:`ref_datacatalog.Metadata.KeyMapEntry`", "repeated", "key map is a dictionary of key/val strings that represent metadata"







.. _ref_datacatalog.Metadata.KeyMapEntry:

Metadata.KeyMapEntry
------------------------------------------------------------------





.. csv-table:: Metadata.KeyMapEntry type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "key", ":ref:`ref_string`", "", ""
   "value", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.PaginationOptions:

PaginationOptions
------------------------------------------------------------------

Pagination options for making list requests



.. csv-table:: PaginationOptions type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "limit", ":ref:`ref_uint32`", "", "the max number of results to return"
   "token", ":ref:`ref_string`", "", "the token to pass to fetch the next page"
   "sortKey", ":ref:`ref_datacatalog.PaginationOptions.SortKey`", "", "the property that we want to sort the results by"
   "sortOrder", ":ref:`ref_datacatalog.PaginationOptions.SortOrder`", "", "the sort order of the results"







.. _ref_datacatalog.Partition:

Partition
------------------------------------------------------------------

An artifact could have multiple partitions and each partition can have an arbitrary string key/value pair



.. csv-table:: Partition type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "key", ":ref:`ref_string`", "", ""
   "value", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.PartitionPropertyFilter:

PartitionPropertyFilter
------------------------------------------------------------------

Partition properties we can filter by



.. csv-table:: PartitionPropertyFilter type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "key_val", ":ref:`ref_datacatalog.KeyValuePair`", "", ""







.. _ref_datacatalog.ReleaseReservationRequest:

ReleaseReservationRequest
------------------------------------------------------------------

Request to release reservation



.. csv-table:: ReleaseReservationRequest type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "dataset_id", ":ref:`ref_datacatalog.DatasetID`", "", ""
   "tag_name", ":ref:`ref_string`", "", ""
   "owner_id", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.ReleaseReservationResponse:

ReleaseReservationResponse
------------------------------------------------------------------

Response to release reservation








.. _ref_datacatalog.ReservationStatus:

ReservationStatus
------------------------------------------------------------------

Whether we successfully reserve a spot.



.. csv-table:: ReservationStatus type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "state", ":ref:`ref_datacatalog.ReservationStatus.State`", "", ""
   "metadata", ":ref:`ref_datacatalog.Metadata`", "", ""
   "owner_id", ":ref:`ref_string`", "", ""







.. _ref_datacatalog.SinglePropertyFilter:

SinglePropertyFilter
------------------------------------------------------------------

A single property to filter on.



.. csv-table:: SinglePropertyFilter type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "tag_filter", ":ref:`ref_datacatalog.TagPropertyFilter`", "", ""
   "partition_filter", ":ref:`ref_datacatalog.PartitionPropertyFilter`", "", ""
   "artifact_filter", ":ref:`ref_datacatalog.ArtifactPropertyFilter`", "", ""
   "dataset_filter", ":ref:`ref_datacatalog.DatasetPropertyFilter`", "", ""
   "operator", ":ref:`ref_datacatalog.SinglePropertyFilter.ComparisonOperator`", "", "field 10 in case we add more entities to query"







.. _ref_datacatalog.Tag:

Tag
------------------------------------------------------------------

Tag message that is unique to a Dataset. It is associated to a single artifact and
can be retrieved by name later.



.. csv-table:: Tag type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "name", ":ref:`ref_string`", "", "Name of tag"
   "artifact_id", ":ref:`ref_string`", "", "The tagged artifact"
   "dataset", ":ref:`ref_datacatalog.DatasetID`", "", "The Dataset that this tag belongs to"







.. _ref_datacatalog.TagPropertyFilter:

TagPropertyFilter
------------------------------------------------------------------

Tag properties we can filter by



.. csv-table:: TagPropertyFilter type fields
   :header: "Field", "Type", "Label", "Description"
   :widths: auto

   "tag_name", ":ref:`ref_string`", "", ""





 <!-- end messages -->



.. _ref_datacatalog.PaginationOptions.SortKey:

PaginationOptions.SortKey
------------------------------------------------------------------



.. csv-table:: Enum PaginationOptions.SortKey values
   :header: "Name", "Number", "Description"
   :widths: auto

   "CREATION_TIME", "0", ""



.. _ref_datacatalog.PaginationOptions.SortOrder:

PaginationOptions.SortOrder
------------------------------------------------------------------



.. csv-table:: Enum PaginationOptions.SortOrder values
   :header: "Name", "Number", "Description"
   :widths: auto

   "DESCENDING", "0", ""
   "ASCENDING", "1", ""



.. _ref_datacatalog.ReservationStatus.State:

ReservationStatus.State
------------------------------------------------------------------



.. csv-table:: Enum ReservationStatus.State values
   :header: "Name", "Number", "Description"
   :widths: auto

   "ACQUIRED", "0", "Acquired the reservation successfully."
   "ALREADY_IN_PROGRESS", "1", "Indicates an existing active reservation exist for a different owner_id."



.. _ref_datacatalog.SinglePropertyFilter.ComparisonOperator:

SinglePropertyFilter.ComparisonOperator
------------------------------------------------------------------

as use-cases come up we can add more operators, ex: gte, like, not eq etc.

.. csv-table:: Enum SinglePropertyFilter.ComparisonOperator values
   :header: "Name", "Number", "Description"
   :widths: auto

   "EQUALS", "0", ""

 <!-- end enums -->

 <!-- end HasExtensions -->



.. _ref_datacatalog.DataCatalog:

DataCatalog
------------------------------------------------------------------

Data Catalog service definition
Data Catalog is a service for indexing parameterized, strongly-typed data artifacts across revisions.
Artifacts are associated with a Dataset, and can be tagged for retrieval.

.. csv-table:: DataCatalog service methods
   :header: "Method Name", "Request Type", "Response Type", "Description"
   :widths: auto

   "CreateDataset", ":ref:`ref_datacatalog.CreateDatasetRequest`", ":ref:`ref_datacatalog.CreateDatasetResponse`", "Create a new Dataset. Datasets are unique based on the DatasetID. Datasets are logical groupings of artifacts. Each dataset can have one or more artifacts"
   "GetDataset", ":ref:`ref_datacatalog.GetDatasetRequest`", ":ref:`ref_datacatalog.GetDatasetResponse`", "Get a Dataset by the DatasetID. This returns the Dataset with the associated metadata."
   "CreateArtifact", ":ref:`ref_datacatalog.CreateArtifactRequest`", ":ref:`ref_datacatalog.CreateArtifactResponse`", "Create an artifact and the artifact data associated with it. An artifact can be a hive partition or arbitrary files or data values"
   "GetArtifact", ":ref:`ref_datacatalog.GetArtifactRequest`", ":ref:`ref_datacatalog.GetArtifactResponse`", "Retrieve an artifact by an identifying handle. This returns an artifact along with the artifact data."
   "AddTag", ":ref:`ref_datacatalog.AddTagRequest`", ":ref:`ref_datacatalog.AddTagResponse`", "Associate a tag with an artifact. Tags are unique within a Dataset."
   "ListArtifacts", ":ref:`ref_datacatalog.ListArtifactsRequest`", ":ref:`ref_datacatalog.ListArtifactsResponse`", "Return a paginated list of artifacts"
   "ListDatasets", ":ref:`ref_datacatalog.ListDatasetsRequest`", ":ref:`ref_datacatalog.ListDatasetsResponse`", "Return a paginated list of datasets"
   "GetOrReserveArtifact", ":ref:`ref_datacatalog.GetOrReserveArtifactRequest`", ":ref:`ref_datacatalog.GetOrReserveArtifactResponse`", "Get an artifact and the corresponding data. If the artifact does not exist, try to reserve a spot for populating the artifact. Once you preserve a spot, you should call ExtendReservation API periodically to extend the reservation. Otherwise, the reservation can expire and other tasks may take the spot. If the same owner_id calls this API for the same dataset and it has an active reservation and the artifacts have not been written yet by a different owner, the API will respond with an Acquired Reservation Status (providing idempotency). Note: We may have multiple concurrent tasks with the same signature and the same input that try to populate the same artifact at the same time. Thus with reservation, only one task can run at a time, until the reservation expires. Note: If task A does not extend the reservation in time and the reservation expires, another task B may take over the reservation, resulting in two tasks A and B running in parallel. So a third task C may get the Artifact from A or B, whichever writes last."
   "ExtendReservation", ":ref:`ref_datacatalog.ExtendReservationRequest`", ":ref:`ref_datacatalog.ExtendReservationResponse`", "Extend the reservation to keep it from expiring. If the reservation expires, other tasks can take over the reservation by calling GetOrReserveArtifact."
   "ReleaseReservation", ":ref:`ref_datacatalog.ReleaseReservationRequest`", ":ref:`ref_datacatalog.ReleaseReservationResponse`", "Release the reservation when the task holding the spot fails so that the other tasks can grab the spot."
 <!-- end services -->


