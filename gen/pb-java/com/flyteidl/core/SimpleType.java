// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/types.proto

package com.flyteidl.core;

/**
 * <pre>
 * Define a set of simple types.
 * </pre>
 *
 * Protobuf enum {@code flyteidl.core.SimpleType}
 */
public enum SimpleType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NONE = 0;</code>
   */
  NONE(0),
  /**
   * <code>INTEGER = 1;</code>
   */
  INTEGER(1),
  /**
   * <code>FLOAT = 2;</code>
   */
  FLOAT(2),
  /**
   * <code>STRING = 3;</code>
   */
  STRING(3),
  /**
   * <code>BOOLEAN = 4;</code>
   */
  BOOLEAN(4),
  /**
   * <code>DATETIME = 5;</code>
   */
  DATETIME(5),
  /**
   * <code>DURATION = 6;</code>
   */
  DURATION(6),
  /**
   * <code>BINARY = 7;</code>
   */
  BINARY(7),
  /**
   * <code>ERROR = 8;</code>
   */
  ERROR(8),
  /**
   * <code>STRUCT = 9;</code>
   */
  STRUCT(9),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NONE = 0;</code>
   */
  public static final int NONE_VALUE = 0;
  /**
   * <code>INTEGER = 1;</code>
   */
  public static final int INTEGER_VALUE = 1;
  /**
   * <code>FLOAT = 2;</code>
   */
  public static final int FLOAT_VALUE = 2;
  /**
   * <code>STRING = 3;</code>
   */
  public static final int STRING_VALUE = 3;
  /**
   * <code>BOOLEAN = 4;</code>
   */
  public static final int BOOLEAN_VALUE = 4;
  /**
   * <code>DATETIME = 5;</code>
   */
  public static final int DATETIME_VALUE = 5;
  /**
   * <code>DURATION = 6;</code>
   */
  public static final int DURATION_VALUE = 6;
  /**
   * <code>BINARY = 7;</code>
   */
  public static final int BINARY_VALUE = 7;
  /**
   * <code>ERROR = 8;</code>
   */
  public static final int ERROR_VALUE = 8;
  /**
   * <code>STRUCT = 9;</code>
   */
  public static final int STRUCT_VALUE = 9;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SimpleType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static SimpleType forNumber(int value) {
    switch (value) {
      case 0: return NONE;
      case 1: return INTEGER;
      case 2: return FLOAT;
      case 3: return STRING;
      case 4: return BOOLEAN;
      case 5: return DATETIME;
      case 6: return DURATION;
      case 7: return BINARY;
      case 8: return ERROR;
      case 9: return STRUCT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SimpleType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SimpleType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SimpleType>() {
          public SimpleType findValueByNumber(int number) {
            return SimpleType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.flyteidl.core.TypesProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final SimpleType[] VALUES = values();

  public static SimpleType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SimpleType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:flyteidl.core.SimpleType)
}

