// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/dataproxy.proto

#include "flyteidl/service/dataproxy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fidentifier_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WorkflowExecutionIdentifier_flyteidl_2fcore_2fidentifier_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fidentifier_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NodeExecutionIdentifier_flyteidl_2fcore_2fidentifier_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fidentifier_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TaskExecutionIdentifier_flyteidl_2fcore_2fidentifier_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace flyteidl {
namespace service {
class CreateUploadLocationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateUploadLocationResponse> _instance;
} _CreateUploadLocationResponse_default_instance_;
class CreateUploadLocationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateUploadLocationRequest> _instance;
} _CreateUploadLocationRequest_default_instance_;
class CreateDownloadLocationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDownloadLocationRequest> _instance;
} _CreateDownloadLocationRequest_default_instance_;
class CreateDownloadLocationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDownloadLocationResponse> _instance;
} _CreateDownloadLocationResponse_default_instance_;
class CreateDownloadLinkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDownloadLinkRequest> _instance;
  const ::flyteidl::core::WorkflowExecutionIdentifier* execution_id_;
  const ::flyteidl::core::NodeExecutionIdentifier* node_id_;
  const ::flyteidl::core::TaskExecutionIdentifier* task_id_;
} _CreateDownloadLinkRequest_default_instance_;
class CreateDownloadLinkResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDownloadLinkResponse> _instance;
} _CreateDownloadLinkResponse_default_instance_;
}  // namespace service
}  // namespace flyteidl
static void InitDefaultsCreateUploadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_CreateUploadLocationResponse_default_instance_;
    new (ptr) ::flyteidl::service::CreateUploadLocationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::CreateUploadLocationResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateUploadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateUploadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsCreateUploadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_CreateUploadLocationRequest_default_instance_;
    new (ptr) ::flyteidl::service::CreateUploadLocationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::CreateUploadLocationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateUploadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateUploadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsCreateDownloadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_CreateDownloadLocationRequest_default_instance_;
    new (ptr) ::flyteidl::service::CreateDownloadLocationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::CreateDownloadLocationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateDownloadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateDownloadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsCreateDownloadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_CreateDownloadLocationResponse_default_instance_;
    new (ptr) ::flyteidl::service::CreateDownloadLocationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::CreateDownloadLocationResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateDownloadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateDownloadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsCreateDownloadLinkRequest_flyteidl_2fservice_2fdataproxy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_CreateDownloadLinkRequest_default_instance_;
    new (ptr) ::flyteidl::service::CreateDownloadLinkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::CreateDownloadLinkRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CreateDownloadLinkRequest_flyteidl_2fservice_2fdataproxy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCreateDownloadLinkRequest_flyteidl_2fservice_2fdataproxy_2eproto}, {
      &scc_info_WorkflowExecutionIdentifier_flyteidl_2fcore_2fidentifier_2eproto.base,
      &scc_info_NodeExecutionIdentifier_flyteidl_2fcore_2fidentifier_2eproto.base,
      &scc_info_TaskExecutionIdentifier_flyteidl_2fcore_2fidentifier_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsCreateDownloadLinkResponse_flyteidl_2fservice_2fdataproxy_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::service::_CreateDownloadLinkResponse_default_instance_;
    new (ptr) ::flyteidl::service::CreateDownloadLinkResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::service::CreateDownloadLinkResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateDownloadLinkResponse_flyteidl_2fservice_2fdataproxy_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateDownloadLinkResponse_flyteidl_2fservice_2fdataproxy_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

void InitDefaults_flyteidl_2fservice_2fdataproxy_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateUploadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateUploadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateDownloadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateDownloadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateDownloadLinkRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateDownloadLinkResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fservice_2fdataproxy_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fdataproxy_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fdataproxy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationResponse, signed_url_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationResponse, native_url_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationResponse, expires_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationRequest, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationRequest, filename_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationRequest, expires_in_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateUploadLocationRequest, content_md5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLocationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLocationRequest, native_url_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLocationRequest, expires_in_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLocationResponse, signed_url_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLocationResponse, expires_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::service::CreateDownloadLinkRequestDefaultTypeInternal, execution_id_),
  offsetof(::flyteidl::service::CreateDownloadLinkRequestDefaultTypeInternal, node_id_),
  offsetof(::flyteidl::service::CreateDownloadLinkRequestDefaultTypeInternal, task_id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkRequest, artifact_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkRequest, expires_in_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkRequest, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkResponse, signed_url_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::CreateDownloadLinkResponse, expires_at_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::service::CreateUploadLocationResponse)},
  { 8, -1, sizeof(::flyteidl::service::CreateUploadLocationRequest)},
  { 18, -1, sizeof(::flyteidl::service::CreateDownloadLocationRequest)},
  { 25, -1, sizeof(::flyteidl::service::CreateDownloadLocationResponse)},
  { 32, -1, sizeof(::flyteidl::service::CreateDownloadLinkRequest)},
  { 43, -1, sizeof(::flyteidl::service::CreateDownloadLinkResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_CreateUploadLocationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_CreateUploadLocationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_CreateDownloadLocationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_CreateDownloadLocationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_CreateDownloadLinkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::service::_CreateDownloadLinkResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fdataproxy_2eproto, "flyteidl/service/dataproxy.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fdataproxy_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto, 6, file_level_enum_descriptors_flyteidl_2fservice_2fdataproxy_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fdataproxy_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fdataproxy_2eproto[] =
  "\n flyteidl/service/dataproxy.proto\022\020flyt"
  "eidl.service\032\034google/api/annotations.pro"
  "to\032,protoc-gen-swagger/options/annotatio"
  "ns.proto\032\036google/protobuf/duration.proto"
  "\032\037google/protobuf/timestamp.proto\032\036flyte"
  "idl/core/identifier.proto\"v\n\034CreateUploa"
  "dLocationResponse\022\022\n\nsigned_url\030\001 \001(\t\022\022\n"
  "\nnative_url\030\002 \001(\t\022.\n\nexpires_at\030\003 \001(\0132\032."
  "google.protobuf.Timestamp\"\224\001\n\033CreateUplo"
  "adLocationRequest\022\017\n\007project\030\001 \001(\t\022\016\n\006do"
  "main\030\002 \001(\t\022\020\n\010filename\030\003 \001(\t\022-\n\nexpires_"
  "in\030\004 \001(\0132\031.google.protobuf.Duration\022\023\n\013c"
  "ontent_md5\030\005 \001(\014\"b\n\035CreateDownloadLocati"
  "onRequest\022\022\n\nnative_url\030\001 \001(\t\022-\n\nexpires"
  "_in\030\002 \001(\0132\031.google.protobuf.Duration\"d\n\036"
  "CreateDownloadLocationResponse\022\022\n\nsigned"
  "_url\030\001 \001(\t\022.\n\nexpires_at\030\002 \001(\0132\032.google."
  "protobuf.Timestamp\"\305\002\n\031CreateDownloadLin"
  "kRequest\022B\n\014execution_id\030\001 \001(\0132*.flyteid"
  "l.core.WorkflowExecutionIdentifierH\000\0229\n\007"
  "node_id\030\002 \001(\0132&.flyteidl.core.NodeExecut"
  "ionIdentifierH\000\0229\n\007task_id\030\003 \001(\0132&.flyte"
  "idl.core.TaskExecutionIdentifierH\000\0225\n\rar"
  "tifact_type\030\004 \001(\0162\036.flyteidl.service.Art"
  "ifactType\022-\n\nexpires_in\030\005 \001(\0132\031.google.p"
  "rotobuf.DurationB\010\n\006source\"`\n\032CreateDown"
  "loadLinkResponse\022\022\n\nsigned_url\030\001 \003(\t\022.\n\n"
  "expires_at\030\002 \001(\0132\032.google.protobuf.Times"
  "tamp*C\n\014ArtifactType\022\033\n\027ARTIFACT_TYPE_UN"
  "DEFINED\020\000\022\026\n\022ARTIFACT_TYPE_DECK\020\0012\236\006\n\020Da"
  "taProxyService\022\360\001\n\024CreateUploadLocation\022"
  "-.flyteidl.service.CreateUploadLocationR"
  "equest\032..flyteidl.service.CreateUploadLo"
  "cationResponse\"y\202\323\344\223\002#\"\036/api/v1/dataprox"
  "y/artifact_urn:\001*\222AM\032KCreates a write-on"
  "ly http location that is accessible for "
  "tasks at runtime.\022\251\002\n\026CreateDownloadLoca"
  "tion\022/.flyteidl.service.CreateDownloadLo"
  "cationRequest\0320.flyteidl.service.CreateD"
  "ownloadLocationResponse\"\253\001\210\002\001\202\323\344\223\002 \022\036/ap"
  "i/v1/dataproxy/artifact_urn\222A\177\032}Deprecat"
  "ed: Please use CreateDownloadLink instea"
  "d. Creates a read-only http location tha"
  "t is accessible for tasks at runtime.\022\352\001"
  "\n\022CreateDownloadLink\022+.flyteidl.service."
  "CreateDownloadLinkRequest\032,.flyteidl.ser"
  "vice.CreateDownloadLinkResponse\"y\202\323\344\223\002$\""
  "\037/api/v1/dataproxy/artifact_link:\001*\222AL\032J"
  "Creates a read-only http location that i"
  "s accessible for tasks at runtime.B9Z7gi"
  "thub.com/flyteorg/flyteidl/gen/pb-go/fly"
  "teidl/serviceb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fdataproxy_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fdataproxy_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fdataproxy_2eproto,
  "flyteidl/service/dataproxy.proto", &assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto, 2061,
};

void AddDescriptors_flyteidl_2fservice_2fdataproxy_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fduration_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
    ::AddDescriptors_flyteidl_2fcore_2fidentifier_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fdataproxy_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fdataproxy_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fdataproxy_2eproto(); return true; }();
namespace flyteidl {
namespace service {
const ::google::protobuf::EnumDescriptor* ArtifactType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto);
  return file_level_enum_descriptors_flyteidl_2fservice_2fdataproxy_2eproto[0];
}
bool ArtifactType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CreateUploadLocationResponse::InitAsDefaultInstance() {
  ::flyteidl::service::_CreateUploadLocationResponse_default_instance_._instance.get_mutable()->expires_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class CreateUploadLocationResponse::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& expires_at(const CreateUploadLocationResponse* msg);
};

const ::google::protobuf::Timestamp&
CreateUploadLocationResponse::HasBitSetters::expires_at(const CreateUploadLocationResponse* msg) {
  return *msg->expires_at_;
}
void CreateUploadLocationResponse::clear_expires_at() {
  if (GetArenaNoVirtual() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateUploadLocationResponse::kSignedUrlFieldNumber;
const int CreateUploadLocationResponse::kNativeUrlFieldNumber;
const int CreateUploadLocationResponse::kExpiresAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateUploadLocationResponse::CreateUploadLocationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.CreateUploadLocationResponse)
}
CreateUploadLocationResponse::CreateUploadLocationResponse(const CreateUploadLocationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signed_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signed_url().size() > 0) {
    signed_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_url_);
  }
  native_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.native_url().size() > 0) {
    native_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.native_url_);
  }
  if (from.has_expires_at()) {
    expires_at_ = new ::google::protobuf::Timestamp(*from.expires_at_);
  } else {
    expires_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.CreateUploadLocationResponse)
}

void CreateUploadLocationResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateUploadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  signed_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  native_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expires_at_ = nullptr;
}

CreateUploadLocationResponse::~CreateUploadLocationResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.CreateUploadLocationResponse)
  SharedDtor();
}

void CreateUploadLocationResponse::SharedDtor() {
  signed_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  native_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expires_at_;
}

void CreateUploadLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateUploadLocationResponse& CreateUploadLocationResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateUploadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  return *internal_default_instance();
}


void CreateUploadLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.CreateUploadLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signed_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  native_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateUploadLocationResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateUploadLocationResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string signed_url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateUploadLocationResponse.signed_url");
        object = msg->mutable_signed_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string native_url = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateUploadLocationResponse.native_url");
        object = msg->mutable_native_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp expires_at = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_expires_at();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateUploadLocationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.CreateUploadLocationResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signed_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signed_url().data(), static_cast<int>(this->signed_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateUploadLocationResponse.signed_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string native_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_native_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->native_url().data(), static_cast<int>(this->native_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateUploadLocationResponse.native_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expires_at = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expires_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.CreateUploadLocationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.CreateUploadLocationResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateUploadLocationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.CreateUploadLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signed_url = 1;
  if (this->signed_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_url().data(), static_cast<int>(this->signed_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationResponse.signed_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signed_url(), output);
  }

  // string native_url = 2;
  if (this->native_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->native_url().data(), static_cast<int>(this->native_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationResponse.native_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->native_url(), output);
  }

  // .google.protobuf.Timestamp expires_at = 3;
  if (this->has_expires_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::expires_at(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.CreateUploadLocationResponse)
}

::google::protobuf::uint8* CreateUploadLocationResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.CreateUploadLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signed_url = 1;
  if (this->signed_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_url().data(), static_cast<int>(this->signed_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationResponse.signed_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signed_url(), target);
  }

  // string native_url = 2;
  if (this->native_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->native_url().data(), static_cast<int>(this->native_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationResponse.native_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->native_url(), target);
  }

  // .google.protobuf.Timestamp expires_at = 3;
  if (this->has_expires_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::expires_at(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.CreateUploadLocationResponse)
  return target;
}

size_t CreateUploadLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.CreateUploadLocationResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string signed_url = 1;
  if (this->signed_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signed_url());
  }

  // string native_url = 2;
  if (this->native_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->native_url());
  }

  // .google.protobuf.Timestamp expires_at = 3;
  if (this->has_expires_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expires_at_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateUploadLocationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.CreateUploadLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateUploadLocationResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CreateUploadLocationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.CreateUploadLocationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.CreateUploadLocationResponse)
    MergeFrom(*source);
  }
}

void CreateUploadLocationResponse::MergeFrom(const CreateUploadLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.CreateUploadLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signed_url().size() > 0) {

    signed_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_url_);
  }
  if (from.native_url().size() > 0) {

    native_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.native_url_);
  }
  if (from.has_expires_at()) {
    mutable_expires_at()->::google::protobuf::Timestamp::MergeFrom(from.expires_at());
  }
}

void CreateUploadLocationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.CreateUploadLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateUploadLocationResponse::CopyFrom(const CreateUploadLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.CreateUploadLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUploadLocationResponse::IsInitialized() const {
  return true;
}

void CreateUploadLocationResponse::Swap(CreateUploadLocationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateUploadLocationResponse::InternalSwap(CreateUploadLocationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  signed_url_.Swap(&other->signed_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  native_url_.Swap(&other->native_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expires_at_, other->expires_at_);
}

::google::protobuf::Metadata CreateUploadLocationResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateUploadLocationRequest::InitAsDefaultInstance() {
  ::flyteidl::service::_CreateUploadLocationRequest_default_instance_._instance.get_mutable()->expires_in_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
class CreateUploadLocationRequest::HasBitSetters {
 public:
  static const ::google::protobuf::Duration& expires_in(const CreateUploadLocationRequest* msg);
};

const ::google::protobuf::Duration&
CreateUploadLocationRequest::HasBitSetters::expires_in(const CreateUploadLocationRequest* msg) {
  return *msg->expires_in_;
}
void CreateUploadLocationRequest::clear_expires_in() {
  if (GetArenaNoVirtual() == nullptr && expires_in_ != nullptr) {
    delete expires_in_;
  }
  expires_in_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateUploadLocationRequest::kProjectFieldNumber;
const int CreateUploadLocationRequest::kDomainFieldNumber;
const int CreateUploadLocationRequest::kFilenameFieldNumber;
const int CreateUploadLocationRequest::kExpiresInFieldNumber;
const int CreateUploadLocationRequest::kContentMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateUploadLocationRequest::CreateUploadLocationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.CreateUploadLocationRequest)
}
CreateUploadLocationRequest::CreateUploadLocationRequest(const CreateUploadLocationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  content_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content_md5().size() > 0) {
    content_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_md5_);
  }
  if (from.has_expires_in()) {
    expires_in_ = new ::google::protobuf::Duration(*from.expires_in_);
  } else {
    expires_in_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.CreateUploadLocationRequest)
}

void CreateUploadLocationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateUploadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expires_in_ = nullptr;
}

CreateUploadLocationRequest::~CreateUploadLocationRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.service.CreateUploadLocationRequest)
  SharedDtor();
}

void CreateUploadLocationRequest::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expires_in_;
}

void CreateUploadLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateUploadLocationRequest& CreateUploadLocationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateUploadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  return *internal_default_instance();
}


void CreateUploadLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.CreateUploadLocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && expires_in_ != nullptr) {
    delete expires_in_;
  }
  expires_in_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateUploadLocationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateUploadLocationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateUploadLocationRequest.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string domain = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateUploadLocationRequest.domain");
        object = msg->mutable_domain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filename = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateUploadLocationRequest.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Duration expires_in = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Duration::_InternalParse;
        object = msg->mutable_expires_in();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes content_md5 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_content_md5();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateUploadLocationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.CreateUploadLocationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateUploadLocationRequest.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateUploadLocationRequest.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateUploadLocationRequest.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration expires_in = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expires_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content_md5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content_md5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.CreateUploadLocationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.CreateUploadLocationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateUploadLocationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.CreateUploadLocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationRequest.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationRequest.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // .google.protobuf.Duration expires_in = 4;
  if (this->has_expires_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::expires_in(this), output);
  }

  // bytes content_md5 = 5;
  if (this->content_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->content_md5(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.CreateUploadLocationRequest)
}

::google::protobuf::uint8* CreateUploadLocationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.CreateUploadLocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationRequest.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateUploadLocationRequest.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // .google.protobuf.Duration expires_in = 4;
  if (this->has_expires_in()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::expires_in(this), target);
  }

  // bytes content_md5 = 5;
  if (this->content_md5().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->content_md5(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.CreateUploadLocationRequest)
  return target;
}

size_t CreateUploadLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.CreateUploadLocationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string filename = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // bytes content_md5 = 5;
  if (this->content_md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content_md5());
  }

  // .google.protobuf.Duration expires_in = 4;
  if (this->has_expires_in()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expires_in_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateUploadLocationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.CreateUploadLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateUploadLocationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateUploadLocationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.CreateUploadLocationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.CreateUploadLocationRequest)
    MergeFrom(*source);
  }
}

void CreateUploadLocationRequest::MergeFrom(const CreateUploadLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.CreateUploadLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.content_md5().size() > 0) {

    content_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_md5_);
  }
  if (from.has_expires_in()) {
    mutable_expires_in()->::google::protobuf::Duration::MergeFrom(from.expires_in());
  }
}

void CreateUploadLocationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.CreateUploadLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateUploadLocationRequest::CopyFrom(const CreateUploadLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.CreateUploadLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUploadLocationRequest::IsInitialized() const {
  return true;
}

void CreateUploadLocationRequest::Swap(CreateUploadLocationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateUploadLocationRequest::InternalSwap(CreateUploadLocationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_md5_.Swap(&other->content_md5_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expires_in_, other->expires_in_);
}

::google::protobuf::Metadata CreateUploadLocationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateDownloadLocationRequest::InitAsDefaultInstance() {
  ::flyteidl::service::_CreateDownloadLocationRequest_default_instance_._instance.get_mutable()->expires_in_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
class CreateDownloadLocationRequest::HasBitSetters {
 public:
  static const ::google::protobuf::Duration& expires_in(const CreateDownloadLocationRequest* msg);
};

const ::google::protobuf::Duration&
CreateDownloadLocationRequest::HasBitSetters::expires_in(const CreateDownloadLocationRequest* msg) {
  return *msg->expires_in_;
}
void CreateDownloadLocationRequest::clear_expires_in() {
  if (GetArenaNoVirtual() == nullptr && expires_in_ != nullptr) {
    delete expires_in_;
  }
  expires_in_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDownloadLocationRequest::kNativeUrlFieldNumber;
const int CreateDownloadLocationRequest::kExpiresInFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDownloadLocationRequest::CreateDownloadLocationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.CreateDownloadLocationRequest)
}
CreateDownloadLocationRequest::CreateDownloadLocationRequest(const CreateDownloadLocationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  native_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.native_url().size() > 0) {
    native_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.native_url_);
  }
  if (from.has_expires_in()) {
    expires_in_ = new ::google::protobuf::Duration(*from.expires_in_);
  } else {
    expires_in_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.CreateDownloadLocationRequest)
}

void CreateDownloadLocationRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateDownloadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  native_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expires_in_ = nullptr;
}

CreateDownloadLocationRequest::~CreateDownloadLocationRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.service.CreateDownloadLocationRequest)
  SharedDtor();
}

void CreateDownloadLocationRequest::SharedDtor() {
  native_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expires_in_;
}

void CreateDownloadLocationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDownloadLocationRequest& CreateDownloadLocationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateDownloadLocationRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  return *internal_default_instance();
}


void CreateDownloadLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.CreateDownloadLocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  native_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && expires_in_ != nullptr) {
    delete expires_in_;
  }
  expires_in_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateDownloadLocationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateDownloadLocationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string native_url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateDownloadLocationRequest.native_url");
        object = msg->mutable_native_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Duration expires_in = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Duration::_InternalParse;
        object = msg->mutable_expires_in();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateDownloadLocationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.CreateDownloadLocationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string native_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_native_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->native_url().data(), static_cast<int>(this->native_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateDownloadLocationRequest.native_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration expires_in = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expires_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.CreateDownloadLocationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.CreateDownloadLocationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateDownloadLocationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.CreateDownloadLocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string native_url = 1;
  if (this->native_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->native_url().data(), static_cast<int>(this->native_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateDownloadLocationRequest.native_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->native_url(), output);
  }

  // .google.protobuf.Duration expires_in = 2;
  if (this->has_expires_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::expires_in(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.CreateDownloadLocationRequest)
}

::google::protobuf::uint8* CreateDownloadLocationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.CreateDownloadLocationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string native_url = 1;
  if (this->native_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->native_url().data(), static_cast<int>(this->native_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateDownloadLocationRequest.native_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->native_url(), target);
  }

  // .google.protobuf.Duration expires_in = 2;
  if (this->has_expires_in()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::expires_in(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.CreateDownloadLocationRequest)
  return target;
}

size_t CreateDownloadLocationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.CreateDownloadLocationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string native_url = 1;
  if (this->native_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->native_url());
  }

  // .google.protobuf.Duration expires_in = 2;
  if (this->has_expires_in()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expires_in_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDownloadLocationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.CreateDownloadLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDownloadLocationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateDownloadLocationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.CreateDownloadLocationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.CreateDownloadLocationRequest)
    MergeFrom(*source);
  }
}

void CreateDownloadLocationRequest::MergeFrom(const CreateDownloadLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.CreateDownloadLocationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.native_url().size() > 0) {

    native_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.native_url_);
  }
  if (from.has_expires_in()) {
    mutable_expires_in()->::google::protobuf::Duration::MergeFrom(from.expires_in());
  }
}

void CreateDownloadLocationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.CreateDownloadLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDownloadLocationRequest::CopyFrom(const CreateDownloadLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.CreateDownloadLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDownloadLocationRequest::IsInitialized() const {
  return true;
}

void CreateDownloadLocationRequest::Swap(CreateDownloadLocationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDownloadLocationRequest::InternalSwap(CreateDownloadLocationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  native_url_.Swap(&other->native_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expires_in_, other->expires_in_);
}

::google::protobuf::Metadata CreateDownloadLocationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateDownloadLocationResponse::InitAsDefaultInstance() {
  ::flyteidl::service::_CreateDownloadLocationResponse_default_instance_._instance.get_mutable()->expires_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class CreateDownloadLocationResponse::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& expires_at(const CreateDownloadLocationResponse* msg);
};

const ::google::protobuf::Timestamp&
CreateDownloadLocationResponse::HasBitSetters::expires_at(const CreateDownloadLocationResponse* msg) {
  return *msg->expires_at_;
}
void CreateDownloadLocationResponse::clear_expires_at() {
  if (GetArenaNoVirtual() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDownloadLocationResponse::kSignedUrlFieldNumber;
const int CreateDownloadLocationResponse::kExpiresAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDownloadLocationResponse::CreateDownloadLocationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.CreateDownloadLocationResponse)
}
CreateDownloadLocationResponse::CreateDownloadLocationResponse(const CreateDownloadLocationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signed_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signed_url().size() > 0) {
    signed_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_url_);
  }
  if (from.has_expires_at()) {
    expires_at_ = new ::google::protobuf::Timestamp(*from.expires_at_);
  } else {
    expires_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.CreateDownloadLocationResponse)
}

void CreateDownloadLocationResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateDownloadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  signed_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expires_at_ = nullptr;
}

CreateDownloadLocationResponse::~CreateDownloadLocationResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.CreateDownloadLocationResponse)
  SharedDtor();
}

void CreateDownloadLocationResponse::SharedDtor() {
  signed_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expires_at_;
}

void CreateDownloadLocationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDownloadLocationResponse& CreateDownloadLocationResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateDownloadLocationResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  return *internal_default_instance();
}


void CreateDownloadLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.CreateDownloadLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signed_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateDownloadLocationResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateDownloadLocationResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string signed_url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateDownloadLocationResponse.signed_url");
        object = msg->mutable_signed_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp expires_at = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_expires_at();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateDownloadLocationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.CreateDownloadLocationResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signed_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signed_url().data(), static_cast<int>(this->signed_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateDownloadLocationResponse.signed_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expires_at = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expires_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.CreateDownloadLocationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.CreateDownloadLocationResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateDownloadLocationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.CreateDownloadLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signed_url = 1;
  if (this->signed_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_url().data(), static_cast<int>(this->signed_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateDownloadLocationResponse.signed_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signed_url(), output);
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::expires_at(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.CreateDownloadLocationResponse)
}

::google::protobuf::uint8* CreateDownloadLocationResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.CreateDownloadLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signed_url = 1;
  if (this->signed_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_url().data(), static_cast<int>(this->signed_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateDownloadLocationResponse.signed_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signed_url(), target);
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::expires_at(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.CreateDownloadLocationResponse)
  return target;
}

size_t CreateDownloadLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.CreateDownloadLocationResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string signed_url = 1;
  if (this->signed_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signed_url());
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expires_at_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDownloadLocationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.CreateDownloadLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDownloadLocationResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CreateDownloadLocationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.CreateDownloadLocationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.CreateDownloadLocationResponse)
    MergeFrom(*source);
  }
}

void CreateDownloadLocationResponse::MergeFrom(const CreateDownloadLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.CreateDownloadLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signed_url().size() > 0) {

    signed_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_url_);
  }
  if (from.has_expires_at()) {
    mutable_expires_at()->::google::protobuf::Timestamp::MergeFrom(from.expires_at());
  }
}

void CreateDownloadLocationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.CreateDownloadLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDownloadLocationResponse::CopyFrom(const CreateDownloadLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.CreateDownloadLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDownloadLocationResponse::IsInitialized() const {
  return true;
}

void CreateDownloadLocationResponse::Swap(CreateDownloadLocationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDownloadLocationResponse::InternalSwap(CreateDownloadLocationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  signed_url_.Swap(&other->signed_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expires_at_, other->expires_at_);
}

::google::protobuf::Metadata CreateDownloadLocationResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateDownloadLinkRequest::InitAsDefaultInstance() {
  ::flyteidl::service::_CreateDownloadLinkRequest_default_instance_.execution_id_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
  ::flyteidl::service::_CreateDownloadLinkRequest_default_instance_.node_id_ = const_cast< ::flyteidl::core::NodeExecutionIdentifier*>(
      ::flyteidl::core::NodeExecutionIdentifier::internal_default_instance());
  ::flyteidl::service::_CreateDownloadLinkRequest_default_instance_.task_id_ = const_cast< ::flyteidl::core::TaskExecutionIdentifier*>(
      ::flyteidl::core::TaskExecutionIdentifier::internal_default_instance());
  ::flyteidl::service::_CreateDownloadLinkRequest_default_instance_._instance.get_mutable()->expires_in_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
class CreateDownloadLinkRequest::HasBitSetters {
 public:
  static const ::flyteidl::core::WorkflowExecutionIdentifier& execution_id(const CreateDownloadLinkRequest* msg);
  static const ::flyteidl::core::NodeExecutionIdentifier& node_id(const CreateDownloadLinkRequest* msg);
  static const ::flyteidl::core::TaskExecutionIdentifier& task_id(const CreateDownloadLinkRequest* msg);
  static const ::google::protobuf::Duration& expires_in(const CreateDownloadLinkRequest* msg);
};

const ::flyteidl::core::WorkflowExecutionIdentifier&
CreateDownloadLinkRequest::HasBitSetters::execution_id(const CreateDownloadLinkRequest* msg) {
  return *msg->source_.execution_id_;
}
const ::flyteidl::core::NodeExecutionIdentifier&
CreateDownloadLinkRequest::HasBitSetters::node_id(const CreateDownloadLinkRequest* msg) {
  return *msg->source_.node_id_;
}
const ::flyteidl::core::TaskExecutionIdentifier&
CreateDownloadLinkRequest::HasBitSetters::task_id(const CreateDownloadLinkRequest* msg) {
  return *msg->source_.task_id_;
}
const ::google::protobuf::Duration&
CreateDownloadLinkRequest::HasBitSetters::expires_in(const CreateDownloadLinkRequest* msg) {
  return *msg->expires_in_;
}
void CreateDownloadLinkRequest::set_allocated_execution_id(::flyteidl::core::WorkflowExecutionIdentifier* execution_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (execution_id) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      execution_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution_id, submessage_arena);
    }
    set_has_execution_id();
    source_.execution_id_ = execution_id;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.service.CreateDownloadLinkRequest.execution_id)
}
void CreateDownloadLinkRequest::clear_execution_id() {
  if (has_execution_id()) {
    delete source_.execution_id_;
    clear_has_source();
  }
}
void CreateDownloadLinkRequest::set_allocated_node_id(::flyteidl::core::NodeExecutionIdentifier* node_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (node_id) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      node_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, node_id, submessage_arena);
    }
    set_has_node_id();
    source_.node_id_ = node_id;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.service.CreateDownloadLinkRequest.node_id)
}
void CreateDownloadLinkRequest::clear_node_id() {
  if (has_node_id()) {
    delete source_.node_id_;
    clear_has_source();
  }
}
void CreateDownloadLinkRequest::set_allocated_task_id(::flyteidl::core::TaskExecutionIdentifier* task_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_source();
  if (task_id) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      task_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_id, submessage_arena);
    }
    set_has_task_id();
    source_.task_id_ = task_id;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.service.CreateDownloadLinkRequest.task_id)
}
void CreateDownloadLinkRequest::clear_task_id() {
  if (has_task_id()) {
    delete source_.task_id_;
    clear_has_source();
  }
}
void CreateDownloadLinkRequest::clear_expires_in() {
  if (GetArenaNoVirtual() == nullptr && expires_in_ != nullptr) {
    delete expires_in_;
  }
  expires_in_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDownloadLinkRequest::kExecutionIdFieldNumber;
const int CreateDownloadLinkRequest::kNodeIdFieldNumber;
const int CreateDownloadLinkRequest::kTaskIdFieldNumber;
const int CreateDownloadLinkRequest::kArtifactTypeFieldNumber;
const int CreateDownloadLinkRequest::kExpiresInFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDownloadLinkRequest::CreateDownloadLinkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.CreateDownloadLinkRequest)
}
CreateDownloadLinkRequest::CreateDownloadLinkRequest(const CreateDownloadLinkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_expires_in()) {
    expires_in_ = new ::google::protobuf::Duration(*from.expires_in_);
  } else {
    expires_in_ = nullptr;
  }
  artifact_type_ = from.artifact_type_;
  clear_has_source();
  switch (from.source_case()) {
    case kExecutionId: {
      mutable_execution_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.execution_id());
      break;
    }
    case kNodeId: {
      mutable_node_id()->::flyteidl::core::NodeExecutionIdentifier::MergeFrom(from.node_id());
      break;
    }
    case kTaskId: {
      mutable_task_id()->::flyteidl::core::TaskExecutionIdentifier::MergeFrom(from.task_id());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.CreateDownloadLinkRequest)
}

void CreateDownloadLinkRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateDownloadLinkRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  ::memset(&expires_in_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&artifact_type_) -
      reinterpret_cast<char*>(&expires_in_)) + sizeof(artifact_type_));
  clear_has_source();
}

CreateDownloadLinkRequest::~CreateDownloadLinkRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.service.CreateDownloadLinkRequest)
  SharedDtor();
}

void CreateDownloadLinkRequest::SharedDtor() {
  if (this != internal_default_instance()) delete expires_in_;
  if (has_source()) {
    clear_source();
  }
}

void CreateDownloadLinkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDownloadLinkRequest& CreateDownloadLinkRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateDownloadLinkRequest_flyteidl_2fservice_2fdataproxy_2eproto.base);
  return *internal_default_instance();
}


void CreateDownloadLinkRequest::clear_source() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.service.CreateDownloadLinkRequest)
  switch (source_case()) {
    case kExecutionId: {
      delete source_.execution_id_;
      break;
    }
    case kNodeId: {
      delete source_.node_id_;
      break;
    }
    case kTaskId: {
      delete source_.task_id_;
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SOURCE_NOT_SET;
}


void CreateDownloadLinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.CreateDownloadLinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && expires_in_ != nullptr) {
    delete expires_in_;
  }
  expires_in_ = nullptr;
  artifact_type_ = 0;
  clear_source();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateDownloadLinkRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateDownloadLinkRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.core.WorkflowExecutionIdentifier execution_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::WorkflowExecutionIdentifier::_InternalParse;
        object = msg->mutable_execution_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.core.NodeExecutionIdentifier node_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::NodeExecutionIdentifier::_InternalParse;
        object = msg->mutable_node_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.core.TaskExecutionIdentifier task_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::TaskExecutionIdentifier::_InternalParse;
        object = msg->mutable_task_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.service.ArtifactType artifact_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_artifact_type(static_cast<::flyteidl::service::ArtifactType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .google.protobuf.Duration expires_in = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Duration::_InternalParse;
        object = msg->mutable_expires_in();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateDownloadLinkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.CreateDownloadLinkRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.WorkflowExecutionIdentifier execution_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execution_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.NodeExecutionIdentifier node_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_node_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.TaskExecutionIdentifier task_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.service.ArtifactType artifact_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_artifact_type(static_cast< ::flyteidl::service::ArtifactType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration expires_in = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expires_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.CreateDownloadLinkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.CreateDownloadLinkRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateDownloadLinkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.CreateDownloadLinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier execution_id = 1;
  if (has_execution_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::execution_id(this), output);
  }

  // .flyteidl.core.NodeExecutionIdentifier node_id = 2;
  if (has_node_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::node_id(this), output);
  }

  // .flyteidl.core.TaskExecutionIdentifier task_id = 3;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::task_id(this), output);
  }

  // .flyteidl.service.ArtifactType artifact_type = 4;
  if (this->artifact_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->artifact_type(), output);
  }

  // .google.protobuf.Duration expires_in = 5;
  if (this->has_expires_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::expires_in(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.CreateDownloadLinkRequest)
}

::google::protobuf::uint8* CreateDownloadLinkRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.CreateDownloadLinkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier execution_id = 1;
  if (has_execution_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::execution_id(this), target);
  }

  // .flyteidl.core.NodeExecutionIdentifier node_id = 2;
  if (has_node_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::node_id(this), target);
  }

  // .flyteidl.core.TaskExecutionIdentifier task_id = 3;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::task_id(this), target);
  }

  // .flyteidl.service.ArtifactType artifact_type = 4;
  if (this->artifact_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->artifact_type(), target);
  }

  // .google.protobuf.Duration expires_in = 5;
  if (this->has_expires_in()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::expires_in(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.CreateDownloadLinkRequest)
  return target;
}

size_t CreateDownloadLinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.CreateDownloadLinkRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration expires_in = 5;
  if (this->has_expires_in()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expires_in_);
  }

  // .flyteidl.service.ArtifactType artifact_type = 4;
  if (this->artifact_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->artifact_type());
  }

  switch (source_case()) {
    // .flyteidl.core.WorkflowExecutionIdentifier execution_id = 1;
    case kExecutionId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.execution_id_);
      break;
    }
    // .flyteidl.core.NodeExecutionIdentifier node_id = 2;
    case kNodeId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.node_id_);
      break;
    }
    // .flyteidl.core.TaskExecutionIdentifier task_id = 3;
    case kTaskId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *source_.task_id_);
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDownloadLinkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.CreateDownloadLinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDownloadLinkRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateDownloadLinkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.CreateDownloadLinkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.CreateDownloadLinkRequest)
    MergeFrom(*source);
  }
}

void CreateDownloadLinkRequest::MergeFrom(const CreateDownloadLinkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.CreateDownloadLinkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_expires_in()) {
    mutable_expires_in()->::google::protobuf::Duration::MergeFrom(from.expires_in());
  }
  if (from.artifact_type() != 0) {
    set_artifact_type(from.artifact_type());
  }
  switch (from.source_case()) {
    case kExecutionId: {
      mutable_execution_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.execution_id());
      break;
    }
    case kNodeId: {
      mutable_node_id()->::flyteidl::core::NodeExecutionIdentifier::MergeFrom(from.node_id());
      break;
    }
    case kTaskId: {
      mutable_task_id()->::flyteidl::core::TaskExecutionIdentifier::MergeFrom(from.task_id());
      break;
    }
    case SOURCE_NOT_SET: {
      break;
    }
  }
}

void CreateDownloadLinkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.CreateDownloadLinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDownloadLinkRequest::CopyFrom(const CreateDownloadLinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.CreateDownloadLinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDownloadLinkRequest::IsInitialized() const {
  return true;
}

void CreateDownloadLinkRequest::Swap(CreateDownloadLinkRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDownloadLinkRequest::InternalSwap(CreateDownloadLinkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(expires_in_, other->expires_in_);
  swap(artifact_type_, other->artifact_type_);
  swap(source_, other->source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata CreateDownloadLinkRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateDownloadLinkResponse::InitAsDefaultInstance() {
  ::flyteidl::service::_CreateDownloadLinkResponse_default_instance_._instance.get_mutable()->expires_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class CreateDownloadLinkResponse::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& expires_at(const CreateDownloadLinkResponse* msg);
};

const ::google::protobuf::Timestamp&
CreateDownloadLinkResponse::HasBitSetters::expires_at(const CreateDownloadLinkResponse* msg) {
  return *msg->expires_at_;
}
void CreateDownloadLinkResponse::clear_expires_at() {
  if (GetArenaNoVirtual() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDownloadLinkResponse::kSignedUrlFieldNumber;
const int CreateDownloadLinkResponse::kExpiresAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDownloadLinkResponse::CreateDownloadLinkResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.service.CreateDownloadLinkResponse)
}
CreateDownloadLinkResponse::CreateDownloadLinkResponse(const CreateDownloadLinkResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      signed_url_(from.signed_url_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_expires_at()) {
    expires_at_ = new ::google::protobuf::Timestamp(*from.expires_at_);
  } else {
    expires_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.CreateDownloadLinkResponse)
}

void CreateDownloadLinkResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateDownloadLinkResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  expires_at_ = nullptr;
}

CreateDownloadLinkResponse::~CreateDownloadLinkResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.CreateDownloadLinkResponse)
  SharedDtor();
}

void CreateDownloadLinkResponse::SharedDtor() {
  if (this != internal_default_instance()) delete expires_at_;
}

void CreateDownloadLinkResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDownloadLinkResponse& CreateDownloadLinkResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateDownloadLinkResponse_flyteidl_2fservice_2fdataproxy_2eproto.base);
  return *internal_default_instance();
}


void CreateDownloadLinkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.service.CreateDownloadLinkResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signed_url_.Clear();
  if (GetArenaNoVirtual() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateDownloadLinkResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateDownloadLinkResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string signed_url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("flyteidl.service.CreateDownloadLinkResponse.signed_url");
          object = msg->add_signed_url();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .google.protobuf.Timestamp expires_at = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_expires_at();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateDownloadLinkResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.service.CreateDownloadLinkResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string signed_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_signed_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signed_url(this->signed_url_size() - 1).data(),
            static_cast<int>(this->signed_url(this->signed_url_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.service.CreateDownloadLinkResponse.signed_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp expires_at = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expires_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.service.CreateDownloadLinkResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.service.CreateDownloadLinkResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateDownloadLinkResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.service.CreateDownloadLinkResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string signed_url = 1;
  for (int i = 0, n = this->signed_url_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_url(i).data(), static_cast<int>(this->signed_url(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateDownloadLinkResponse.signed_url");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->signed_url(i), output);
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::expires_at(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.service.CreateDownloadLinkResponse)
}

::google::protobuf::uint8* CreateDownloadLinkResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.service.CreateDownloadLinkResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string signed_url = 1;
  for (int i = 0, n = this->signed_url_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_url(i).data(), static_cast<int>(this->signed_url(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.service.CreateDownloadLinkResponse.signed_url");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->signed_url(i), target);
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::expires_at(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.service.CreateDownloadLinkResponse)
  return target;
}

size_t CreateDownloadLinkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.service.CreateDownloadLinkResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string signed_url = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->signed_url_size());
  for (int i = 0, n = this->signed_url_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->signed_url(i));
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expires_at_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDownloadLinkResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.service.CreateDownloadLinkResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDownloadLinkResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CreateDownloadLinkResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.service.CreateDownloadLinkResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.service.CreateDownloadLinkResponse)
    MergeFrom(*source);
  }
}

void CreateDownloadLinkResponse::MergeFrom(const CreateDownloadLinkResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.service.CreateDownloadLinkResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  signed_url_.MergeFrom(from.signed_url_);
  if (from.has_expires_at()) {
    mutable_expires_at()->::google::protobuf::Timestamp::MergeFrom(from.expires_at());
  }
}

void CreateDownloadLinkResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.service.CreateDownloadLinkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDownloadLinkResponse::CopyFrom(const CreateDownloadLinkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.service.CreateDownloadLinkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDownloadLinkResponse::IsInitialized() const {
  return true;
}

void CreateDownloadLinkResponse::Swap(CreateDownloadLinkResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDownloadLinkResponse::InternalSwap(CreateDownloadLinkResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  signed_url_.InternalSwap(CastToBase(&other->signed_url_));
  swap(expires_at_, other->expires_at_);
}

::google::protobuf::Metadata CreateDownloadLinkResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fservice_2fdataproxy_2eproto);
  return ::file_level_metadata_flyteidl_2fservice_2fdataproxy_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::service::CreateUploadLocationResponse* Arena::CreateMaybeMessage< ::flyteidl::service::CreateUploadLocationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::CreateUploadLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::CreateUploadLocationRequest* Arena::CreateMaybeMessage< ::flyteidl::service::CreateUploadLocationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::CreateUploadLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::CreateDownloadLocationRequest* Arena::CreateMaybeMessage< ::flyteidl::service::CreateDownloadLocationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::CreateDownloadLocationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::CreateDownloadLocationResponse* Arena::CreateMaybeMessage< ::flyteidl::service::CreateDownloadLocationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::CreateDownloadLocationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::CreateDownloadLinkRequest* Arena::CreateMaybeMessage< ::flyteidl::service::CreateDownloadLinkRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::CreateDownloadLinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::CreateDownloadLinkResponse* Arena::CreateMaybeMessage< ::flyteidl::service::CreateDownloadLinkResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::service::CreateDownloadLinkResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
