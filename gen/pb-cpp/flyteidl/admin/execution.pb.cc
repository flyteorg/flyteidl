// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/execution.proto

#include "flyteidl/admin/execution.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace admin {
class ExecutionCreateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionCreateRequest>
      _instance;
} _ExecutionCreateRequest_default_instance_;
class ExecutionRelaunchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionRelaunchRequest>
      _instance;
} _ExecutionRelaunchRequest_default_instance_;
class ExecutionCreateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionCreateResponse>
      _instance;
} _ExecutionCreateResponse_default_instance_;
class WorkflowExecutionGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowExecutionGetRequest>
      _instance;
} _WorkflowExecutionGetRequest_default_instance_;
class ExecutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Execution>
      _instance;
} _Execution_default_instance_;
class ExecutionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionList>
      _instance;
} _ExecutionList_default_instance_;
class LiteralMapBlobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LiteralMapBlob>
      _instance;
  const ::flyteidl::core::LiteralMap* values_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
} _LiteralMapBlob_default_instance_;
class ExecutionClosureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionClosure>
      _instance;
  const ::flyteidl::admin::LiteralMapBlob* outputs_;
  const ::flyteidl::core::ExecutionError* error_;
  ::google::protobuf::internal::ArenaStringPtr abort_cause_;
} _ExecutionClosure_default_instance_;
class ExecutionMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionMetadata>
      _instance;
} _ExecutionMetadata_default_instance_;
class NotificationListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotificationList>
      _instance;
} _NotificationList_default_instance_;
class ExecutionSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionSpec>
      _instance;
  const ::flyteidl::admin::NotificationList* notifications_;
  bool disable_all_;
} _ExecutionSpec_default_instance_;
class ExecutionTerminateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionTerminateRequest>
      _instance;
} _ExecutionTerminateRequest_default_instance_;
class ExecutionTerminateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionTerminateResponse>
      _instance;
} _ExecutionTerminateResponse_default_instance_;
class WorkflowExecutionGetDataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowExecutionGetDataRequest>
      _instance;
} _WorkflowExecutionGetDataRequest_default_instance_;
class WorkflowExecutionGetDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowExecutionGetDataResponse>
      _instance;
} _WorkflowExecutionGetDataResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace protobuf_flyteidl_2fadmin_2fexecution_2eproto {
void InitDefaultsExecutionCreateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionSpec();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  {
    void* ptr = &::flyteidl::admin::_ExecutionCreateRequest_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionCreateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionCreateRequest::InitAsDefaultInstance();
}

void InitDefaultsExecutionCreateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionCreateRequestImpl);
}

void InitDefaultsExecutionRelaunchRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsWorkflowExecutionIdentifier();
  {
    void* ptr = &::flyteidl::admin::_ExecutionRelaunchRequest_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionRelaunchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionRelaunchRequest::InitAsDefaultInstance();
}

void InitDefaultsExecutionRelaunchRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionRelaunchRequestImpl);
}

void InitDefaultsExecutionCreateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsWorkflowExecutionIdentifier();
  {
    void* ptr = &::flyteidl::admin::_ExecutionCreateResponse_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionCreateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionCreateResponse::InitAsDefaultInstance();
}

void InitDefaultsExecutionCreateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionCreateResponseImpl);
}

void InitDefaultsWorkflowExecutionGetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsWorkflowExecutionIdentifier();
  {
    void* ptr = &::flyteidl::admin::_WorkflowExecutionGetRequest_default_instance_;
    new (ptr) ::flyteidl::admin::WorkflowExecutionGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::WorkflowExecutionGetRequest::InitAsDefaultInstance();
}

void InitDefaultsWorkflowExecutionGetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkflowExecutionGetRequestImpl);
}

void InitDefaultsExecutionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsWorkflowExecutionIdentifier();
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionSpec();
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionClosure();
  {
    void* ptr = &::flyteidl::admin::_Execution_default_instance_;
    new (ptr) ::flyteidl::admin::Execution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::Execution::InitAsDefaultInstance();
}

void InitDefaultsExecution() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionImpl);
}

void InitDefaultsExecutionListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecution();
  {
    void* ptr = &::flyteidl::admin::_ExecutionList_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionList::InitAsDefaultInstance();
}

void InitDefaultsExecutionList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionListImpl);
}

void InitDefaultsLiteralMapBlobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  {
    void* ptr = &::flyteidl::admin::_LiteralMapBlob_default_instance_;
    new (ptr) ::flyteidl::admin::LiteralMapBlob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::LiteralMapBlob::InitAsDefaultInstance();
}

void InitDefaultsLiteralMapBlob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLiteralMapBlobImpl);
}

void InitDefaultsExecutionClosureImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsLiteralMapBlob();
  protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsExecutionError();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_flyteidl_2fadmin_2fcommon_2eproto::InitDefaultsNotification();
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsIdentifier();
  {
    void* ptr = &::flyteidl::admin::_ExecutionClosure_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionClosure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionClosure::InitAsDefaultInstance();
}

void InitDefaultsExecutionClosure() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionClosureImpl);
}

void InitDefaultsExecutionMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsNodeExecutionIdentifier();
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsWorkflowExecutionIdentifier();
  {
    void* ptr = &::flyteidl::admin::_ExecutionMetadata_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionMetadata::InitAsDefaultInstance();
}

void InitDefaultsExecutionMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionMetadataImpl);
}

void InitDefaultsNotificationListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fadmin_2fcommon_2eproto::InitDefaultsNotification();
  {
    void* ptr = &::flyteidl::admin::_NotificationList_default_instance_;
    new (ptr) ::flyteidl::admin::NotificationList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::NotificationList::InitAsDefaultInstance();
}

void InitDefaultsNotificationList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNotificationListImpl);
}

void InitDefaultsExecutionSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsIdentifier();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionMetadata();
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsNotificationList();
  protobuf_flyteidl_2fadmin_2fcommon_2eproto::InitDefaultsLabels();
  protobuf_flyteidl_2fadmin_2fcommon_2eproto::InitDefaultsAnnotations();
  {
    void* ptr = &::flyteidl::admin::_ExecutionSpec_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionSpec::InitAsDefaultInstance();
}

void InitDefaultsExecutionSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionSpecImpl);
}

void InitDefaultsExecutionTerminateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsWorkflowExecutionIdentifier();
  {
    void* ptr = &::flyteidl::admin::_ExecutionTerminateRequest_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionTerminateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionTerminateRequest::InitAsDefaultInstance();
}

void InitDefaultsExecutionTerminateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionTerminateRequestImpl);
}

void InitDefaultsExecutionTerminateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::admin::_ExecutionTerminateResponse_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionTerminateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionTerminateResponse::InitAsDefaultInstance();
}

void InitDefaultsExecutionTerminateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionTerminateResponseImpl);
}

void InitDefaultsWorkflowExecutionGetDataRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsWorkflowExecutionIdentifier();
  {
    void* ptr = &::flyteidl::admin::_WorkflowExecutionGetDataRequest_default_instance_;
    new (ptr) ::flyteidl::admin::WorkflowExecutionGetDataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::WorkflowExecutionGetDataRequest::InitAsDefaultInstance();
}

void InitDefaultsWorkflowExecutionGetDataRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkflowExecutionGetDataRequestImpl);
}

void InitDefaultsWorkflowExecutionGetDataResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fadmin_2fcommon_2eproto::InitDefaultsUrlBlob();
  {
    void* ptr = &::flyteidl::admin::_WorkflowExecutionGetDataResponse_default_instance_;
    new (ptr) ::flyteidl::admin::WorkflowExecutionGetDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::WorkflowExecutionGetDataResponse::InitAsDefaultInstance();
}

void InitDefaultsWorkflowExecutionGetDataResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkflowExecutionGetDataResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateRequest, project_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateRequest, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateRequest, spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateRequest, inputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionRelaunchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionRelaunchRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionRelaunchRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionCreateResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionGetRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::Execution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::Execution, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::Execution, spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::Execution, closure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionList, executions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionList, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::LiteralMapBlob, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::LiteralMapBlob, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::admin::LiteralMapBlobDefaultTypeInternal, values_),
  offsetof(::flyteidl::admin::LiteralMapBlobDefaultTypeInternal, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::LiteralMapBlob, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::admin::ExecutionClosureDefaultTypeInternal, outputs_),
  offsetof(::flyteidl::admin::ExecutionClosureDefaultTypeInternal, error_),
  offsetof(::flyteidl::admin::ExecutionClosureDefaultTypeInternal, abort_cause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, computed_inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, phase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, started_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, updated_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, notifications_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, workflow_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionClosure, output_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionMetadata, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionMetadata, principal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionMetadata, nesting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionMetadata, scheduled_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionMetadata, parent_node_execution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionMetadata, reference_execution_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::NotificationList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::NotificationList, notifications_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, launch_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, metadata_),
  offsetof(::flyteidl::admin::ExecutionSpecDefaultTypeInternal, notifications_),
  offsetof(::flyteidl::admin::ExecutionSpecDefaultTypeInternal, disable_all_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionSpec, notification_overrides_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionTerminateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionTerminateRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionTerminateRequest, cause_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::ExecutionTerminateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionGetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionGetDataRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionGetDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionGetDataResponse, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionGetDataResponse, inputs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::admin::ExecutionCreateRequest)},
  { 10, -1, sizeof(::flyteidl::admin::ExecutionRelaunchRequest)},
  { 17, -1, sizeof(::flyteidl::admin::ExecutionCreateResponse)},
  { 23, -1, sizeof(::flyteidl::admin::WorkflowExecutionGetRequest)},
  { 29, -1, sizeof(::flyteidl::admin::Execution)},
  { 37, -1, sizeof(::flyteidl::admin::ExecutionList)},
  { 44, -1, sizeof(::flyteidl::admin::LiteralMapBlob)},
  { 52, -1, sizeof(::flyteidl::admin::ExecutionClosure)},
  { 69, -1, sizeof(::flyteidl::admin::ExecutionMetadata)},
  { 80, -1, sizeof(::flyteidl::admin::NotificationList)},
  { 86, -1, sizeof(::flyteidl::admin::ExecutionSpec)},
  { 99, -1, sizeof(::flyteidl::admin::ExecutionTerminateRequest)},
  { 106, -1, sizeof(::flyteidl::admin::ExecutionTerminateResponse)},
  { 111, -1, sizeof(::flyteidl::admin::WorkflowExecutionGetDataRequest)},
  { 117, -1, sizeof(::flyteidl::admin::WorkflowExecutionGetDataResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionCreateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionRelaunchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_WorkflowExecutionGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_Execution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_LiteralMapBlob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionClosure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_NotificationList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionTerminateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionTerminateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_WorkflowExecutionGetDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_WorkflowExecutionGetDataResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/admin/execution.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036flyteidl/admin/execution.proto\022\016flytei"
      "dl.admin\032\033flyteidl/admin/common.proto\032\034f"
      "lyteidl/core/literals.proto\032\035flyteidl/co"
      "re/execution.proto\032\036flyteidl/core/identi"
      "fier.proto\032\036google/protobuf/duration.pro"
      "to\032\037google/protobuf/timestamp.proto\"\237\001\n\026"
      "ExecutionCreateRequest\022\017\n\007project\030\001 \001(\t\022"
      "\016\n\006domain\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022+\n\004spec\030\004 "
      "\001(\0132\035.flyteidl.admin.ExecutionSpec\022)\n\006in"
      "puts\030\005 \001(\0132\031.flyteidl.core.LiteralMap\"`\n"
      "\030ExecutionRelaunchRequest\0226\n\002id\030\001 \001(\0132*."
      "flyteidl.core.WorkflowExecutionIdentifie"
      "r\022\014\n\004name\030\003 \001(\t\"Q\n\027ExecutionCreateRespon"
      "se\0226\n\002id\030\001 \001(\0132*.flyteidl.core.WorkflowE"
      "xecutionIdentifier\"U\n\033WorkflowExecutionG"
      "etRequest\0226\n\002id\030\001 \001(\0132*.flyteidl.core.Wo"
      "rkflowExecutionIdentifier\"\243\001\n\tExecution\022"
      "6\n\002id\030\001 \001(\0132*.flyteidl.core.WorkflowExec"
      "utionIdentifier\022+\n\004spec\030\002 \001(\0132\035.flyteidl"
      ".admin.ExecutionSpec\0221\n\007closure\030\003 \001(\0132 ."
      "flyteidl.admin.ExecutionClosure\"M\n\rExecu"
      "tionList\022-\n\nexecutions\030\001 \003(\0132\031.flyteidl."
      "admin.Execution\022\r\n\005token\030\002 \001(\t\"T\n\016Litera"
      "lMapBlob\022+\n\006values\030\001 \001(\0132\031.flyteidl.core"
      ".LiteralMapH\000\022\r\n\003uri\030\002 \001(\tH\000B\006\n\004data\"\256\004\n"
      "\020ExecutionClosure\0221\n\007outputs\030\001 \001(\0132\036.fly"
      "teidl.admin.LiteralMapBlobH\000\022.\n\005error\030\002 "
      "\001(\0132\035.flyteidl.core.ExecutionErrorH\000\022\025\n\013"
      "abort_cause\030\n \001(\tH\000\0226\n\017computed_inputs\030\003"
      " \001(\0132\031.flyteidl.core.LiteralMapB\002\030\001\0225\n\005p"
      "hase\030\004 \001(\0162&.flyteidl.core.WorkflowExecu"
      "tion.Phase\022.\n\nstarted_at\030\005 \001(\0132\032.google."
      "protobuf.Timestamp\022+\n\010duration\030\006 \001(\0132\031.g"
      "oogle.protobuf.Duration\022.\n\ncreated_at\030\007 "
      "\001(\0132\032.google.protobuf.Timestamp\022.\n\nupdat"
      "ed_at\030\010 \001(\0132\032.google.protobuf.Timestamp\022"
      "3\n\rnotifications\030\t \003(\0132\034.flyteidl.admin."
      "Notification\022.\n\013workflow_id\030\013 \001(\0132\031.flyt"
      "eidl.core.IdentifierB\017\n\routput_result\"\222\003"
      "\n\021ExecutionMetadata\022=\n\004mode\030\001 \001(\0162/.flyt"
      "eidl.admin.ExecutionMetadata.ExecutionMo"
      "de\022\021\n\tprincipal\030\002 \001(\t\022\017\n\007nesting\030\003 \001(\r\0220"
      "\n\014scheduled_at\030\004 \001(\0132\032.google.protobuf.T"
      "imestamp\022E\n\025parent_node_execution\030\005 \001(\0132"
      "&.flyteidl.core.NodeExecutionIdentifier\022"
      "G\n\023reference_execution\030\020 \001(\0132*.flyteidl."
      "core.WorkflowExecutionIdentifier\"X\n\rExec"
      "utionMode\022\n\n\006MANUAL\020\000\022\r\n\tSCHEDULED\020\001\022\n\n\006"
      "SYSTEM\020\002\022\014\n\010RELAUNCH\020\003\022\022\n\016CHILD_WORKFLOW"
      "\020\004\"G\n\020NotificationList\0223\n\rnotifications\030"
      "\001 \003(\0132\034.flyteidl.admin.Notification\"\357\002\n\r"
      "ExecutionSpec\022.\n\013launch_plan\030\001 \001(\0132\031.fly"
      "teidl.core.Identifier\022-\n\006inputs\030\002 \001(\0132\031."
      "flyteidl.core.LiteralMapB\002\030\001\0223\n\010metadata"
      "\030\003 \001(\0132!.flyteidl.admin.ExecutionMetadat"
      "a\0229\n\rnotifications\030\005 \001(\0132 .flyteidl.admi"
      "n.NotificationListH\000\022\025\n\013disable_all\030\006 \001("
      "\010H\000\022&\n\006labels\030\007 \001(\0132\026.flyteidl.admin.Lab"
      "els\0220\n\013annotations\030\010 \001(\0132\033.flyteidl.admi"
      "n.AnnotationsB\030\n\026notification_overridesJ"
      "\004\010\004\020\005\"b\n\031ExecutionTerminateRequest\0226\n\002id"
      "\030\001 \001(\0132*.flyteidl.core.WorkflowExecution"
      "Identifier\022\r\n\005cause\030\002 \001(\t\"\034\n\032ExecutionTe"
      "rminateResponse\"Y\n\037WorkflowExecutionGetD"
      "ataRequest\0226\n\002id\030\001 \001(\0132*.flyteidl.core.W"
      "orkflowExecutionIdentifier\"u\n WorkflowEx"
      "ecutionGetDataResponse\022(\n\007outputs\030\001 \001(\0132"
      "\027.flyteidl.admin.UrlBlob\022\'\n\006inputs\030\002 \001(\013"
      "2\027.flyteidl.admin.UrlBlobB3Z1github.com/"
      "lyft/flyteidl/gen/pb-go/flyteidl/adminb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2806);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/admin/execution.proto", &protobuf_RegisterTypes);
  ::protobuf_flyteidl_2fadmin_2fcommon_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2fidentifier_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fadmin_2fexecution_2eproto
namespace flyteidl {
namespace admin {
const ::google::protobuf::EnumDescriptor* ExecutionMetadata_ExecutionMode_descriptor() {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_enum_descriptors[0];
}
bool ExecutionMetadata_ExecutionMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExecutionMetadata_ExecutionMode ExecutionMetadata::MANUAL;
const ExecutionMetadata_ExecutionMode ExecutionMetadata::SCHEDULED;
const ExecutionMetadata_ExecutionMode ExecutionMetadata::SYSTEM;
const ExecutionMetadata_ExecutionMode ExecutionMetadata::RELAUNCH;
const ExecutionMetadata_ExecutionMode ExecutionMetadata::CHILD_WORKFLOW;
const ExecutionMetadata_ExecutionMode ExecutionMetadata::ExecutionMode_MIN;
const ExecutionMetadata_ExecutionMode ExecutionMetadata::ExecutionMode_MAX;
const int ExecutionMetadata::ExecutionMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ExecutionCreateRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_ExecutionCreateRequest_default_instance_._instance.get_mutable()->spec_ = const_cast< ::flyteidl::admin::ExecutionSpec*>(
      ::flyteidl::admin::ExecutionSpec::internal_default_instance());
  ::flyteidl::admin::_ExecutionCreateRequest_default_instance_._instance.get_mutable()->inputs_ = const_cast< ::flyteidl::core::LiteralMap*>(
      ::flyteidl::core::LiteralMap::internal_default_instance());
}
void ExecutionCreateRequest::clear_inputs() {
  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionCreateRequest::kProjectFieldNumber;
const int ExecutionCreateRequest::kDomainFieldNumber;
const int ExecutionCreateRequest::kNameFieldNumber;
const int ExecutionCreateRequest::kSpecFieldNumber;
const int ExecutionCreateRequest::kInputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionCreateRequest::ExecutionCreateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionCreateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionCreateRequest)
}
ExecutionCreateRequest::ExecutionCreateRequest(const ExecutionCreateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_spec()) {
    spec_ = new ::flyteidl::admin::ExecutionSpec(*from.spec_);
  } else {
    spec_ = NULL;
  }
  if (from.has_inputs()) {
    inputs_ = new ::flyteidl::core::LiteralMap(*from.inputs_);
  } else {
    inputs_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionCreateRequest)
}

void ExecutionCreateRequest::SharedCtor() {
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&spec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inputs_) -
      reinterpret_cast<char*>(&spec_)) + sizeof(inputs_));
  _cached_size_ = 0;
}

ExecutionCreateRequest::~ExecutionCreateRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionCreateRequest)
  SharedDtor();
}

void ExecutionCreateRequest::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete spec_;
  if (this != internal_default_instance()) delete inputs_;
}

void ExecutionCreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionCreateRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionCreateRequest& ExecutionCreateRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionCreateRequest();
  return *internal_default_instance();
}

ExecutionCreateRequest* ExecutionCreateRequest::New(::google::protobuf::Arena* arena) const {
  ExecutionCreateRequest* n = new ExecutionCreateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) {
    delete spec_;
  }
  spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecutionCreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionCreateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionCreateRequest.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionCreateRequest.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionCreateRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.ExecutionSpec spec = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.LiteralMap inputs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionCreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionCreateRequest)
  return false;
#undef DO_
}

void ExecutionCreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionCreateRequest.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionCreateRequest.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->domain(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionCreateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // .flyteidl.admin.ExecutionSpec spec = 4;
  if (this->has_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->spec_, output);
  }

  // .flyteidl.core.LiteralMap inputs = 5;
  if (this->has_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->inputs_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionCreateRequest)
}

::google::protobuf::uint8* ExecutionCreateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionCreateRequest.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionCreateRequest.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->domain(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionCreateRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // .flyteidl.admin.ExecutionSpec spec = 4;
  if (this->has_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->spec_, deterministic, target);
  }

  // .flyteidl.core.LiteralMap inputs = 5;
  if (this->has_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->inputs_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionCreateRequest)
  return target;
}

size_t ExecutionCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionCreateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string project = 1;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // string domain = 2;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .flyteidl.admin.ExecutionSpec spec = 4;
  if (this->has_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->spec_);
  }

  // .flyteidl.core.LiteralMap inputs = 5;
  if (this->has_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->inputs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionCreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionCreateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionCreateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionCreateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionCreateRequest)
    MergeFrom(*source);
  }
}

void ExecutionCreateRequest::MergeFrom(const ExecutionCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_spec()) {
    mutable_spec()->::flyteidl::admin::ExecutionSpec::MergeFrom(from.spec());
  }
  if (from.has_inputs()) {
    mutable_inputs()->::flyteidl::core::LiteralMap::MergeFrom(from.inputs());
  }
}

void ExecutionCreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionCreateRequest::CopyFrom(const ExecutionCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionCreateRequest::IsInitialized() const {
  return true;
}

void ExecutionCreateRequest::Swap(ExecutionCreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionCreateRequest::InternalSwap(ExecutionCreateRequest* other) {
  using std::swap;
  project_.Swap(&other->project_);
  domain_.Swap(&other->domain_);
  name_.Swap(&other->name_);
  swap(spec_, other->spec_);
  swap(inputs_, other->inputs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionCreateRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionRelaunchRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_ExecutionRelaunchRequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
}
void ExecutionRelaunchRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionRelaunchRequest::kIdFieldNumber;
const int ExecutionRelaunchRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionRelaunchRequest::ExecutionRelaunchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionRelaunchRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionRelaunchRequest)
}
ExecutionRelaunchRequest::ExecutionRelaunchRequest(const ExecutionRelaunchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_id()) {
    id_ = new ::flyteidl::core::WorkflowExecutionIdentifier(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionRelaunchRequest)
}

void ExecutionRelaunchRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
  _cached_size_ = 0;
}

ExecutionRelaunchRequest::~ExecutionRelaunchRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionRelaunchRequest)
  SharedDtor();
}

void ExecutionRelaunchRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void ExecutionRelaunchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionRelaunchRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionRelaunchRequest& ExecutionRelaunchRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionRelaunchRequest();
  return *internal_default_instance();
}

ExecutionRelaunchRequest* ExecutionRelaunchRequest::New(::google::protobuf::Arena* arena) const {
  ExecutionRelaunchRequest* n = new ExecutionRelaunchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionRelaunchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionRelaunchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecutionRelaunchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionRelaunchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionRelaunchRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionRelaunchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionRelaunchRequest)
  return false;
#undef DO_
}

void ExecutionRelaunchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionRelaunchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionRelaunchRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionRelaunchRequest)
}

::google::protobuf::uint8* ExecutionRelaunchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionRelaunchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionRelaunchRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionRelaunchRequest)
  return target;
}

size_t ExecutionRelaunchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionRelaunchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionRelaunchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionRelaunchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionRelaunchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionRelaunchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionRelaunchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionRelaunchRequest)
    MergeFrom(*source);
  }
}

void ExecutionRelaunchRequest::MergeFrom(const ExecutionRelaunchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionRelaunchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_id()) {
    mutable_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.id());
  }
}

void ExecutionRelaunchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionRelaunchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionRelaunchRequest::CopyFrom(const ExecutionRelaunchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionRelaunchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionRelaunchRequest::IsInitialized() const {
  return true;
}

void ExecutionRelaunchRequest::Swap(ExecutionRelaunchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionRelaunchRequest::InternalSwap(ExecutionRelaunchRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionRelaunchRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionCreateResponse::InitAsDefaultInstance() {
  ::flyteidl::admin::_ExecutionCreateResponse_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
}
void ExecutionCreateResponse::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionCreateResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionCreateResponse::ExecutionCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionCreateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionCreateResponse)
}
ExecutionCreateResponse::ExecutionCreateResponse(const ExecutionCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::flyteidl::core::WorkflowExecutionIdentifier(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionCreateResponse)
}

void ExecutionCreateResponse::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

ExecutionCreateResponse::~ExecutionCreateResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionCreateResponse)
  SharedDtor();
}

void ExecutionCreateResponse::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void ExecutionCreateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionCreateResponse::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionCreateResponse& ExecutionCreateResponse::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionCreateResponse();
  return *internal_default_instance();
}

ExecutionCreateResponse* ExecutionCreateResponse::New(::google::protobuf::Arena* arena) const {
  ExecutionCreateResponse* n = new ExecutionCreateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecutionCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionCreateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionCreateResponse)
  return false;
#undef DO_
}

void ExecutionCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionCreateResponse)
}

::google::protobuf::uint8* ExecutionCreateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionCreateResponse)
  return target;
}

size_t ExecutionCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionCreateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionCreateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionCreateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionCreateResponse)
    MergeFrom(*source);
  }
}

void ExecutionCreateResponse::MergeFrom(const ExecutionCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.id());
  }
}

void ExecutionCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionCreateResponse::CopyFrom(const ExecutionCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionCreateResponse::IsInitialized() const {
  return true;
}

void ExecutionCreateResponse::Swap(ExecutionCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionCreateResponse::InternalSwap(ExecutionCreateResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionCreateResponse::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowExecutionGetRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_WorkflowExecutionGetRequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
}
void WorkflowExecutionGetRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowExecutionGetRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowExecutionGetRequest::WorkflowExecutionGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsWorkflowExecutionGetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.WorkflowExecutionGetRequest)
}
WorkflowExecutionGetRequest::WorkflowExecutionGetRequest(const WorkflowExecutionGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::flyteidl::core::WorkflowExecutionIdentifier(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.WorkflowExecutionGetRequest)
}

void WorkflowExecutionGetRequest::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

WorkflowExecutionGetRequest::~WorkflowExecutionGetRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.WorkflowExecutionGetRequest)
  SharedDtor();
}

void WorkflowExecutionGetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void WorkflowExecutionGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkflowExecutionGetRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowExecutionGetRequest& WorkflowExecutionGetRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsWorkflowExecutionGetRequest();
  return *internal_default_instance();
}

WorkflowExecutionGetRequest* WorkflowExecutionGetRequest::New(::google::protobuf::Arena* arena) const {
  WorkflowExecutionGetRequest* n = new WorkflowExecutionGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkflowExecutionGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.WorkflowExecutionGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool WorkflowExecutionGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.WorkflowExecutionGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.WorkflowExecutionGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.WorkflowExecutionGetRequest)
  return false;
#undef DO_
}

void WorkflowExecutionGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.WorkflowExecutionGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.WorkflowExecutionGetRequest)
}

::google::protobuf::uint8* WorkflowExecutionGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.WorkflowExecutionGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.WorkflowExecutionGetRequest)
  return target;
}

size_t WorkflowExecutionGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.WorkflowExecutionGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkflowExecutionGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.WorkflowExecutionGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowExecutionGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowExecutionGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.WorkflowExecutionGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.WorkflowExecutionGetRequest)
    MergeFrom(*source);
  }
}

void WorkflowExecutionGetRequest::MergeFrom(const WorkflowExecutionGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.WorkflowExecutionGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.id());
  }
}

void WorkflowExecutionGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.WorkflowExecutionGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowExecutionGetRequest::CopyFrom(const WorkflowExecutionGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.WorkflowExecutionGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowExecutionGetRequest::IsInitialized() const {
  return true;
}

void WorkflowExecutionGetRequest::Swap(WorkflowExecutionGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowExecutionGetRequest::InternalSwap(WorkflowExecutionGetRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkflowExecutionGetRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Execution::InitAsDefaultInstance() {
  ::flyteidl::admin::_Execution_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
  ::flyteidl::admin::_Execution_default_instance_._instance.get_mutable()->spec_ = const_cast< ::flyteidl::admin::ExecutionSpec*>(
      ::flyteidl::admin::ExecutionSpec::internal_default_instance());
  ::flyteidl::admin::_Execution_default_instance_._instance.get_mutable()->closure_ = const_cast< ::flyteidl::admin::ExecutionClosure*>(
      ::flyteidl::admin::ExecutionClosure::internal_default_instance());
}
void Execution::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Execution::kIdFieldNumber;
const int Execution::kSpecFieldNumber;
const int Execution::kClosureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Execution::Execution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecution();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.Execution)
}
Execution::Execution(const Execution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::flyteidl::core::WorkflowExecutionIdentifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_spec()) {
    spec_ = new ::flyteidl::admin::ExecutionSpec(*from.spec_);
  } else {
    spec_ = NULL;
  }
  if (from.has_closure()) {
    closure_ = new ::flyteidl::admin::ExecutionClosure(*from.closure_);
  } else {
    closure_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.Execution)
}

void Execution::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&closure_) -
      reinterpret_cast<char*>(&id_)) + sizeof(closure_));
  _cached_size_ = 0;
}

Execution::~Execution() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.Execution)
  SharedDtor();
}

void Execution::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete spec_;
  if (this != internal_default_instance()) delete closure_;
}

void Execution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Execution::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Execution& Execution::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecution();
  return *internal_default_instance();
}

Execution* Execution::New(::google::protobuf::Arena* arena) const {
  Execution* n = new Execution;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Execution::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) {
    delete spec_;
  }
  spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && closure_ != NULL) {
    delete closure_;
  }
  closure_ = NULL;
  _internal_metadata_.Clear();
}

bool Execution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.Execution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.ExecutionSpec spec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.ExecutionClosure closure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_closure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.Execution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.Execution)
  return false;
#undef DO_
}

void Execution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // .flyteidl.admin.ExecutionSpec spec = 2;
  if (this->has_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spec_, output);
  }

  // .flyteidl.admin.ExecutionClosure closure = 3;
  if (this->has_closure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->closure_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.Execution)
}

::google::protobuf::uint8* Execution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  // .flyteidl.admin.ExecutionSpec spec = 2;
  if (this->has_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->spec_, deterministic, target);
  }

  // .flyteidl.admin.ExecutionClosure closure = 3;
  if (this->has_closure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->closure_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.Execution)
  return target;
}

size_t Execution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.Execution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  // .flyteidl.admin.ExecutionSpec spec = 2;
  if (this->has_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->spec_);
  }

  // .flyteidl.admin.ExecutionClosure closure = 3;
  if (this->has_closure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->closure_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Execution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.Execution)
  GOOGLE_DCHECK_NE(&from, this);
  const Execution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Execution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.Execution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.Execution)
    MergeFrom(*source);
  }
}

void Execution::MergeFrom(const Execution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.Execution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.id());
  }
  if (from.has_spec()) {
    mutable_spec()->::flyteidl::admin::ExecutionSpec::MergeFrom(from.spec());
  }
  if (from.has_closure()) {
    mutable_closure()->::flyteidl::admin::ExecutionClosure::MergeFrom(from.closure());
  }
}

void Execution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.Execution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Execution::CopyFrom(const Execution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.Execution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Execution::IsInitialized() const {
  return true;
}

void Execution::Swap(Execution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Execution::InternalSwap(Execution* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(spec_, other->spec_);
  swap(closure_, other->closure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Execution::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionList::kExecutionsFieldNumber;
const int ExecutionList::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionList::ExecutionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionList)
}
ExecutionList::ExecutionList(const ExecutionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      executions_(from.executions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionList)
}

void ExecutionList::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ExecutionList::~ExecutionList() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionList)
  SharedDtor();
}

void ExecutionList::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecutionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionList::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionList& ExecutionList::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionList();
  return *internal_default_instance();
}

ExecutionList* ExecutionList::New(::google::protobuf::Arena* arena) const {
  ExecutionList* n = new ExecutionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionList::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  executions_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecutionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.admin.Execution executions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_executions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionList.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionList)
  return false;
#undef DO_
}

void ExecutionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.admin.Execution executions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->executions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->executions(static_cast<int>(i)), output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionList.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionList)
}

::google::protobuf::uint8* ExecutionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.admin.Execution executions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->executions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->executions(static_cast<int>(i)), deterministic, target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionList.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionList)
  return target;
}

size_t ExecutionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .flyteidl.admin.Execution executions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->executions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->executions(static_cast<int>(i)));
    }
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionList)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionList)
    MergeFrom(*source);
  }
}

void ExecutionList::MergeFrom(const ExecutionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  executions_.MergeFrom(from.executions_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ExecutionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionList::CopyFrom(const ExecutionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionList::IsInitialized() const {
  return true;
}

void ExecutionList::Swap(ExecutionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionList::InternalSwap(ExecutionList* other) {
  using std::swap;
  executions_.InternalSwap(&other->executions_);
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionList::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LiteralMapBlob::InitAsDefaultInstance() {
  ::flyteidl::admin::_LiteralMapBlob_default_instance_.values_ = const_cast< ::flyteidl::core::LiteralMap*>(
      ::flyteidl::core::LiteralMap::internal_default_instance());
  ::flyteidl::admin::_LiteralMapBlob_default_instance_.uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LiteralMapBlob::set_allocated_values(::flyteidl::core::LiteralMap* values) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (values) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      values = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, values, submessage_arena);
    }
    set_has_values();
    data_.values_ = values;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.LiteralMapBlob.values)
}
void LiteralMapBlob::clear_values() {
  if (has_values()) {
    delete data_.values_;
    clear_has_data();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiteralMapBlob::kValuesFieldNumber;
const int LiteralMapBlob::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiteralMapBlob::LiteralMapBlob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsLiteralMapBlob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.LiteralMapBlob)
}
LiteralMapBlob::LiteralMapBlob(const LiteralMapBlob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kValues: {
      mutable_values()->::flyteidl::core::LiteralMap::MergeFrom(from.values());
      break;
    }
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.LiteralMapBlob)
}

void LiteralMapBlob::SharedCtor() {
  clear_has_data();
  _cached_size_ = 0;
}

LiteralMapBlob::~LiteralMapBlob() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.LiteralMapBlob)
  SharedDtor();
}

void LiteralMapBlob::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void LiteralMapBlob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiteralMapBlob::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiteralMapBlob& LiteralMapBlob::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsLiteralMapBlob();
  return *internal_default_instance();
}

LiteralMapBlob* LiteralMapBlob::New(::google::protobuf::Arena* arena) const {
  LiteralMapBlob* n = new LiteralMapBlob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiteralMapBlob::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.admin.LiteralMapBlob)
  switch (data_case()) {
    case kValues: {
      delete data_.values_;
      break;
    }
    case kUri: {
      data_.uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void LiteralMapBlob::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.LiteralMapBlob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool LiteralMapBlob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.LiteralMapBlob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.LiteralMap values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.LiteralMapBlob.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.LiteralMapBlob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.LiteralMapBlob)
  return false;
#undef DO_
}

void LiteralMapBlob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.LiteralMapBlob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralMap values = 1;
  if (has_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *data_.values_, output);
  }

  // string uri = 2;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LiteralMapBlob.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.LiteralMapBlob)
}

::google::protobuf::uint8* LiteralMapBlob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.LiteralMapBlob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralMap values = 1;
  if (has_values()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *data_.values_, deterministic, target);
  }

  // string uri = 2;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.LiteralMapBlob.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.LiteralMapBlob)
  return target;
}

size_t LiteralMapBlob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.LiteralMapBlob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // .flyteidl.core.LiteralMap values = 1;
    case kValues: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.values_);
      break;
    }
    // string uri = 2;
    case kUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiteralMapBlob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.LiteralMapBlob)
  GOOGLE_DCHECK_NE(&from, this);
  const LiteralMapBlob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiteralMapBlob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.LiteralMapBlob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.LiteralMapBlob)
    MergeFrom(*source);
  }
}

void LiteralMapBlob::MergeFrom(const LiteralMapBlob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.LiteralMapBlob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kValues: {
      mutable_values()->::flyteidl::core::LiteralMap::MergeFrom(from.values());
      break;
    }
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void LiteralMapBlob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.LiteralMapBlob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiteralMapBlob::CopyFrom(const LiteralMapBlob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.LiteralMapBlob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiteralMapBlob::IsInitialized() const {
  return true;
}

void LiteralMapBlob::Swap(LiteralMapBlob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiteralMapBlob::InternalSwap(LiteralMapBlob* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiteralMapBlob::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionClosure::InitAsDefaultInstance() {
  ::flyteidl::admin::_ExecutionClosure_default_instance_.outputs_ = const_cast< ::flyteidl::admin::LiteralMapBlob*>(
      ::flyteidl::admin::LiteralMapBlob::internal_default_instance());
  ::flyteidl::admin::_ExecutionClosure_default_instance_.error_ = const_cast< ::flyteidl::core::ExecutionError*>(
      ::flyteidl::core::ExecutionError::internal_default_instance());
  ::flyteidl::admin::_ExecutionClosure_default_instance_.abort_cause_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::flyteidl::admin::_ExecutionClosure_default_instance_._instance.get_mutable()->computed_inputs_ = const_cast< ::flyteidl::core::LiteralMap*>(
      ::flyteidl::core::LiteralMap::internal_default_instance());
  ::flyteidl::admin::_ExecutionClosure_default_instance_._instance.get_mutable()->started_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::flyteidl::admin::_ExecutionClosure_default_instance_._instance.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::flyteidl::admin::_ExecutionClosure_default_instance_._instance.get_mutable()->created_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::flyteidl::admin::_ExecutionClosure_default_instance_._instance.get_mutable()->updated_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::flyteidl::admin::_ExecutionClosure_default_instance_._instance.get_mutable()->workflow_id_ = const_cast< ::flyteidl::core::Identifier*>(
      ::flyteidl::core::Identifier::internal_default_instance());
}
void ExecutionClosure::set_allocated_outputs(::flyteidl::admin::LiteralMapBlob* outputs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_output_result();
  if (outputs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      outputs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, outputs, submessage_arena);
    }
    set_has_outputs();
    output_result_.outputs_ = outputs;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ExecutionClosure.outputs)
}
void ExecutionClosure::set_allocated_error(::flyteidl::core::ExecutionError* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_output_result();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    output_result_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ExecutionClosure.error)
}
void ExecutionClosure::clear_error() {
  if (has_error()) {
    delete output_result_.error_;
    clear_has_output_result();
  }
}
void ExecutionClosure::clear_computed_inputs() {
  if (GetArenaNoVirtual() == NULL && computed_inputs_ != NULL) {
    delete computed_inputs_;
  }
  computed_inputs_ = NULL;
}
void ExecutionClosure::clear_started_at() {
  if (GetArenaNoVirtual() == NULL && started_at_ != NULL) {
    delete started_at_;
  }
  started_at_ = NULL;
}
void ExecutionClosure::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
}
void ExecutionClosure::clear_created_at() {
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
}
void ExecutionClosure::clear_updated_at() {
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
}
void ExecutionClosure::clear_notifications() {
  notifications_.Clear();
}
void ExecutionClosure::clear_workflow_id() {
  if (GetArenaNoVirtual() == NULL && workflow_id_ != NULL) {
    delete workflow_id_;
  }
  workflow_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionClosure::kOutputsFieldNumber;
const int ExecutionClosure::kErrorFieldNumber;
const int ExecutionClosure::kAbortCauseFieldNumber;
const int ExecutionClosure::kComputedInputsFieldNumber;
const int ExecutionClosure::kPhaseFieldNumber;
const int ExecutionClosure::kStartedAtFieldNumber;
const int ExecutionClosure::kDurationFieldNumber;
const int ExecutionClosure::kCreatedAtFieldNumber;
const int ExecutionClosure::kUpdatedAtFieldNumber;
const int ExecutionClosure::kNotificationsFieldNumber;
const int ExecutionClosure::kWorkflowIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionClosure::ExecutionClosure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionClosure();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionClosure)
}
ExecutionClosure::ExecutionClosure(const ExecutionClosure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notifications_(from.notifications_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_computed_inputs()) {
    computed_inputs_ = new ::flyteidl::core::LiteralMap(*from.computed_inputs_);
  } else {
    computed_inputs_ = NULL;
  }
  if (from.has_started_at()) {
    started_at_ = new ::google::protobuf::Timestamp(*from.started_at_);
  } else {
    started_at_ = NULL;
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = NULL;
  }
  if (from.has_created_at()) {
    created_at_ = new ::google::protobuf::Timestamp(*from.created_at_);
  } else {
    created_at_ = NULL;
  }
  if (from.has_updated_at()) {
    updated_at_ = new ::google::protobuf::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = NULL;
  }
  if (from.has_workflow_id()) {
    workflow_id_ = new ::flyteidl::core::Identifier(*from.workflow_id_);
  } else {
    workflow_id_ = NULL;
  }
  phase_ = from.phase_;
  clear_has_output_result();
  switch (from.output_result_case()) {
    case kOutputs: {
      mutable_outputs()->::flyteidl::admin::LiteralMapBlob::MergeFrom(from.outputs());
      break;
    }
    case kError: {
      mutable_error()->::flyteidl::core::ExecutionError::MergeFrom(from.error());
      break;
    }
    case kAbortCause: {
      set_abort_cause(from.abort_cause());
      break;
    }
    case OUTPUT_RESULT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionClosure)
}

void ExecutionClosure::SharedCtor() {
  ::memset(&computed_inputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phase_) -
      reinterpret_cast<char*>(&computed_inputs_)) + sizeof(phase_));
  clear_has_output_result();
  _cached_size_ = 0;
}

ExecutionClosure::~ExecutionClosure() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionClosure)
  SharedDtor();
}

void ExecutionClosure::SharedDtor() {
  if (this != internal_default_instance()) delete computed_inputs_;
  if (this != internal_default_instance()) delete started_at_;
  if (this != internal_default_instance()) delete duration_;
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (this != internal_default_instance()) delete workflow_id_;
  if (has_output_result()) {
    clear_output_result();
  }
}

void ExecutionClosure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionClosure::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionClosure& ExecutionClosure::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionClosure();
  return *internal_default_instance();
}

ExecutionClosure* ExecutionClosure::New(::google::protobuf::Arena* arena) const {
  ExecutionClosure* n = new ExecutionClosure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionClosure::clear_output_result() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.admin.ExecutionClosure)
  switch (output_result_case()) {
    case kOutputs: {
      delete output_result_.outputs_;
      break;
    }
    case kError: {
      delete output_result_.error_;
      break;
    }
    case kAbortCause: {
      output_result_.abort_cause_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case OUTPUT_RESULT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OUTPUT_RESULT_NOT_SET;
}


void ExecutionClosure::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionClosure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notifications_.Clear();
  if (GetArenaNoVirtual() == NULL && computed_inputs_ != NULL) {
    delete computed_inputs_;
  }
  computed_inputs_ = NULL;
  if (GetArenaNoVirtual() == NULL && started_at_ != NULL) {
    delete started_at_;
  }
  started_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && workflow_id_ != NULL) {
    delete workflow_id_;
  }
  workflow_id_ = NULL;
  phase_ = 0;
  clear_output_result();
  _internal_metadata_.Clear();
}

bool ExecutionClosure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionClosure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.LiteralMapBlob outputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.ExecutionError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.LiteralMap computed_inputs = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_computed_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.WorkflowExecution.Phase phase = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_phase(static_cast< ::flyteidl::core::WorkflowExecution_Phase >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp started_at = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_started_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp created_at = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp updated_at = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updated_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.admin.Notification notifications = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_notifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string abort_cause = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_abort_cause()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->abort_cause().data(), static_cast<int>(this->abort_cause().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionClosure.abort_cause"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Identifier workflow_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_workflow_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionClosure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionClosure)
  return false;
#undef DO_
}

void ExecutionClosure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionClosure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.LiteralMapBlob outputs = 1;
  if (has_outputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *output_result_.outputs_, output);
  }

  // .flyteidl.core.ExecutionError error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *output_result_.error_, output);
  }

  // .flyteidl.core.LiteralMap computed_inputs = 3 [deprecated = true];
  if (this->has_computed_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->computed_inputs_, output);
  }

  // .flyteidl.core.WorkflowExecution.Phase phase = 4;
  if (this->phase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->phase(), output);
  }

  // .google.protobuf.Timestamp started_at = 5;
  if (this->has_started_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->started_at_, output);
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->duration_, output);
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->created_at_, output);
  }

  // .google.protobuf.Timestamp updated_at = 8;
  if (this->has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->updated_at_, output);
  }

  // repeated .flyteidl.admin.Notification notifications = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->notifications(static_cast<int>(i)), output);
  }

  // string abort_cause = 10;
  if (has_abort_cause()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abort_cause().data(), static_cast<int>(this->abort_cause().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionClosure.abort_cause");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->abort_cause(), output);
  }

  // .flyteidl.core.Identifier workflow_id = 11;
  if (this->has_workflow_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->workflow_id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionClosure)
}

::google::protobuf::uint8* ExecutionClosure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionClosure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.LiteralMapBlob outputs = 1;
  if (has_outputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *output_result_.outputs_, deterministic, target);
  }

  // .flyteidl.core.ExecutionError error = 2;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *output_result_.error_, deterministic, target);
  }

  // .flyteidl.core.LiteralMap computed_inputs = 3 [deprecated = true];
  if (this->has_computed_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->computed_inputs_, deterministic, target);
  }

  // .flyteidl.core.WorkflowExecution.Phase phase = 4;
  if (this->phase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->phase(), target);
  }

  // .google.protobuf.Timestamp started_at = 5;
  if (this->has_started_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->started_at_, deterministic, target);
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->duration_, deterministic, target);
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->created_at_, deterministic, target);
  }

  // .google.protobuf.Timestamp updated_at = 8;
  if (this->has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->updated_at_, deterministic, target);
  }

  // repeated .flyteidl.admin.Notification notifications = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->notifications(static_cast<int>(i)), deterministic, target);
  }

  // string abort_cause = 10;
  if (has_abort_cause()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abort_cause().data(), static_cast<int>(this->abort_cause().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionClosure.abort_cause");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->abort_cause(), target);
  }

  // .flyteidl.core.Identifier workflow_id = 11;
  if (this->has_workflow_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->workflow_id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionClosure)
  return target;
}

size_t ExecutionClosure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionClosure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .flyteidl.admin.Notification notifications = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->notifications_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notifications(static_cast<int>(i)));
    }
  }

  // .flyteidl.core.LiteralMap computed_inputs = 3 [deprecated = true];
  if (this->has_computed_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->computed_inputs_);
  }

  // .google.protobuf.Timestamp started_at = 5;
  if (this->has_started_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->started_at_);
  }

  // .google.protobuf.Duration duration = 6;
  if (this->has_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->duration_);
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->has_created_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 8;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->updated_at_);
  }

  // .flyteidl.core.Identifier workflow_id = 11;
  if (this->has_workflow_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->workflow_id_);
  }

  // .flyteidl.core.WorkflowExecution.Phase phase = 4;
  if (this->phase() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->phase());
  }

  switch (output_result_case()) {
    // .flyteidl.admin.LiteralMapBlob outputs = 1;
    case kOutputs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *output_result_.outputs_);
      break;
    }
    // .flyteidl.core.ExecutionError error = 2;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *output_result_.error_);
      break;
    }
    // string abort_cause = 10;
    case kAbortCause: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->abort_cause());
      break;
    }
    case OUTPUT_RESULT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionClosure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionClosure)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionClosure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionClosure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionClosure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionClosure)
    MergeFrom(*source);
  }
}

void ExecutionClosure::MergeFrom(const ExecutionClosure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionClosure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
  if (from.has_computed_inputs()) {
    mutable_computed_inputs()->::flyteidl::core::LiteralMap::MergeFrom(from.computed_inputs());
  }
  if (from.has_started_at()) {
    mutable_started_at()->::google::protobuf::Timestamp::MergeFrom(from.started_at());
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
  if (from.has_created_at()) {
    mutable_created_at()->::google::protobuf::Timestamp::MergeFrom(from.created_at());
  }
  if (from.has_updated_at()) {
    mutable_updated_at()->::google::protobuf::Timestamp::MergeFrom(from.updated_at());
  }
  if (from.has_workflow_id()) {
    mutable_workflow_id()->::flyteidl::core::Identifier::MergeFrom(from.workflow_id());
  }
  if (from.phase() != 0) {
    set_phase(from.phase());
  }
  switch (from.output_result_case()) {
    case kOutputs: {
      mutable_outputs()->::flyteidl::admin::LiteralMapBlob::MergeFrom(from.outputs());
      break;
    }
    case kError: {
      mutable_error()->::flyteidl::core::ExecutionError::MergeFrom(from.error());
      break;
    }
    case kAbortCause: {
      set_abort_cause(from.abort_cause());
      break;
    }
    case OUTPUT_RESULT_NOT_SET: {
      break;
    }
  }
}

void ExecutionClosure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionClosure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionClosure::CopyFrom(const ExecutionClosure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionClosure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionClosure::IsInitialized() const {
  return true;
}

void ExecutionClosure::Swap(ExecutionClosure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionClosure::InternalSwap(ExecutionClosure* other) {
  using std::swap;
  notifications_.InternalSwap(&other->notifications_);
  swap(computed_inputs_, other->computed_inputs_);
  swap(started_at_, other->started_at_);
  swap(duration_, other->duration_);
  swap(created_at_, other->created_at_);
  swap(updated_at_, other->updated_at_);
  swap(workflow_id_, other->workflow_id_);
  swap(phase_, other->phase_);
  swap(output_result_, other->output_result_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionClosure::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionMetadata::InitAsDefaultInstance() {
  ::flyteidl::admin::_ExecutionMetadata_default_instance_._instance.get_mutable()->scheduled_at_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::flyteidl::admin::_ExecutionMetadata_default_instance_._instance.get_mutable()->parent_node_execution_ = const_cast< ::flyteidl::core::NodeExecutionIdentifier*>(
      ::flyteidl::core::NodeExecutionIdentifier::internal_default_instance());
  ::flyteidl::admin::_ExecutionMetadata_default_instance_._instance.get_mutable()->reference_execution_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
}
void ExecutionMetadata::clear_scheduled_at() {
  if (GetArenaNoVirtual() == NULL && scheduled_at_ != NULL) {
    delete scheduled_at_;
  }
  scheduled_at_ = NULL;
}
void ExecutionMetadata::clear_parent_node_execution() {
  if (GetArenaNoVirtual() == NULL && parent_node_execution_ != NULL) {
    delete parent_node_execution_;
  }
  parent_node_execution_ = NULL;
}
void ExecutionMetadata::clear_reference_execution() {
  if (GetArenaNoVirtual() == NULL && reference_execution_ != NULL) {
    delete reference_execution_;
  }
  reference_execution_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionMetadata::kModeFieldNumber;
const int ExecutionMetadata::kPrincipalFieldNumber;
const int ExecutionMetadata::kNestingFieldNumber;
const int ExecutionMetadata::kScheduledAtFieldNumber;
const int ExecutionMetadata::kParentNodeExecutionFieldNumber;
const int ExecutionMetadata::kReferenceExecutionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionMetadata::ExecutionMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionMetadata)
}
ExecutionMetadata::ExecutionMetadata(const ExecutionMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  principal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.principal().size() > 0) {
    principal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.principal_);
  }
  if (from.has_scheduled_at()) {
    scheduled_at_ = new ::google::protobuf::Timestamp(*from.scheduled_at_);
  } else {
    scheduled_at_ = NULL;
  }
  if (from.has_parent_node_execution()) {
    parent_node_execution_ = new ::flyteidl::core::NodeExecutionIdentifier(*from.parent_node_execution_);
  } else {
    parent_node_execution_ = NULL;
  }
  if (from.has_reference_execution()) {
    reference_execution_ = new ::flyteidl::core::WorkflowExecutionIdentifier(*from.reference_execution_);
  } else {
    reference_execution_ = NULL;
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&nesting_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(nesting_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionMetadata)
}

void ExecutionMetadata::SharedCtor() {
  principal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scheduled_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nesting_) -
      reinterpret_cast<char*>(&scheduled_at_)) + sizeof(nesting_));
  _cached_size_ = 0;
}

ExecutionMetadata::~ExecutionMetadata() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionMetadata)
  SharedDtor();
}

void ExecutionMetadata::SharedDtor() {
  principal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scheduled_at_;
  if (this != internal_default_instance()) delete parent_node_execution_;
  if (this != internal_default_instance()) delete reference_execution_;
}

void ExecutionMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionMetadata::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionMetadata& ExecutionMetadata::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionMetadata();
  return *internal_default_instance();
}

ExecutionMetadata* ExecutionMetadata::New(::google::protobuf::Arena* arena) const {
  ExecutionMetadata* n = new ExecutionMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  principal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && scheduled_at_ != NULL) {
    delete scheduled_at_;
  }
  scheduled_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && parent_node_execution_ != NULL) {
    delete parent_node_execution_;
  }
  parent_node_execution_ = NULL;
  if (GetArenaNoVirtual() == NULL && reference_execution_ != NULL) {
    delete reference_execution_;
  }
  reference_execution_ = NULL;
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nesting_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(nesting_));
  _internal_metadata_.Clear();
}

bool ExecutionMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.ExecutionMetadata.ExecutionMode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::flyteidl::admin::ExecutionMetadata_ExecutionMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string principal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_principal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->principal().data(), static_cast<int>(this->principal().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionMetadata.principal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nesting = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nesting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp scheduled_at = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scheduled_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.NodeExecutionIdentifier parent_node_execution = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parent_node_execution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.WorkflowExecutionIdentifier reference_execution = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference_execution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionMetadata)
  return false;
#undef DO_
}

void ExecutionMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.ExecutionMetadata.ExecutionMode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  // string principal = 2;
  if (this->principal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal().data(), static_cast<int>(this->principal().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionMetadata.principal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->principal(), output);
  }

  // uint32 nesting = 3;
  if (this->nesting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nesting(), output);
  }

  // .google.protobuf.Timestamp scheduled_at = 4;
  if (this->has_scheduled_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->scheduled_at_, output);
  }

  // .flyteidl.core.NodeExecutionIdentifier parent_node_execution = 5;
  if (this->has_parent_node_execution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->parent_node_execution_, output);
  }

  // .flyteidl.core.WorkflowExecutionIdentifier reference_execution = 16;
  if (this->has_reference_execution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->reference_execution_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionMetadata)
}

::google::protobuf::uint8* ExecutionMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.ExecutionMetadata.ExecutionMode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  // string principal = 2;
  if (this->principal().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->principal().data(), static_cast<int>(this->principal().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionMetadata.principal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->principal(), target);
  }

  // uint32 nesting = 3;
  if (this->nesting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nesting(), target);
  }

  // .google.protobuf.Timestamp scheduled_at = 4;
  if (this->has_scheduled_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->scheduled_at_, deterministic, target);
  }

  // .flyteidl.core.NodeExecutionIdentifier parent_node_execution = 5;
  if (this->has_parent_node_execution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->parent_node_execution_, deterministic, target);
  }

  // .flyteidl.core.WorkflowExecutionIdentifier reference_execution = 16;
  if (this->has_reference_execution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->reference_execution_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionMetadata)
  return target;
}

size_t ExecutionMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string principal = 2;
  if (this->principal().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->principal());
  }

  // .google.protobuf.Timestamp scheduled_at = 4;
  if (this->has_scheduled_at()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->scheduled_at_);
  }

  // .flyteidl.core.NodeExecutionIdentifier parent_node_execution = 5;
  if (this->has_parent_node_execution()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->parent_node_execution_);
  }

  // .flyteidl.core.WorkflowExecutionIdentifier reference_execution = 16;
  if (this->has_reference_execution()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->reference_execution_);
  }

  // .flyteidl.admin.ExecutionMetadata.ExecutionMode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // uint32 nesting = 3;
  if (this->nesting() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nesting());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionMetadata)
    MergeFrom(*source);
  }
}

void ExecutionMetadata::MergeFrom(const ExecutionMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.principal().size() > 0) {

    principal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.principal_);
  }
  if (from.has_scheduled_at()) {
    mutable_scheduled_at()->::google::protobuf::Timestamp::MergeFrom(from.scheduled_at());
  }
  if (from.has_parent_node_execution()) {
    mutable_parent_node_execution()->::flyteidl::core::NodeExecutionIdentifier::MergeFrom(from.parent_node_execution());
  }
  if (from.has_reference_execution()) {
    mutable_reference_execution()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.reference_execution());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.nesting() != 0) {
    set_nesting(from.nesting());
  }
}

void ExecutionMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionMetadata::CopyFrom(const ExecutionMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionMetadata::IsInitialized() const {
  return true;
}

void ExecutionMetadata::Swap(ExecutionMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionMetadata::InternalSwap(ExecutionMetadata* other) {
  using std::swap;
  principal_.Swap(&other->principal_);
  swap(scheduled_at_, other->scheduled_at_);
  swap(parent_node_execution_, other->parent_node_execution_);
  swap(reference_execution_, other->reference_execution_);
  swap(mode_, other->mode_);
  swap(nesting_, other->nesting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionMetadata::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NotificationList::InitAsDefaultInstance() {
}
void NotificationList::clear_notifications() {
  notifications_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotificationList::kNotificationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotificationList::NotificationList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsNotificationList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.NotificationList)
}
NotificationList::NotificationList(const NotificationList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notifications_(from.notifications_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NotificationList)
}

void NotificationList::SharedCtor() {
  _cached_size_ = 0;
}

NotificationList::~NotificationList() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NotificationList)
  SharedDtor();
}

void NotificationList::SharedDtor() {
}

void NotificationList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotificationList::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotificationList& NotificationList::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsNotificationList();
  return *internal_default_instance();
}

NotificationList* NotificationList::New(::google::protobuf::Arena* arena) const {
  NotificationList* n = new NotificationList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotificationList::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.NotificationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notifications_.Clear();
  _internal_metadata_.Clear();
}

bool NotificationList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.NotificationList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.admin.Notification notifications = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_notifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.NotificationList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.NotificationList)
  return false;
#undef DO_
}

void NotificationList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.NotificationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.admin.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notifications(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.NotificationList)
}

::google::protobuf::uint8* NotificationList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.NotificationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.admin.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notifications(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.NotificationList)
  return target;
}

size_t NotificationList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.NotificationList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .flyteidl.admin.Notification notifications = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notifications_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notifications(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotificationList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.NotificationList)
  GOOGLE_DCHECK_NE(&from, this);
  const NotificationList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotificationList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.NotificationList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.NotificationList)
    MergeFrom(*source);
  }
}

void NotificationList::MergeFrom(const NotificationList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.NotificationList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
}

void NotificationList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.NotificationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotificationList::CopyFrom(const NotificationList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.NotificationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationList::IsInitialized() const {
  return true;
}

void NotificationList::Swap(NotificationList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotificationList::InternalSwap(NotificationList* other) {
  using std::swap;
  notifications_.InternalSwap(&other->notifications_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotificationList::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionSpec::InitAsDefaultInstance() {
  ::flyteidl::admin::_ExecutionSpec_default_instance_._instance.get_mutable()->launch_plan_ = const_cast< ::flyteidl::core::Identifier*>(
      ::flyteidl::core::Identifier::internal_default_instance());
  ::flyteidl::admin::_ExecutionSpec_default_instance_._instance.get_mutable()->inputs_ = const_cast< ::flyteidl::core::LiteralMap*>(
      ::flyteidl::core::LiteralMap::internal_default_instance());
  ::flyteidl::admin::_ExecutionSpec_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::flyteidl::admin::ExecutionMetadata*>(
      ::flyteidl::admin::ExecutionMetadata::internal_default_instance());
  ::flyteidl::admin::_ExecutionSpec_default_instance_.notifications_ = const_cast< ::flyteidl::admin::NotificationList*>(
      ::flyteidl::admin::NotificationList::internal_default_instance());
  ::flyteidl::admin::_ExecutionSpec_default_instance_.disable_all_ = false;
  ::flyteidl::admin::_ExecutionSpec_default_instance_._instance.get_mutable()->labels_ = const_cast< ::flyteidl::admin::Labels*>(
      ::flyteidl::admin::Labels::internal_default_instance());
  ::flyteidl::admin::_ExecutionSpec_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::flyteidl::admin::Annotations*>(
      ::flyteidl::admin::Annotations::internal_default_instance());
}
void ExecutionSpec::clear_launch_plan() {
  if (GetArenaNoVirtual() == NULL && launch_plan_ != NULL) {
    delete launch_plan_;
  }
  launch_plan_ = NULL;
}
void ExecutionSpec::clear_inputs() {
  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
}
void ExecutionSpec::set_allocated_notifications(::flyteidl::admin::NotificationList* notifications) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_notification_overrides();
  if (notifications) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      notifications = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, notifications, submessage_arena);
    }
    set_has_notifications();
    notification_overrides_.notifications_ = notifications;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ExecutionSpec.notifications)
}
void ExecutionSpec::clear_labels() {
  if (GetArenaNoVirtual() == NULL && labels_ != NULL) {
    delete labels_;
  }
  labels_ = NULL;
}
void ExecutionSpec::clear_annotations() {
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionSpec::kLaunchPlanFieldNumber;
const int ExecutionSpec::kInputsFieldNumber;
const int ExecutionSpec::kMetadataFieldNumber;
const int ExecutionSpec::kNotificationsFieldNumber;
const int ExecutionSpec::kDisableAllFieldNumber;
const int ExecutionSpec::kLabelsFieldNumber;
const int ExecutionSpec::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionSpec::ExecutionSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionSpec)
}
ExecutionSpec::ExecutionSpec(const ExecutionSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_launch_plan()) {
    launch_plan_ = new ::flyteidl::core::Identifier(*from.launch_plan_);
  } else {
    launch_plan_ = NULL;
  }
  if (from.has_inputs()) {
    inputs_ = new ::flyteidl::core::LiteralMap(*from.inputs_);
  } else {
    inputs_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::flyteidl::admin::ExecutionMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_labels()) {
    labels_ = new ::flyteidl::admin::Labels(*from.labels_);
  } else {
    labels_ = NULL;
  }
  if (from.has_annotations()) {
    annotations_ = new ::flyteidl::admin::Annotations(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  clear_has_notification_overrides();
  switch (from.notification_overrides_case()) {
    case kNotifications: {
      mutable_notifications()->::flyteidl::admin::NotificationList::MergeFrom(from.notifications());
      break;
    }
    case kDisableAll: {
      set_disable_all(from.disable_all());
      break;
    }
    case NOTIFICATION_OVERRIDES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionSpec)
}

void ExecutionSpec::SharedCtor() {
  ::memset(&launch_plan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotations_) -
      reinterpret_cast<char*>(&launch_plan_)) + sizeof(annotations_));
  clear_has_notification_overrides();
  _cached_size_ = 0;
}

ExecutionSpec::~ExecutionSpec() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionSpec)
  SharedDtor();
}

void ExecutionSpec::SharedDtor() {
  if (this != internal_default_instance()) delete launch_plan_;
  if (this != internal_default_instance()) delete inputs_;
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete labels_;
  if (this != internal_default_instance()) delete annotations_;
  if (has_notification_overrides()) {
    clear_notification_overrides();
  }
}

void ExecutionSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionSpec::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionSpec& ExecutionSpec::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionSpec();
  return *internal_default_instance();
}

ExecutionSpec* ExecutionSpec::New(::google::protobuf::Arena* arena) const {
  ExecutionSpec* n = new ExecutionSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionSpec::clear_notification_overrides() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.admin.ExecutionSpec)
  switch (notification_overrides_case()) {
    case kNotifications: {
      delete notification_overrides_.notifications_;
      break;
    }
    case kDisableAll: {
      // No need to clear
      break;
    }
    case NOTIFICATION_OVERRIDES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NOTIFICATION_OVERRIDES_NOT_SET;
}


void ExecutionSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && launch_plan_ != NULL) {
    delete launch_plan_;
  }
  launch_plan_ = NULL;
  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && labels_ != NULL) {
    delete labels_;
  }
  labels_ = NULL;
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  clear_notification_overrides();
  _internal_metadata_.Clear();
}

bool ExecutionSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Identifier launch_plan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_launch_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.LiteralMap inputs = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.ExecutionMetadata metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.NotificationList notifications = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disable_all = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_notification_overrides();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &notification_overrides_.disable_all_)));
          set_has_disable_all();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.Labels labels = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_labels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.Annotations annotations = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionSpec)
  return false;
#undef DO_
}

void ExecutionSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Identifier launch_plan = 1;
  if (this->has_launch_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->launch_plan_, output);
  }

  // .flyteidl.core.LiteralMap inputs = 2 [deprecated = true];
  if (this->has_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->inputs_, output);
  }

  // .flyteidl.admin.ExecutionMetadata metadata = 3;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->metadata_, output);
  }

  // .flyteidl.admin.NotificationList notifications = 5;
  if (has_notifications()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *notification_overrides_.notifications_, output);
  }

  // bool disable_all = 6;
  if (has_disable_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->disable_all(), output);
  }

  // .flyteidl.admin.Labels labels = 7;
  if (this->has_labels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->labels_, output);
  }

  // .flyteidl.admin.Annotations annotations = 8;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->annotations_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionSpec)
}

::google::protobuf::uint8* ExecutionSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Identifier launch_plan = 1;
  if (this->has_launch_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->launch_plan_, deterministic, target);
  }

  // .flyteidl.core.LiteralMap inputs = 2 [deprecated = true];
  if (this->has_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->inputs_, deterministic, target);
  }

  // .flyteidl.admin.ExecutionMetadata metadata = 3;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->metadata_, deterministic, target);
  }

  // .flyteidl.admin.NotificationList notifications = 5;
  if (has_notifications()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *notification_overrides_.notifications_, deterministic, target);
  }

  // bool disable_all = 6;
  if (has_disable_all()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->disable_all(), target);
  }

  // .flyteidl.admin.Labels labels = 7;
  if (this->has_labels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->labels_, deterministic, target);
  }

  // .flyteidl.admin.Annotations annotations = 8;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->annotations_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionSpec)
  return target;
}

size_t ExecutionSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionSpec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.Identifier launch_plan = 1;
  if (this->has_launch_plan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->launch_plan_);
  }

  // .flyteidl.core.LiteralMap inputs = 2 [deprecated = true];
  if (this->has_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->inputs_);
  }

  // .flyteidl.admin.ExecutionMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // .flyteidl.admin.Labels labels = 7;
  if (this->has_labels()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->labels_);
  }

  // .flyteidl.admin.Annotations annotations = 8;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->annotations_);
  }

  switch (notification_overrides_case()) {
    // .flyteidl.admin.NotificationList notifications = 5;
    case kNotifications: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *notification_overrides_.notifications_);
      break;
    }
    // bool disable_all = 6;
    case kDisableAll: {
      total_size += 1 + 1;
      break;
    }
    case NOTIFICATION_OVERRIDES_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionSpec)
    MergeFrom(*source);
  }
}

void ExecutionSpec::MergeFrom(const ExecutionSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_launch_plan()) {
    mutable_launch_plan()->::flyteidl::core::Identifier::MergeFrom(from.launch_plan());
  }
  if (from.has_inputs()) {
    mutable_inputs()->::flyteidl::core::LiteralMap::MergeFrom(from.inputs());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::flyteidl::admin::ExecutionMetadata::MergeFrom(from.metadata());
  }
  if (from.has_labels()) {
    mutable_labels()->::flyteidl::admin::Labels::MergeFrom(from.labels());
  }
  if (from.has_annotations()) {
    mutable_annotations()->::flyteidl::admin::Annotations::MergeFrom(from.annotations());
  }
  switch (from.notification_overrides_case()) {
    case kNotifications: {
      mutable_notifications()->::flyteidl::admin::NotificationList::MergeFrom(from.notifications());
      break;
    }
    case kDisableAll: {
      set_disable_all(from.disable_all());
      break;
    }
    case NOTIFICATION_OVERRIDES_NOT_SET: {
      break;
    }
  }
}

void ExecutionSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionSpec::CopyFrom(const ExecutionSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionSpec::IsInitialized() const {
  return true;
}

void ExecutionSpec::Swap(ExecutionSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionSpec::InternalSwap(ExecutionSpec* other) {
  using std::swap;
  swap(launch_plan_, other->launch_plan_);
  swap(inputs_, other->inputs_);
  swap(metadata_, other->metadata_);
  swap(labels_, other->labels_);
  swap(annotations_, other->annotations_);
  swap(notification_overrides_, other->notification_overrides_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionSpec::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionTerminateRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_ExecutionTerminateRequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
}
void ExecutionTerminateRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionTerminateRequest::kIdFieldNumber;
const int ExecutionTerminateRequest::kCauseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionTerminateRequest::ExecutionTerminateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionTerminateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionTerminateRequest)
}
ExecutionTerminateRequest::ExecutionTerminateRequest(const ExecutionTerminateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cause_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cause().size() > 0) {
    cause_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cause_);
  }
  if (from.has_id()) {
    id_ = new ::flyteidl::core::WorkflowExecutionIdentifier(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionTerminateRequest)
}

void ExecutionTerminateRequest::SharedCtor() {
  cause_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = NULL;
  _cached_size_ = 0;
}

ExecutionTerminateRequest::~ExecutionTerminateRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionTerminateRequest)
  SharedDtor();
}

void ExecutionTerminateRequest::SharedDtor() {
  cause_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void ExecutionTerminateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionTerminateRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionTerminateRequest& ExecutionTerminateRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionTerminateRequest();
  return *internal_default_instance();
}

ExecutionTerminateRequest* ExecutionTerminateRequest::New(::google::protobuf::Arena* arena) const {
  ExecutionTerminateRequest* n = new ExecutionTerminateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionTerminateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionTerminateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cause_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecutionTerminateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionTerminateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cause = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cause()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cause().data(), static_cast<int>(this->cause().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionTerminateRequest.cause"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionTerminateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionTerminateRequest)
  return false;
#undef DO_
}

void ExecutionTerminateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionTerminateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // string cause = 2;
  if (this->cause().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cause().data(), static_cast<int>(this->cause().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionTerminateRequest.cause");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cause(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionTerminateRequest)
}

::google::protobuf::uint8* ExecutionTerminateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionTerminateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  // string cause = 2;
  if (this->cause().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cause().data(), static_cast<int>(this->cause().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionTerminateRequest.cause");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cause(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionTerminateRequest)
  return target;
}

size_t ExecutionTerminateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionTerminateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cause = 2;
  if (this->cause().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cause());
  }

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionTerminateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionTerminateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionTerminateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionTerminateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionTerminateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionTerminateRequest)
    MergeFrom(*source);
  }
}

void ExecutionTerminateRequest::MergeFrom(const ExecutionTerminateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionTerminateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cause().size() > 0) {

    cause_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cause_);
  }
  if (from.has_id()) {
    mutable_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.id());
  }
}

void ExecutionTerminateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionTerminateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionTerminateRequest::CopyFrom(const ExecutionTerminateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionTerminateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionTerminateRequest::IsInitialized() const {
  return true;
}

void ExecutionTerminateRequest::Swap(ExecutionTerminateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionTerminateRequest::InternalSwap(ExecutionTerminateRequest* other) {
  using std::swap;
  cause_.Swap(&other->cause_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionTerminateRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionTerminateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionTerminateResponse::ExecutionTerminateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionTerminateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionTerminateResponse)
}
ExecutionTerminateResponse::ExecutionTerminateResponse(const ExecutionTerminateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionTerminateResponse)
}

void ExecutionTerminateResponse::SharedCtor() {
  _cached_size_ = 0;
}

ExecutionTerminateResponse::~ExecutionTerminateResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionTerminateResponse)
  SharedDtor();
}

void ExecutionTerminateResponse::SharedDtor() {
}

void ExecutionTerminateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionTerminateResponse::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionTerminateResponse& ExecutionTerminateResponse::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsExecutionTerminateResponse();
  return *internal_default_instance();
}

ExecutionTerminateResponse* ExecutionTerminateResponse::New(::google::protobuf::Arena* arena) const {
  ExecutionTerminateResponse* n = new ExecutionTerminateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionTerminateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionTerminateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ExecutionTerminateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionTerminateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionTerminateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionTerminateResponse)
  return false;
#undef DO_
}

void ExecutionTerminateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionTerminateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionTerminateResponse)
}

::google::protobuf::uint8* ExecutionTerminateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionTerminateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionTerminateResponse)
  return target;
}

size_t ExecutionTerminateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionTerminateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionTerminateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionTerminateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionTerminateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionTerminateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionTerminateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionTerminateResponse)
    MergeFrom(*source);
  }
}

void ExecutionTerminateResponse::MergeFrom(const ExecutionTerminateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionTerminateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExecutionTerminateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionTerminateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionTerminateResponse::CopyFrom(const ExecutionTerminateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionTerminateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionTerminateResponse::IsInitialized() const {
  return true;
}

void ExecutionTerminateResponse::Swap(ExecutionTerminateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionTerminateResponse::InternalSwap(ExecutionTerminateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionTerminateResponse::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowExecutionGetDataRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_WorkflowExecutionGetDataRequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::WorkflowExecutionIdentifier*>(
      ::flyteidl::core::WorkflowExecutionIdentifier::internal_default_instance());
}
void WorkflowExecutionGetDataRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowExecutionGetDataRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowExecutionGetDataRequest::WorkflowExecutionGetDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsWorkflowExecutionGetDataRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.WorkflowExecutionGetDataRequest)
}
WorkflowExecutionGetDataRequest::WorkflowExecutionGetDataRequest(const WorkflowExecutionGetDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::flyteidl::core::WorkflowExecutionIdentifier(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.WorkflowExecutionGetDataRequest)
}

void WorkflowExecutionGetDataRequest::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

WorkflowExecutionGetDataRequest::~WorkflowExecutionGetDataRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.WorkflowExecutionGetDataRequest)
  SharedDtor();
}

void WorkflowExecutionGetDataRequest::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void WorkflowExecutionGetDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkflowExecutionGetDataRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowExecutionGetDataRequest& WorkflowExecutionGetDataRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsWorkflowExecutionGetDataRequest();
  return *internal_default_instance();
}

WorkflowExecutionGetDataRequest* WorkflowExecutionGetDataRequest::New(::google::protobuf::Arena* arena) const {
  WorkflowExecutionGetDataRequest* n = new WorkflowExecutionGetDataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkflowExecutionGetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool WorkflowExecutionGetDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.WorkflowExecutionGetDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.WorkflowExecutionGetDataRequest)
  return false;
#undef DO_
}

void WorkflowExecutionGetDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.WorkflowExecutionGetDataRequest)
}

::google::protobuf::uint8* WorkflowExecutionGetDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.WorkflowExecutionGetDataRequest)
  return target;
}

size_t WorkflowExecutionGetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.WorkflowExecutionIdentifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkflowExecutionGetDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowExecutionGetDataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowExecutionGetDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.WorkflowExecutionGetDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.WorkflowExecutionGetDataRequest)
    MergeFrom(*source);
  }
}

void WorkflowExecutionGetDataRequest::MergeFrom(const WorkflowExecutionGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::flyteidl::core::WorkflowExecutionIdentifier::MergeFrom(from.id());
  }
}

void WorkflowExecutionGetDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowExecutionGetDataRequest::CopyFrom(const WorkflowExecutionGetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.WorkflowExecutionGetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowExecutionGetDataRequest::IsInitialized() const {
  return true;
}

void WorkflowExecutionGetDataRequest::Swap(WorkflowExecutionGetDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowExecutionGetDataRequest::InternalSwap(WorkflowExecutionGetDataRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkflowExecutionGetDataRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowExecutionGetDataResponse::InitAsDefaultInstance() {
  ::flyteidl::admin::_WorkflowExecutionGetDataResponse_default_instance_._instance.get_mutable()->outputs_ = const_cast< ::flyteidl::admin::UrlBlob*>(
      ::flyteidl::admin::UrlBlob::internal_default_instance());
  ::flyteidl::admin::_WorkflowExecutionGetDataResponse_default_instance_._instance.get_mutable()->inputs_ = const_cast< ::flyteidl::admin::UrlBlob*>(
      ::flyteidl::admin::UrlBlob::internal_default_instance());
}
void WorkflowExecutionGetDataResponse::clear_outputs() {
  if (GetArenaNoVirtual() == NULL && outputs_ != NULL) {
    delete outputs_;
  }
  outputs_ = NULL;
}
void WorkflowExecutionGetDataResponse::clear_inputs() {
  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowExecutionGetDataResponse::kOutputsFieldNumber;
const int WorkflowExecutionGetDataResponse::kInputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowExecutionGetDataResponse::WorkflowExecutionGetDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsWorkflowExecutionGetDataResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.WorkflowExecutionGetDataResponse)
}
WorkflowExecutionGetDataResponse::WorkflowExecutionGetDataResponse(const WorkflowExecutionGetDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_outputs()) {
    outputs_ = new ::flyteidl::admin::UrlBlob(*from.outputs_);
  } else {
    outputs_ = NULL;
  }
  if (from.has_inputs()) {
    inputs_ = new ::flyteidl::admin::UrlBlob(*from.inputs_);
  } else {
    inputs_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.WorkflowExecutionGetDataResponse)
}

void WorkflowExecutionGetDataResponse::SharedCtor() {
  ::memset(&outputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inputs_) -
      reinterpret_cast<char*>(&outputs_)) + sizeof(inputs_));
  _cached_size_ = 0;
}

WorkflowExecutionGetDataResponse::~WorkflowExecutionGetDataResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.WorkflowExecutionGetDataResponse)
  SharedDtor();
}

void WorkflowExecutionGetDataResponse::SharedDtor() {
  if (this != internal_default_instance()) delete outputs_;
  if (this != internal_default_instance()) delete inputs_;
}

void WorkflowExecutionGetDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkflowExecutionGetDataResponse::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowExecutionGetDataResponse& WorkflowExecutionGetDataResponse::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::InitDefaultsWorkflowExecutionGetDataResponse();
  return *internal_default_instance();
}

WorkflowExecutionGetDataResponse* WorkflowExecutionGetDataResponse::New(::google::protobuf::Arena* arena) const {
  WorkflowExecutionGetDataResponse* n = new WorkflowExecutionGetDataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkflowExecutionGetDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && outputs_ != NULL) {
    delete outputs_;
  }
  outputs_ = NULL;
  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
  _internal_metadata_.Clear();
}

bool WorkflowExecutionGetDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.UrlBlob outputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.UrlBlob inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.WorkflowExecutionGetDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.WorkflowExecutionGetDataResponse)
  return false;
#undef DO_
}

void WorkflowExecutionGetDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.UrlBlob outputs = 1;
  if (this->has_outputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->outputs_, output);
  }

  // .flyteidl.admin.UrlBlob inputs = 2;
  if (this->has_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->inputs_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.WorkflowExecutionGetDataResponse)
}

::google::protobuf::uint8* WorkflowExecutionGetDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.UrlBlob outputs = 1;
  if (this->has_outputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->outputs_, deterministic, target);
  }

  // .flyteidl.admin.UrlBlob inputs = 2;
  if (this->has_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->inputs_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.WorkflowExecutionGetDataResponse)
  return target;
}

size_t WorkflowExecutionGetDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.admin.UrlBlob outputs = 1;
  if (this->has_outputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->outputs_);
  }

  // .flyteidl.admin.UrlBlob inputs = 2;
  if (this->has_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->inputs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkflowExecutionGetDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowExecutionGetDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowExecutionGetDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.WorkflowExecutionGetDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.WorkflowExecutionGetDataResponse)
    MergeFrom(*source);
  }
}

void WorkflowExecutionGetDataResponse::MergeFrom(const WorkflowExecutionGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_outputs()) {
    mutable_outputs()->::flyteidl::admin::UrlBlob::MergeFrom(from.outputs());
  }
  if (from.has_inputs()) {
    mutable_inputs()->::flyteidl::admin::UrlBlob::MergeFrom(from.inputs());
  }
}

void WorkflowExecutionGetDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowExecutionGetDataResponse::CopyFrom(const WorkflowExecutionGetDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.WorkflowExecutionGetDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowExecutionGetDataResponse::IsInitialized() const {
  return true;
}

void WorkflowExecutionGetDataResponse::Swap(WorkflowExecutionGetDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowExecutionGetDataResponse::InternalSwap(WorkflowExecutionGetDataResponse* other) {
  using std::swap;
  swap(outputs_, other->outputs_);
  swap(inputs_, other->inputs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkflowExecutionGetDataResponse::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
