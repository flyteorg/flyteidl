// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/workflow.proto

package com.flyteidl.core;

public interface IfElseBlockOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.core.IfElseBlock)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   *+required. First condition to evaluate.
   * </pre>
   *
   * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
   * @return Whether the case field is set.
   */
  boolean hasCase();
  /**
   * <pre>
   *+required. First condition to evaluate.
   * </pre>
   *
   * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
   * @return The case.
   */
  com.flyteidl.core.IfBlock getCase();
  /**
   * <pre>
   *+required. First condition to evaluate.
   * </pre>
   *
   * <code>.flyteidl.core.IfBlock case = 1 [json_name = "case"];</code>
   */
  com.flyteidl.core.IfBlockOrBuilder getCaseOrBuilder();

  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  java.util.List<com.flyteidl.core.IfBlock> 
      getOtherList();
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  com.flyteidl.core.IfBlock getOther(int index);
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  int getOtherCount();
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  java.util.List<? extends com.flyteidl.core.IfBlockOrBuilder> 
      getOtherOrBuilderList();
  /**
   * <pre>
   *+optional. Additional branches to evaluate.
   * </pre>
   *
   * <code>repeated .flyteidl.core.IfBlock other = 2 [json_name = "other"];</code>
   */
  com.flyteidl.core.IfBlockOrBuilder getOtherOrBuilder(
      int index);

  /**
   * <pre>
   * The node to execute in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
   * @return Whether the elseNode field is set.
   */
  boolean hasElseNode();
  /**
   * <pre>
   * The node to execute in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
   * @return The elseNode.
   */
  com.flyteidl.core.Node getElseNode();
  /**
   * <pre>
   * The node to execute in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Node else_node = 3 [json_name = "elseNode"];</code>
   */
  com.flyteidl.core.NodeOrBuilder getElseNodeOrBuilder();

  /**
   * <pre>
   * An error to throw in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <pre>
   * An error to throw in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
   * @return The error.
   */
  com.flyteidl.core.Error getError();
  /**
   * <pre>
   * An error to throw in case none of the branches were taken.
   * </pre>
   *
   * <code>.flyteidl.core.Error error = 4 [json_name = "error"];</code>
   */
  com.flyteidl.core.ErrorOrBuilder getErrorOrBuilder();

  public com.flyteidl.core.IfElseBlock.DefaultCase getDefaultCase();
}
