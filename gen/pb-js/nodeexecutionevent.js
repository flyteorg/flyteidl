// source: flyteidl/event/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.flyteidl.event.NodeExecutionEvent');
goog.provide('proto.flyteidl.event.NodeExecutionEvent.OutputResultCase');
goog.provide('proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.flyteidl.core.ExecutionError');
goog.require('proto.flyteidl.core.LiteralMap');
goog.require('proto.flyteidl.core.NodeExecutionIdentifier');
goog.require('proto.flyteidl.event.ParentNodeExecutionMetadata');
goog.require('proto.flyteidl.event.ParentTaskExecutionMetadata');
goog.require('proto.flyteidl.event.TaskNodeMetadata');
goog.require('proto.flyteidl.event.WorkflowNodeMetadata');
goog.require('proto.google.protobuf.Timestamp');

goog.forwardDeclare('proto.flyteidl.core.NodeExecution.Phase');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.event.NodeExecutionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_);
};
goog.inherits(proto.flyteidl.event.NodeExecutionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.event.NodeExecutionEvent.displayName = 'proto.flyteidl.event.NodeExecutionEvent';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.event.NodeExecutionEvent.oneofGroups_ = [[6,7,15],[8,14]];

/**
 * @enum {number}
 */
proto.flyteidl.event.NodeExecutionEvent.OutputResultCase = {
  OUTPUT_RESULT_NOT_SET: 0,
  OUTPUT_URI: 6,
  ERROR: 7,
  OUTPUT_DATA: 15
};

/**
 * @return {proto.flyteidl.event.NodeExecutionEvent.OutputResultCase}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOutputResultCase = function() {
  return /** @type {proto.flyteidl.event.NodeExecutionEvent.OutputResultCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase = {
  TARGET_METADATA_NOT_SET: 0,
  WORKFLOW_NODE_METADATA: 8,
  TASK_NODE_METADATA: 14
};

/**
 * @return {proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getTargetMetadataCase = function() {
  return /** @type {proto.flyteidl.event.NodeExecutionEvent.TargetMetadataCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.event.NodeExecutionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.event.NodeExecutionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.NodeExecutionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.flyteidl.core.NodeExecutionIdentifier.toObject(includeInstance, f),
    producerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phase: jspb.Message.getFieldWithDefault(msg, 3, 0),
    occurredAt: (f = msg.getOccurredAt()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    inputUri: jspb.Message.getFieldWithDefault(msg, 5, ""),
    outputUri: jspb.Message.getFieldWithDefault(msg, 6, ""),
    error: (f = msg.getError()) && proto.flyteidl.core.ExecutionError.toObject(includeInstance, f),
    outputData: (f = msg.getOutputData()) && proto.flyteidl.core.LiteralMap.toObject(includeInstance, f),
    workflowNodeMetadata: (f = msg.getWorkflowNodeMetadata()) && proto.flyteidl.event.WorkflowNodeMetadata.toObject(includeInstance, f),
    taskNodeMetadata: (f = msg.getTaskNodeMetadata()) && proto.flyteidl.event.TaskNodeMetadata.toObject(includeInstance, f),
    parentTaskMetadata: (f = msg.getParentTaskMetadata()) && proto.flyteidl.event.ParentTaskExecutionMetadata.toObject(includeInstance, f),
    parentNodeMetadata: (f = msg.getParentNodeMetadata()) && proto.flyteidl.event.ParentNodeExecutionMetadata.toObject(includeInstance, f),
    retryGroup: jspb.Message.getFieldWithDefault(msg, 11, ""),
    specNodeId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    nodeName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    eventVersion: jspb.Message.getFieldWithDefault(msg, 16, 0),
    isParent: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    isDynamic: jspb.Message.getBooleanFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.event.NodeExecutionEvent}
 */
proto.flyteidl.event.NodeExecutionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.event.NodeExecutionEvent;
  return proto.flyteidl.event.NodeExecutionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.event.NodeExecutionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.event.NodeExecutionEvent}
 */
proto.flyteidl.event.NodeExecutionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.NodeExecutionIdentifier;
      reader.readMessage(value,proto.flyteidl.core.NodeExecutionIdentifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProducerId(value);
      break;
    case 3:
      var value = /** @type {!proto.flyteidl.core.NodeExecution.Phase} */ (reader.readEnum());
      msg.setPhase(value);
      break;
    case 4:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setOccurredAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputUri(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputUri(value);
      break;
    case 7:
      var value = new proto.flyteidl.core.ExecutionError;
      reader.readMessage(value,proto.flyteidl.core.ExecutionError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 15:
      var value = new proto.flyteidl.core.LiteralMap;
      reader.readMessage(value,proto.flyteidl.core.LiteralMap.deserializeBinaryFromReader);
      msg.setOutputData(value);
      break;
    case 8:
      var value = new proto.flyteidl.event.WorkflowNodeMetadata;
      reader.readMessage(value,proto.flyteidl.event.WorkflowNodeMetadata.deserializeBinaryFromReader);
      msg.setWorkflowNodeMetadata(value);
      break;
    case 14:
      var value = new proto.flyteidl.event.TaskNodeMetadata;
      reader.readMessage(value,proto.flyteidl.event.TaskNodeMetadata.deserializeBinaryFromReader);
      msg.setTaskNodeMetadata(value);
      break;
    case 9:
      var value = new proto.flyteidl.event.ParentTaskExecutionMetadata;
      reader.readMessage(value,proto.flyteidl.event.ParentTaskExecutionMetadata.deserializeBinaryFromReader);
      msg.setParentTaskMetadata(value);
      break;
    case 10:
      var value = new proto.flyteidl.event.ParentNodeExecutionMetadata;
      reader.readMessage(value,proto.flyteidl.event.ParentNodeExecutionMetadata.deserializeBinaryFromReader);
      msg.setParentNodeMetadata(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetryGroup(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecNodeId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEventVersion(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsParent(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDynamic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.event.NodeExecutionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.event.NodeExecutionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.event.NodeExecutionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.NodeExecutionIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getProducerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhase();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOccurredAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getInputUri();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.flyteidl.core.ExecutionError.serializeBinaryToWriter
    );
  }
  f = message.getOutputData();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.flyteidl.core.LiteralMap.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.flyteidl.event.WorkflowNodeMetadata.serializeBinaryToWriter
    );
  }
  f = message.getTaskNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.flyteidl.event.TaskNodeMetadata.serializeBinaryToWriter
    );
  }
  f = message.getParentTaskMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.flyteidl.event.ParentTaskExecutionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getParentNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.flyteidl.event.ParentNodeExecutionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getRetryGroup();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSpecNodeId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getEventVersion();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getIsParent();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsDynamic();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional flyteidl.core.NodeExecutionIdentifier id = 1;
 * @return {?proto.flyteidl.core.NodeExecutionIdentifier}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getId = function() {
  return /** @type{?proto.flyteidl.core.NodeExecutionIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.NodeExecutionIdentifier, 1));
};


/**
 * @param {?proto.flyteidl.core.NodeExecutionIdentifier|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string producer_id = 2;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getProducerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setProducerId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional flyteidl.core.NodeExecution.Phase phase = 3;
 * @return {!proto.flyteidl.core.NodeExecution.Phase}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getPhase = function() {
  return /** @type {!proto.flyteidl.core.NodeExecution.Phase} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.flyteidl.core.NodeExecution.Phase} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setPhase = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp occurred_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOccurredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setOccurredAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearOccurredAt = function() {
  return this.setOccurredAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasOccurredAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string input_uri = 5;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getInputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setInputUri = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string output_uri = 6;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOutputUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setOutputUri = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearOutputUri = function() {
  return jspb.Message.setOneofField(this, 6, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasOutputUri = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional flyteidl.core.ExecutionError error = 7;
 * @return {?proto.flyteidl.core.ExecutionError}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getError = function() {
  return /** @type{?proto.flyteidl.core.ExecutionError} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.ExecutionError, 7));
};


/**
 * @param {?proto.flyteidl.core.ExecutionError|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasError = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional flyteidl.core.LiteralMap output_data = 15;
 * @return {?proto.flyteidl.core.LiteralMap}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getOutputData = function() {
  return /** @type{?proto.flyteidl.core.LiteralMap} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.LiteralMap, 15));
};


/**
 * @param {?proto.flyteidl.core.LiteralMap|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setOutputData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearOutputData = function() {
  return this.setOutputData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasOutputData = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional WorkflowNodeMetadata workflow_node_metadata = 8;
 * @return {?proto.flyteidl.event.WorkflowNodeMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getWorkflowNodeMetadata = function() {
  return /** @type{?proto.flyteidl.event.WorkflowNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.WorkflowNodeMetadata, 8));
};


/**
 * @param {?proto.flyteidl.event.WorkflowNodeMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setWorkflowNodeMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearWorkflowNodeMetadata = function() {
  return this.setWorkflowNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasWorkflowNodeMetadata = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TaskNodeMetadata task_node_metadata = 14;
 * @return {?proto.flyteidl.event.TaskNodeMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getTaskNodeMetadata = function() {
  return /** @type{?proto.flyteidl.event.TaskNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.TaskNodeMetadata, 14));
};


/**
 * @param {?proto.flyteidl.event.TaskNodeMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setTaskNodeMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.flyteidl.event.NodeExecutionEvent.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearTaskNodeMetadata = function() {
  return this.setTaskNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasTaskNodeMetadata = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ParentTaskExecutionMetadata parent_task_metadata = 9;
 * @return {?proto.flyteidl.event.ParentTaskExecutionMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getParentTaskMetadata = function() {
  return /** @type{?proto.flyteidl.event.ParentTaskExecutionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.ParentTaskExecutionMetadata, 9));
};


/**
 * @param {?proto.flyteidl.event.ParentTaskExecutionMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setParentTaskMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearParentTaskMetadata = function() {
  return this.setParentTaskMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasParentTaskMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ParentNodeExecutionMetadata parent_node_metadata = 10;
 * @return {?proto.flyteidl.event.ParentNodeExecutionMetadata}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getParentNodeMetadata = function() {
  return /** @type{?proto.flyteidl.event.ParentNodeExecutionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.event.ParentNodeExecutionMetadata, 10));
};


/**
 * @param {?proto.flyteidl.event.ParentNodeExecutionMetadata|undefined} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
*/
proto.flyteidl.event.NodeExecutionEvent.prototype.setParentNodeMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.clearParentNodeMetadata = function() {
  return this.setParentNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.hasParentNodeMetadata = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string retry_group = 11;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getRetryGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setRetryGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string spec_node_id = 12;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getSpecNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setSpecNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string node_name = 13;
 * @return {string}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 event_version = 16;
 * @return {number}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getEventVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setEventVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional bool is_parent = 17;
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getIsParent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setIsParent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool is_dynamic = 18;
 * @return {boolean}
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.getIsDynamic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flyteidl.event.NodeExecutionEvent} returns this
 */
proto.flyteidl.event.NodeExecutionEvent.prototype.setIsDynamic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


