// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/datacatalog/datacatalog.proto

package datacatalog

import (
	context "context"
	fmt "fmt"
	core "github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/core"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// as use-cases come up we can add more operators, ex: gte, like, not eq etc.
type SinglePropertyFilter_ComparisonOperator int32

const (
	SinglePropertyFilter_EQUALS SinglePropertyFilter_ComparisonOperator = 0
)

var SinglePropertyFilter_ComparisonOperator_name = map[int32]string{
	0: "EQUALS",
}

var SinglePropertyFilter_ComparisonOperator_value = map[string]int32{
	"EQUALS": 0,
}

func (x SinglePropertyFilter_ComparisonOperator) String() string {
	return proto.EnumName(SinglePropertyFilter_ComparisonOperator_name, int32(x))
}

func (SinglePropertyFilter_ComparisonOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{30, 0}
}

type PaginationOptions_SortOrder int32

const (
	PaginationOptions_DESCENDING PaginationOptions_SortOrder = 0
	PaginationOptions_ASCENDING  PaginationOptions_SortOrder = 1
)

var PaginationOptions_SortOrder_name = map[int32]string{
	0: "DESCENDING",
	1: "ASCENDING",
}

var PaginationOptions_SortOrder_value = map[string]int32{
	"DESCENDING": 0,
	"ASCENDING":  1,
}

func (x PaginationOptions_SortOrder) String() string {
	return proto.EnumName(PaginationOptions_SortOrder_name, int32(x))
}

func (PaginationOptions_SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{36, 0}
}

type PaginationOptions_SortKey int32

const (
	PaginationOptions_CREATION_TIME PaginationOptions_SortKey = 0
)

var PaginationOptions_SortKey_name = map[int32]string{
	0: "CREATION_TIME",
}

var PaginationOptions_SortKey_value = map[string]int32{
	"CREATION_TIME": 0,
}

func (x PaginationOptions_SortKey) String() string {
	return proto.EnumName(PaginationOptions_SortKey_name, int32(x))
}

func (PaginationOptions_SortKey) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{36, 1}
}

//
// Request message for creating a Dataset.
type CreateDatasetRequest struct {
	Dataset              *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDatasetRequest) Reset()         { *m = CreateDatasetRequest{} }
func (m *CreateDatasetRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDatasetRequest) ProtoMessage()    {}
func (*CreateDatasetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{0}
}

func (m *CreateDatasetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDatasetRequest.Unmarshal(m, b)
}
func (m *CreateDatasetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDatasetRequest.Marshal(b, m, deterministic)
}
func (m *CreateDatasetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatasetRequest.Merge(m, src)
}
func (m *CreateDatasetRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDatasetRequest.Size(m)
}
func (m *CreateDatasetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatasetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatasetRequest proto.InternalMessageInfo

func (m *CreateDatasetRequest) GetDataset() *Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

//
// Response message for creating a Dataset
type CreateDatasetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDatasetResponse) Reset()         { *m = CreateDatasetResponse{} }
func (m *CreateDatasetResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDatasetResponse) ProtoMessage()    {}
func (*CreateDatasetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{1}
}

func (m *CreateDatasetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDatasetResponse.Unmarshal(m, b)
}
func (m *CreateDatasetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDatasetResponse.Marshal(b, m, deterministic)
}
func (m *CreateDatasetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatasetResponse.Merge(m, src)
}
func (m *CreateDatasetResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDatasetResponse.Size(m)
}
func (m *CreateDatasetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatasetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatasetResponse proto.InternalMessageInfo

//
// Request message for retrieving a Dataset. The Dataset is retrieved by it's unique identifier
// which is a combination of several fields.
type GetDatasetRequest struct {
	Dataset              *DatasetID `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetDatasetRequest) Reset()         { *m = GetDatasetRequest{} }
func (m *GetDatasetRequest) String() string { return proto.CompactTextString(m) }
func (*GetDatasetRequest) ProtoMessage()    {}
func (*GetDatasetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{2}
}

func (m *GetDatasetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatasetRequest.Unmarshal(m, b)
}
func (m *GetDatasetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatasetRequest.Marshal(b, m, deterministic)
}
func (m *GetDatasetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatasetRequest.Merge(m, src)
}
func (m *GetDatasetRequest) XXX_Size() int {
	return xxx_messageInfo_GetDatasetRequest.Size(m)
}
func (m *GetDatasetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatasetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatasetRequest proto.InternalMessageInfo

func (m *GetDatasetRequest) GetDataset() *DatasetID {
	if m != nil {
		return m.Dataset
	}
	return nil
}

//
// Response message for retrieving a Dataset. The response will include the metadata for the
// Dataset.
type GetDatasetResponse struct {
	Dataset              *Dataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDatasetResponse) Reset()         { *m = GetDatasetResponse{} }
func (m *GetDatasetResponse) String() string { return proto.CompactTextString(m) }
func (*GetDatasetResponse) ProtoMessage()    {}
func (*GetDatasetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{3}
}

func (m *GetDatasetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDatasetResponse.Unmarshal(m, b)
}
func (m *GetDatasetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDatasetResponse.Marshal(b, m, deterministic)
}
func (m *GetDatasetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDatasetResponse.Merge(m, src)
}
func (m *GetDatasetResponse) XXX_Size() int {
	return xxx_messageInfo_GetDatasetResponse.Size(m)
}
func (m *GetDatasetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDatasetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDatasetResponse proto.InternalMessageInfo

func (m *GetDatasetResponse) GetDataset() *Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

//
// Request message for retrieving an Artifact. Retrieve an artifact based on a query handle that
// can be one of artifact_id or tag. The result returned will include the artifact data and metadata
// associated with the artifact.
type GetArtifactRequest struct {
	Dataset *DatasetID `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	// Types that are valid to be assigned to QueryHandle:
	//	*GetArtifactRequest_ArtifactId
	//	*GetArtifactRequest_TagName
	QueryHandle          isGetArtifactRequest_QueryHandle `protobuf_oneof:"query_handle"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GetArtifactRequest) Reset()         { *m = GetArtifactRequest{} }
func (m *GetArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtifactRequest) ProtoMessage()    {}
func (*GetArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{4}
}

func (m *GetArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactRequest.Unmarshal(m, b)
}
func (m *GetArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactRequest.Marshal(b, m, deterministic)
}
func (m *GetArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactRequest.Merge(m, src)
}
func (m *GetArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_GetArtifactRequest.Size(m)
}
func (m *GetArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactRequest proto.InternalMessageInfo

func (m *GetArtifactRequest) GetDataset() *DatasetID {
	if m != nil {
		return m.Dataset
	}
	return nil
}

type isGetArtifactRequest_QueryHandle interface {
	isGetArtifactRequest_QueryHandle()
}

type GetArtifactRequest_ArtifactId struct {
	ArtifactId string `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

type GetArtifactRequest_TagName struct {
	TagName string `protobuf:"bytes,3,opt,name=tag_name,json=tagName,proto3,oneof"`
}

func (*GetArtifactRequest_ArtifactId) isGetArtifactRequest_QueryHandle() {}

func (*GetArtifactRequest_TagName) isGetArtifactRequest_QueryHandle() {}

func (m *GetArtifactRequest) GetQueryHandle() isGetArtifactRequest_QueryHandle {
	if m != nil {
		return m.QueryHandle
	}
	return nil
}

func (m *GetArtifactRequest) GetArtifactId() string {
	if x, ok := m.GetQueryHandle().(*GetArtifactRequest_ArtifactId); ok {
		return x.ArtifactId
	}
	return ""
}

func (m *GetArtifactRequest) GetTagName() string {
	if x, ok := m.GetQueryHandle().(*GetArtifactRequest_TagName); ok {
		return x.TagName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetArtifactRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetArtifactRequest_ArtifactId)(nil),
		(*GetArtifactRequest_TagName)(nil),
	}
}

//
// Response message for retrieving an Artifact. The result returned will include the artifact data
// and metadata associated with the artifact.
type GetArtifactResponse struct {
	Artifact             *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetArtifactResponse) Reset()         { *m = GetArtifactResponse{} }
func (m *GetArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*GetArtifactResponse) ProtoMessage()    {}
func (*GetArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{5}
}

func (m *GetArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactResponse.Unmarshal(m, b)
}
func (m *GetArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactResponse.Marshal(b, m, deterministic)
}
func (m *GetArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactResponse.Merge(m, src)
}
func (m *GetArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_GetArtifactResponse.Size(m)
}
func (m *GetArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactResponse proto.InternalMessageInfo

func (m *GetArtifactResponse) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

//
// Request message for creating an Artifact and its associated artifact Data.
type CreateArtifactRequest struct {
	Artifact             *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateArtifactRequest) Reset()         { *m = CreateArtifactRequest{} }
func (m *CreateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactRequest) ProtoMessage()    {}
func (*CreateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{6}
}

func (m *CreateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactRequest.Unmarshal(m, b)
}
func (m *CreateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *CreateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactRequest.Merge(m, src)
}
func (m *CreateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactRequest.Size(m)
}
func (m *CreateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactRequest proto.InternalMessageInfo

func (m *CreateArtifactRequest) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

//
// Response message for creating an Artifact.
type CreateArtifactResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateArtifactResponse) Reset()         { *m = CreateArtifactResponse{} }
func (m *CreateArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactResponse) ProtoMessage()    {}
func (*CreateArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{7}
}

func (m *CreateArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactResponse.Unmarshal(m, b)
}
func (m *CreateArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactResponse.Marshal(b, m, deterministic)
}
func (m *CreateArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactResponse.Merge(m, src)
}
func (m *CreateArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactResponse.Size(m)
}
func (m *CreateArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactResponse proto.InternalMessageInfo

//
// Request message for tagging an Artifact.
type AddTagRequest struct {
	Tag                  *Tag     `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagRequest) Reset()         { *m = AddTagRequest{} }
func (m *AddTagRequest) String() string { return proto.CompactTextString(m) }
func (*AddTagRequest) ProtoMessage()    {}
func (*AddTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{8}
}

func (m *AddTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagRequest.Unmarshal(m, b)
}
func (m *AddTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagRequest.Marshal(b, m, deterministic)
}
func (m *AddTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagRequest.Merge(m, src)
}
func (m *AddTagRequest) XXX_Size() int {
	return xxx_messageInfo_AddTagRequest.Size(m)
}
func (m *AddTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagRequest proto.InternalMessageInfo

func (m *AddTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

//
// Response message for tagging an Artifact.
type AddTagResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagResponse) Reset()         { *m = AddTagResponse{} }
func (m *AddTagResponse) String() string { return proto.CompactTextString(m) }
func (*AddTagResponse) ProtoMessage()    {}
func (*AddTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{9}
}

func (m *AddTagResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagResponse.Unmarshal(m, b)
}
func (m *AddTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagResponse.Marshal(b, m, deterministic)
}
func (m *AddTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagResponse.Merge(m, src)
}
func (m *AddTagResponse) XXX_Size() int {
	return xxx_messageInfo_AddTagResponse.Size(m)
}
func (m *AddTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagResponse proto.InternalMessageInfo

// List the artifacts that belong to the Dataset, optionally filtered using filtered expression.
type ListArtifactsRequest struct {
	// Use a datasetID for which you want to retrieve the artifacts
	Dataset *DatasetID `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	// Apply the filter expression to this query
	Filter *FilterExpression `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// Pagination options to get a page of artifacts
	Pagination           *PaginationOptions `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListArtifactsRequest) Reset()         { *m = ListArtifactsRequest{} }
func (m *ListArtifactsRequest) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsRequest) ProtoMessage()    {}
func (*ListArtifactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{10}
}

func (m *ListArtifactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsRequest.Unmarshal(m, b)
}
func (m *ListArtifactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsRequest.Marshal(b, m, deterministic)
}
func (m *ListArtifactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsRequest.Merge(m, src)
}
func (m *ListArtifactsRequest) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsRequest.Size(m)
}
func (m *ListArtifactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsRequest proto.InternalMessageInfo

func (m *ListArtifactsRequest) GetDataset() *DatasetID {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (m *ListArtifactsRequest) GetFilter() *FilterExpression {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListArtifactsRequest) GetPagination() *PaginationOptions {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// Response to list artifacts
type ListArtifactsResponse struct {
	// The list of artifacts
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// Token to use to request the next page, pass this into the next requests PaginationOptions
	NextToken            string   `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArtifactsResponse) Reset()         { *m = ListArtifactsResponse{} }
func (m *ListArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsResponse) ProtoMessage()    {}
func (*ListArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{11}
}

func (m *ListArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsResponse.Unmarshal(m, b)
}
func (m *ListArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *ListArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsResponse.Merge(m, src)
}
func (m *ListArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsResponse.Size(m)
}
func (m *ListArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsResponse proto.InternalMessageInfo

func (m *ListArtifactsResponse) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *ListArtifactsResponse) GetNextToken() string {
	if m != nil {
		return m.NextToken
	}
	return ""
}

// List the datasets for the given query
type ListDatasetsRequest struct {
	// Apply the filter expression to this query
	Filter *FilterExpression `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Pagination options to get a page of datasets
	Pagination           *PaginationOptions `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListDatasetsRequest) Reset()         { *m = ListDatasetsRequest{} }
func (m *ListDatasetsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDatasetsRequest) ProtoMessage()    {}
func (*ListDatasetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{12}
}

func (m *ListDatasetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDatasetsRequest.Unmarshal(m, b)
}
func (m *ListDatasetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDatasetsRequest.Marshal(b, m, deterministic)
}
func (m *ListDatasetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDatasetsRequest.Merge(m, src)
}
func (m *ListDatasetsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDatasetsRequest.Size(m)
}
func (m *ListDatasetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDatasetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDatasetsRequest proto.InternalMessageInfo

func (m *ListDatasetsRequest) GetFilter() *FilterExpression {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListDatasetsRequest) GetPagination() *PaginationOptions {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// List the datasets response with token for next pagination
type ListDatasetsResponse struct {
	// The list of datasets
	Datasets []*Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
	// Token to use to request the next page, pass this into the next requests PaginationOptions
	NextToken            string   `protobuf:"bytes,2,opt,name=next_token,json=nextToken,proto3" json:"next_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDatasetsResponse) Reset()         { *m = ListDatasetsResponse{} }
func (m *ListDatasetsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDatasetsResponse) ProtoMessage()    {}
func (*ListDatasetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{13}
}

func (m *ListDatasetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDatasetsResponse.Unmarshal(m, b)
}
func (m *ListDatasetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDatasetsResponse.Marshal(b, m, deterministic)
}
func (m *ListDatasetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDatasetsResponse.Merge(m, src)
}
func (m *ListDatasetsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDatasetsResponse.Size(m)
}
func (m *ListDatasetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDatasetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDatasetsResponse proto.InternalMessageInfo

func (m *ListDatasetsResponse) GetDatasets() []*Dataset {
	if m != nil {
		return m.Datasets
	}
	return nil
}

func (m *ListDatasetsResponse) GetNextToken() string {
	if m != nil {
		return m.NextToken
	}
	return ""
}

//
// Request message for updating an Artifact and overwriting its associated ArtifactData.
type UpdateArtifactRequest struct {
	// ID of dataset the artifact is associated with
	Dataset *DatasetID `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	// Either ID of artifact or name of tag to retrieve existing artifact from
	//
	// Types that are valid to be assigned to QueryHandle:
	//	*UpdateArtifactRequest_ArtifactId
	//	*UpdateArtifactRequest_TagName
	QueryHandle isUpdateArtifactRequest_QueryHandle `protobuf_oneof:"query_handle"`
	// List of data to overwrite stored artifact data with. Must contain ALL data for updated Artifact as any missing
	// ArtifactData entries will be removed from the underlying blob storage and database.
	Data                 []*ArtifactData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateArtifactRequest) Reset()         { *m = UpdateArtifactRequest{} }
func (m *UpdateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateArtifactRequest) ProtoMessage()    {}
func (*UpdateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{14}
}

func (m *UpdateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArtifactRequest.Unmarshal(m, b)
}
func (m *UpdateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *UpdateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArtifactRequest.Merge(m, src)
}
func (m *UpdateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateArtifactRequest.Size(m)
}
func (m *UpdateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArtifactRequest proto.InternalMessageInfo

func (m *UpdateArtifactRequest) GetDataset() *DatasetID {
	if m != nil {
		return m.Dataset
	}
	return nil
}

type isUpdateArtifactRequest_QueryHandle interface {
	isUpdateArtifactRequest_QueryHandle()
}

type UpdateArtifactRequest_ArtifactId struct {
	ArtifactId string `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

type UpdateArtifactRequest_TagName struct {
	TagName string `protobuf:"bytes,3,opt,name=tag_name,json=tagName,proto3,oneof"`
}

func (*UpdateArtifactRequest_ArtifactId) isUpdateArtifactRequest_QueryHandle() {}

func (*UpdateArtifactRequest_TagName) isUpdateArtifactRequest_QueryHandle() {}

func (m *UpdateArtifactRequest) GetQueryHandle() isUpdateArtifactRequest_QueryHandle {
	if m != nil {
		return m.QueryHandle
	}
	return nil
}

func (m *UpdateArtifactRequest) GetArtifactId() string {
	if x, ok := m.GetQueryHandle().(*UpdateArtifactRequest_ArtifactId); ok {
		return x.ArtifactId
	}
	return ""
}

func (m *UpdateArtifactRequest) GetTagName() string {
	if x, ok := m.GetQueryHandle().(*UpdateArtifactRequest_TagName); ok {
		return x.TagName
	}
	return ""
}

func (m *UpdateArtifactRequest) GetData() []*ArtifactData {
	if m != nil {
		return m.Data
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdateArtifactRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdateArtifactRequest_ArtifactId)(nil),
		(*UpdateArtifactRequest_TagName)(nil),
	}
}

//
// Response message for updating an Artifact.
type UpdateArtifactResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateArtifactResponse) Reset()         { *m = UpdateArtifactResponse{} }
func (m *UpdateArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateArtifactResponse) ProtoMessage()    {}
func (*UpdateArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{15}
}

func (m *UpdateArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArtifactResponse.Unmarshal(m, b)
}
func (m *UpdateArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArtifactResponse.Marshal(b, m, deterministic)
}
func (m *UpdateArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArtifactResponse.Merge(m, src)
}
func (m *UpdateArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateArtifactResponse.Size(m)
}
func (m *UpdateArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArtifactResponse proto.InternalMessageInfo

//
// ReservationID message that is composed of several string fields.
type ReservationID struct {
	DatasetId            *DatasetID `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	TagName              string     `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReservationID) Reset()         { *m = ReservationID{} }
func (m *ReservationID) String() string { return proto.CompactTextString(m) }
func (*ReservationID) ProtoMessage()    {}
func (*ReservationID) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{16}
}

func (m *ReservationID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReservationID.Unmarshal(m, b)
}
func (m *ReservationID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReservationID.Marshal(b, m, deterministic)
}
func (m *ReservationID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReservationID.Merge(m, src)
}
func (m *ReservationID) XXX_Size() int {
	return xxx_messageInfo_ReservationID.Size(m)
}
func (m *ReservationID) XXX_DiscardUnknown() {
	xxx_messageInfo_ReservationID.DiscardUnknown(m)
}

var xxx_messageInfo_ReservationID proto.InternalMessageInfo

func (m *ReservationID) GetDatasetId() *DatasetID {
	if m != nil {
		return m.DatasetId
	}
	return nil
}

func (m *ReservationID) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

// Try to acquire or extend an artifact reservation. If an active reservation exists, retreive that instance.
type GetOrExtendReservationRequest struct {
	ReservationId        *ReservationID     `protobuf:"bytes,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	OwnerId              string             `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	HeartbeatInterval    *duration.Duration `protobuf:"bytes,3,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetOrExtendReservationRequest) Reset()         { *m = GetOrExtendReservationRequest{} }
func (m *GetOrExtendReservationRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrExtendReservationRequest) ProtoMessage()    {}
func (*GetOrExtendReservationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{17}
}

func (m *GetOrExtendReservationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrExtendReservationRequest.Unmarshal(m, b)
}
func (m *GetOrExtendReservationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrExtendReservationRequest.Marshal(b, m, deterministic)
}
func (m *GetOrExtendReservationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrExtendReservationRequest.Merge(m, src)
}
func (m *GetOrExtendReservationRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrExtendReservationRequest.Size(m)
}
func (m *GetOrExtendReservationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrExtendReservationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrExtendReservationRequest proto.InternalMessageInfo

func (m *GetOrExtendReservationRequest) GetReservationId() *ReservationID {
	if m != nil {
		return m.ReservationId
	}
	return nil
}

func (m *GetOrExtendReservationRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *GetOrExtendReservationRequest) GetHeartbeatInterval() *duration.Duration {
	if m != nil {
		return m.HeartbeatInterval
	}
	return nil
}

// A reservation including owner, heartbeat interval, expiration timestamp, and various metadata.
type Reservation struct {
	ReservationId        *ReservationID       `protobuf:"bytes,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	OwnerId              string               `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	HeartbeatInterval    *duration.Duration   `protobuf:"bytes,3,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Metadata             *Metadata            `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Reservation) Reset()         { *m = Reservation{} }
func (m *Reservation) String() string { return proto.CompactTextString(m) }
func (*Reservation) ProtoMessage()    {}
func (*Reservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{18}
}

func (m *Reservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reservation.Unmarshal(m, b)
}
func (m *Reservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reservation.Marshal(b, m, deterministic)
}
func (m *Reservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reservation.Merge(m, src)
}
func (m *Reservation) XXX_Size() int {
	return xxx_messageInfo_Reservation.Size(m)
}
func (m *Reservation) XXX_DiscardUnknown() {
	xxx_messageInfo_Reservation.DiscardUnknown(m)
}

var xxx_messageInfo_Reservation proto.InternalMessageInfo

func (m *Reservation) GetReservationId() *ReservationID {
	if m != nil {
		return m.ReservationId
	}
	return nil
}

func (m *Reservation) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Reservation) GetHeartbeatInterval() *duration.Duration {
	if m != nil {
		return m.HeartbeatInterval
	}
	return nil
}

func (m *Reservation) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *Reservation) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// Response including either a newly minted reservation or the existing reservation
type GetOrExtendReservationResponse struct {
	Reservation          *Reservation `protobuf:"bytes,1,opt,name=reservation,proto3" json:"reservation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetOrExtendReservationResponse) Reset()         { *m = GetOrExtendReservationResponse{} }
func (m *GetOrExtendReservationResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrExtendReservationResponse) ProtoMessage()    {}
func (*GetOrExtendReservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{19}
}

func (m *GetOrExtendReservationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrExtendReservationResponse.Unmarshal(m, b)
}
func (m *GetOrExtendReservationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrExtendReservationResponse.Marshal(b, m, deterministic)
}
func (m *GetOrExtendReservationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrExtendReservationResponse.Merge(m, src)
}
func (m *GetOrExtendReservationResponse) XXX_Size() int {
	return xxx_messageInfo_GetOrExtendReservationResponse.Size(m)
}
func (m *GetOrExtendReservationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrExtendReservationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrExtendReservationResponse proto.InternalMessageInfo

func (m *GetOrExtendReservationResponse) GetReservation() *Reservation {
	if m != nil {
		return m.Reservation
	}
	return nil
}

// Request to release reservation
type ReleaseReservationRequest struct {
	ReservationId        *ReservationID `protobuf:"bytes,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	OwnerId              string         `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReleaseReservationRequest) Reset()         { *m = ReleaseReservationRequest{} }
func (m *ReleaseReservationRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseReservationRequest) ProtoMessage()    {}
func (*ReleaseReservationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{20}
}

func (m *ReleaseReservationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseReservationRequest.Unmarshal(m, b)
}
func (m *ReleaseReservationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseReservationRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseReservationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseReservationRequest.Merge(m, src)
}
func (m *ReleaseReservationRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseReservationRequest.Size(m)
}
func (m *ReleaseReservationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseReservationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseReservationRequest proto.InternalMessageInfo

func (m *ReleaseReservationRequest) GetReservationId() *ReservationID {
	if m != nil {
		return m.ReservationId
	}
	return nil
}

func (m *ReleaseReservationRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

// Response to release reservation
type ReleaseReservationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseReservationResponse) Reset()         { *m = ReleaseReservationResponse{} }
func (m *ReleaseReservationResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseReservationResponse) ProtoMessage()    {}
func (*ReleaseReservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{21}
}

func (m *ReleaseReservationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseReservationResponse.Unmarshal(m, b)
}
func (m *ReleaseReservationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseReservationResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseReservationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseReservationResponse.Merge(m, src)
}
func (m *ReleaseReservationResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseReservationResponse.Size(m)
}
func (m *ReleaseReservationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseReservationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseReservationResponse proto.InternalMessageInfo

//
// Dataset message. It is uniquely identified by DatasetID.
type Dataset struct {
	Id                   *DatasetID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata             *Metadata  `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	PartitionKeys        []string   `protobuf:"bytes,3,rep,name=partitionKeys,proto3" json:"partitionKeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Dataset) Reset()         { *m = Dataset{} }
func (m *Dataset) String() string { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()    {}
func (*Dataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{22}
}

func (m *Dataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataset.Unmarshal(m, b)
}
func (m *Dataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataset.Marshal(b, m, deterministic)
}
func (m *Dataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataset.Merge(m, src)
}
func (m *Dataset) XXX_Size() int {
	return xxx_messageInfo_Dataset.Size(m)
}
func (m *Dataset) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataset.DiscardUnknown(m)
}

var xxx_messageInfo_Dataset proto.InternalMessageInfo

func (m *Dataset) GetId() *DatasetID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Dataset) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Dataset) GetPartitionKeys() []string {
	if m != nil {
		return m.PartitionKeys
	}
	return nil
}

//
// An artifact could have multiple partitions and each partition can have an arbitrary string key/value pair
type Partition struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{23}
}

func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (m *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(m, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Partition) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

//
// DatasetID message that is composed of several string fields.
type DatasetID struct {
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Domain               string   `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	UUID                 string   `protobuf:"bytes,5,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatasetID) Reset()         { *m = DatasetID{} }
func (m *DatasetID) String() string { return proto.CompactTextString(m) }
func (*DatasetID) ProtoMessage()    {}
func (*DatasetID) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{24}
}

func (m *DatasetID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetID.Unmarshal(m, b)
}
func (m *DatasetID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetID.Marshal(b, m, deterministic)
}
func (m *DatasetID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetID.Merge(m, src)
}
func (m *DatasetID) XXX_Size() int {
	return xxx_messageInfo_DatasetID.Size(m)
}
func (m *DatasetID) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetID.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetID proto.InternalMessageInfo

func (m *DatasetID) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *DatasetID) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DatasetID) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DatasetID) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DatasetID) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

//
// Artifact message. It is composed of several string fields.
type Artifact struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Dataset              *DatasetID           `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Data                 []*ArtifactData      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Metadata             *Metadata            `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Partitions           []*Partition         `protobuf:"bytes,5,rep,name=partitions,proto3" json:"partitions,omitempty"`
	Tags                 []*Tag               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{25}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Artifact) GetDataset() *DatasetID {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (m *Artifact) GetData() []*ArtifactData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Artifact) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Artifact) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func (m *Artifact) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Artifact) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

//
// ArtifactData that belongs to an artifact
type ArtifactData struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                *core.Literal `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ArtifactData) Reset()         { *m = ArtifactData{} }
func (m *ArtifactData) String() string { return proto.CompactTextString(m) }
func (*ArtifactData) ProtoMessage()    {}
func (*ArtifactData) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{26}
}

func (m *ArtifactData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactData.Unmarshal(m, b)
}
func (m *ArtifactData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactData.Marshal(b, m, deterministic)
}
func (m *ArtifactData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactData.Merge(m, src)
}
func (m *ArtifactData) XXX_Size() int {
	return xxx_messageInfo_ArtifactData.Size(m)
}
func (m *ArtifactData) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactData.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactData proto.InternalMessageInfo

func (m *ArtifactData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ArtifactData) GetValue() *core.Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

//
// Tag message that is unique to a Dataset. It is associated to a single artifact and
// can be retrieved by name later.
type Tag struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ArtifactId           string     `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	Dataset              *DatasetID `protobuf:"bytes,3,opt,name=dataset,proto3" json:"dataset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{27}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *Tag) GetDataset() *DatasetID {
	if m != nil {
		return m.Dataset
	}
	return nil
}

//
// Metadata representation for artifacts and datasets
type Metadata struct {
	KeyMap               map[string]string `protobuf:"bytes,1,rep,name=key_map,json=keyMap,proto3" json:"key_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{28}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetKeyMap() map[string]string {
	if m != nil {
		return m.KeyMap
	}
	return nil
}

// Filter expression that is composed of a combination of single filters
type FilterExpression struct {
	Filters              []*SinglePropertyFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FilterExpression) Reset()         { *m = FilterExpression{} }
func (m *FilterExpression) String() string { return proto.CompactTextString(m) }
func (*FilterExpression) ProtoMessage()    {}
func (*FilterExpression) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{29}
}

func (m *FilterExpression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterExpression.Unmarshal(m, b)
}
func (m *FilterExpression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterExpression.Marshal(b, m, deterministic)
}
func (m *FilterExpression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterExpression.Merge(m, src)
}
func (m *FilterExpression) XXX_Size() int {
	return xxx_messageInfo_FilterExpression.Size(m)
}
func (m *FilterExpression) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterExpression.DiscardUnknown(m)
}

var xxx_messageInfo_FilterExpression proto.InternalMessageInfo

func (m *FilterExpression) GetFilters() []*SinglePropertyFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// A single property to filter on.
type SinglePropertyFilter struct {
	// Types that are valid to be assigned to PropertyFilter:
	//	*SinglePropertyFilter_TagFilter
	//	*SinglePropertyFilter_PartitionFilter
	//	*SinglePropertyFilter_ArtifactFilter
	//	*SinglePropertyFilter_DatasetFilter
	PropertyFilter       isSinglePropertyFilter_PropertyFilter   `protobuf_oneof:"property_filter"`
	Operator             SinglePropertyFilter_ComparisonOperator `protobuf:"varint,10,opt,name=operator,proto3,enum=datacatalog.SinglePropertyFilter_ComparisonOperator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *SinglePropertyFilter) Reset()         { *m = SinglePropertyFilter{} }
func (m *SinglePropertyFilter) String() string { return proto.CompactTextString(m) }
func (*SinglePropertyFilter) ProtoMessage()    {}
func (*SinglePropertyFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{30}
}

func (m *SinglePropertyFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinglePropertyFilter.Unmarshal(m, b)
}
func (m *SinglePropertyFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinglePropertyFilter.Marshal(b, m, deterministic)
}
func (m *SinglePropertyFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinglePropertyFilter.Merge(m, src)
}
func (m *SinglePropertyFilter) XXX_Size() int {
	return xxx_messageInfo_SinglePropertyFilter.Size(m)
}
func (m *SinglePropertyFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_SinglePropertyFilter.DiscardUnknown(m)
}

var xxx_messageInfo_SinglePropertyFilter proto.InternalMessageInfo

type isSinglePropertyFilter_PropertyFilter interface {
	isSinglePropertyFilter_PropertyFilter()
}

type SinglePropertyFilter_TagFilter struct {
	TagFilter *TagPropertyFilter `protobuf:"bytes,1,opt,name=tag_filter,json=tagFilter,proto3,oneof"`
}

type SinglePropertyFilter_PartitionFilter struct {
	PartitionFilter *PartitionPropertyFilter `protobuf:"bytes,2,opt,name=partition_filter,json=partitionFilter,proto3,oneof"`
}

type SinglePropertyFilter_ArtifactFilter struct {
	ArtifactFilter *ArtifactPropertyFilter `protobuf:"bytes,3,opt,name=artifact_filter,json=artifactFilter,proto3,oneof"`
}

type SinglePropertyFilter_DatasetFilter struct {
	DatasetFilter *DatasetPropertyFilter `protobuf:"bytes,4,opt,name=dataset_filter,json=datasetFilter,proto3,oneof"`
}

func (*SinglePropertyFilter_TagFilter) isSinglePropertyFilter_PropertyFilter() {}

func (*SinglePropertyFilter_PartitionFilter) isSinglePropertyFilter_PropertyFilter() {}

func (*SinglePropertyFilter_ArtifactFilter) isSinglePropertyFilter_PropertyFilter() {}

func (*SinglePropertyFilter_DatasetFilter) isSinglePropertyFilter_PropertyFilter() {}

func (m *SinglePropertyFilter) GetPropertyFilter() isSinglePropertyFilter_PropertyFilter {
	if m != nil {
		return m.PropertyFilter
	}
	return nil
}

func (m *SinglePropertyFilter) GetTagFilter() *TagPropertyFilter {
	if x, ok := m.GetPropertyFilter().(*SinglePropertyFilter_TagFilter); ok {
		return x.TagFilter
	}
	return nil
}

func (m *SinglePropertyFilter) GetPartitionFilter() *PartitionPropertyFilter {
	if x, ok := m.GetPropertyFilter().(*SinglePropertyFilter_PartitionFilter); ok {
		return x.PartitionFilter
	}
	return nil
}

func (m *SinglePropertyFilter) GetArtifactFilter() *ArtifactPropertyFilter {
	if x, ok := m.GetPropertyFilter().(*SinglePropertyFilter_ArtifactFilter); ok {
		return x.ArtifactFilter
	}
	return nil
}

func (m *SinglePropertyFilter) GetDatasetFilter() *DatasetPropertyFilter {
	if x, ok := m.GetPropertyFilter().(*SinglePropertyFilter_DatasetFilter); ok {
		return x.DatasetFilter
	}
	return nil
}

func (m *SinglePropertyFilter) GetOperator() SinglePropertyFilter_ComparisonOperator {
	if m != nil {
		return m.Operator
	}
	return SinglePropertyFilter_EQUALS
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SinglePropertyFilter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SinglePropertyFilter_TagFilter)(nil),
		(*SinglePropertyFilter_PartitionFilter)(nil),
		(*SinglePropertyFilter_ArtifactFilter)(nil),
		(*SinglePropertyFilter_DatasetFilter)(nil),
	}
}

// Artifact properties we can filter by
type ArtifactPropertyFilter struct {
	// oneof because we can add more properties in the future
	//
	// Types that are valid to be assigned to Property:
	//	*ArtifactPropertyFilter_ArtifactId
	Property             isArtifactPropertyFilter_Property `protobuf_oneof:"property"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ArtifactPropertyFilter) Reset()         { *m = ArtifactPropertyFilter{} }
func (m *ArtifactPropertyFilter) String() string { return proto.CompactTextString(m) }
func (*ArtifactPropertyFilter) ProtoMessage()    {}
func (*ArtifactPropertyFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{31}
}

func (m *ArtifactPropertyFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactPropertyFilter.Unmarshal(m, b)
}
func (m *ArtifactPropertyFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactPropertyFilter.Marshal(b, m, deterministic)
}
func (m *ArtifactPropertyFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactPropertyFilter.Merge(m, src)
}
func (m *ArtifactPropertyFilter) XXX_Size() int {
	return xxx_messageInfo_ArtifactPropertyFilter.Size(m)
}
func (m *ArtifactPropertyFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactPropertyFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactPropertyFilter proto.InternalMessageInfo

type isArtifactPropertyFilter_Property interface {
	isArtifactPropertyFilter_Property()
}

type ArtifactPropertyFilter_ArtifactId struct {
	ArtifactId string `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

func (*ArtifactPropertyFilter_ArtifactId) isArtifactPropertyFilter_Property() {}

func (m *ArtifactPropertyFilter) GetProperty() isArtifactPropertyFilter_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *ArtifactPropertyFilter) GetArtifactId() string {
	if x, ok := m.GetProperty().(*ArtifactPropertyFilter_ArtifactId); ok {
		return x.ArtifactId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ArtifactPropertyFilter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ArtifactPropertyFilter_ArtifactId)(nil),
	}
}

// Tag properties we can filter by
type TagPropertyFilter struct {
	// Types that are valid to be assigned to Property:
	//	*TagPropertyFilter_TagName
	Property             isTagPropertyFilter_Property `protobuf_oneof:"property"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TagPropertyFilter) Reset()         { *m = TagPropertyFilter{} }
func (m *TagPropertyFilter) String() string { return proto.CompactTextString(m) }
func (*TagPropertyFilter) ProtoMessage()    {}
func (*TagPropertyFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{32}
}

func (m *TagPropertyFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagPropertyFilter.Unmarshal(m, b)
}
func (m *TagPropertyFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagPropertyFilter.Marshal(b, m, deterministic)
}
func (m *TagPropertyFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagPropertyFilter.Merge(m, src)
}
func (m *TagPropertyFilter) XXX_Size() int {
	return xxx_messageInfo_TagPropertyFilter.Size(m)
}
func (m *TagPropertyFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TagPropertyFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TagPropertyFilter proto.InternalMessageInfo

type isTagPropertyFilter_Property interface {
	isTagPropertyFilter_Property()
}

type TagPropertyFilter_TagName struct {
	TagName string `protobuf:"bytes,1,opt,name=tag_name,json=tagName,proto3,oneof"`
}

func (*TagPropertyFilter_TagName) isTagPropertyFilter_Property() {}

func (m *TagPropertyFilter) GetProperty() isTagPropertyFilter_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *TagPropertyFilter) GetTagName() string {
	if x, ok := m.GetProperty().(*TagPropertyFilter_TagName); ok {
		return x.TagName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TagPropertyFilter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TagPropertyFilter_TagName)(nil),
	}
}

// Partition properties we can filter by
type PartitionPropertyFilter struct {
	// Types that are valid to be assigned to Property:
	//	*PartitionPropertyFilter_KeyVal
	Property             isPartitionPropertyFilter_Property `protobuf_oneof:"property"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *PartitionPropertyFilter) Reset()         { *m = PartitionPropertyFilter{} }
func (m *PartitionPropertyFilter) String() string { return proto.CompactTextString(m) }
func (*PartitionPropertyFilter) ProtoMessage()    {}
func (*PartitionPropertyFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{33}
}

func (m *PartitionPropertyFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionPropertyFilter.Unmarshal(m, b)
}
func (m *PartitionPropertyFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionPropertyFilter.Marshal(b, m, deterministic)
}
func (m *PartitionPropertyFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionPropertyFilter.Merge(m, src)
}
func (m *PartitionPropertyFilter) XXX_Size() int {
	return xxx_messageInfo_PartitionPropertyFilter.Size(m)
}
func (m *PartitionPropertyFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionPropertyFilter.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionPropertyFilter proto.InternalMessageInfo

type isPartitionPropertyFilter_Property interface {
	isPartitionPropertyFilter_Property()
}

type PartitionPropertyFilter_KeyVal struct {
	KeyVal *KeyValuePair `protobuf:"bytes,1,opt,name=key_val,json=keyVal,proto3,oneof"`
}

func (*PartitionPropertyFilter_KeyVal) isPartitionPropertyFilter_Property() {}

func (m *PartitionPropertyFilter) GetProperty() isPartitionPropertyFilter_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *PartitionPropertyFilter) GetKeyVal() *KeyValuePair {
	if x, ok := m.GetProperty().(*PartitionPropertyFilter_KeyVal); ok {
		return x.KeyVal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PartitionPropertyFilter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PartitionPropertyFilter_KeyVal)(nil),
	}
}

type KeyValuePair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{34}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Dataset properties we can filter by
type DatasetPropertyFilter struct {
	// Types that are valid to be assigned to Property:
	//	*DatasetPropertyFilter_Project
	//	*DatasetPropertyFilter_Name
	//	*DatasetPropertyFilter_Domain
	//	*DatasetPropertyFilter_Version
	Property             isDatasetPropertyFilter_Property `protobuf_oneof:"property"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *DatasetPropertyFilter) Reset()         { *m = DatasetPropertyFilter{} }
func (m *DatasetPropertyFilter) String() string { return proto.CompactTextString(m) }
func (*DatasetPropertyFilter) ProtoMessage()    {}
func (*DatasetPropertyFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{35}
}

func (m *DatasetPropertyFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetPropertyFilter.Unmarshal(m, b)
}
func (m *DatasetPropertyFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetPropertyFilter.Marshal(b, m, deterministic)
}
func (m *DatasetPropertyFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetPropertyFilter.Merge(m, src)
}
func (m *DatasetPropertyFilter) XXX_Size() int {
	return xxx_messageInfo_DatasetPropertyFilter.Size(m)
}
func (m *DatasetPropertyFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetPropertyFilter.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetPropertyFilter proto.InternalMessageInfo

type isDatasetPropertyFilter_Property interface {
	isDatasetPropertyFilter_Property()
}

type DatasetPropertyFilter_Project struct {
	Project string `protobuf:"bytes,1,opt,name=project,proto3,oneof"`
}

type DatasetPropertyFilter_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

type DatasetPropertyFilter_Domain struct {
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3,oneof"`
}

type DatasetPropertyFilter_Version struct {
	Version string `protobuf:"bytes,4,opt,name=version,proto3,oneof"`
}

func (*DatasetPropertyFilter_Project) isDatasetPropertyFilter_Property() {}

func (*DatasetPropertyFilter_Name) isDatasetPropertyFilter_Property() {}

func (*DatasetPropertyFilter_Domain) isDatasetPropertyFilter_Property() {}

func (*DatasetPropertyFilter_Version) isDatasetPropertyFilter_Property() {}

func (m *DatasetPropertyFilter) GetProperty() isDatasetPropertyFilter_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *DatasetPropertyFilter) GetProject() string {
	if x, ok := m.GetProperty().(*DatasetPropertyFilter_Project); ok {
		return x.Project
	}
	return ""
}

func (m *DatasetPropertyFilter) GetName() string {
	if x, ok := m.GetProperty().(*DatasetPropertyFilter_Name); ok {
		return x.Name
	}
	return ""
}

func (m *DatasetPropertyFilter) GetDomain() string {
	if x, ok := m.GetProperty().(*DatasetPropertyFilter_Domain); ok {
		return x.Domain
	}
	return ""
}

func (m *DatasetPropertyFilter) GetVersion() string {
	if x, ok := m.GetProperty().(*DatasetPropertyFilter_Version); ok {
		return x.Version
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DatasetPropertyFilter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DatasetPropertyFilter_Project)(nil),
		(*DatasetPropertyFilter_Name)(nil),
		(*DatasetPropertyFilter_Domain)(nil),
		(*DatasetPropertyFilter_Version)(nil),
	}
}

// Pagination options for making list requests
type PaginationOptions struct {
	// the max number of results to return
	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// the token to pass to fetch the next page
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// the property that we want to sort the results by
	SortKey PaginationOptions_SortKey `protobuf:"varint,3,opt,name=sortKey,proto3,enum=datacatalog.PaginationOptions_SortKey" json:"sortKey,omitempty"`
	// the sort order of the results
	SortOrder            PaginationOptions_SortOrder `protobuf:"varint,4,opt,name=sortOrder,proto3,enum=datacatalog.PaginationOptions_SortOrder" json:"sortOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *PaginationOptions) Reset()         { *m = PaginationOptions{} }
func (m *PaginationOptions) String() string { return proto.CompactTextString(m) }
func (*PaginationOptions) ProtoMessage()    {}
func (*PaginationOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_275951237ff4368a, []int{36}
}

func (m *PaginationOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationOptions.Unmarshal(m, b)
}
func (m *PaginationOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationOptions.Marshal(b, m, deterministic)
}
func (m *PaginationOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationOptions.Merge(m, src)
}
func (m *PaginationOptions) XXX_Size() int {
	return xxx_messageInfo_PaginationOptions.Size(m)
}
func (m *PaginationOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationOptions.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationOptions proto.InternalMessageInfo

func (m *PaginationOptions) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PaginationOptions) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PaginationOptions) GetSortKey() PaginationOptions_SortKey {
	if m != nil {
		return m.SortKey
	}
	return PaginationOptions_CREATION_TIME
}

func (m *PaginationOptions) GetSortOrder() PaginationOptions_SortOrder {
	if m != nil {
		return m.SortOrder
	}
	return PaginationOptions_DESCENDING
}

func init() {
	proto.RegisterEnum("datacatalog.SinglePropertyFilter_ComparisonOperator", SinglePropertyFilter_ComparisonOperator_name, SinglePropertyFilter_ComparisonOperator_value)
	proto.RegisterEnum("datacatalog.PaginationOptions_SortOrder", PaginationOptions_SortOrder_name, PaginationOptions_SortOrder_value)
	proto.RegisterEnum("datacatalog.PaginationOptions_SortKey", PaginationOptions_SortKey_name, PaginationOptions_SortKey_value)
	proto.RegisterType((*CreateDatasetRequest)(nil), "datacatalog.CreateDatasetRequest")
	proto.RegisterType((*CreateDatasetResponse)(nil), "datacatalog.CreateDatasetResponse")
	proto.RegisterType((*GetDatasetRequest)(nil), "datacatalog.GetDatasetRequest")
	proto.RegisterType((*GetDatasetResponse)(nil), "datacatalog.GetDatasetResponse")
	proto.RegisterType((*GetArtifactRequest)(nil), "datacatalog.GetArtifactRequest")
	proto.RegisterType((*GetArtifactResponse)(nil), "datacatalog.GetArtifactResponse")
	proto.RegisterType((*CreateArtifactRequest)(nil), "datacatalog.CreateArtifactRequest")
	proto.RegisterType((*CreateArtifactResponse)(nil), "datacatalog.CreateArtifactResponse")
	proto.RegisterType((*AddTagRequest)(nil), "datacatalog.AddTagRequest")
	proto.RegisterType((*AddTagResponse)(nil), "datacatalog.AddTagResponse")
	proto.RegisterType((*ListArtifactsRequest)(nil), "datacatalog.ListArtifactsRequest")
	proto.RegisterType((*ListArtifactsResponse)(nil), "datacatalog.ListArtifactsResponse")
	proto.RegisterType((*ListDatasetsRequest)(nil), "datacatalog.ListDatasetsRequest")
	proto.RegisterType((*ListDatasetsResponse)(nil), "datacatalog.ListDatasetsResponse")
	proto.RegisterType((*UpdateArtifactRequest)(nil), "datacatalog.UpdateArtifactRequest")
	proto.RegisterType((*UpdateArtifactResponse)(nil), "datacatalog.UpdateArtifactResponse")
	proto.RegisterType((*ReservationID)(nil), "datacatalog.ReservationID")
	proto.RegisterType((*GetOrExtendReservationRequest)(nil), "datacatalog.GetOrExtendReservationRequest")
	proto.RegisterType((*Reservation)(nil), "datacatalog.Reservation")
	proto.RegisterType((*GetOrExtendReservationResponse)(nil), "datacatalog.GetOrExtendReservationResponse")
	proto.RegisterType((*ReleaseReservationRequest)(nil), "datacatalog.ReleaseReservationRequest")
	proto.RegisterType((*ReleaseReservationResponse)(nil), "datacatalog.ReleaseReservationResponse")
	proto.RegisterType((*Dataset)(nil), "datacatalog.Dataset")
	proto.RegisterType((*Partition)(nil), "datacatalog.Partition")
	proto.RegisterType((*DatasetID)(nil), "datacatalog.DatasetID")
	proto.RegisterType((*Artifact)(nil), "datacatalog.Artifact")
	proto.RegisterType((*ArtifactData)(nil), "datacatalog.ArtifactData")
	proto.RegisterType((*Tag)(nil), "datacatalog.Tag")
	proto.RegisterType((*Metadata)(nil), "datacatalog.Metadata")
	proto.RegisterMapType((map[string]string)(nil), "datacatalog.Metadata.KeyMapEntry")
	proto.RegisterType((*FilterExpression)(nil), "datacatalog.FilterExpression")
	proto.RegisterType((*SinglePropertyFilter)(nil), "datacatalog.SinglePropertyFilter")
	proto.RegisterType((*ArtifactPropertyFilter)(nil), "datacatalog.ArtifactPropertyFilter")
	proto.RegisterType((*TagPropertyFilter)(nil), "datacatalog.TagPropertyFilter")
	proto.RegisterType((*PartitionPropertyFilter)(nil), "datacatalog.PartitionPropertyFilter")
	proto.RegisterType((*KeyValuePair)(nil), "datacatalog.KeyValuePair")
	proto.RegisterType((*DatasetPropertyFilter)(nil), "datacatalog.DatasetPropertyFilter")
	proto.RegisterType((*PaginationOptions)(nil), "datacatalog.PaginationOptions")
}

func init() {
	proto.RegisterFile("flyteidl/datacatalog/datacatalog.proto", fileDescriptor_275951237ff4368a)
}

var fileDescriptor_275951237ff4368a = []byte{
	// 1659 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4b, 0x6f, 0xdb, 0xc6,
	0x13, 0x37, 0x25, 0x47, 0x32, 0x47, 0x96, 0x22, 0x6f, 0x6c, 0x87, 0x56, 0x12, 0x47, 0x61, 0x02,
	0xff, 0x8d, 0xfc, 0x1b, 0x29, 0xb5, 0x93, 0xa0, 0x49, 0xfa, 0x92, 0x2d, 0xc5, 0x56, 0x1d, 0x3f,
	0x42, 0x3f, 0x80, 0x3e, 0x00, 0x61, 0x6d, 0xae, 0x19, 0xd6, 0x14, 0xc9, 0x90, 0xeb, 0xd4, 0x3a,
	0x15, 0xbd, 0xf4, 0xd0, 0xf6, 0x56, 0xa0, 0x5f, 0xa0, 0x1f, 0xa4, 0xc7, 0xf4, 0xd4, 0xcf, 0x54,
	0x2c, 0xb9, 0xa4, 0x48, 0x8a, 0xb2, 0x15, 0x1f, 0x02, 0xf4, 0x42, 0x70, 0x77, 0x67, 0x7e, 0x3b,
	0x8f, 0x9d, 0x9d, 0x99, 0x85, 0x85, 0x63, 0xa3, 0x47, 0x89, 0xae, 0x1a, 0x75, 0x15, 0x53, 0x7c,
	0x84, 0x29, 0x36, 0x2c, 0x2d, 0xfa, 0x5f, 0xb3, 0x1d, 0x8b, 0x5a, 0xa8, 0x10, 0x99, 0xaa, 0xdc,
	0x0c, 0x99, 0x8e, 0x2c, 0x87, 0xd4, 0x0d, 0x9d, 0x12, 0x07, 0x1b, 0xae, 0x4f, 0x5a, 0x99, 0xd7,
	0x2c, 0x4b, 0x33, 0x48, 0xdd, 0x1b, 0x1d, 0x9e, 0x1e, 0xd7, 0xd5, 0x53, 0x07, 0x53, 0xdd, 0x32,
	0xf9, 0xfa, 0xed, 0xe4, 0x3a, 0xd5, 0xbb, 0xc4, 0xa5, 0xb8, 0x6b, 0xfb, 0x04, 0xf2, 0x0b, 0x98,
	0x5e, 0x75, 0x08, 0xa6, 0xa4, 0x89, 0x29, 0x76, 0x09, 0x55, 0xc8, 0x9b, 0x53, 0xe2, 0x52, 0x54,
	0x83, 0xbc, 0xea, 0xcf, 0x48, 0x42, 0x55, 0x58, 0x2c, 0x2c, 0x4d, 0xd7, 0xa2, 0x82, 0x06, 0xd4,
	0x01, 0x91, 0x7c, 0x1d, 0x66, 0x12, 0x38, 0xae, 0x6d, 0x99, 0x2e, 0x91, 0x5b, 0x30, 0xb5, 0x46,
	0x68, 0x02, 0xfd, 0x61, 0x12, 0x7d, 0x36, 0x0d, 0xbd, 0xdd, 0xec, 0xe3, 0x37, 0x01, 0x45, 0x61,
	0x7c, 0xf0, 0xf7, 0x96, 0xf2, 0x0f, 0xc1, 0x83, 0x69, 0x38, 0x54, 0x3f, 0xc6, 0x47, 0x97, 0x17,
	0x07, 0xdd, 0x81, 0x02, 0xe6, 0x20, 0x1d, 0x5d, 0x95, 0x32, 0x55, 0x61, 0x51, 0x5c, 0x1f, 0x53,
	0x20, 0x98, 0x6c, 0xab, 0xe8, 0x06, 0x4c, 0x50, 0xac, 0x75, 0x4c, 0xdc, 0x25, 0x52, 0x96, 0xaf,
	0xe7, 0x29, 0xd6, 0xb6, 0x70, 0x97, 0xac, 0x94, 0x60, 0xf2, 0xcd, 0x29, 0x71, 0x7a, 0x9d, 0xd7,
	0xd8, 0x54, 0x0d, 0x22, 0xaf, 0xc3, 0xb5, 0x98, 0x5c, 0x5c, 0xbf, 0x8f, 0x61, 0x22, 0x40, 0xe4,
	0x92, 0xcd, 0xc4, 0x24, 0x0b, 0x19, 0x42, 0x32, 0xf9, 0xab, 0xc0, 0x11, 0x49, 0x25, 0x2f, 0x81,
	0x25, 0xc1, 0x6c, 0x12, 0x8b, 0x7b, 0x75, 0x19, 0x8a, 0x0d, 0x55, 0xdd, 0xc3, 0x5a, 0x80, 0x2e,
	0x43, 0x96, 0x62, 0x8d, 0x03, 0x97, 0x63, 0xc0, 0x8c, 0x8a, 0x2d, 0xca, 0x65, 0x28, 0x05, 0x4c,
	0x1c, 0xe6, 0x2f, 0x01, 0xa6, 0x5f, 0xea, 0x6e, 0xa8, 0xb8, 0x7b, 0x79, 0x8f, 0x3c, 0x86, 0xdc,
	0xb1, 0x6e, 0x50, 0xe2, 0x78, 0xce, 0x28, 0x2c, 0xdd, 0x8a, 0x31, 0xbc, 0xf0, 0x96, 0x5a, 0x67,
	0xb6, 0x43, 0x5c, 0x57, 0xb7, 0x4c, 0x85, 0x13, 0xa3, 0xcf, 0x01, 0x6c, 0xac, 0xe9, 0xa6, 0x17,
	0x34, 0x9e, 0x9f, 0x0a, 0x4b, 0xf3, 0x31, 0xd6, 0x9d, 0x70, 0x79, 0xdb, 0x66, 0x5f, 0x57, 0x89,
	0x70, 0xc8, 0x27, 0x30, 0x93, 0x50, 0x80, 0xbb, 0x6e, 0x19, 0xc4, 0xc0, 0x8e, 0xae, 0x24, 0x54,
	0xb3, 0xc3, 0xed, 0xdd, 0xa7, 0x43, 0xb7, 0x00, 0x4c, 0x72, 0x46, 0x3b, 0xd4, 0x3a, 0x21, 0xa6,
	0x7f, 0xaa, 0x14, 0x91, 0xcd, 0xec, 0xb1, 0x09, 0xf9, 0x37, 0x01, 0xae, 0xb1, 0xdd, 0xb8, 0xfa,
	0xa1, 0xb5, 0xfa, 0xba, 0x0b, 0x97, 0xd7, 0x3d, 0xf3, 0xde, 0xba, 0x6b, 0xbe, 0xf3, 0xfa, 0xd2,
	0x70, 0xd5, 0x1f, 0xc2, 0x04, 0xf7, 0x4a, 0xa0, 0x79, 0x7a, 0x58, 0x86, 0x54, 0x17, 0xe9, 0xfd,
	0xb7, 0x00, 0x33, 0xfb, 0xb6, 0x9a, 0x72, 0xa8, 0x3f, 0x78, 0xe4, 0xa2, 0x07, 0x30, 0xce, 0xa0,
	0xa4, 0x71, 0x4f, 0xb1, 0xb9, 0x54, 0x97, 0xb2, 0x6d, 0x15, 0x8f, 0x6c, 0x20, 0xd0, 0x25, 0x98,
	0x4d, 0x6a, 0xc2, 0x63, 0x01, 0x43, 0x51, 0x21, 0x2e, 0x71, 0xde, 0x7a, 0xc6, 0x6d, 0x37, 0xd1,
	0x63, 0x00, 0x2e, 0x34, 0x13, 0xf4, 0x7c, 0xf5, 0x44, 0x4e, 0xd9, 0x56, 0xd1, 0x5c, 0x44, 0x7a,
	0xdf, 0x92, 0x81, 0xec, 0xf2, 0x3b, 0x01, 0x6e, 0xad, 0x11, 0xba, 0xed, 0xb4, 0xce, 0x28, 0x31,
	0xd5, 0xc8, 0x76, 0x81, 0x3d, 0x1b, 0x50, 0x72, 0xfa, 0xb3, 0xfd, 0x7d, 0x2b, 0xb1, 0x7d, 0x63,
	0x72, 0x2a, 0xc5, 0x08, 0x87, 0xbf, 0xbf, 0xf5, 0x83, 0x49, 0x9c, 0xd0, 0xba, 0x4a, 0xde, 0x1b,
	0xb7, 0x55, 0xb4, 0x0e, 0xe8, 0x35, 0xc1, 0x0e, 0x3d, 0x24, 0x98, 0x76, 0x74, 0x93, 0x32, 0x2e,
	0x83, 0x07, 0xdd, 0x5c, 0xcd, 0x4f, 0x55, 0xb5, 0x20, 0x55, 0xd5, 0x9a, 0x3c, 0x95, 0x29, 0x53,
	0x21, 0x53, 0x9b, 0xf3, 0xc8, 0x7f, 0x66, 0xa0, 0x10, 0x91, 0xe2, 0xbf, 0x22, 0x37, 0x7a, 0x0a,
	0x40, 0xce, 0x6c, 0xdd, 0x21, 0x6e, 0x07, 0x53, 0x69, 0x9c, 0xcb, 0x98, 0x44, 0xd8, 0x0b, 0x92,
	0xb4, 0x22, 0x72, 0xea, 0x86, 0x77, 0x7f, 0x77, 0x09, 0xc5, 0xde, 0xe1, 0xcb, 0xa5, 0xdc, 0xdf,
	0x9b, 0x7c, 0x51, 0x09, 0xc9, 0xe4, 0xef, 0x60, 0x7e, 0x98, 0xbb, 0x79, 0xa8, 0x3e, 0x83, 0x42,
	0xc4, 0x0a, 0xdc, 0x68, 0xd2, 0x30, 0xa3, 0x29, 0x51, 0x62, 0xb9, 0x07, 0x73, 0x0a, 0x31, 0x08,
	0x76, 0xc9, 0x87, 0x3e, 0x48, 0xf2, 0x4d, 0xa8, 0xa4, 0x6d, 0xcd, 0x23, 0xe9, 0x17, 0x01, 0xf2,
	0x3c, 0x34, 0xd0, 0x02, 0x64, 0x2e, 0x0c, 0x9e, 0x8c, 0xae, 0xc6, 0xac, 0x9b, 0x19, 0xc9, 0xba,
	0xe8, 0x1e, 0x14, 0x6d, 0x76, 0x6b, 0xb0, 0xbd, 0x37, 0x48, 0xcf, 0x95, 0xb2, 0xd5, 0xec, 0xa2,
	0xa8, 0xc4, 0x27, 0xe5, 0x65, 0x10, 0x77, 0x82, 0x09, 0x54, 0x86, 0xec, 0x09, 0xe9, 0x79, 0xe2,
	0x88, 0x0a, 0xfb, 0x45, 0xd3, 0x70, 0xe5, 0x2d, 0x36, 0x4e, 0x83, 0x50, 0xf5, 0x07, 0xf2, 0x8f,
	0x20, 0x86, 0xe2, 0x21, 0x09, 0xf2, 0xb6, 0x63, 0x7d, 0x4f, 0x78, 0xde, 0x16, 0x95, 0x60, 0x88,
	0x10, 0x8c, 0x47, 0xc2, 0xdc, 0xfb, 0x47, 0xb3, 0x90, 0x53, 0xad, 0x2e, 0xd6, 0xfd, 0x64, 0x26,
	0x2a, 0x7c, 0xc4, 0x50, 0xde, 0x12, 0x87, 0xdd, 0xff, 0xde, 0xb1, 0x13, 0x95, 0x60, 0xc8, 0x50,
	0xf6, 0xf7, 0xdb, 0x4d, 0xe9, 0x8a, 0x8f, 0xc2, 0xfe, 0xe5, 0x77, 0x19, 0x98, 0x08, 0x6e, 0x28,
	0x54, 0x0a, 0x6d, 0x28, 0x7a, 0xb6, 0x8a, 0x5c, 0xba, 0x99, 0xd1, 0x2e, 0xdd, 0xe0, 0xd2, 0xcc,
	0x8e, 0x74, 0x69, 0xc6, 0x9c, 0x31, 0x3e, 0x9a, 0x33, 0x9e, 0xb0, 0x5c, 0xc6, 0xcd, 0xec, 0x4a,
	0x57, 0xbc, 0x7d, 0x66, 0x13, 0xb9, 0x8c, 0x2f, 0x2b, 0x11, 0x4a, 0x74, 0x0f, 0xc6, 0x29, 0xd6,
	0x5c, 0x29, 0xe7, 0x71, 0x0c, 0x16, 0x2e, 0xde, 0x2a, 0x0b, 0xdb, 0x23, 0xaf, 0x10, 0x52, 0x59,
	0xd8, 0xe6, 0x2f, 0x0e, 0x5b, 0x4e, 0xdd, 0xa0, 0xf2, 0x0e, 0x4c, 0x46, 0x35, 0x0c, 0x7d, 0x26,
	0x44, 0x7c, 0xf6, 0x51, 0xf4, 0x10, 0x30, 0xb9, 0x83, 0x9a, 0xbf, 0xc6, 0x6a, 0xfe, 0xda, 0x4b,
	0xbf, 0xe6, 0x0f, 0x0e, 0x87, 0x01, 0xd9, 0x3d, 0xac, 0xa5, 0x02, 0xdd, 0x4e, 0x49, 0x6e, 0xb1,
	0xd4, 0x16, 0x71, 0x5d, 0x76, 0xb4, 0xc2, 0xfb, 0x27, 0x01, 0x26, 0x02, 0x7b, 0xa3, 0x67, 0x90,
	0x3f, 0x21, 0xbd, 0x4e, 0x17, 0xdb, 0x3c, 0xb1, 0xdf, 0x49, 0xf5, 0x4b, 0x6d, 0x83, 0xf4, 0x36,
	0xb1, 0xdd, 0x32, 0xa9, 0xd3, 0x53, 0x72, 0x27, 0xde, 0xa0, 0xf2, 0x14, 0x0a, 0x91, 0xe9, 0x51,
	0x43, 0xe1, 0x59, 0xe6, 0x13, 0x41, 0xde, 0x86, 0x72, 0xb2, 0x88, 0x41, 0xcf, 0x21, 0xef, 0x97,
	0x31, 0x6e, 0xaa, 0x28, 0xbb, 0xba, 0xa9, 0x19, 0x64, 0xc7, 0xb1, 0x6c, 0xe2, 0xd0, 0x9e, 0xcf,
	0xad, 0x04, 0x1c, 0xf2, 0x3f, 0x59, 0x98, 0x4e, 0xa3, 0x40, 0x5f, 0x00, 0xb0, 0xe4, 0x19, 0xab,
	0xa6, 0xe6, 0x93, 0x87, 0x22, 0xce, 0xb3, 0x3e, 0xa6, 0x88, 0x14, 0x6b, 0x1c, 0xe0, 0x15, 0x94,
	0xc3, 0xd3, 0xd5, 0x89, 0x15, 0xa4, 0xf7, 0xd2, 0x4f, 0xe3, 0x00, 0xd8, 0xd5, 0x90, 0x9f, 0x43,
	0x6e, 0xc1, 0xd5, 0xd0, 0xa9, 0x1c, 0xd1, 0xf7, 0xdd, 0xdd, 0xd4, 0x38, 0x1a, 0x00, 0x2c, 0x05,
	0xdc, 0x1c, 0x6f, 0x03, 0x4a, 0x41, 0x5d, 0xc1, 0xe1, 0xfc, 0x18, 0x93, 0xd3, 0x8e, 0xc2, 0x00,
	0x5a, 0x91, 0xf3, 0x72, 0xb0, 0x1d, 0x98, 0x60, 0x04, 0x98, 0x5a, 0x8e, 0x04, 0x55, 0x61, 0xb1,
	0xb4, 0xf4, 0xe8, 0x42, 0x3f, 0xd4, 0x56, 0xad, 0xae, 0x8d, 0x1d, 0xdd, 0x65, 0x65, 0xa5, 0xcf,
	0xab, 0x84, 0x28, 0x72, 0x15, 0xd0, 0xe0, 0x3a, 0x02, 0xc8, 0xb5, 0x5e, 0xed, 0x37, 0x5e, 0xee,
	0x96, 0xc7, 0x56, 0xa6, 0xe0, 0xaa, 0xcd, 0x01, 0xb9, 0x06, 0xf2, 0x1a, 0xcc, 0xa6, 0xeb, 0x9f,
	0xac, 0xf7, 0x84, 0xc1, 0x7a, 0x6f, 0x05, 0x60, 0x22, 0xc0, 0x93, 0x3f, 0x85, 0xa9, 0x01, 0x0f,
	0xc7, 0x0a, 0x42, 0x21, 0xd9, 0xca, 0x45, 0xb9, 0xbf, 0x85, 0xeb, 0x43, 0x1c, 0x8b, 0x1e, 0xf9,
	0xa1, 0xc3, 0x0a, 0x07, 0x81, 0x17, 0x0e, 0x51, 0x3b, 0x6d, 0x90, 0xde, 0x01, 0x3b, 0xef, 0x3b,
	0x58, 0x67, 0x56, 0x66, 0x41, 0x73, 0x80, 0x8d, 0x18, 0xf8, 0x13, 0x98, 0x8c, 0x52, 0x8d, 0x9c,
	0x4c, 0x7e, 0x15, 0x60, 0x26, 0xd5, 0x9b, 0xa8, 0x92, 0xc8, 0x2c, 0x4c, 0xad, 0x20, 0xb7, 0x4c,
	0x47, 0x73, 0xcb, 0xfa, 0x18, 0xbf, 0x60, 0xa4, 0x78, 0x76, 0x61, 0x92, 0xf2, 0xfc, 0x52, 0x49,
	0xe4, 0x17, 0x86, 0xc5, 0x27, 0x62, 0x5a, 0xfc, 0x9e, 0x81, 0xa9, 0x81, 0xb6, 0x82, 0x49, 0x6e,
	0xe8, 0x5d, 0xdd, 0x97, 0xa3, 0xa8, 0xf8, 0x03, 0x36, 0x1b, 0xed, 0x08, 0xfc, 0x01, 0xfa, 0x12,
	0xf2, 0xae, 0xe5, 0xd0, 0x0d, 0xd2, 0xf3, 0x84, 0x28, 0x2d, 0x2d, 0x9c, 0xdf, 0xb3, 0xd4, 0x76,
	0x7d, 0x6a, 0x25, 0x60, 0x43, 0x2f, 0x40, 0x64, 0xbf, 0xdb, 0x8e, 0xca, 0x0f, 0x7f, 0x69, 0x69,
	0x71, 0x04, 0x0c, 0x8f, 0x5e, 0xe9, 0xb3, 0xca, 0xf7, 0x41, 0x0c, 0xe7, 0x51, 0x09, 0xa0, 0xd9,
	0xda, 0x5d, 0x6d, 0x6d, 0x35, 0xdb, 0x5b, 0x6b, 0xe5, 0x31, 0x54, 0x04, 0xb1, 0x11, 0x0e, 0x05,
	0xf9, 0x26, 0xe4, 0xb9, 0x1c, 0x68, 0x0a, 0x8a, 0xab, 0x4a, 0xab, 0xb1, 0xd7, 0xde, 0xde, 0xea,
	0xec, 0xb5, 0x37, 0x5b, 0xe5, 0xb1, 0xa5, 0x9f, 0xf3, 0x50, 0x60, 0x3e, 0x5a, 0xf5, 0x05, 0x40,
	0x07, 0x50, 0x8c, 0x3d, 0xa7, 0xa0, 0xf8, 0xed, 0x96, 0xf6, 0x64, 0x53, 0x91, 0xcf, 0x23, 0xe1,
	0xf5, 0xde, 0x26, 0x40, 0xff, 0x19, 0x05, 0xc5, 0x6f, 0xb6, 0x81, 0x67, 0x9a, 0xca, 0xed, 0xa1,
	0xeb, 0x1c, 0xee, 0x6b, 0x28, 0xc5, 0x1f, 0x08, 0x50, 0x9a, 0x10, 0x89, 0xa6, 0xad, 0x72, 0xf7,
	0x5c, 0x1a, 0x0e, 0xbd, 0x03, 0x85, 0xc8, 0x8b, 0x08, 0x1a, 0x10, 0x25, 0x09, 0x5a, 0x1d, 0x4e,
	0xc0, 0x11, 0x1b, 0x90, 0xf3, 0x9f, 0x1f, 0x50, 0xbc, 0x08, 0x8d, 0x3d, 0x64, 0x54, 0x6e, 0xa4,
	0xae, 0x71, 0x88, 0x03, 0x28, 0xc6, 0xba, 0xfd, 0x84, 0x5b, 0xd2, 0x9e, 0x32, 0x12, 0x6e, 0x49,
	0x7f, 0x2c, 0xd8, 0x85, 0xc9, 0x68, 0x27, 0x8d, 0xaa, 0x03, 0x3c, 0x89, 0x96, 0xbf, 0x72, 0xe7,
	0x1c, 0x8a, 0xbe, 0x73, 0xe2, 0xad, 0x66, 0xc2, 0x39, 0xa9, 0x1d, 0x75, 0xc2, 0x39, 0xe9, 0xbd,
	0x2a, 0x7a, 0x03, 0xb3, 0xe9, 0x8d, 0x05, 0xba, 0x9f, 0x74, 0xc3, 0xf0, 0x66, 0xb3, 0xf2, 0xff,
	0x91, 0x68, 0xf9, 0x96, 0x04, 0xd0, 0x60, 0xc9, 0x8f, 0x16, 0x12, 0xed, 0xc4, 0x90, 0x76, 0xa4,
	0xf2, 0xbf, 0x0b, 0xe9, 0xfc, 0x6d, 0x56, 0x3e, 0xfb, 0xe6, 0xb9, 0xa6, 0xd3, 0xd7, 0xa7, 0x87,
	0xb5, 0x23, 0xab, 0x5b, 0xf7, 0xea, 0x30, 0xcb, 0xd1, 0xea, 0xe1, 0x23, 0xac, 0x46, 0xcc, 0xba,
	0x7d, 0xf8, 0x40, 0xb3, 0xea, 0x69, 0x8f, 0xb9, 0x87, 0x39, 0xaf, 0x18, 0x5c, 0xfe, 0x37, 0x00,
	0x00, 0xff, 0xff, 0x79, 0xd7, 0x0e, 0x85, 0xeb, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataCatalogClient is the client API for DataCatalog service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataCatalogClient interface {
	// Create a new Dataset. Datasets are unique based on the DatasetID. Datasets are logical groupings of artifacts.
	// Each dataset can have one or more artifacts
	CreateDataset(ctx context.Context, in *CreateDatasetRequest, opts ...grpc.CallOption) (*CreateDatasetResponse, error)
	// Get a Dataset by the DatasetID. This returns the Dataset with the associated metadata.
	GetDataset(ctx context.Context, in *GetDatasetRequest, opts ...grpc.CallOption) (*GetDatasetResponse, error)
	// Create an artifact and the artifact data associated with it. An artifact can be a hive partition or arbitrary
	// files or data values
	CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error)
	// Retrieve an artifact by an identifying handle. This returns an artifact along with the artifact data.
	GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*GetArtifactResponse, error)
	// Associate a tag with an artifact. Tags are unique within a Dataset.
	AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*AddTagResponse, error)
	// Return a paginated list of artifacts
	ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error)
	// Return a paginated list of datasets
	ListDatasets(ctx context.Context, in *ListDatasetsRequest, opts ...grpc.CallOption) (*ListDatasetsResponse, error)
	// Updates an existing artifact, overwriting the stored artifact data in the underlying blob storage.
	UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*UpdateArtifactResponse, error)
	// Attempts to get or extend a reservation for the corresponding artifact. If one already exists
	// (ie. another entity owns the reservation) then that reservation is retrieved.
	// Once you acquire a reservation, you need to  periodically extend the reservation with an
	// identical call. If the reservation is not extended before the defined expiration, it may be
	// acquired by another task.
	// Note: We may have multiple concurrent tasks with the same signature and the same input that
	// try to populate the same artifact at the same time. Thus with reservation, only one task can
	// run at a time, until the reservation expires.
	// Note: If task A does not extend the reservation in time and the reservation expires, another
	// task B may take over the reservation, resulting in two tasks A and B running in parallel. So
	// a third task C may get the Artifact from A or B, whichever writes last.
	GetOrExtendReservation(ctx context.Context, in *GetOrExtendReservationRequest, opts ...grpc.CallOption) (*GetOrExtendReservationResponse, error)
	// Release the reservation when the task holding the spot fails so that the other tasks
	// can grab the spot.
	ReleaseReservation(ctx context.Context, in *ReleaseReservationRequest, opts ...grpc.CallOption) (*ReleaseReservationResponse, error)
}

type dataCatalogClient struct {
	cc *grpc.ClientConn
}

func NewDataCatalogClient(cc *grpc.ClientConn) DataCatalogClient {
	return &dataCatalogClient{cc}
}

func (c *dataCatalogClient) CreateDataset(ctx context.Context, in *CreateDatasetRequest, opts ...grpc.CallOption) (*CreateDatasetResponse, error) {
	out := new(CreateDatasetResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/CreateDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) GetDataset(ctx context.Context, in *GetDatasetRequest, opts ...grpc.CallOption) (*GetDatasetResponse, error) {
	out := new(GetDatasetResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/GetDataset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error) {
	out := new(CreateArtifactResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/CreateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*GetArtifactResponse, error) {
	out := new(GetArtifactResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/GetArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*AddTagResponse, error) {
	out := new(AddTagResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/AddTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error) {
	out := new(ListArtifactsResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/ListArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) ListDatasets(ctx context.Context, in *ListDatasetsRequest, opts ...grpc.CallOption) (*ListDatasetsResponse, error) {
	out := new(ListDatasetsResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/ListDatasets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*UpdateArtifactResponse, error) {
	out := new(UpdateArtifactResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/UpdateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) GetOrExtendReservation(ctx context.Context, in *GetOrExtendReservationRequest, opts ...grpc.CallOption) (*GetOrExtendReservationResponse, error) {
	out := new(GetOrExtendReservationResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/GetOrExtendReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCatalogClient) ReleaseReservation(ctx context.Context, in *ReleaseReservationRequest, opts ...grpc.CallOption) (*ReleaseReservationResponse, error) {
	out := new(ReleaseReservationResponse)
	err := c.cc.Invoke(ctx, "/datacatalog.DataCatalog/ReleaseReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataCatalogServer is the server API for DataCatalog service.
type DataCatalogServer interface {
	// Create a new Dataset. Datasets are unique based on the DatasetID. Datasets are logical groupings of artifacts.
	// Each dataset can have one or more artifacts
	CreateDataset(context.Context, *CreateDatasetRequest) (*CreateDatasetResponse, error)
	// Get a Dataset by the DatasetID. This returns the Dataset with the associated metadata.
	GetDataset(context.Context, *GetDatasetRequest) (*GetDatasetResponse, error)
	// Create an artifact and the artifact data associated with it. An artifact can be a hive partition or arbitrary
	// files or data values
	CreateArtifact(context.Context, *CreateArtifactRequest) (*CreateArtifactResponse, error)
	// Retrieve an artifact by an identifying handle. This returns an artifact along with the artifact data.
	GetArtifact(context.Context, *GetArtifactRequest) (*GetArtifactResponse, error)
	// Associate a tag with an artifact. Tags are unique within a Dataset.
	AddTag(context.Context, *AddTagRequest) (*AddTagResponse, error)
	// Return a paginated list of artifacts
	ListArtifacts(context.Context, *ListArtifactsRequest) (*ListArtifactsResponse, error)
	// Return a paginated list of datasets
	ListDatasets(context.Context, *ListDatasetsRequest) (*ListDatasetsResponse, error)
	// Updates an existing artifact, overwriting the stored artifact data in the underlying blob storage.
	UpdateArtifact(context.Context, *UpdateArtifactRequest) (*UpdateArtifactResponse, error)
	// Attempts to get or extend a reservation for the corresponding artifact. If one already exists
	// (ie. another entity owns the reservation) then that reservation is retrieved.
	// Once you acquire a reservation, you need to  periodically extend the reservation with an
	// identical call. If the reservation is not extended before the defined expiration, it may be
	// acquired by another task.
	// Note: We may have multiple concurrent tasks with the same signature and the same input that
	// try to populate the same artifact at the same time. Thus with reservation, only one task can
	// run at a time, until the reservation expires.
	// Note: If task A does not extend the reservation in time and the reservation expires, another
	// task B may take over the reservation, resulting in two tasks A and B running in parallel. So
	// a third task C may get the Artifact from A or B, whichever writes last.
	GetOrExtendReservation(context.Context, *GetOrExtendReservationRequest) (*GetOrExtendReservationResponse, error)
	// Release the reservation when the task holding the spot fails so that the other tasks
	// can grab the spot.
	ReleaseReservation(context.Context, *ReleaseReservationRequest) (*ReleaseReservationResponse, error)
}

// UnimplementedDataCatalogServer can be embedded to have forward compatible implementations.
type UnimplementedDataCatalogServer struct {
}

func (*UnimplementedDataCatalogServer) CreateDataset(ctx context.Context, req *CreateDatasetRequest) (*CreateDatasetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDataset not implemented")
}
func (*UnimplementedDataCatalogServer) GetDataset(ctx context.Context, req *GetDatasetRequest) (*GetDatasetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataset not implemented")
}
func (*UnimplementedDataCatalogServer) CreateArtifact(ctx context.Context, req *CreateArtifactRequest) (*CreateArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArtifact not implemented")
}
func (*UnimplementedDataCatalogServer) GetArtifact(ctx context.Context, req *GetArtifactRequest) (*GetArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifact not implemented")
}
func (*UnimplementedDataCatalogServer) AddTag(ctx context.Context, req *AddTagRequest) (*AddTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTag not implemented")
}
func (*UnimplementedDataCatalogServer) ListArtifacts(ctx context.Context, req *ListArtifactsRequest) (*ListArtifactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArtifacts not implemented")
}
func (*UnimplementedDataCatalogServer) ListDatasets(ctx context.Context, req *ListDatasetsRequest) (*ListDatasetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDatasets not implemented")
}
func (*UnimplementedDataCatalogServer) UpdateArtifact(ctx context.Context, req *UpdateArtifactRequest) (*UpdateArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateArtifact not implemented")
}
func (*UnimplementedDataCatalogServer) GetOrExtendReservation(ctx context.Context, req *GetOrExtendReservationRequest) (*GetOrExtendReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrExtendReservation not implemented")
}
func (*UnimplementedDataCatalogServer) ReleaseReservation(ctx context.Context, req *ReleaseReservationRequest) (*ReleaseReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseReservation not implemented")
}

func RegisterDataCatalogServer(s *grpc.Server, srv DataCatalogServer) {
	s.RegisterService(&_DataCatalog_serviceDesc, srv)
}

func _DataCatalog_CreateDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).CreateDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/CreateDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).CreateDataset(ctx, req.(*CreateDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_GetDataset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDatasetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).GetDataset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/GetDataset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).GetDataset(ctx, req.(*GetDatasetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_CreateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).CreateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/CreateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).CreateArtifact(ctx, req.(*CreateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_GetArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).GetArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/GetArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).GetArtifact(ctx, req.(*GetArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_AddTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).AddTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/AddTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).AddTag(ctx, req.(*AddTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_ListArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArtifactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).ListArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/ListArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).ListArtifacts(ctx, req.(*ListArtifactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_ListDatasets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDatasetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).ListDatasets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/ListDatasets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).ListDatasets(ctx, req.(*ListDatasetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_UpdateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).UpdateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/UpdateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).UpdateArtifact(ctx, req.(*UpdateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_GetOrExtendReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrExtendReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).GetOrExtendReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/GetOrExtendReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).GetOrExtendReservation(ctx, req.(*GetOrExtendReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCatalog_ReleaseReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCatalogServer).ReleaseReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datacatalog.DataCatalog/ReleaseReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCatalogServer).ReleaseReservation(ctx, req.(*ReleaseReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataCatalog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datacatalog.DataCatalog",
	HandlerType: (*DataCatalogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDataset",
			Handler:    _DataCatalog_CreateDataset_Handler,
		},
		{
			MethodName: "GetDataset",
			Handler:    _DataCatalog_GetDataset_Handler,
		},
		{
			MethodName: "CreateArtifact",
			Handler:    _DataCatalog_CreateArtifact_Handler,
		},
		{
			MethodName: "GetArtifact",
			Handler:    _DataCatalog_GetArtifact_Handler,
		},
		{
			MethodName: "AddTag",
			Handler:    _DataCatalog_AddTag_Handler,
		},
		{
			MethodName: "ListArtifacts",
			Handler:    _DataCatalog_ListArtifacts_Handler,
		},
		{
			MethodName: "ListDatasets",
			Handler:    _DataCatalog_ListDatasets_Handler,
		},
		{
			MethodName: "UpdateArtifact",
			Handler:    _DataCatalog_UpdateArtifact_Handler,
		},
		{
			MethodName: "GetOrExtendReservation",
			Handler:    _DataCatalog_GetOrExtendReservation_Handler,
		},
		{
			MethodName: "ReleaseReservation",
			Handler:    _DataCatalog_ReleaseReservation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flyteidl/datacatalog/datacatalog.proto",
}
