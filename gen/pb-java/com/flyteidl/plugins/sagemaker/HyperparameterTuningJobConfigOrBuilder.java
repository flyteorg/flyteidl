// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto

package com.flyteidl.plugins.sagemaker;

public interface HyperparameterTuningJobConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ParameterRanges is a map that maps hyperparameter name to the corresponding hyperparameter range
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1 [json_name = "hyperparameterRanges"];</code>
   * @return Whether the hyperparameterRanges field is set.
   */
  boolean hasHyperparameterRanges();
  /**
   * <pre>
   * ParameterRanges is a map that maps hyperparameter name to the corresponding hyperparameter range
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1 [json_name = "hyperparameterRanges"];</code>
   * @return The hyperparameterRanges.
   */
  com.flyteidl.plugins.sagemaker.ParameterRanges getHyperparameterRanges();
  /**
   * <pre>
   * ParameterRanges is a map that maps hyperparameter name to the corresponding hyperparameter range
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1 [json_name = "hyperparameterRanges"];</code>
   */
  com.flyteidl.plugins.sagemaker.ParameterRangesOrBuilder getHyperparameterRangesOrBuilder();

  /**
   * <pre>
   * Setting the strategy used when searching in the hyperparameter space
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2 [json_name = "tuningStrategy"];</code>
   * @return The enum numeric value on the wire for tuningStrategy.
   */
  int getTuningStrategyValue();
  /**
   * <pre>
   * Setting the strategy used when searching in the hyperparameter space
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2 [json_name = "tuningStrategy"];</code>
   * @return The tuningStrategy.
   */
  com.flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value getTuningStrategy();

  /**
   * <pre>
   * The target metric and the objective of the hyperparameter tuning.
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3 [json_name = "tuningObjective"];</code>
   * @return Whether the tuningObjective field is set.
   */
  boolean hasTuningObjective();
  /**
   * <pre>
   * The target metric and the objective of the hyperparameter tuning.
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3 [json_name = "tuningObjective"];</code>
   * @return The tuningObjective.
   */
  com.flyteidl.plugins.sagemaker.HyperparameterTuningObjective getTuningObjective();
  /**
   * <pre>
   * The target metric and the objective of the hyperparameter tuning.
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3 [json_name = "tuningObjective"];</code>
   */
  com.flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveOrBuilder getTuningObjectiveOrBuilder();

  /**
   * <pre>
   * When the training jobs launched by the hyperparameter tuning job are not improving significantly,
   * a hyperparameter tuning job can be stopping early.
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4 [json_name = "trainingJobEarlyStoppingType"];</code>
   * @return The enum numeric value on the wire for trainingJobEarlyStoppingType.
   */
  int getTrainingJobEarlyStoppingTypeValue();
  /**
   * <pre>
   * When the training jobs launched by the hyperparameter tuning job are not improving significantly,
   * a hyperparameter tuning job can be stopping early.
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4 [json_name = "trainingJobEarlyStoppingType"];</code>
   * @return The trainingJobEarlyStoppingType.
   */
  com.flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value getTrainingJobEarlyStoppingType();
}
