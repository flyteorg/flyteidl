// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto

#include "flyteidl/plugins/sagemaker/hyperparameter_tuning_job.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class HyperparameterTuningJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HyperparameterTuningJob> _instance;
} _HyperparameterTuningJob_default_instance_;
class HyperparameterTuningObjectiveTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HyperparameterTuningObjectiveType> _instance;
} _HyperparameterTuningObjectiveType_default_instance_;
class HyperparameterTuningObjectiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HyperparameterTuningObjective> _instance;
} _HyperparameterTuningObjective_default_instance_;
class HyperparameterTuningStrategyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HyperparameterTuningStrategy> _instance;
} _HyperparameterTuningStrategy_default_instance_;
class TrainingJobEarlyStoppingTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrainingJobEarlyStoppingType> _instance;
} _TrainingJobEarlyStoppingType_default_instance_;
class HyperparameterTuningJobConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HyperparameterTuningJobConfig> _instance;
} _HyperparameterTuningJobConfig_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
static void InitDefaultsHyperparameterTuningJob_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_HyperparameterTuningJob_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::HyperparameterTuningJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::HyperparameterTuningJob::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HyperparameterTuningJob_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHyperparameterTuningJob_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto}, {
      &scc_info_TrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base,}};

static void InitDefaultsHyperparameterTuningObjectiveType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_HyperparameterTuningObjectiveType_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HyperparameterTuningObjectiveType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHyperparameterTuningObjectiveType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto}, {}};

static void InitDefaultsHyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_HyperparameterTuningObjective_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto}, {}};

static void InitDefaultsHyperparameterTuningStrategy_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_HyperparameterTuningStrategy_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HyperparameterTuningStrategy_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHyperparameterTuningStrategy_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto}, {}};

static void InitDefaultsTrainingJobEarlyStoppingType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_TrainingJobEarlyStoppingType_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrainingJobEarlyStoppingType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrainingJobEarlyStoppingType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto}, {}};

static void InitDefaultsHyperparameterTuningJobConfig_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_HyperparameterTuningJobConfig_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_HyperparameterTuningJobConfig_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsHyperparameterTuningJobConfig_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto}, {
      &scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto.base,
      &scc_info_HyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base,}};

void InitDefaults_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_HyperparameterTuningJob_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HyperparameterTuningObjectiveType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HyperparameterTuningStrategy_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrainingJobEarlyStoppingType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HyperparameterTuningJobConfig_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[3];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJob, training_job_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJob, max_number_of_training_jobs_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJob, max_parallel_training_jobs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective, objective_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective, metric_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig, hyperparameter_ranges_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig, tuning_strategy_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig, tuning_objective_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig, training_job_early_stopping_type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::plugins::sagemaker::HyperparameterTuningJob)},
  { 8, -1, sizeof(::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType)},
  { 13, -1, sizeof(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective)},
  { 20, -1, sizeof(::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy)},
  { 25, -1, sizeof(::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType)},
  { 30, -1, sizeof(::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_HyperparameterTuningJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_HyperparameterTuningObjectiveType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_HyperparameterTuningObjective_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_HyperparameterTuningStrategy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_TrainingJobEarlyStoppingType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_HyperparameterTuningJobConfig_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto = {
  {}, AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto, "flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto::offsets,
  file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto, 6, file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto, file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[] =
  "\n:flyteidl/plugins/sagemaker/hyperparame"
  "ter_tuning_job.proto\022\032flyteidl.plugins.s"
  "agemaker\0321flyteidl/plugins/sagemaker/par"
  "ameter_ranges.proto\032-flyteidl/plugins/sa"
  "gemaker/training_job.proto\"\241\001\n\027Hyperpara"
  "meterTuningJob\022=\n\014training_job\030\001 \001(\0132\'.f"
  "lyteidl.plugins.sagemaker.TrainingJob\022#\n"
  "\033max_number_of_training_jobs\030\002 \001(\003\022\"\n\032ma"
  "x_parallel_training_jobs\030\003 \001(\003\"H\n!Hyperp"
  "arameterTuningObjectiveType\"#\n\005Value\022\014\n\010"
  "MINIMIZE\020\000\022\014\n\010MAXIMIZE\020\001\"\221\001\n\035Hyperparame"
  "terTuningObjective\022[\n\016objective_type\030\001 \001"
  "(\0162C.flyteidl.plugins.sagemaker.Hyperpar"
  "ameterTuningObjectiveType.Value\022\023\n\013metri"
  "c_name\030\002 \001(\t\"A\n\034HyperparameterTuningStra"
  "tegy\"!\n\005Value\022\014\n\010BAYESIAN\020\000\022\n\n\006RANDOM\020\001\""
  ":\n\034TrainingJobEarlyStoppingType\"\032\n\005Value"
  "\022\007\n\003OFF\020\000\022\010\n\004AUTO\020\001\"\203\003\n\035HyperparameterTu"
  "ningJobConfig\022J\n\025hyperparameter_ranges\030\001"
  " \001(\0132+.flyteidl.plugins.sagemaker.Parame"
  "terRanges\022W\n\017tuning_strategy\030\002 \001(\0162>.fly"
  "teidl.plugins.sagemaker.HyperparameterTu"
  "ningStrategy.Value\022S\n\020tuning_objective\030\003"
  " \001(\01329.flyteidl.plugins.sagemaker.Hyperp"
  "arameterTuningObjective\022h\n training_job_"
  "early_stopping_type\030\004 \001(\0162>.flyteidl.plu"
  "gins.sagemaker.TrainingJobEarlyStoppingT"
  "ype.ValueB9Z7github.com/flyteorg/flyteid"
  "l/gen/pb-go/flyteidl/pluginsb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto = {
  false, InitDefaults_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto, 
  descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto,
  "flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto", &assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto, 1156,
};

void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto,
    ::AddDescriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto = []() { AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto(); return true; }();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
const ::google::protobuf::EnumDescriptor* HyperparameterTuningObjectiveType_Value_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[0];
}
bool HyperparameterTuningObjectiveType_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HyperparameterTuningObjectiveType_Value HyperparameterTuningObjectiveType::MINIMIZE;
const HyperparameterTuningObjectiveType_Value HyperparameterTuningObjectiveType::MAXIMIZE;
const HyperparameterTuningObjectiveType_Value HyperparameterTuningObjectiveType::Value_MIN;
const HyperparameterTuningObjectiveType_Value HyperparameterTuningObjectiveType::Value_MAX;
const int HyperparameterTuningObjectiveType::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HyperparameterTuningStrategy_Value_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[1];
}
bool HyperparameterTuningStrategy_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HyperparameterTuningStrategy_Value HyperparameterTuningStrategy::BAYESIAN;
const HyperparameterTuningStrategy_Value HyperparameterTuningStrategy::RANDOM;
const HyperparameterTuningStrategy_Value HyperparameterTuningStrategy::Value_MIN;
const HyperparameterTuningStrategy_Value HyperparameterTuningStrategy::Value_MAX;
const int HyperparameterTuningStrategy::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TrainingJobEarlyStoppingType_Value_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[2];
}
bool TrainingJobEarlyStoppingType_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrainingJobEarlyStoppingType_Value TrainingJobEarlyStoppingType::OFF;
const TrainingJobEarlyStoppingType_Value TrainingJobEarlyStoppingType::AUTO;
const TrainingJobEarlyStoppingType_Value TrainingJobEarlyStoppingType::Value_MIN;
const TrainingJobEarlyStoppingType_Value TrainingJobEarlyStoppingType::Value_MAX;
const int TrainingJobEarlyStoppingType::Value_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void HyperparameterTuningJob::InitAsDefaultInstance() {
  ::flyteidl::plugins::sagemaker::_HyperparameterTuningJob_default_instance_._instance.get_mutable()->training_job_ = const_cast< ::flyteidl::plugins::sagemaker::TrainingJob*>(
      ::flyteidl::plugins::sagemaker::TrainingJob::internal_default_instance());
}
class HyperparameterTuningJob::HasBitSetters {
 public:
  static const ::flyteidl::plugins::sagemaker::TrainingJob& training_job(const HyperparameterTuningJob* msg);
};

const ::flyteidl::plugins::sagemaker::TrainingJob&
HyperparameterTuningJob::HasBitSetters::training_job(const HyperparameterTuningJob* msg) {
  return *msg->training_job_;
}
void HyperparameterTuningJob::clear_training_job() {
  if (GetArenaNoVirtual() == nullptr && training_job_ != nullptr) {
    delete training_job_;
  }
  training_job_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HyperparameterTuningJob::kTrainingJobFieldNumber;
const int HyperparameterTuningJob::kMaxNumberOfTrainingJobsFieldNumber;
const int HyperparameterTuningJob::kMaxParallelTrainingJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterTuningJob::HyperparameterTuningJob()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
}
HyperparameterTuningJob::HyperparameterTuningJob(const HyperparameterTuningJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_training_job()) {
    training_job_ = new ::flyteidl::plugins::sagemaker::TrainingJob(*from.training_job_);
  } else {
    training_job_ = nullptr;
  }
  ::memcpy(&max_number_of_training_jobs_, &from.max_number_of_training_jobs_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_parallel_training_jobs_) -
    reinterpret_cast<char*>(&max_number_of_training_jobs_)) + sizeof(max_parallel_training_jobs_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
}

void HyperparameterTuningJob::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HyperparameterTuningJob_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  ::memset(&training_job_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_parallel_training_jobs_) -
      reinterpret_cast<char*>(&training_job_)) + sizeof(max_parallel_training_jobs_));
}

HyperparameterTuningJob::~HyperparameterTuningJob() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  SharedDtor();
}

void HyperparameterTuningJob::SharedDtor() {
  if (this != internal_default_instance()) delete training_job_;
}

void HyperparameterTuningJob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HyperparameterTuningJob& HyperparameterTuningJob::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HyperparameterTuningJob_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  return *internal_default_instance();
}


void HyperparameterTuningJob::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && training_job_ != nullptr) {
    delete training_job_;
  }
  training_job_ = nullptr;
  ::memset(&max_number_of_training_jobs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_parallel_training_jobs_) -
      reinterpret_cast<char*>(&max_number_of_training_jobs_)) + sizeof(max_parallel_training_jobs_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HyperparameterTuningJob::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HyperparameterTuningJob*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::TrainingJob::_InternalParse;
        object = msg->mutable_training_job();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 max_number_of_training_jobs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_max_number_of_training_jobs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 max_parallel_training_jobs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_max_parallel_training_jobs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HyperparameterTuningJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_training_job()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_number_of_training_jobs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_number_of_training_jobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_parallel_training_jobs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_parallel_training_jobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HyperparameterTuningJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
  if (this->has_training_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::training_job(this), output);
  }

  // int64 max_number_of_training_jobs = 2;
  if (this->max_number_of_training_jobs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->max_number_of_training_jobs(), output);
  }

  // int64 max_parallel_training_jobs = 3;
  if (this->max_parallel_training_jobs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->max_parallel_training_jobs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
}

::google::protobuf::uint8* HyperparameterTuningJob::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
  if (this->has_training_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::training_job(this), target);
  }

  // int64 max_number_of_training_jobs = 2;
  if (this->max_number_of_training_jobs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->max_number_of_training_jobs(), target);
  }

  // int64 max_parallel_training_jobs = 3;
  if (this->max_parallel_training_jobs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->max_parallel_training_jobs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  return target;
}

size_t HyperparameterTuningJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
  if (this->has_training_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *training_job_);
  }

  // int64 max_number_of_training_jobs = 2;
  if (this->max_number_of_training_jobs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_number_of_training_jobs());
  }

  // int64 max_parallel_training_jobs = 3;
  if (this->max_parallel_training_jobs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_parallel_training_jobs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HyperparameterTuningJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  GOOGLE_DCHECK_NE(&from, this);
  const HyperparameterTuningJob* source =
      ::google::protobuf::DynamicCastToGenerated<HyperparameterTuningJob>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
    MergeFrom(*source);
  }
}

void HyperparameterTuningJob::MergeFrom(const HyperparameterTuningJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_training_job()) {
    mutable_training_job()->::flyteidl::plugins::sagemaker::TrainingJob::MergeFrom(from.training_job());
  }
  if (from.max_number_of_training_jobs() != 0) {
    set_max_number_of_training_jobs(from.max_number_of_training_jobs());
  }
  if (from.max_parallel_training_jobs() != 0) {
    set_max_parallel_training_jobs(from.max_parallel_training_jobs());
  }
}

void HyperparameterTuningJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterTuningJob::CopyFrom(const HyperparameterTuningJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HyperparameterTuningJob::IsInitialized() const {
  return true;
}

void HyperparameterTuningJob::Swap(HyperparameterTuningJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterTuningJob::InternalSwap(HyperparameterTuningJob* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(training_job_, other->training_job_);
  swap(max_number_of_training_jobs_, other->max_number_of_training_jobs_);
  swap(max_parallel_training_jobs_, other->max_parallel_training_jobs_);
}

::google::protobuf::Metadata HyperparameterTuningJob::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HyperparameterTuningObjectiveType::InitAsDefaultInstance() {
}
class HyperparameterTuningObjectiveType::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterTuningObjectiveType::HyperparameterTuningObjectiveType()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
}
HyperparameterTuningObjectiveType::HyperparameterTuningObjectiveType(const HyperparameterTuningObjectiveType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
}

void HyperparameterTuningObjectiveType::SharedCtor() {
}

HyperparameterTuningObjectiveType::~HyperparameterTuningObjectiveType() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  SharedDtor();
}

void HyperparameterTuningObjectiveType::SharedDtor() {
}

void HyperparameterTuningObjectiveType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HyperparameterTuningObjectiveType& HyperparameterTuningObjectiveType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HyperparameterTuningObjectiveType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  return *internal_default_instance();
}


void HyperparameterTuningObjectiveType::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HyperparameterTuningObjectiveType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HyperparameterTuningObjectiveType*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HyperparameterTuningObjectiveType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HyperparameterTuningObjectiveType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
}

::google::protobuf::uint8* HyperparameterTuningObjectiveType::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  return target;
}

size_t HyperparameterTuningObjectiveType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HyperparameterTuningObjectiveType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  GOOGLE_DCHECK_NE(&from, this);
  const HyperparameterTuningObjectiveType* source =
      ::google::protobuf::DynamicCastToGenerated<HyperparameterTuningObjectiveType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
    MergeFrom(*source);
  }
}

void HyperparameterTuningObjectiveType::MergeFrom(const HyperparameterTuningObjectiveType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HyperparameterTuningObjectiveType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterTuningObjectiveType::CopyFrom(const HyperparameterTuningObjectiveType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HyperparameterTuningObjectiveType::IsInitialized() const {
  return true;
}

void HyperparameterTuningObjectiveType::Swap(HyperparameterTuningObjectiveType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterTuningObjectiveType::InternalSwap(HyperparameterTuningObjectiveType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HyperparameterTuningObjectiveType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HyperparameterTuningObjective::InitAsDefaultInstance() {
}
class HyperparameterTuningObjective::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HyperparameterTuningObjective::kObjectiveTypeFieldNumber;
const int HyperparameterTuningObjective::kMetricNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterTuningObjective::HyperparameterTuningObjective()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
}
HyperparameterTuningObjective::HyperparameterTuningObjective(const HyperparameterTuningObjective& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metric_name().size() > 0) {
    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
  objective_type_ = from.objective_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
}

void HyperparameterTuningObjective::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  metric_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objective_type_ = 0;
}

HyperparameterTuningObjective::~HyperparameterTuningObjective() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  SharedDtor();
}

void HyperparameterTuningObjective::SharedDtor() {
  metric_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HyperparameterTuningObjective::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HyperparameterTuningObjective& HyperparameterTuningObjective::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HyperparameterTuningObjective_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  return *internal_default_instance();
}


void HyperparameterTuningObjective::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objective_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HyperparameterTuningObjective::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HyperparameterTuningObjective*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value objective_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_objective_type(static_cast<::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string metric_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name");
        object = msg->mutable_metric_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HyperparameterTuningObjective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value objective_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_objective_type(static_cast< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string metric_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metric_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metric_name().data(), static_cast<int>(this->metric_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HyperparameterTuningObjective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value objective_type = 1;
  if (this->objective_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->objective_type(), output);
  }

  // string metric_name = 2;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->metric_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
}

::google::protobuf::uint8* HyperparameterTuningObjective::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value objective_type = 1;
  if (this->objective_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->objective_type(), target);
  }

  // string metric_name = 2;
  if (this->metric_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metric_name().data(), static_cast<int>(this->metric_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->metric_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  return target;
}

size_t HyperparameterTuningObjective::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string metric_name = 2;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metric_name());
  }

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value objective_type = 1;
  if (this->objective_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->objective_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HyperparameterTuningObjective::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  GOOGLE_DCHECK_NE(&from, this);
  const HyperparameterTuningObjective* source =
      ::google::protobuf::DynamicCastToGenerated<HyperparameterTuningObjective>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
    MergeFrom(*source);
  }
}

void HyperparameterTuningObjective::MergeFrom(const HyperparameterTuningObjective& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {

    metric_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metric_name_);
  }
  if (from.objective_type() != 0) {
    set_objective_type(from.objective_type());
  }
}

void HyperparameterTuningObjective::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterTuningObjective::CopyFrom(const HyperparameterTuningObjective& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HyperparameterTuningObjective::IsInitialized() const {
  return true;
}

void HyperparameterTuningObjective::Swap(HyperparameterTuningObjective* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterTuningObjective::InternalSwap(HyperparameterTuningObjective* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metric_name_.Swap(&other->metric_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(objective_type_, other->objective_type_);
}

::google::protobuf::Metadata HyperparameterTuningObjective::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HyperparameterTuningStrategy::InitAsDefaultInstance() {
}
class HyperparameterTuningStrategy::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterTuningStrategy::HyperparameterTuningStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
}
HyperparameterTuningStrategy::HyperparameterTuningStrategy(const HyperparameterTuningStrategy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
}

void HyperparameterTuningStrategy::SharedCtor() {
}

HyperparameterTuningStrategy::~HyperparameterTuningStrategy() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  SharedDtor();
}

void HyperparameterTuningStrategy::SharedDtor() {
}

void HyperparameterTuningStrategy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HyperparameterTuningStrategy& HyperparameterTuningStrategy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HyperparameterTuningStrategy_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  return *internal_default_instance();
}


void HyperparameterTuningStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HyperparameterTuningStrategy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HyperparameterTuningStrategy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HyperparameterTuningStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HyperparameterTuningStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
}

::google::protobuf::uint8* HyperparameterTuningStrategy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  return target;
}

size_t HyperparameterTuningStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HyperparameterTuningStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const HyperparameterTuningStrategy* source =
      ::google::protobuf::DynamicCastToGenerated<HyperparameterTuningStrategy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
    MergeFrom(*source);
  }
}

void HyperparameterTuningStrategy::MergeFrom(const HyperparameterTuningStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HyperparameterTuningStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterTuningStrategy::CopyFrom(const HyperparameterTuningStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HyperparameterTuningStrategy::IsInitialized() const {
  return true;
}

void HyperparameterTuningStrategy::Swap(HyperparameterTuningStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterTuningStrategy::InternalSwap(HyperparameterTuningStrategy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HyperparameterTuningStrategy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TrainingJobEarlyStoppingType::InitAsDefaultInstance() {
}
class TrainingJobEarlyStoppingType::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingJobEarlyStoppingType::TrainingJobEarlyStoppingType()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
}
TrainingJobEarlyStoppingType::TrainingJobEarlyStoppingType(const TrainingJobEarlyStoppingType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
}

void TrainingJobEarlyStoppingType::SharedCtor() {
}

TrainingJobEarlyStoppingType::~TrainingJobEarlyStoppingType() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  SharedDtor();
}

void TrainingJobEarlyStoppingType::SharedDtor() {
}

void TrainingJobEarlyStoppingType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrainingJobEarlyStoppingType& TrainingJobEarlyStoppingType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TrainingJobEarlyStoppingType_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  return *internal_default_instance();
}


void TrainingJobEarlyStoppingType::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TrainingJobEarlyStoppingType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TrainingJobEarlyStoppingType*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TrainingJobEarlyStoppingType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TrainingJobEarlyStoppingType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
}

::google::protobuf::uint8* TrainingJobEarlyStoppingType::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  return target;
}

size_t TrainingJobEarlyStoppingType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrainingJobEarlyStoppingType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainingJobEarlyStoppingType* source =
      ::google::protobuf::DynamicCastToGenerated<TrainingJobEarlyStoppingType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
    MergeFrom(*source);
  }
}

void TrainingJobEarlyStoppingType::MergeFrom(const TrainingJobEarlyStoppingType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TrainingJobEarlyStoppingType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingJobEarlyStoppingType::CopyFrom(const TrainingJobEarlyStoppingType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingJobEarlyStoppingType::IsInitialized() const {
  return true;
}

void TrainingJobEarlyStoppingType::Swap(TrainingJobEarlyStoppingType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingJobEarlyStoppingType::InternalSwap(TrainingJobEarlyStoppingType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TrainingJobEarlyStoppingType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HyperparameterTuningJobConfig::InitAsDefaultInstance() {
  ::flyteidl::plugins::sagemaker::_HyperparameterTuningJobConfig_default_instance_._instance.get_mutable()->hyperparameter_ranges_ = const_cast< ::flyteidl::plugins::sagemaker::ParameterRanges*>(
      ::flyteidl::plugins::sagemaker::ParameterRanges::internal_default_instance());
  ::flyteidl::plugins::sagemaker::_HyperparameterTuningJobConfig_default_instance_._instance.get_mutable()->tuning_objective_ = const_cast< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective*>(
      ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective::internal_default_instance());
}
class HyperparameterTuningJobConfig::HasBitSetters {
 public:
  static const ::flyteidl::plugins::sagemaker::ParameterRanges& hyperparameter_ranges(const HyperparameterTuningJobConfig* msg);
  static const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective& tuning_objective(const HyperparameterTuningJobConfig* msg);
};

const ::flyteidl::plugins::sagemaker::ParameterRanges&
HyperparameterTuningJobConfig::HasBitSetters::hyperparameter_ranges(const HyperparameterTuningJobConfig* msg) {
  return *msg->hyperparameter_ranges_;
}
const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective&
HyperparameterTuningJobConfig::HasBitSetters::tuning_objective(const HyperparameterTuningJobConfig* msg) {
  return *msg->tuning_objective_;
}
void HyperparameterTuningJobConfig::clear_hyperparameter_ranges() {
  if (GetArenaNoVirtual() == nullptr && hyperparameter_ranges_ != nullptr) {
    delete hyperparameter_ranges_;
  }
  hyperparameter_ranges_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HyperparameterTuningJobConfig::kHyperparameterRangesFieldNumber;
const int HyperparameterTuningJobConfig::kTuningStrategyFieldNumber;
const int HyperparameterTuningJobConfig::kTuningObjectiveFieldNumber;
const int HyperparameterTuningJobConfig::kTrainingJobEarlyStoppingTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HyperparameterTuningJobConfig::HyperparameterTuningJobConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
}
HyperparameterTuningJobConfig::HyperparameterTuningJobConfig(const HyperparameterTuningJobConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hyperparameter_ranges()) {
    hyperparameter_ranges_ = new ::flyteidl::plugins::sagemaker::ParameterRanges(*from.hyperparameter_ranges_);
  } else {
    hyperparameter_ranges_ = nullptr;
  }
  if (from.has_tuning_objective()) {
    tuning_objective_ = new ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective(*from.tuning_objective_);
  } else {
    tuning_objective_ = nullptr;
  }
  ::memcpy(&tuning_strategy_, &from.tuning_strategy_,
    static_cast<size_t>(reinterpret_cast<char*>(&training_job_early_stopping_type_) -
    reinterpret_cast<char*>(&tuning_strategy_)) + sizeof(training_job_early_stopping_type_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
}

void HyperparameterTuningJobConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HyperparameterTuningJobConfig_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  ::memset(&hyperparameter_ranges_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&training_job_early_stopping_type_) -
      reinterpret_cast<char*>(&hyperparameter_ranges_)) + sizeof(training_job_early_stopping_type_));
}

HyperparameterTuningJobConfig::~HyperparameterTuningJobConfig() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  SharedDtor();
}

void HyperparameterTuningJobConfig::SharedDtor() {
  if (this != internal_default_instance()) delete hyperparameter_ranges_;
  if (this != internal_default_instance()) delete tuning_objective_;
}

void HyperparameterTuningJobConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HyperparameterTuningJobConfig& HyperparameterTuningJobConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HyperparameterTuningJobConfig_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto.base);
  return *internal_default_instance();
}


void HyperparameterTuningJobConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && hyperparameter_ranges_ != nullptr) {
    delete hyperparameter_ranges_;
  }
  hyperparameter_ranges_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && tuning_objective_ != nullptr) {
    delete tuning_objective_;
  }
  tuning_objective_ = nullptr;
  ::memset(&tuning_strategy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&training_job_early_stopping_type_) -
      reinterpret_cast<char*>(&tuning_strategy_)) + sizeof(training_job_early_stopping_type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HyperparameterTuningJobConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HyperparameterTuningJobConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::ParameterRanges::_InternalParse;
        object = msg->mutable_hyperparameter_ranges();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_tuning_strategy(static_cast<::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective::_InternalParse;
        object = msg->mutable_tuning_objective();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_training_job_early_stopping_type(static_cast<::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HyperparameterTuningJobConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hyperparameter_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tuning_strategy(static_cast< ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tuning_objective()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_training_job_early_stopping_type(static_cast< ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HyperparameterTuningJobConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
  if (this->has_hyperparameter_ranges()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::hyperparameter_ranges(this), output);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2;
  if (this->tuning_strategy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->tuning_strategy(), output);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
  if (this->has_tuning_objective()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::tuning_objective(this), output);
  }

  // .flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4;
  if (this->training_job_early_stopping_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->training_job_early_stopping_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
}

::google::protobuf::uint8* HyperparameterTuningJobConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
  if (this->has_hyperparameter_ranges()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::hyperparameter_ranges(this), target);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2;
  if (this->tuning_strategy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->tuning_strategy(), target);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
  if (this->has_tuning_objective()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::tuning_objective(this), target);
  }

  // .flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4;
  if (this->training_job_early_stopping_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->training_job_early_stopping_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  return target;
}

size_t HyperparameterTuningJobConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
  if (this->has_hyperparameter_ranges()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hyperparameter_ranges_);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
  if (this->has_tuning_objective()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tuning_objective_);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2;
  if (this->tuning_strategy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tuning_strategy());
  }

  // .flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4;
  if (this->training_job_early_stopping_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->training_job_early_stopping_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HyperparameterTuningJobConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const HyperparameterTuningJobConfig* source =
      ::google::protobuf::DynamicCastToGenerated<HyperparameterTuningJobConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
    MergeFrom(*source);
  }
}

void HyperparameterTuningJobConfig::MergeFrom(const HyperparameterTuningJobConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hyperparameter_ranges()) {
    mutable_hyperparameter_ranges()->::flyteidl::plugins::sagemaker::ParameterRanges::MergeFrom(from.hyperparameter_ranges());
  }
  if (from.has_tuning_objective()) {
    mutable_tuning_objective()->::flyteidl::plugins::sagemaker::HyperparameterTuningObjective::MergeFrom(from.tuning_objective());
  }
  if (from.tuning_strategy() != 0) {
    set_tuning_strategy(from.tuning_strategy());
  }
  if (from.training_job_early_stopping_type() != 0) {
    set_training_job_early_stopping_type(from.training_job_early_stopping_type());
  }
}

void HyperparameterTuningJobConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HyperparameterTuningJobConfig::CopyFrom(const HyperparameterTuningJobConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HyperparameterTuningJobConfig::IsInitialized() const {
  return true;
}

void HyperparameterTuningJobConfig::Swap(HyperparameterTuningJobConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HyperparameterTuningJobConfig::InternalSwap(HyperparameterTuningJobConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(hyperparameter_ranges_, other->hyperparameter_ranges_);
  swap(tuning_objective_, other->tuning_objective_);
  swap(tuning_strategy_, other->tuning_strategy_);
  swap(training_job_early_stopping_type_, other->training_job_early_stopping_type_);
}

::google::protobuf::Metadata HyperparameterTuningJobConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::HyperparameterTuningJob* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::HyperparameterTuningJob >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::HyperparameterTuningJob >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
