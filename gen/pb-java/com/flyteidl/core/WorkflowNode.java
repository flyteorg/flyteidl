// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/workflow.proto

package com.flyteidl.core;

/**
 * <pre>
 * Refers to a the workflow the node is to execute.
 * </pre>
 *
 * Protobuf type {@code flyteidl.core.WorkflowNode}
 */
public final class WorkflowNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.core.WorkflowNode)
    WorkflowNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WorkflowNode.newBuilder() to construct.
  private WorkflowNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WorkflowNode() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new WorkflowNode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WorkflowNode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.flyteidl.core.Identifier.Builder subBuilder = null;
            if (referenceCase_ == 1) {
              subBuilder = ((com.flyteidl.core.Identifier) reference_).toBuilder();
            }
            reference_ =
                input.readMessage(com.flyteidl.core.Identifier.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.flyteidl.core.Identifier) reference_);
              reference_ = subBuilder.buildPartial();
            }
            referenceCase_ = 1;
            break;
          }
          case 18: {
            com.flyteidl.core.Identifier.Builder subBuilder = null;
            if (referenceCase_ == 2) {
              subBuilder = ((com.flyteidl.core.Identifier) reference_).toBuilder();
            }
            reference_ =
                input.readMessage(com.flyteidl.core.Identifier.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.flyteidl.core.Identifier) reference_);
              reference_ = subBuilder.buildPartial();
            }
            referenceCase_ = 2;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.core.WorkflowNode.class, com.flyteidl.core.WorkflowNode.Builder.class);
  }

  private int referenceCase_ = 0;
  private java.lang.Object reference_;
  public enum ReferenceCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    LAUNCHPLAN_REF(1),
    SUB_WORKFLOW_REF(2),
    REFERENCE_NOT_SET(0);
    private final int value;
    private ReferenceCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReferenceCase valueOf(int value) {
      return forNumber(value);
    }

    public static ReferenceCase forNumber(int value) {
      switch (value) {
        case 1: return LAUNCHPLAN_REF;
        case 2: return SUB_WORKFLOW_REF;
        case 0: return REFERENCE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ReferenceCase
  getReferenceCase() {
    return ReferenceCase.forNumber(
        referenceCase_);
  }

  public static final int LAUNCHPLAN_REF_FIELD_NUMBER = 1;
  /**
   * <pre>
   * A globally unique identifier for the launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
   * @return Whether the launchplanRef field is set.
   */
  @java.lang.Override
  public boolean hasLaunchplanRef() {
    return referenceCase_ == 1;
  }
  /**
   * <pre>
   * A globally unique identifier for the launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
   * @return The launchplanRef.
   */
  @java.lang.Override
  public com.flyteidl.core.Identifier getLaunchplanRef() {
    if (referenceCase_ == 1) {
       return (com.flyteidl.core.Identifier) reference_;
    }
    return com.flyteidl.core.Identifier.getDefaultInstance();
  }
  /**
   * <pre>
   * A globally unique identifier for the launch plan.
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.IdentifierOrBuilder getLaunchplanRefOrBuilder() {
    if (referenceCase_ == 1) {
       return (com.flyteidl.core.Identifier) reference_;
    }
    return com.flyteidl.core.Identifier.getDefaultInstance();
  }

  public static final int SUB_WORKFLOW_REF_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Reference to a subworkflow, that should be defined with the compiler context
   * </pre>
   *
   * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
   * @return Whether the subWorkflowRef field is set.
   */
  @java.lang.Override
  public boolean hasSubWorkflowRef() {
    return referenceCase_ == 2;
  }
  /**
   * <pre>
   * Reference to a subworkflow, that should be defined with the compiler context
   * </pre>
   *
   * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
   * @return The subWorkflowRef.
   */
  @java.lang.Override
  public com.flyteidl.core.Identifier getSubWorkflowRef() {
    if (referenceCase_ == 2) {
       return (com.flyteidl.core.Identifier) reference_;
    }
    return com.flyteidl.core.Identifier.getDefaultInstance();
  }
  /**
   * <pre>
   * Reference to a subworkflow, that should be defined with the compiler context
   * </pre>
   *
   * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.IdentifierOrBuilder getSubWorkflowRefOrBuilder() {
    if (referenceCase_ == 2) {
       return (com.flyteidl.core.Identifier) reference_;
    }
    return com.flyteidl.core.Identifier.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (referenceCase_ == 1) {
      output.writeMessage(1, (com.flyteidl.core.Identifier) reference_);
    }
    if (referenceCase_ == 2) {
      output.writeMessage(2, (com.flyteidl.core.Identifier) reference_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (referenceCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.flyteidl.core.Identifier) reference_);
    }
    if (referenceCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.flyteidl.core.Identifier) reference_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.core.WorkflowNode)) {
      return super.equals(obj);
    }
    com.flyteidl.core.WorkflowNode other = (com.flyteidl.core.WorkflowNode) obj;

    if (!getReferenceCase().equals(other.getReferenceCase())) return false;
    switch (referenceCase_) {
      case 1:
        if (!getLaunchplanRef()
            .equals(other.getLaunchplanRef())) return false;
        break;
      case 2:
        if (!getSubWorkflowRef()
            .equals(other.getSubWorkflowRef())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (referenceCase_) {
      case 1:
        hash = (37 * hash) + LAUNCHPLAN_REF_FIELD_NUMBER;
        hash = (53 * hash) + getLaunchplanRef().hashCode();
        break;
      case 2:
        hash = (37 * hash) + SUB_WORKFLOW_REF_FIELD_NUMBER;
        hash = (53 * hash) + getSubWorkflowRef().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.core.WorkflowNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.WorkflowNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.WorkflowNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.WorkflowNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.core.WorkflowNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Refers to a the workflow the node is to execute.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.WorkflowNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.core.WorkflowNode)
      com.flyteidl.core.WorkflowNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.WorkflowNode.class, com.flyteidl.core.WorkflowNode.Builder.class);
    }

    // Construct using com.flyteidl.core.WorkflowNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      referenceCase_ = 0;
      reference_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.core.WorkflowProto.internal_static_flyteidl_core_WorkflowNode_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowNode getDefaultInstanceForType() {
      return com.flyteidl.core.WorkflowNode.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowNode build() {
      com.flyteidl.core.WorkflowNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.core.WorkflowNode buildPartial() {
      com.flyteidl.core.WorkflowNode result = new com.flyteidl.core.WorkflowNode(this);
      if (referenceCase_ == 1) {
        if (launchplanRefBuilder_ == null) {
          result.reference_ = reference_;
        } else {
          result.reference_ = launchplanRefBuilder_.build();
        }
      }
      if (referenceCase_ == 2) {
        if (subWorkflowRefBuilder_ == null) {
          result.reference_ = reference_;
        } else {
          result.reference_ = subWorkflowRefBuilder_.build();
        }
      }
      result.referenceCase_ = referenceCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.core.WorkflowNode) {
        return mergeFrom((com.flyteidl.core.WorkflowNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.core.WorkflowNode other) {
      if (other == com.flyteidl.core.WorkflowNode.getDefaultInstance()) return this;
      switch (other.getReferenceCase()) {
        case LAUNCHPLAN_REF: {
          mergeLaunchplanRef(other.getLaunchplanRef());
          break;
        }
        case SUB_WORKFLOW_REF: {
          mergeSubWorkflowRef(other.getSubWorkflowRef());
          break;
        }
        case REFERENCE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.core.WorkflowNode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.core.WorkflowNode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int referenceCase_ = 0;
    private java.lang.Object reference_;
    public ReferenceCase
        getReferenceCase() {
      return ReferenceCase.forNumber(
          referenceCase_);
    }

    public Builder clearReference() {
      referenceCase_ = 0;
      reference_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder> launchplanRefBuilder_;
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     * @return Whether the launchplanRef field is set.
     */
    @java.lang.Override
    public boolean hasLaunchplanRef() {
      return referenceCase_ == 1;
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     * @return The launchplanRef.
     */
    @java.lang.Override
    public com.flyteidl.core.Identifier getLaunchplanRef() {
      if (launchplanRefBuilder_ == null) {
        if (referenceCase_ == 1) {
          return (com.flyteidl.core.Identifier) reference_;
        }
        return com.flyteidl.core.Identifier.getDefaultInstance();
      } else {
        if (referenceCase_ == 1) {
          return launchplanRefBuilder_.getMessage();
        }
        return com.flyteidl.core.Identifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    public Builder setLaunchplanRef(com.flyteidl.core.Identifier value) {
      if (launchplanRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reference_ = value;
        onChanged();
      } else {
        launchplanRefBuilder_.setMessage(value);
      }
      referenceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    public Builder setLaunchplanRef(
        com.flyteidl.core.Identifier.Builder builderForValue) {
      if (launchplanRefBuilder_ == null) {
        reference_ = builderForValue.build();
        onChanged();
      } else {
        launchplanRefBuilder_.setMessage(builderForValue.build());
      }
      referenceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    public Builder mergeLaunchplanRef(com.flyteidl.core.Identifier value) {
      if (launchplanRefBuilder_ == null) {
        if (referenceCase_ == 1 &&
            reference_ != com.flyteidl.core.Identifier.getDefaultInstance()) {
          reference_ = com.flyteidl.core.Identifier.newBuilder((com.flyteidl.core.Identifier) reference_)
              .mergeFrom(value).buildPartial();
        } else {
          reference_ = value;
        }
        onChanged();
      } else {
        if (referenceCase_ == 1) {
          launchplanRefBuilder_.mergeFrom(value);
        }
        launchplanRefBuilder_.setMessage(value);
      }
      referenceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    public Builder clearLaunchplanRef() {
      if (launchplanRefBuilder_ == null) {
        if (referenceCase_ == 1) {
          referenceCase_ = 0;
          reference_ = null;
          onChanged();
        }
      } else {
        if (referenceCase_ == 1) {
          referenceCase_ = 0;
          reference_ = null;
        }
        launchplanRefBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    public com.flyteidl.core.Identifier.Builder getLaunchplanRefBuilder() {
      return getLaunchplanRefFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierOrBuilder getLaunchplanRefOrBuilder() {
      if ((referenceCase_ == 1) && (launchplanRefBuilder_ != null)) {
        return launchplanRefBuilder_.getMessageOrBuilder();
      } else {
        if (referenceCase_ == 1) {
          return (com.flyteidl.core.Identifier) reference_;
        }
        return com.flyteidl.core.Identifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * A globally unique identifier for the launch plan.
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launchplan_ref = 1 [json_name = "launchplanRef"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder> 
        getLaunchplanRefFieldBuilder() {
      if (launchplanRefBuilder_ == null) {
        if (!(referenceCase_ == 1)) {
          reference_ = com.flyteidl.core.Identifier.getDefaultInstance();
        }
        launchplanRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder>(
                (com.flyteidl.core.Identifier) reference_,
                getParentForChildren(),
                isClean());
        reference_ = null;
      }
      referenceCase_ = 1;
      onChanged();;
      return launchplanRefBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder> subWorkflowRefBuilder_;
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     * @return Whether the subWorkflowRef field is set.
     */
    @java.lang.Override
    public boolean hasSubWorkflowRef() {
      return referenceCase_ == 2;
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     * @return The subWorkflowRef.
     */
    @java.lang.Override
    public com.flyteidl.core.Identifier getSubWorkflowRef() {
      if (subWorkflowRefBuilder_ == null) {
        if (referenceCase_ == 2) {
          return (com.flyteidl.core.Identifier) reference_;
        }
        return com.flyteidl.core.Identifier.getDefaultInstance();
      } else {
        if (referenceCase_ == 2) {
          return subWorkflowRefBuilder_.getMessage();
        }
        return com.flyteidl.core.Identifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    public Builder setSubWorkflowRef(com.flyteidl.core.Identifier value) {
      if (subWorkflowRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        reference_ = value;
        onChanged();
      } else {
        subWorkflowRefBuilder_.setMessage(value);
      }
      referenceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    public Builder setSubWorkflowRef(
        com.flyteidl.core.Identifier.Builder builderForValue) {
      if (subWorkflowRefBuilder_ == null) {
        reference_ = builderForValue.build();
        onChanged();
      } else {
        subWorkflowRefBuilder_.setMessage(builderForValue.build());
      }
      referenceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    public Builder mergeSubWorkflowRef(com.flyteidl.core.Identifier value) {
      if (subWorkflowRefBuilder_ == null) {
        if (referenceCase_ == 2 &&
            reference_ != com.flyteidl.core.Identifier.getDefaultInstance()) {
          reference_ = com.flyteidl.core.Identifier.newBuilder((com.flyteidl.core.Identifier) reference_)
              .mergeFrom(value).buildPartial();
        } else {
          reference_ = value;
        }
        onChanged();
      } else {
        if (referenceCase_ == 2) {
          subWorkflowRefBuilder_.mergeFrom(value);
        }
        subWorkflowRefBuilder_.setMessage(value);
      }
      referenceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    public Builder clearSubWorkflowRef() {
      if (subWorkflowRefBuilder_ == null) {
        if (referenceCase_ == 2) {
          referenceCase_ = 0;
          reference_ = null;
          onChanged();
        }
      } else {
        if (referenceCase_ == 2) {
          referenceCase_ = 0;
          reference_ = null;
        }
        subWorkflowRefBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    public com.flyteidl.core.Identifier.Builder getSubWorkflowRefBuilder() {
      return getSubWorkflowRefFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    @java.lang.Override
    public com.flyteidl.core.IdentifierOrBuilder getSubWorkflowRefOrBuilder() {
      if ((referenceCase_ == 2) && (subWorkflowRefBuilder_ != null)) {
        return subWorkflowRefBuilder_.getMessageOrBuilder();
      } else {
        if (referenceCase_ == 2) {
          return (com.flyteidl.core.Identifier) reference_;
        }
        return com.flyteidl.core.Identifier.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Reference to a subworkflow, that should be defined with the compiler context
     * </pre>
     *
     * <code>.flyteidl.core.Identifier sub_workflow_ref = 2 [json_name = "subWorkflowRef"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder> 
        getSubWorkflowRefFieldBuilder() {
      if (subWorkflowRefBuilder_ == null) {
        if (!(referenceCase_ == 2)) {
          reference_ = com.flyteidl.core.Identifier.getDefaultInstance();
        }
        subWorkflowRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder>(
                (com.flyteidl.core.Identifier) reference_,
                getParentForChildren(),
                isClean());
        reference_ = null;
      }
      referenceCase_ = 2;
      onChanged();;
      return subWorkflowRefBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.core.WorkflowNode)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowNode)
  private static final com.flyteidl.core.WorkflowNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.core.WorkflowNode();
  }

  public static com.flyteidl.core.WorkflowNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WorkflowNode>
      PARSER = new com.google.protobuf.AbstractParser<WorkflowNode>() {
    @java.lang.Override
    public WorkflowNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new WorkflowNode(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WorkflowNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WorkflowNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.core.WorkflowNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

