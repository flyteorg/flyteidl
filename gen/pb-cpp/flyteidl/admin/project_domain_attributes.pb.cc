// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/project_domain_attributes.proto

#include "flyteidl/admin/project_domain_attributes.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace admin {
constexpr ProjectDomainAttributes::ProjectDomainAttributes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matching_attributes_(nullptr){}
struct ProjectDomainAttributesDefaultTypeInternal {
  constexpr ProjectDomainAttributesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectDomainAttributesDefaultTypeInternal() {}
  union {
    ProjectDomainAttributes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectDomainAttributesDefaultTypeInternal _ProjectDomainAttributes_default_instance_;
constexpr ProjectDomainAttributesUpdateRequest::ProjectDomainAttributesUpdateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : attributes_(nullptr){}
struct ProjectDomainAttributesUpdateRequestDefaultTypeInternal {
  constexpr ProjectDomainAttributesUpdateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectDomainAttributesUpdateRequestDefaultTypeInternal() {}
  union {
    ProjectDomainAttributesUpdateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectDomainAttributesUpdateRequestDefaultTypeInternal _ProjectDomainAttributesUpdateRequest_default_instance_;
constexpr ProjectDomainAttributesUpdateResponse::ProjectDomainAttributesUpdateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ProjectDomainAttributesUpdateResponseDefaultTypeInternal {
  constexpr ProjectDomainAttributesUpdateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectDomainAttributesUpdateResponseDefaultTypeInternal() {}
  union {
    ProjectDomainAttributesUpdateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectDomainAttributesUpdateResponseDefaultTypeInternal _ProjectDomainAttributesUpdateResponse_default_instance_;
constexpr ProjectDomainAttributesGetRequest::ProjectDomainAttributesGetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_type_(0)
{}
struct ProjectDomainAttributesGetRequestDefaultTypeInternal {
  constexpr ProjectDomainAttributesGetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectDomainAttributesGetRequestDefaultTypeInternal() {}
  union {
    ProjectDomainAttributesGetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectDomainAttributesGetRequestDefaultTypeInternal _ProjectDomainAttributesGetRequest_default_instance_;
constexpr ProjectDomainAttributesGetResponse::ProjectDomainAttributesGetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : attributes_(nullptr){}
struct ProjectDomainAttributesGetResponseDefaultTypeInternal {
  constexpr ProjectDomainAttributesGetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectDomainAttributesGetResponseDefaultTypeInternal() {}
  union {
    ProjectDomainAttributesGetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectDomainAttributesGetResponseDefaultTypeInternal _ProjectDomainAttributesGetResponse_default_instance_;
constexpr ProjectDomainAttributesDeleteRequest::ProjectDomainAttributesDeleteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : project_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , domain_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resource_type_(0)
{}
struct ProjectDomainAttributesDeleteRequestDefaultTypeInternal {
  constexpr ProjectDomainAttributesDeleteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectDomainAttributesDeleteRequestDefaultTypeInternal() {}
  union {
    ProjectDomainAttributesDeleteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectDomainAttributesDeleteRequestDefaultTypeInternal _ProjectDomainAttributesDeleteRequest_default_instance_;
constexpr ProjectDomainAttributesDeleteResponse::ProjectDomainAttributesDeleteResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ProjectDomainAttributesDeleteResponseDefaultTypeInternal {
  constexpr ProjectDomainAttributesDeleteResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProjectDomainAttributesDeleteResponseDefaultTypeInternal() {}
  union {
    ProjectDomainAttributesDeleteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProjectDomainAttributesDeleteResponseDefaultTypeInternal _ProjectDomainAttributesDeleteResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributes, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributes, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributes, matching_attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesUpdateRequest, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesGetRequest, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesGetRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesGetRequest, resource_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesGetResponse, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesDeleteRequest, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesDeleteRequest, domain_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesDeleteRequest, resource_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectDomainAttributesDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::admin::ProjectDomainAttributes)},
  { 9, -1, -1, sizeof(::flyteidl::admin::ProjectDomainAttributesUpdateRequest)},
  { 16, -1, -1, sizeof(::flyteidl::admin::ProjectDomainAttributesUpdateResponse)},
  { 22, -1, -1, sizeof(::flyteidl::admin::ProjectDomainAttributesGetRequest)},
  { 31, -1, -1, sizeof(::flyteidl::admin::ProjectDomainAttributesGetResponse)},
  { 38, -1, -1, sizeof(::flyteidl::admin::ProjectDomainAttributesDeleteRequest)},
  { 47, -1, -1, sizeof(::flyteidl::admin::ProjectDomainAttributesDeleteResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ProjectDomainAttributes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ProjectDomainAttributesUpdateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ProjectDomainAttributesUpdateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ProjectDomainAttributesGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ProjectDomainAttributesGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ProjectDomainAttributesDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::admin::_ProjectDomainAttributesDeleteResponse_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.flyteidl/admin/project_domain_attribut"
  "es.proto\022\016flyteidl.admin\032\'flyteidl/admin"
  "/matchable_resource.proto\"\240\001\n\027ProjectDom"
  "ainAttributes\022\030\n\007project\030\001 \001(\tR\007project\022"
  "\026\n\006domain\030\002 \001(\tR\006domain\022S\n\023matching_attr"
  "ibutes\030\003 \001(\0132\".flyteidl.admin.MatchingAt"
  "tributesR\022matchingAttributes\"o\n$ProjectD"
  "omainAttributesUpdateRequest\022G\n\nattribut"
  "es\030\001 \001(\0132\'.flyteidl.admin.ProjectDomainA"
  "ttributesR\nattributes\"\'\n%ProjectDomainAt"
  "tributesUpdateResponse\"\235\001\n!ProjectDomain"
  "AttributesGetRequest\022\030\n\007project\030\001 \001(\tR\007p"
  "roject\022\026\n\006domain\030\002 \001(\tR\006domain\022F\n\rresour"
  "ce_type\030\003 \001(\0162!.flyteidl.admin.Matchable"
  "ResourceR\014resourceType\"m\n\"ProjectDomainA"
  "ttributesGetResponse\022G\n\nattributes\030\001 \001(\013"
  "2\'.flyteidl.admin.ProjectDomainAttribute"
  "sR\nattributes\"\240\001\n$ProjectDomainAttribute"
  "sDeleteRequest\022\030\n\007project\030\001 \001(\tR\007project"
  "\022\026\n\006domain\030\002 \001(\tR\006domain\022F\n\rresource_typ"
  "e\030\003 \001(\0162!.flyteidl.admin.MatchableResour"
  "ceR\014resourceType\"\'\n%ProjectDomainAttribu"
  "tesDeleteResponseB\305\001\n\022com.flyteidl.admin"
  "B\034ProjectDomainAttributesProtoH\002Z5github"
  ".com/flyteorg/flyteidl/gen/pb-go/flyteid"
  "l/admin\370\001\000\242\002\003FAX\252\002\016Flyteidl.Admin\312\002\016Flyt"
  "eidl\\Admin\342\002\032Flyteidl\\Admin\\GPBMetadata\352"
  "\002\017Flyteidl::Adminb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_deps[1] = {
  &::descriptor_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto = {
  false, false, 1105, descriptor_table_protodef_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto, "flyteidl/admin/project_domain_attributes.proto", 
  &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once, descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_deps, 1, 7,
  schemas, file_default_instances, TableStruct_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto, file_level_enum_descriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter() {
  return &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto(&descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto);
namespace flyteidl {
namespace admin {

// ===================================================================

class ProjectDomainAttributes::_Internal {
 public:
  static const ::flyteidl::admin::MatchingAttributes& matching_attributes(const ProjectDomainAttributes* msg);
};

const ::flyteidl::admin::MatchingAttributes&
ProjectDomainAttributes::_Internal::matching_attributes(const ProjectDomainAttributes* msg) {
  return *msg->matching_attributes_;
}
void ProjectDomainAttributes::clear_matching_attributes() {
  if (GetArenaForAllocation() == nullptr && matching_attributes_ != nullptr) {
    delete matching_attributes_;
  }
  matching_attributes_ = nullptr;
}
ProjectDomainAttributes::ProjectDomainAttributes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ProjectDomainAttributes)
}
ProjectDomainAttributes::ProjectDomainAttributes(const ProjectDomainAttributes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_project().empty()) {
    project_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_matching_attributes()) {
    matching_attributes_ = new ::flyteidl::admin::MatchingAttributes(*from.matching_attributes_);
  } else {
    matching_attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectDomainAttributes)
}

inline void ProjectDomainAttributes::SharedCtor() {
project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
matching_attributes_ = nullptr;
}

ProjectDomainAttributes::~ProjectDomainAttributes() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectDomainAttributes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProjectDomainAttributes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete matching_attributes_;
}

void ProjectDomainAttributes::ArenaDtor(void* object) {
  ProjectDomainAttributes* _this = reinterpret_cast< ProjectDomainAttributes* >(object);
  (void)_this;
}
void ProjectDomainAttributes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectDomainAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectDomainAttributes::InternalSwap(ProjectDomainAttributes* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectDomainAttributes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[0]);
}

// ===================================================================

class ProjectDomainAttributesUpdateRequest::_Internal {
 public:
  static const ::flyteidl::admin::ProjectDomainAttributes& attributes(const ProjectDomainAttributesUpdateRequest* msg);
};

const ::flyteidl::admin::ProjectDomainAttributes&
ProjectDomainAttributesUpdateRequest::_Internal::attributes(const ProjectDomainAttributesUpdateRequest* msg) {
  return *msg->attributes_;
}
ProjectDomainAttributesUpdateRequest::ProjectDomainAttributesUpdateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ProjectDomainAttributesUpdateRequest)
}
ProjectDomainAttributesUpdateRequest::ProjectDomainAttributesUpdateRequest(const ProjectDomainAttributesUpdateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_attributes()) {
    attributes_ = new ::flyteidl::admin::ProjectDomainAttributes(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectDomainAttributesUpdateRequest)
}

inline void ProjectDomainAttributesUpdateRequest::SharedCtor() {
attributes_ = nullptr;
}

ProjectDomainAttributesUpdateRequest::~ProjectDomainAttributesUpdateRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectDomainAttributesUpdateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProjectDomainAttributesUpdateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete attributes_;
}

void ProjectDomainAttributesUpdateRequest::ArenaDtor(void* object) {
  ProjectDomainAttributesUpdateRequest* _this = reinterpret_cast< ProjectDomainAttributesUpdateRequest* >(object);
  (void)_this;
}
void ProjectDomainAttributesUpdateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectDomainAttributesUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectDomainAttributesUpdateRequest::InternalSwap(ProjectDomainAttributesUpdateRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectDomainAttributesUpdateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[1]);
}

// ===================================================================

class ProjectDomainAttributesUpdateResponse::_Internal {
 public:
};

ProjectDomainAttributesUpdateResponse::ProjectDomainAttributesUpdateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ProjectDomainAttributesUpdateResponse)
}
ProjectDomainAttributesUpdateResponse::ProjectDomainAttributesUpdateResponse(const ProjectDomainAttributesUpdateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectDomainAttributesUpdateResponse)
}



::PROTOBUF_NAMESPACE_ID::Metadata ProjectDomainAttributesUpdateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[2]);
}

// ===================================================================

class ProjectDomainAttributesGetRequest::_Internal {
 public:
};

ProjectDomainAttributesGetRequest::ProjectDomainAttributesGetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ProjectDomainAttributesGetRequest)
}
ProjectDomainAttributesGetRequest::ProjectDomainAttributesGetRequest(const ProjectDomainAttributesGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_project().empty()) {
    project_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectDomainAttributesGetRequest)
}

inline void ProjectDomainAttributesGetRequest::SharedCtor() {
project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_type_ = 0;
}

ProjectDomainAttributesGetRequest::~ProjectDomainAttributesGetRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectDomainAttributesGetRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProjectDomainAttributesGetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProjectDomainAttributesGetRequest::ArenaDtor(void* object) {
  ProjectDomainAttributesGetRequest* _this = reinterpret_cast< ProjectDomainAttributesGetRequest* >(object);
  (void)_this;
}
void ProjectDomainAttributesGetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectDomainAttributesGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectDomainAttributesGetRequest::InternalSwap(ProjectDomainAttributesGetRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectDomainAttributesGetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[3]);
}

// ===================================================================

class ProjectDomainAttributesGetResponse::_Internal {
 public:
  static const ::flyteidl::admin::ProjectDomainAttributes& attributes(const ProjectDomainAttributesGetResponse* msg);
};

const ::flyteidl::admin::ProjectDomainAttributes&
ProjectDomainAttributesGetResponse::_Internal::attributes(const ProjectDomainAttributesGetResponse* msg) {
  return *msg->attributes_;
}
ProjectDomainAttributesGetResponse::ProjectDomainAttributesGetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ProjectDomainAttributesGetResponse)
}
ProjectDomainAttributesGetResponse::ProjectDomainAttributesGetResponse(const ProjectDomainAttributesGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_attributes()) {
    attributes_ = new ::flyteidl::admin::ProjectDomainAttributes(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectDomainAttributesGetResponse)
}

inline void ProjectDomainAttributesGetResponse::SharedCtor() {
attributes_ = nullptr;
}

ProjectDomainAttributesGetResponse::~ProjectDomainAttributesGetResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectDomainAttributesGetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProjectDomainAttributesGetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete attributes_;
}

void ProjectDomainAttributesGetResponse::ArenaDtor(void* object) {
  ProjectDomainAttributesGetResponse* _this = reinterpret_cast< ProjectDomainAttributesGetResponse* >(object);
  (void)_this;
}
void ProjectDomainAttributesGetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectDomainAttributesGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectDomainAttributesGetResponse::InternalSwap(ProjectDomainAttributesGetResponse* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectDomainAttributesGetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[4]);
}

// ===================================================================

class ProjectDomainAttributesDeleteRequest::_Internal {
 public:
};

ProjectDomainAttributesDeleteRequest::ProjectDomainAttributesDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ProjectDomainAttributesDeleteRequest)
}
ProjectDomainAttributesDeleteRequest::ProjectDomainAttributesDeleteRequest(const ProjectDomainAttributesDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_project().empty()) {
    project_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_project(), 
      GetArenaForAllocation());
  }
  domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_domain().empty()) {
    domain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_domain(), 
      GetArenaForAllocation());
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectDomainAttributesDeleteRequest)
}

inline void ProjectDomainAttributesDeleteRequest::SharedCtor() {
project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
domain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  domain_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resource_type_ = 0;
}

ProjectDomainAttributesDeleteRequest::~ProjectDomainAttributesDeleteRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectDomainAttributesDeleteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProjectDomainAttributesDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProjectDomainAttributesDeleteRequest::ArenaDtor(void* object) {
  ProjectDomainAttributesDeleteRequest* _this = reinterpret_cast< ProjectDomainAttributesDeleteRequest* >(object);
  (void)_this;
}
void ProjectDomainAttributesDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProjectDomainAttributesDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProjectDomainAttributesDeleteRequest::InternalSwap(ProjectDomainAttributesDeleteRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectDomainAttributesDeleteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[5]);
}

// ===================================================================

class ProjectDomainAttributesDeleteResponse::_Internal {
 public:
};

ProjectDomainAttributesDeleteResponse::ProjectDomainAttributesDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.admin.ProjectDomainAttributesDeleteResponse)
}
ProjectDomainAttributesDeleteResponse::ProjectDomainAttributesDeleteResponse(const ProjectDomainAttributesDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectDomainAttributesDeleteResponse)
}



::PROTOBUF_NAMESPACE_ID::Metadata ProjectDomainAttributesDeleteResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_getter, &descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto_once,
      file_level_metadata_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectDomainAttributes* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectDomainAttributes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ProjectDomainAttributes >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectDomainAttributesUpdateRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectDomainAttributesUpdateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ProjectDomainAttributesUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectDomainAttributesUpdateResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectDomainAttributesUpdateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ProjectDomainAttributesUpdateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectDomainAttributesGetRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectDomainAttributesGetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ProjectDomainAttributesGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectDomainAttributesGetResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectDomainAttributesGetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ProjectDomainAttributesGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectDomainAttributesDeleteRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectDomainAttributesDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ProjectDomainAttributesDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectDomainAttributesDeleteResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectDomainAttributesDeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::admin::ProjectDomainAttributesDeleteResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
