// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/interface.proto

#include "flyteidl/core/interface.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace core {
constexpr Variable::Variable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(nullptr){}
struct VariableDefaultTypeInternal {
  constexpr VariableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VariableDefaultTypeInternal() {}
  union {
    Variable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VariableDefaultTypeInternal _Variable_default_instance_;
constexpr VariableMap_VariablesEntry_DoNotUse::VariableMap_VariablesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct VariableMap_VariablesEntry_DoNotUseDefaultTypeInternal {
  constexpr VariableMap_VariablesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VariableMap_VariablesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    VariableMap_VariablesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VariableMap_VariablesEntry_DoNotUseDefaultTypeInternal _VariableMap_VariablesEntry_DoNotUse_default_instance_;
constexpr VariableMap::VariableMap(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : variables_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct VariableMapDefaultTypeInternal {
  constexpr VariableMapDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VariableMapDefaultTypeInternal() {}
  union {
    VariableMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VariableMapDefaultTypeInternal _VariableMap_default_instance_;
constexpr TypedInterface::TypedInterface(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : inputs_(nullptr)
  , outputs_(nullptr){}
struct TypedInterfaceDefaultTypeInternal {
  constexpr TypedInterfaceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TypedInterfaceDefaultTypeInternal() {}
  union {
    TypedInterface _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TypedInterfaceDefaultTypeInternal _TypedInterface_default_instance_;
constexpr Parameter::Parameter(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : var_(nullptr)
  , _oneof_case_{}{}
struct ParameterDefaultTypeInternal {
  constexpr ParameterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParameterDefaultTypeInternal() {}
  union {
    Parameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParameterDefaultTypeInternal _Parameter_default_instance_;
constexpr ParameterMap_ParametersEntry_DoNotUse::ParameterMap_ParametersEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ParameterMap_ParametersEntry_DoNotUseDefaultTypeInternal {
  constexpr ParameterMap_ParametersEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParameterMap_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ParameterMap_ParametersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParameterMap_ParametersEntry_DoNotUseDefaultTypeInternal _ParameterMap_ParametersEntry_DoNotUse_default_instance_;
constexpr ParameterMap::ParameterMap(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parameters_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ParameterMapDefaultTypeInternal {
  constexpr ParameterMapDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParameterMapDefaultTypeInternal() {}
  union {
    ParameterMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParameterMapDefaultTypeInternal _ParameterMap_default_instance_;
}  // namespace core
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fcore_2finterface_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fcore_2finterface_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fcore_2finterface_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fcore_2finterface_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Variable, type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Variable, description_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::VariableMap, variables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::TypedInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::TypedInterface, inputs_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::TypedInterface, outputs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, var_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::Parameter, behavior_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ParameterMap, parameters_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::core::Variable)},
  { 8, 16, -1, sizeof(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse)},
  { 18, -1, -1, sizeof(::flyteidl::core::VariableMap)},
  { 25, -1, -1, sizeof(::flyteidl::core::TypedInterface)},
  { 33, -1, -1, sizeof(::flyteidl::core::Parameter)},
  { 43, 51, -1, sizeof(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse)},
  { 53, -1, -1, sizeof(::flyteidl::core::ParameterMap)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_Variable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_VariableMap_VariablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_VariableMap_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_TypedInterface_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_Parameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_ParameterMap_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::core::_ParameterMap_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fcore_2finterface_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035flyteidl/core/interface.proto\022\rflyteid"
  "l.core\032\031flyteidl/core/types.proto\032\034flyte"
  "idl/core/literals.proto\"\\\n\010Variable\022.\n\004t"
  "ype\030\001 \001(\0132\032.flyteidl.core.LiteralTypeR\004t"
  "ype\022 \n\013description\030\002 \001(\tR\013description\"\255\001"
  "\n\013VariableMap\022G\n\tvariables\030\001 \003(\0132).flyte"
  "idl.core.VariableMap.VariablesEntryR\tvar"
  "iables\032U\n\016VariablesEntry\022\020\n\003key\030\001 \001(\tR\003k"
  "ey\022-\n\005value\030\002 \001(\0132\027.flyteidl.core.Variab"
  "leR\005value:\0028\001\"z\n\016TypedInterface\0222\n\006input"
  "s\030\001 \001(\0132\032.flyteidl.core.VariableMapR\006inp"
  "uts\0224\n\007outputs\030\002 \001(\0132\032.flyteidl.core.Var"
  "iableMapR\007outputs\"\224\001\n\tParameter\022)\n\003var\030\001"
  " \001(\0132\027.flyteidl.core.VariableR\003var\0222\n\007de"
  "fault\030\002 \001(\0132\026.flyteidl.core.LiteralH\000R\007d"
  "efault\022\034\n\010required\030\003 \001(\010H\000R\010requiredB\n\n\010"
  "behavior\"\264\001\n\014ParameterMap\022K\n\nparameters\030"
  "\001 \003(\0132+.flyteidl.core.ParameterMap.Param"
  "etersEntryR\nparameters\032W\n\017ParametersEntr"
  "y\022\020\n\003key\030\001 \001(\tR\003key\022.\n\005value\030\002 \001(\0132\030.fly"
  "teidl.core.ParameterR\005value:\0028\001B\261\001\n\021com."
  "flyteidl.coreB\016InterfaceProtoH\002Z4github."
  "com/flyteorg/flyteidl/gen/pb-go/flyteidl"
  "/core\370\001\000\242\002\003FCX\252\002\rFlyteidl.Core\312\002\rFlyteid"
  "l\\Core\342\002\031Flyteidl\\Core\\GPBMetadata\352\002\016Fly"
  "teidl::Coreb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_flyteidl_2fcore_2finterface_2eproto_deps[2] = {
  &::descriptor_table_flyteidl_2fcore_2fliterals_2eproto,
  &::descriptor_table_flyteidl_2fcore_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fcore_2finterface_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fcore_2finterface_2eproto = {
  false, false, 1019, descriptor_table_protodef_flyteidl_2fcore_2finterface_2eproto, "flyteidl/core/interface.proto", 
  &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once, descriptor_table_flyteidl_2fcore_2finterface_2eproto_deps, 2, 7,
  schemas, file_default_instances, TableStruct_flyteidl_2fcore_2finterface_2eproto::offsets,
  file_level_metadata_flyteidl_2fcore_2finterface_2eproto, file_level_enum_descriptors_flyteidl_2fcore_2finterface_2eproto, file_level_service_descriptors_flyteidl_2fcore_2finterface_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter() {
  return &descriptor_table_flyteidl_2fcore_2finterface_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fcore_2finterface_2eproto(&descriptor_table_flyteidl_2fcore_2finterface_2eproto);
namespace flyteidl {
namespace core {

// ===================================================================

class Variable::_Internal {
 public:
  static const ::flyteidl::core::LiteralType& type(const Variable* msg);
};

const ::flyteidl::core::LiteralType&
Variable::_Internal::type(const Variable* msg) {
  return *msg->type_;
}
void Variable::clear_type() {
  if (GetArenaForAllocation() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
}
Variable::Variable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.Variable)
}
Variable::Variable(const Variable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_type()) {
    type_ = new ::flyteidl::core::LiteralType(*from.type_);
  } else {
    type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Variable)
}

inline void Variable::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = nullptr;
}

Variable::~Variable() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Variable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Variable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Variable::ArenaDtor(void* object) {
  Variable* _this = reinterpret_cast< Variable* >(object);
  (void)_this;
}
void Variable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Variable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Variable::InternalSwap(Variable* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Variable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter, &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2finterface_2eproto[0]);
}

// ===================================================================

VariableMap_VariablesEntry_DoNotUse::VariableMap_VariablesEntry_DoNotUse() {}
VariableMap_VariablesEntry_DoNotUse::VariableMap_VariablesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void VariableMap_VariablesEntry_DoNotUse::MergeFrom(const VariableMap_VariablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata VariableMap_VariablesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter, &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2finterface_2eproto[1]);
}

// ===================================================================

class VariableMap::_Internal {
 public:
};

VariableMap::VariableMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  variables_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.VariableMap)
}
VariableMap::VariableMap(const VariableMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  variables_.MergeFrom(from.variables_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.VariableMap)
}

inline void VariableMap::SharedCtor() {
}

VariableMap::~VariableMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.VariableMap)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void VariableMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VariableMap::ArenaDtor(void* object) {
  VariableMap* _this = reinterpret_cast< VariableMap* >(object);
  (void)_this;
  _this->variables_. ~MapField();
}
inline void VariableMap::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &VariableMap::ArenaDtor);
  }
}
void VariableMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VariableMap::InternalSwap(VariableMap* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata VariableMap::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter, &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2finterface_2eproto[2]);
}

// ===================================================================

class TypedInterface::_Internal {
 public:
  static const ::flyteidl::core::VariableMap& inputs(const TypedInterface* msg);
  static const ::flyteidl::core::VariableMap& outputs(const TypedInterface* msg);
};

const ::flyteidl::core::VariableMap&
TypedInterface::_Internal::inputs(const TypedInterface* msg) {
  return *msg->inputs_;
}
const ::flyteidl::core::VariableMap&
TypedInterface::_Internal::outputs(const TypedInterface* msg) {
  return *msg->outputs_;
}
TypedInterface::TypedInterface(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.TypedInterface)
}
TypedInterface::TypedInterface(const TypedInterface& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_inputs()) {
    inputs_ = new ::flyteidl::core::VariableMap(*from.inputs_);
  } else {
    inputs_ = nullptr;
  }
  if (from._internal_has_outputs()) {
    outputs_ = new ::flyteidl::core::VariableMap(*from.outputs_);
  } else {
    outputs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.TypedInterface)
}

inline void TypedInterface::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&inputs_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&outputs_) -
    reinterpret_cast<char*>(&inputs_)) + sizeof(outputs_));
}

TypedInterface::~TypedInterface() {
  // @@protoc_insertion_point(destructor:flyteidl.core.TypedInterface)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TypedInterface::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete inputs_;
  if (this != internal_default_instance()) delete outputs_;
}

void TypedInterface::ArenaDtor(void* object) {
  TypedInterface* _this = reinterpret_cast< TypedInterface* >(object);
  (void)_this;
}
void TypedInterface::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TypedInterface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TypedInterface::InternalSwap(TypedInterface* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata TypedInterface::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter, &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2finterface_2eproto[3]);
}

// ===================================================================

class Parameter::_Internal {
 public:
  static const ::flyteidl::core::Variable& var(const Parameter* msg);
  static const ::flyteidl::core::Literal& default_(const Parameter* msg);
};

const ::flyteidl::core::Variable&
Parameter::_Internal::var(const Parameter* msg) {
  return *msg->var_;
}
const ::flyteidl::core::Literal&
Parameter::_Internal::default_(const Parameter* msg) {
  return *msg->behavior_.default__;
}
void Parameter::set_allocated_default_(::flyteidl::core::Literal* default_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_behavior();
  if (default_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(default_));
    if (message_arena != submessage_arena) {
      default_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, default_, submessage_arena);
    }
    set_has_default_();
    behavior_.default__ = default_;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Parameter.default)
}
void Parameter::clear_default_() {
  if (_internal_has_default_()) {
    if (GetArenaForAllocation() == nullptr) {
      delete behavior_.default__;
    }
    clear_has_behavior();
  }
}
Parameter::Parameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.Parameter)
}
Parameter::Parameter(const Parameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_var()) {
    var_ = new ::flyteidl::core::Variable(*from.var_);
  } else {
    var_ = nullptr;
  }
  clear_has_behavior();
  switch (from.behavior_case()) {
    case kDefault: {
      _internal_mutable_default_()->::flyteidl::core::Literal::MergeFrom(from._internal_default_());
      break;
    }
    case kRequired: {
      _internal_set_required(from._internal_required());
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Parameter)
}

inline void Parameter::SharedCtor() {
var_ = nullptr;
clear_has_behavior();
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Parameter)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete var_;
  if (has_behavior()) {
    clear_behavior();
  }
}

void Parameter::ArenaDtor(void* object) {
  Parameter* _this = reinterpret_cast< Parameter* >(object);
  (void)_this;
}
void Parameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Parameter::clear_behavior() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.Parameter)
  switch (behavior_case()) {
    case kDefault: {
      if (GetArenaForAllocation() == nullptr) {
        delete behavior_.default__;
      }
      break;
    }
    case kRequired: {
      // No need to clear
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BEHAVIOR_NOT_SET;
}


void Parameter::InternalSwap(Parameter* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Parameter::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter, &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2finterface_2eproto[4]);
}

// ===================================================================

ParameterMap_ParametersEntry_DoNotUse::ParameterMap_ParametersEntry_DoNotUse() {}
ParameterMap_ParametersEntry_DoNotUse::ParameterMap_ParametersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ParameterMap_ParametersEntry_DoNotUse::MergeFrom(const ParameterMap_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ParameterMap_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter, &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2finterface_2eproto[5]);
}

// ===================================================================

class ParameterMap::_Internal {
 public:
};

ParameterMap::ParameterMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameters_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.core.ParameterMap)
}
ParameterMap::ParameterMap(const ParameterMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ParameterMap)
}

inline void ParameterMap::SharedCtor() {
}

ParameterMap::~ParameterMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ParameterMap)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ParameterMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ParameterMap::ArenaDtor(void* object) {
  ParameterMap* _this = reinterpret_cast< ParameterMap* >(object);
  (void)_this;
  _this->parameters_. ~MapField();
}
inline void ParameterMap::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ParameterMap::ArenaDtor);
  }
}
void ParameterMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ParameterMap::InternalSwap(ParameterMap* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterMap::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fcore_2finterface_2eproto_getter, &descriptor_table_flyteidl_2fcore_2finterface_2eproto_once,
      file_level_metadata_flyteidl_2fcore_2finterface_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::core::Variable* Arena::CreateMaybeMessage< ::flyteidl::core::Variable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::Variable >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::VariableMap_VariablesEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::core::VariableMap_VariablesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::VariableMap_VariablesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::VariableMap* Arena::CreateMaybeMessage< ::flyteidl::core::VariableMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::VariableMap >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::TypedInterface* Arena::CreateMaybeMessage< ::flyteidl::core::TypedInterface >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::TypedInterface >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::Parameter* Arena::CreateMaybeMessage< ::flyteidl::core::Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::Parameter >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::core::ParameterMap* Arena::CreateMaybeMessage< ::flyteidl::core::ParameterMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::core::ParameterMap >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
