// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto

package com.flyteidl.plugins.sagemaker;

/**
 * <pre>
 * A pass-through for SageMaker's hyperparameter tuning job
 * </pre>
 *
 * Protobuf type {@code flyteidl.plugins.sagemaker.HyperparameterTuningJob}
 */
public final class HyperparameterTuningJob extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
    HyperparameterTuningJobOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HyperparameterTuningJob.newBuilder() to construct.
  private HyperparameterTuningJob(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HyperparameterTuningJob() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HyperparameterTuningJob();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HyperparameterTuningJob(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.flyteidl.plugins.sagemaker.TrainingJob.Builder subBuilder = null;
            if (trainingJob_ != null) {
              subBuilder = trainingJob_.toBuilder();
            }
            trainingJob_ = input.readMessage(com.flyteidl.plugins.sagemaker.TrainingJob.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(trainingJob_);
              trainingJob_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            maxNumberOfTrainingJobs_ = input.readInt64();
            break;
          }
          case 24: {

            maxParallelTrainingJobs_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.plugins.sagemaker.HyperparameterTuningJobProto.internal_static_flyteidl_plugins_sagemaker_HyperparameterTuningJob_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.plugins.sagemaker.HyperparameterTuningJobProto.internal_static_flyteidl_plugins_sagemaker_HyperparameterTuningJob_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.plugins.sagemaker.HyperparameterTuningJob.class, com.flyteidl.plugins.sagemaker.HyperparameterTuningJob.Builder.class);
  }

  public static final int TRAINING_JOB_FIELD_NUMBER = 1;
  private com.flyteidl.plugins.sagemaker.TrainingJob trainingJob_;
  /**
   * <pre>
   * The underlying training job that the hyperparameter tuning job will launch during the process
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
   * @return Whether the trainingJob field is set.
   */
  @java.lang.Override
  public boolean hasTrainingJob() {
    return trainingJob_ != null;
  }
  /**
   * <pre>
   * The underlying training job that the hyperparameter tuning job will launch during the process
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
   * @return The trainingJob.
   */
  @java.lang.Override
  public com.flyteidl.plugins.sagemaker.TrainingJob getTrainingJob() {
    return trainingJob_ == null ? com.flyteidl.plugins.sagemaker.TrainingJob.getDefaultInstance() : trainingJob_;
  }
  /**
   * <pre>
   * The underlying training job that the hyperparameter tuning job will launch during the process
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
   */
  @java.lang.Override
  public com.flyteidl.plugins.sagemaker.TrainingJobOrBuilder getTrainingJobOrBuilder() {
    return getTrainingJob();
  }

  public static final int MAX_NUMBER_OF_TRAINING_JOBS_FIELD_NUMBER = 2;
  private long maxNumberOfTrainingJobs_;
  /**
   * <pre>
   * The maximum number of training jobs that an hpo job can launch. For resource limit purpose.
   * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
   * </pre>
   *
   * <code>int64 max_number_of_training_jobs = 2 [json_name = "maxNumberOfTrainingJobs"];</code>
   * @return The maxNumberOfTrainingJobs.
   */
  @java.lang.Override
  public long getMaxNumberOfTrainingJobs() {
    return maxNumberOfTrainingJobs_;
  }

  public static final int MAX_PARALLEL_TRAINING_JOBS_FIELD_NUMBER = 3;
  private long maxParallelTrainingJobs_;
  /**
   * <pre>
   * The maximum number of concurrent training job that an hpo job can launch
   * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
   * </pre>
   *
   * <code>int64 max_parallel_training_jobs = 3 [json_name = "maxParallelTrainingJobs"];</code>
   * @return The maxParallelTrainingJobs.
   */
  @java.lang.Override
  public long getMaxParallelTrainingJobs() {
    return maxParallelTrainingJobs_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (trainingJob_ != null) {
      output.writeMessage(1, getTrainingJob());
    }
    if (maxNumberOfTrainingJobs_ != 0L) {
      output.writeInt64(2, maxNumberOfTrainingJobs_);
    }
    if (maxParallelTrainingJobs_ != 0L) {
      output.writeInt64(3, maxParallelTrainingJobs_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (trainingJob_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTrainingJob());
    }
    if (maxNumberOfTrainingJobs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, maxNumberOfTrainingJobs_);
    }
    if (maxParallelTrainingJobs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, maxParallelTrainingJobs_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.plugins.sagemaker.HyperparameterTuningJob)) {
      return super.equals(obj);
    }
    com.flyteidl.plugins.sagemaker.HyperparameterTuningJob other = (com.flyteidl.plugins.sagemaker.HyperparameterTuningJob) obj;

    if (hasTrainingJob() != other.hasTrainingJob()) return false;
    if (hasTrainingJob()) {
      if (!getTrainingJob()
          .equals(other.getTrainingJob())) return false;
    }
    if (getMaxNumberOfTrainingJobs()
        != other.getMaxNumberOfTrainingJobs()) return false;
    if (getMaxParallelTrainingJobs()
        != other.getMaxParallelTrainingJobs()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTrainingJob()) {
      hash = (37 * hash) + TRAINING_JOB_FIELD_NUMBER;
      hash = (53 * hash) + getTrainingJob().hashCode();
    }
    hash = (37 * hash) + MAX_NUMBER_OF_TRAINING_JOBS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxNumberOfTrainingJobs());
    hash = (37 * hash) + MAX_PARALLEL_TRAINING_JOBS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxParallelTrainingJobs());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.plugins.sagemaker.HyperparameterTuningJob prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A pass-through for SageMaker's hyperparameter tuning job
   * </pre>
   *
   * Protobuf type {@code flyteidl.plugins.sagemaker.HyperparameterTuningJob}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
      com.flyteidl.plugins.sagemaker.HyperparameterTuningJobOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.plugins.sagemaker.HyperparameterTuningJobProto.internal_static_flyteidl_plugins_sagemaker_HyperparameterTuningJob_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.plugins.sagemaker.HyperparameterTuningJobProto.internal_static_flyteidl_plugins_sagemaker_HyperparameterTuningJob_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.plugins.sagemaker.HyperparameterTuningJob.class, com.flyteidl.plugins.sagemaker.HyperparameterTuningJob.Builder.class);
    }

    // Construct using com.flyteidl.plugins.sagemaker.HyperparameterTuningJob.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (trainingJobBuilder_ == null) {
        trainingJob_ = null;
      } else {
        trainingJob_ = null;
        trainingJobBuilder_ = null;
      }
      maxNumberOfTrainingJobs_ = 0L;

      maxParallelTrainingJobs_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.plugins.sagemaker.HyperparameterTuningJobProto.internal_static_flyteidl_plugins_sagemaker_HyperparameterTuningJob_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.HyperparameterTuningJob getDefaultInstanceForType() {
      return com.flyteidl.plugins.sagemaker.HyperparameterTuningJob.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.HyperparameterTuningJob build() {
      com.flyteidl.plugins.sagemaker.HyperparameterTuningJob result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.plugins.sagemaker.HyperparameterTuningJob buildPartial() {
      com.flyteidl.plugins.sagemaker.HyperparameterTuningJob result = new com.flyteidl.plugins.sagemaker.HyperparameterTuningJob(this);
      if (trainingJobBuilder_ == null) {
        result.trainingJob_ = trainingJob_;
      } else {
        result.trainingJob_ = trainingJobBuilder_.build();
      }
      result.maxNumberOfTrainingJobs_ = maxNumberOfTrainingJobs_;
      result.maxParallelTrainingJobs_ = maxParallelTrainingJobs_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.plugins.sagemaker.HyperparameterTuningJob) {
        return mergeFrom((com.flyteidl.plugins.sagemaker.HyperparameterTuningJob)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.plugins.sagemaker.HyperparameterTuningJob other) {
      if (other == com.flyteidl.plugins.sagemaker.HyperparameterTuningJob.getDefaultInstance()) return this;
      if (other.hasTrainingJob()) {
        mergeTrainingJob(other.getTrainingJob());
      }
      if (other.getMaxNumberOfTrainingJobs() != 0L) {
        setMaxNumberOfTrainingJobs(other.getMaxNumberOfTrainingJobs());
      }
      if (other.getMaxParallelTrainingJobs() != 0L) {
        setMaxParallelTrainingJobs(other.getMaxParallelTrainingJobs());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.plugins.sagemaker.HyperparameterTuningJob parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.plugins.sagemaker.HyperparameterTuningJob) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.flyteidl.plugins.sagemaker.TrainingJob trainingJob_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.plugins.sagemaker.TrainingJob, com.flyteidl.plugins.sagemaker.TrainingJob.Builder, com.flyteidl.plugins.sagemaker.TrainingJobOrBuilder> trainingJobBuilder_;
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     * @return Whether the trainingJob field is set.
     */
    public boolean hasTrainingJob() {
      return trainingJobBuilder_ != null || trainingJob_ != null;
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     * @return The trainingJob.
     */
    public com.flyteidl.plugins.sagemaker.TrainingJob getTrainingJob() {
      if (trainingJobBuilder_ == null) {
        return trainingJob_ == null ? com.flyteidl.plugins.sagemaker.TrainingJob.getDefaultInstance() : trainingJob_;
      } else {
        return trainingJobBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     */
    public Builder setTrainingJob(com.flyteidl.plugins.sagemaker.TrainingJob value) {
      if (trainingJobBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        trainingJob_ = value;
        onChanged();
      } else {
        trainingJobBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     */
    public Builder setTrainingJob(
        com.flyteidl.plugins.sagemaker.TrainingJob.Builder builderForValue) {
      if (trainingJobBuilder_ == null) {
        trainingJob_ = builderForValue.build();
        onChanged();
      } else {
        trainingJobBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     */
    public Builder mergeTrainingJob(com.flyteidl.plugins.sagemaker.TrainingJob value) {
      if (trainingJobBuilder_ == null) {
        if (trainingJob_ != null) {
          trainingJob_ =
            com.flyteidl.plugins.sagemaker.TrainingJob.newBuilder(trainingJob_).mergeFrom(value).buildPartial();
        } else {
          trainingJob_ = value;
        }
        onChanged();
      } else {
        trainingJobBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     */
    public Builder clearTrainingJob() {
      if (trainingJobBuilder_ == null) {
        trainingJob_ = null;
        onChanged();
      } else {
        trainingJob_ = null;
        trainingJobBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     */
    public com.flyteidl.plugins.sagemaker.TrainingJob.Builder getTrainingJobBuilder() {
      
      onChanged();
      return getTrainingJobFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     */
    public com.flyteidl.plugins.sagemaker.TrainingJobOrBuilder getTrainingJobOrBuilder() {
      if (trainingJobBuilder_ != null) {
        return trainingJobBuilder_.getMessageOrBuilder();
      } else {
        return trainingJob_ == null ?
            com.flyteidl.plugins.sagemaker.TrainingJob.getDefaultInstance() : trainingJob_;
      }
    }
    /**
     * <pre>
     * The underlying training job that the hyperparameter tuning job will launch during the process
     * </pre>
     *
     * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.plugins.sagemaker.TrainingJob, com.flyteidl.plugins.sagemaker.TrainingJob.Builder, com.flyteidl.plugins.sagemaker.TrainingJobOrBuilder> 
        getTrainingJobFieldBuilder() {
      if (trainingJobBuilder_ == null) {
        trainingJobBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.plugins.sagemaker.TrainingJob, com.flyteidl.plugins.sagemaker.TrainingJob.Builder, com.flyteidl.plugins.sagemaker.TrainingJobOrBuilder>(
                getTrainingJob(),
                getParentForChildren(),
                isClean());
        trainingJob_ = null;
      }
      return trainingJobBuilder_;
    }

    private long maxNumberOfTrainingJobs_ ;
    /**
     * <pre>
     * The maximum number of training jobs that an hpo job can launch. For resource limit purpose.
     * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
     * </pre>
     *
     * <code>int64 max_number_of_training_jobs = 2 [json_name = "maxNumberOfTrainingJobs"];</code>
     * @return The maxNumberOfTrainingJobs.
     */
    @java.lang.Override
    public long getMaxNumberOfTrainingJobs() {
      return maxNumberOfTrainingJobs_;
    }
    /**
     * <pre>
     * The maximum number of training jobs that an hpo job can launch. For resource limit purpose.
     * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
     * </pre>
     *
     * <code>int64 max_number_of_training_jobs = 2 [json_name = "maxNumberOfTrainingJobs"];</code>
     * @param value The maxNumberOfTrainingJobs to set.
     * @return This builder for chaining.
     */
    public Builder setMaxNumberOfTrainingJobs(long value) {
      
      maxNumberOfTrainingJobs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum number of training jobs that an hpo job can launch. For resource limit purpose.
     * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
     * </pre>
     *
     * <code>int64 max_number_of_training_jobs = 2 [json_name = "maxNumberOfTrainingJobs"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxNumberOfTrainingJobs() {
      
      maxNumberOfTrainingJobs_ = 0L;
      onChanged();
      return this;
    }

    private long maxParallelTrainingJobs_ ;
    /**
     * <pre>
     * The maximum number of concurrent training job that an hpo job can launch
     * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
     * </pre>
     *
     * <code>int64 max_parallel_training_jobs = 3 [json_name = "maxParallelTrainingJobs"];</code>
     * @return The maxParallelTrainingJobs.
     */
    @java.lang.Override
    public long getMaxParallelTrainingJobs() {
      return maxParallelTrainingJobs_;
    }
    /**
     * <pre>
     * The maximum number of concurrent training job that an hpo job can launch
     * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
     * </pre>
     *
     * <code>int64 max_parallel_training_jobs = 3 [json_name = "maxParallelTrainingJobs"];</code>
     * @param value The maxParallelTrainingJobs to set.
     * @return This builder for chaining.
     */
    public Builder setMaxParallelTrainingJobs(long value) {
      
      maxParallelTrainingJobs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum number of concurrent training job that an hpo job can launch
     * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
     * </pre>
     *
     * <code>int64 max_parallel_training_jobs = 3 [json_name = "maxParallelTrainingJobs"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxParallelTrainingJobs() {
      
      maxParallelTrainingJobs_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
  private static final com.flyteidl.plugins.sagemaker.HyperparameterTuningJob DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.plugins.sagemaker.HyperparameterTuningJob();
  }

  public static com.flyteidl.plugins.sagemaker.HyperparameterTuningJob getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HyperparameterTuningJob>
      PARSER = new com.google.protobuf.AbstractParser<HyperparameterTuningJob>() {
    @java.lang.Override
    public HyperparameterTuningJob parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HyperparameterTuningJob(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HyperparameterTuningJob> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HyperparameterTuningJob> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.plugins.sagemaker.HyperparameterTuningJob getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

