// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/dataproxy.proto

package com.flyteidl.service;

public interface CreateUploadLocationResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.service.CreateUploadLocationResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * SignedUrl specifies the url to use to upload content to (e.g. https://my-bucket.s3.amazonaws.com/randomstring/suffix.tar?X-...)
   * </pre>
   *
   * <code>string signed_url = 1 [json_name = "signedUrl"];</code>
   * @return The signedUrl.
   */
  java.lang.String getSignedUrl();
  /**
   * <pre>
   * SignedUrl specifies the url to use to upload content to (e.g. https://my-bucket.s3.amazonaws.com/randomstring/suffix.tar?X-...)
   * </pre>
   *
   * <code>string signed_url = 1 [json_name = "signedUrl"];</code>
   * @return The bytes for signedUrl.
   */
  com.google.protobuf.ByteString
      getSignedUrlBytes();

  /**
   * <pre>
   * NativeUrl specifies the url in the format of the configured storage provider (e.g. s3://my-bucket/randomstring/suffix.tar)
   * </pre>
   *
   * <code>string native_url = 2 [json_name = "nativeUrl"];</code>
   * @return The nativeUrl.
   */
  java.lang.String getNativeUrl();
  /**
   * <pre>
   * NativeUrl specifies the url in the format of the configured storage provider (e.g. s3://my-bucket/randomstring/suffix.tar)
   * </pre>
   *
   * <code>string native_url = 2 [json_name = "nativeUrl"];</code>
   * @return The bytes for nativeUrl.
   */
  com.google.protobuf.ByteString
      getNativeUrlBytes();

  /**
   * <pre>
   * ExpiresAt defines when will the signed URL expires.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expires_at = 3 [json_name = "expiresAt"];</code>
   * @return Whether the expiresAt field is set.
   */
  boolean hasExpiresAt();
  /**
   * <pre>
   * ExpiresAt defines when will the signed URL expires.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expires_at = 3 [json_name = "expiresAt"];</code>
   * @return The expiresAt.
   */
  com.google.protobuf.Timestamp getExpiresAt();
  /**
   * <pre>
   * ExpiresAt defines when will the signed URL expires.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expires_at = 3 [json_name = "expiresAt"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpiresAtOrBuilder();
}
