// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/admin.proto

#include "flyteidl/service/admin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace service {
}  // namespace service
}  // namespace flyteidl
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
const uint32_t TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034flyteidl/service/admin.proto\022\020flyteidl"
  ".service\032\034google/api/annotations.proto\032\034"
  "flyteidl/admin/project.proto\032.flyteidl/a"
  "dmin/project_domain_attributes.proto\032\031fl"
  "yteidl/admin/task.proto\032\035flyteidl/admin/"
  "workflow.proto\032(flyteidl/admin/workflow_"
  "attributes.proto\032 flyteidl/admin/launch_"
  "plan.proto\032\032flyteidl/admin/event.proto\032\036"
  "flyteidl/admin/execution.proto\032\'flyteidl"
  "/admin/matchable_resource.proto\032#flyteid"
  "l/admin/node_execution.proto\032#flyteidl/a"
  "dmin/task_execution.proto\032\034flyteidl/admi"
  "n/version.proto\032\033flyteidl/admin/common.p"
  "roto\032,protoc-gen-swagger/options/annotat"
  "ions.proto2\236h\n\014AdminService\022\305\002\n\nCreateTa"
  "sk\022!.flyteidl.admin.TaskCreateRequest\032\"."
  "flyteidl.admin.TaskCreateResponse\"\357\001\222A\323\001"
  "\032&Create and register a task definition."
  "JB\n\003400\022;\n9Returned for bad request that"
  " may have failed validation.Je\n\003409\022^\n\\R"
  "eturned for a request that references an"
  " identical entity that has already been "
  "registered.\202\323\344\223\002\022\"\r/api/v1/tasks:\001*\022\262\001\n\007"
  "GetTask\022 .flyteidl.admin.ObjectGetReques"
  "t\032\024.flyteidl.admin.Task\"o\222A\'\032%Retrieve a"
  "n existing task definition.\202\323\344\223\002\?\022=/api/"
  "v1/tasks/{id.project}/{id.domain}/{id.na"
  "me}/{id.version}\022\336\001\n\013ListTaskIds\0220.flyte"
  "idl.admin.NamedEntityIdentifierListReque"
  "st\032).flyteidl.admin.NamedEntityIdentifie"
  "rList\"r\222AD\032BFetch existing task definiti"
  "on identifiers matching input filters.\202\323"
  "\344\223\002%\022#/api/v1/task_ids/{project}/{domain"
  "}\022\353\001\n\tListTasks\022#.flyteidl.admin.Resourc"
  "eListRequest\032\030.flyteidl.admin.TaskList\"\236"
  "\001\222A9\0327Fetch existing task definitions ma"
  "tching input filters.\202\323\344\223\002\\\0220/api/v1/tas"
  "ks/{id.project}/{id.domain}/{id.name}Z(\022"
  "&/api/v1/tasks/{id.project}/{id.domain}\022"
  "\331\002\n\016CreateWorkflow\022%.flyteidl.admin.Work"
  "flowCreateRequest\032&.flyteidl.admin.Workf"
  "lowCreateResponse\"\367\001\222A\327\001\032*Create and reg"
  "ister a workflow definition.JB\n\003400\022;\n9R"
  "eturned for bad request that may have fa"
  "iled validation.Je\n\003409\022^\n\\Returned for "
  "a request that references an identical e"
  "ntity that has already been registered.\202"
  "\323\344\223\002\026\"\021/api/v1/workflows:\001*\022\302\001\n\013GetWorkf"
  "low\022 .flyteidl.admin.ObjectGetRequest\032\030."
  "flyteidl.admin.Workflow\"w\222A+\032)Retrieve a"
  "n existing workflow definition.\202\323\344\223\002C\022A/"
  "api/v1/workflows/{id.project}/{id.domain"
  "}/{id.name}/{id.version}\022\355\001\n\017ListWorkflo"
  "wIds\0220.flyteidl.admin.NamedEntityIdentif"
  "ierListRequest\032).flyteidl.admin.NamedEnt"
  "ityIdentifierList\"}\222AK\032IFetch an existin"
  "g workflow definition identifiers matchi"
  "ng input filters.\202\323\344\223\002)\022\'/api/v1/workflo"
  "w_ids/{project}/{domain}\022\377\001\n\rListWorkflo"
  "ws\022#.flyteidl.admin.ResourceListRequest\032"
  "\034.flyteidl.admin.WorkflowList\"\252\001\222A=\032;Fet"
  "ch existing workflow definitions matchin"
  "g input filters.\202\323\344\223\002d\0224/api/v1/workflow"
  "s/{id.project}/{id.domain}/{id.name}Z,\022*"
  "/api/v1/workflows/{id.project}/{id.domai"
  "n}\022\345\002\n\020CreateLaunchPlan\022\'.flyteidl.admin"
  ".LaunchPlanCreateRequest\032(.flyteidl.admi"
  "n.LaunchPlanCreateResponse\"\375\001\222A\332\001\032-Creat"
  "e and register a launch plan definition."
  "JB\n\003400\022;\n9Returned for bad request that"
  " may have failed validation.Je\n\003409\022^\n\\R"
  "eturned for a request that references an"
  " identical entity that has already been "
  "registered.\202\323\344\223\002\031\"\024/api/v1/launch_plans:"
  "\001*\022\314\001\n\rGetLaunchPlan\022 .flyteidl.admin.Ob"
  "jectGetRequest\032\032.flyteidl.admin.LaunchPl"
  "an\"}\222A.\032,Retrieve an existing launch pla"
  "n definition.\202\323\344\223\002F\022D/api/v1/launch_plan"
  "s/{id.project}/{id.domain}/{id.name}/{id"
  ".version}\022\363\001\n\023GetActiveLaunchPlan\022\'.flyt"
  "eidl.admin.ActiveLaunchPlanRequest\032\032.fly"
  "teidl.admin.LaunchPlan\"\226\001\222AM\032KRetrieve t"
  "he active launch plan version specified "
  "by input request filters.\202\323\344\223\002@\022>/api/v1"
  "/active_launch_plans/{id.project}/{id.do"
  "main}/{id.name}\022\353\001\n\025ListActiveLaunchPlan"
  "s\022+.flyteidl.admin.ActiveLaunchPlanListR"
  "equest\032\036.flyteidl.admin.LaunchPlanList\"\204"
  "\001\222AK\032IFetch the active launch plan versi"
  "ons specified by input request filters.\202"
  "\323\344\223\0020\022./api/v1/active_launch_plans/{proj"
  "ect}/{domain}\022\363\001\n\021ListLaunchPlanIds\0220.fl"
  "yteidl.admin.NamedEntityIdentifierListRe"
  "quest\032).flyteidl.admin.NamedEntityIdenti"
  "fierList\"\200\001\222AK\032IFetch existing launch pl"
  "an definition identifiers matching input"
  " filters.\202\323\344\223\002,\022*/api/v1/launch_plan_ids"
  "/{project}/{domain}\022\214\002\n\017ListLaunchPlans\022"
  "#.flyteidl.admin.ResourceListRequest\032\036.f"
  "lyteidl.admin.LaunchPlanList\"\263\001\222A@\032>Fetc"
  "h existing launch plan definitions match"
  "ing input filters.\202\323\344\223\002j\0227/api/v1/launch"
  "_plans/{id.project}/{id.domain}/{id.name"
  "}Z/\022-/api/v1/launch_plans/{id.project}/{"
  "id.domain}\022\300\006\n\020UpdateLaunchPlan\022\'.flytei"
  "dl.admin.LaunchPlanUpdateRequest\032(.flyte"
  "idl.admin.LaunchPlanUpdateResponse\"\330\005\222A\205"
  "\005\032\202\005Update the status of an existing lau"
  "nch plan definition. At most one launch "
  "plan version for a given {project, domai"
  "n, name} can be active at a time. If thi"
  "s call sets a launch plan to active and "
  "existing version is already active, the "
  "result of this call will be that the for"
  "merly active launch plan will be made in"
  "active and specified launch plan in this"
  " request will be made active. In the eve"
  "nt that the formerly active launch plan "
  "had a schedule associated it with it, th"
  "is schedule will be disabled. If the ref"
  "erence launch plan in this request is be"
  "ing set to active and has a schedule ass"
  "ociated with it, the schedule will be en"
  "abled.\202\323\344\223\002I\032D/api/v1/launch_plans/{id.p"
  "roject}/{id.domain}/{id.name}/{id.versio"
  "n}:\001*\022\242\001\n\017CreateExecution\022&.flyteidl.adm"
  "in.ExecutionCreateRequest\032\'.flyteidl.adm"
  "in.ExecutionCreateResponse\">\222A\036\032\034Create "
  "a workflow execution.\202\323\344\223\002\027\"\022/api/v1/exe"
  "cutions:\001*\022\261\001\n\021RelaunchExecution\022(.flyte"
  "idl.admin.ExecutionRelaunchRequest\032\'.fly"
  "teidl.admin.ExecutionCreateResponse\"I\222A "
  "\032\036Relaunch a workflow execution.\202\323\344\223\002 \"\033"
  "/api/v1/executions/relaunch:\001*\022\235\005\n\020Recov"
  "erExecution\022\'.flyteidl.admin.ExecutionRe"
  "coverRequest\032\'.flyteidl.admin.ExecutionC"
  "reateResponse\"\266\004\222A\215\004\032\212\004Recreates a previ"
  "ously-run workflow execution that will o"
  "nly start executing from the last known "
  "failure point. In Recover mode, users ca"
  "nnot change any input parameters or upda"
  "te the version of the execution. This is"
  " extremely useful to recover from system"
  " errors and byzantine faults like - Loss"
  " of K8s cluster, bugs in platform or ins"
  "tability, machine failures, downstream s"
  "ystem failures (downstream services), or"
  " simply to recover executions that faile"
  "d because of retry exhaustion and should"
  " complete if tried again.\202\323\344\223\002\037\"\032/api/v1"
  "/executions/recover:\001*\022\302\001\n\014GetExecution\022"
  "+.flyteidl.admin.WorkflowExecutionGetReq"
  "uest\032\031.flyteidl.admin.Execution\"j\222A*\032(Re"
  "trieve an existing workflow execution.\202\323"
  "\344\223\0027\0225/api/v1/executions/{id.project}/{i"
  "d.domain}/{id.name}\022\326\001\n\017UpdateExecution\022"
  "&.flyteidl.admin.ExecutionUpdateRequest\032"
  "\'.flyteidl.admin.ExecutionUpdateResponse"
  "\"r\222A/\032-Update execution belonging to pro"
  "ject domain.\202\323\344\223\002:\0325/api/v1/executions/{"
  "id.project}/{id.domain}/{id.name}:\001*\022\202\002\n"
  "\020GetExecutionData\022/.flyteidl.admin.Workf"
  "lowExecutionGetDataRequest\0320.flyteidl.ad"
  "min.WorkflowExecutionGetDataResponse\"\212\001\222"
  "AE\032CRetrieve input and output data from "
  "an existing workflow execution.\202\323\344\223\002<\022:/"
  "api/v1/data/executions/{id.project}/{id."
  "domain}/{id.name}\022\310\001\n\016ListExecutions\022#.f"
  "lyteidl.admin.ResourceListRequest\032\035.flyt"
  "eidl.admin.ExecutionList\"r\222A<\032:Fetch exi"
  "sting workflow executions matching input"
  " filters.\202\323\344\223\002-\022+/api/v1/executions/{id."
  "project}/{id.domain}\022\364\001\n\022TerminateExecut"
  "ion\022).flyteidl.admin.ExecutionTerminateR"
  "equest\032*.flyteidl.admin.ExecutionTermina"
  "teResponse\"\206\001\222AC\032ATerminate the active w"
  "orkflow execution specified in the reque"
  "st.\202\323\344\223\002:*5/api/v1/executions/{id.projec"
  "t}/{id.domain}/{id.name}:\001*\022\374\001\n\020GetNodeE"
  "xecution\022\'.flyteidl.admin.NodeExecutionG"
  "etRequest\032\035.flyteidl.admin.NodeExecution"
  "\"\237\001\222A&\032$Retrieve an existing node execut"
  "ion.\202\323\344\223\002p\022n/api/v1/node_executions/{id."
  "execution_id.project}/{id.execution_id.d"
  "omain}/{id.execution_id.name}/{id.node_i"
  "d}\022\232\002\n\022ListNodeExecutions\022(.flyteidl.adm"
  "in.NodeExecutionListRequest\032!.flyteidl.a"
  "dmin.NodeExecutionList\"\266\001\222A8\0326Fetch exis"
  "ting node executions matching input filt"
  "ers.\202\323\344\223\002u\022s/api/v1/node_executions/{wor"
  "kflow_execution_id.project}/{workflow_ex"
  "ecution_id.domain}/{workflow_execution_i"
  "d.name}\022\357\004\n\031ListNodeExecutionsForTask\022/."
  "flyteidl.admin.NodeExecutionForTaskListR"
  "equest\032!.flyteidl.admin.NodeExecutionLis"
  "t\"\375\003\222AG\032EFetch child node executions lau"
  "nched by the specified task execution.\202\323"
  "\344\223\002\254\003\022\251\003/api/v1/children/task_executions"
  "/{task_execution_id.node_execution_id.ex"
  "ecution_id.project}/{task_execution_id.n"
  "ode_execution_id.execution_id.domain}/{t"
  "ask_execution_id.node_execution_id.execu"
  "tion_id.name}/{task_execution_id.node_ex"
  "ecution_id.node_id}/{task_execution_id.t"
  "ask_id.project}/{task_execution_id.task_"
  "id.domain}/{task_execution_id.task_id.na"
  "me}/{task_execution_id.task_id.version}/"
  "{task_execution_id.retry_attempt}\022\263\002\n\024Ge"
  "tNodeExecutionData\022+.flyteidl.admin.Node"
  "ExecutionGetDataRequest\032,.flyteidl.admin"
  ".NodeExecutionGetDataResponse\"\277\001\222AA\032\?Ret"
  "rieve input and output data from an exis"
  "ting node execution.\202\323\344\223\002u\022s/api/v1/data"
  "/node_executions/{id.execution_id.projec"
  "t}/{id.execution_id.domain}/{id.executio"
  "n_id.name}/{id.node_id}\022\227\001\n\017RegisterProj"
  "ect\022&.flyteidl.admin.ProjectRegisterRequ"
  "est\032\'.flyteidl.admin.ProjectRegisterResp"
  "onse\"3\222A\025\032\023Register a project.\202\323\344\223\002\025\"\020/a"
  "pi/v1/projects:\001*\022\207\001\n\rUpdateProject\022\027.fl"
  "yteidl.admin.Project\032%.flyteidl.admin.Pr"
  "ojectUpdateResponse\"6\222A\023\032\021Update a proje"
  "ct.\202\323\344\223\002\032\032\025/api/v1/projects/{id}:\001*\022\205\001\n\014"
  "ListProjects\022\".flyteidl.admin.ProjectLis"
  "tRequest\032\030.flyteidl.admin.Projects\"7\222A\034\032"
  "\032Fetch registered projects.\202\323\344\223\002\022\022\020/api/"
  "v1/projects\022\335\001\n\023CreateWorkflowEvent\022-.fl"
  "yteidl.admin.WorkflowExecutionEventReque"
  "st\032..flyteidl.admin.WorkflowExecutionEve"
  "ntResponse\"g\222AA\032\?Create a workflow execu"
  "tion event recording a phase transition."
  "\202\323\344\223\002\035\"\030/api/v1/events/workflows:\001*\022\311\001\n\017"
  "CreateNodeEvent\022).flyteidl.admin.NodeExe"
  "cutionEventRequest\032*.flyteidl.admin.Node"
  "ExecutionEventResponse\"_\222A=\032;Create a no"
  "de execution event recording a phase tra"
  "nsition.\202\323\344\223\002\031\"\024/api/v1/events/nodes:\001*\022"
  "\311\001\n\017CreateTaskEvent\022).flyteidl.admin.Tas"
  "kExecutionEventRequest\032*.flyteidl.admin."
  "TaskExecutionEventResponse\"_\222A=\032;Create "
  "a task execution event recording a phase"
  " transition.\202\323\344\223\002\031\"\024/api/v1/events/tasks"
  ":\001*\022\251\003\n\020GetTaskExecution\022\'.flyteidl.admi"
  "n.TaskExecutionGetRequest\032\035.flyteidl.adm"
  "in.TaskExecution\"\314\002\222A&\032$Retrieve an exis"
  "ting task execution.\202\323\344\223\002\234\002\022\231\002/api/v1/ta"
  "sk_executions/{id.node_execution_id.exec"
  "ution_id.project}/{id.node_execution_id."
  "execution_id.domain}/{id.node_execution_"
  "id.execution_id.name}/{id.node_execution"
  "_id.node_id}/{id.task_id.project}/{id.ta"
  "sk_id.domain}/{id.task_id.name}/{id.task"
  "_id.version}/{id.retry_attempt}\022\323\002\n\022List"
  "TaskExecutions\022(.flyteidl.admin.TaskExec"
  "utionListRequest\032!.flyteidl.admin.TaskEx"
  "ecutionList\"\357\001\222A8\0326Fetch existing task e"
  "xecutions matching input filters.\202\323\344\223\002\255\001"
  "\022\252\001/api/v1/task_executions/{node_executi"
  "on_id.execution_id.project}/{node_execut"
  "ion_id.execution_id.domain}/{node_execut"
  "ion_id.execution_id.name}/{node_executio"
  "n_id.node_id}\022\340\003\n\024GetTaskExecutionData\022+"
  ".flyteidl.admin.TaskExecutionGetDataRequ"
  "est\032,.flyteidl.admin.TaskExecutionGetDat"
  "aResponse\"\354\002\222AA\032\?Retrieve input and outp"
  "ut data from an existing task execution."
  "\202\323\344\223\002\241\002\022\236\002/api/v1/data/task_executions/{"
  "id.node_execution_id.execution_id.projec"
  "t}/{id.node_execution_id.execution_id.do"
  "main}/{id.node_execution_id.execution_id"
  ".name}/{id.node_execution_id.node_id}/{i"
  "d.task_id.project}/{id.task_id.domain}/{"
  "id.task_id.name}/{id.task_id.version}/{i"
  "d.retry_attempt}\022\277\002\n\035UpdateProjectDomain"
  "Attributes\0224.flyteidl.admin.ProjectDomai"
  "nAttributesUpdateRequest\0325.flyteidl.admi"
  "n.ProjectDomainAttributesUpdateResponse\""
  "\260\001\222AX\032VUpdate the customized resource at"
  "tributes associated with a project-domai"
  "n combination\202\323\344\223\002O\032J/api/v1/project_dom"
  "ain_attributes/{attributes.project}/{att"
  "ributes.domain}:\001*\022\237\002\n\032GetProjectDomainA"
  "ttributes\0221.flyteidl.admin.ProjectDomain"
  "AttributesGetRequest\0322.flyteidl.admin.Pr"
  "ojectDomainAttributesGetResponse\"\231\001\222AZ\032X"
  "Retrieve the customized resource attribu"
  "tes associated with a project-domain com"
  "bination\202\323\344\223\0026\0224/api/v1/project_domain_a"
  "ttributes/{project}/{domain}\022\251\002\n\035DeleteP"
  "rojectDomainAttributes\0224.flyteidl.admin."
  "ProjectDomainAttributesDeleteRequest\0325.f"
  "lyteidl.admin.ProjectDomainAttributesDel"
  "eteResponse\"\232\001\222AX\032VDelete the customized"
  " resource attributes associated with a p"
  "roject-domain combination\202\323\344\223\0029*4/api/v1"
  "/project_domain_attributes/{project}/{do"
  "main}:\001*\022\316\002\n\030UpdateWorkflowAttributes\022/."
  "flyteidl.admin.WorkflowAttributesUpdateR"
  "equest\0320.flyteidl.admin.WorkflowAttribut"
  "esUpdateResponse\"\316\001\222Af\032dUpdate the custo"
  "mized resource attributes associated wit"
  "h a project, domain and workflow combina"
  "tion\202\323\344\223\002_\032Z/api/v1/workflow_attributes/"
  "{attributes.project}/{attributes.domain}"
  "/{attributes.workflow}:\001*\022\243\002\n\025GetWorkflo"
  "wAttributes\022,.flyteidl.admin.WorkflowAtt"
  "ributesGetRequest\032-.flyteidl.admin.Workf"
  "lowAttributesGetResponse\"\254\001\222Ah\032fRetrieve"
  " the customized resource attributes asso"
  "ciated with a project, domain and workfl"
  "ow combination\202\323\344\223\002;\0229/api/v1/workflow_a"
  "ttributes/{project}/{domain}/{workflow}\022"
  "\255\002\n\030DeleteWorkflowAttributes\022/.flyteidl."
  "admin.WorkflowAttributesDeleteRequest\0320."
  "flyteidl.admin.WorkflowAttributesDeleteR"
  "esponse\"\255\001\222Af\032dDelete the customized res"
  "ource attributes associated with a proje"
  "ct, domain and workflow combination\202\323\344\223\002"
  ">*9/api/v1/workflow_attributes/{project}"
  "/{domain}/{workflow}:\001*\022\341\001\n\027ListMatchabl"
  "eAttributes\022..flyteidl.admin.ListMatchab"
  "leAttributesRequest\032/.flyteidl.admin.Lis"
  "tMatchableAttributesResponse\"e\222A>\032<Retri"
  "eve a list of MatchableAttributesConfigu"
  "ration objects.\202\323\344\223\002\036\022\034/api/v1/matchable"
  "_attributes\022\200\002\n\021ListNamedEntities\022&.flyt"
  "eidl.admin.NamedEntityListRequest\032\037.flyt"
  "eidl.admin.NamedEntityList\"\241\001\222A]\032[Retrie"
  "ve a list of NamedEntity objects sharing"
  " a common resource type, project, and do"
  "main.\202\323\344\223\002;\0229/api/v1/named_entities/{res"
  "ource_type}/{project}/{domain}\022\312\001\n\016GetNa"
  "medEntity\022%.flyteidl.admin.NamedEntityGe"
  "tRequest\032\033.flyteidl.admin.NamedEntity\"t\222"
  "A \032\036Retrieve a NamedEntity object.\202\323\344\223\002K"
  "\022I/api/v1/named_entities/{resource_type}"
  "/{id.project}/{id.domain}/{id.name}\022\363\001\n\021"
  "UpdateNamedEntity\022(.flyteidl.admin.Named"
  "EntityUpdateRequest\032).flyteidl.admin.Nam"
  "edEntityUpdateResponse\"\210\001\222A1\032/Update the"
  " fields associated with a NamedEntity\202\323\344"
  "\223\002N\032I/api/v1/named_entities/{resource_ty"
  "pe}/{id.project}/{id.domain}/{id.name}:\001"
  "*\022\277\001\n\nGetVersion\022!.flyteidl.admin.GetVer"
  "sionRequest\032\".flyteidl.admin.GetVersionR"
  "esponse\"j\222AP\032NRetrieve the Version (incl"
  "uding the Build  information) for FlyteA"
  "dmin service\202\323\344\223\002\021\022\017/api/v1/versionB\277\001\n\024"
  "com.flyteidl.serviceB\nAdminProtoH\002Z7gith"
  "ub.com/flyteorg/flyteidl/gen/pb-go/flyte"
  "idl/service\370\001\000\242\002\003FSX\252\002\020Flyteidl.Service\312"
  "\002\020Flyteidl\\Service\342\002\034Flyteidl\\Service\\GP"
  "BMetadata\352\002\021Flyteidl::Serviceb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_flyteidl_2fservice_2fadmin_2eproto_deps[15] = {
  &::descriptor_table_flyteidl_2fadmin_2fcommon_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fevent_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fexecution_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2flaunch_5fplan_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fnode_5fexecution_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fproject_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2ftask_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2ftask_5fexecution_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fversion_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fworkflow_2eproto,
  &::descriptor_table_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fservice_2fadmin_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fadmin_2eproto = {
  false, false, 14117, descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto, "flyteidl/service/admin.proto", 
  &descriptor_table_flyteidl_2fservice_2fadmin_2eproto_once, descriptor_table_flyteidl_2fservice_2fadmin_2eproto_deps, 15, 0,
  schemas, file_default_instances, TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets,
  nullptr, file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fservice_2fadmin_2eproto_getter() {
  return &descriptor_table_flyteidl_2fservice_2fadmin_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fservice_2fadmin_2eproto(&descriptor_table_flyteidl_2fservice_2fadmin_2eproto);
namespace flyteidl {
namespace service {

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
