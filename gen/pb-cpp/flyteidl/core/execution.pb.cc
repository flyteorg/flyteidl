// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/execution.proto

#include "flyteidl/core/execution.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace core {
class WorkflowExecutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowExecution>
      _instance;
} _WorkflowExecution_default_instance_;
class NodeExecutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeExecution>
      _instance;
} _NodeExecution_default_instance_;
class TaskExecutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskExecution>
      _instance;
} _TaskExecution_default_instance_;
class ExecutionErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionError>
      _instance;
} _ExecutionError_default_instance_;
class TaskLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskLog>
      _instance;
} _TaskLog_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace protobuf_flyteidl_2fcore_2fexecution_2eproto {
void InitDefaultsWorkflowExecutionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_WorkflowExecution_default_instance_;
    new (ptr) ::flyteidl::core::WorkflowExecution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::WorkflowExecution::InitAsDefaultInstance();
}

void InitDefaultsWorkflowExecution() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkflowExecutionImpl);
}

void InitDefaultsNodeExecutionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_NodeExecution_default_instance_;
    new (ptr) ::flyteidl::core::NodeExecution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::NodeExecution::InitAsDefaultInstance();
}

void InitDefaultsNodeExecution() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeExecutionImpl);
}

void InitDefaultsTaskExecutionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_TaskExecution_default_instance_;
    new (ptr) ::flyteidl::core::TaskExecution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::TaskExecution::InitAsDefaultInstance();
}

void InitDefaultsTaskExecution() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskExecutionImpl);
}

void InitDefaultsExecutionErrorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_ExecutionError_default_instance_;
    new (ptr) ::flyteidl::core::ExecutionError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ExecutionError::InitAsDefaultInstance();
}

void InitDefaultsExecutionError() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecutionErrorImpl);
}

void InitDefaultsTaskLogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::flyteidl::core::_TaskLog_default_instance_;
    new (ptr) ::flyteidl::core::TaskLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::TaskLog::InitAsDefaultInstance();
}

void InitDefaultsTaskLog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskLogImpl);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::WorkflowExecution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::NodeExecution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskExecution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ExecutionError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ExecutionError, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ExecutionError, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ExecutionError, error_uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskLog, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskLog, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskLog, message_format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskLog, ttl_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::WorkflowExecution)},
  { 5, -1, sizeof(::flyteidl::core::NodeExecution)},
  { 10, -1, sizeof(::flyteidl::core::TaskExecution)},
  { 15, -1, sizeof(::flyteidl::core::ExecutionError)},
  { 23, -1, sizeof(::flyteidl::core::TaskLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_WorkflowExecution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_NodeExecution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_TaskExecution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ExecutionError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_TaskLog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/core/execution.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035flyteidl/core/execution.proto\022\rflyteid"
      "l.core\032\036google/protobuf/duration.proto\"\247"
      "\001\n\021WorkflowExecution\"\221\001\n\005Phase\022\r\n\tUNDEFI"
      "NED\020\000\022\n\n\006QUEUED\020\001\022\013\n\007RUNNING\020\002\022\016\n\nSUCCEE"
      "DING\020\003\022\r\n\tSUCCEEDED\020\004\022\013\n\007FAILING\020\005\022\n\n\006FA"
      "ILED\020\006\022\013\n\007ABORTED\020\007\022\r\n\tTIMED_OUT\020\010\022\014\n\010LA"
      "UNCHED\020\t\"\222\001\n\rNodeExecution\"\200\001\n\005Phase\022\r\n\t"
      "UNDEFINED\020\000\022\n\n\006QUEUED\020\001\022\013\n\007RUNNING\020\002\022\r\n\t"
      "SUCCEEDED\020\003\022\013\n\007FAILING\020\004\022\n\n\006FAILED\020\005\022\013\n\007"
      "ABORTED\020\006\022\013\n\007SKIPPED\020\007\022\r\n\tTIMED_OUT\020\010\"h\n"
      "\rTaskExecution\"W\n\005Phase\022\r\n\tUNDEFINED\020\000\022\n"
      "\n\006QUEUED\020\001\022\013\n\007RUNNING\020\002\022\r\n\tSUCCEEDED\020\003\022\013"
      "\n\007ABORTED\020\004\022\n\n\006FAILED\020\005\"B\n\016ExecutionErro"
      "r\022\014\n\004code\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\022\021\n\terro"
      "r_uri\030\003 \001(\t\"\273\001\n\007TaskLog\022\013\n\003uri\030\001 \001(\t\022\014\n\004"
      "name\030\002 \001(\t\022<\n\016message_format\030\003 \001(\0162$.fly"
      "teidl.core.TaskLog.MessageFormat\022&\n\003ttl\030"
      "\004 \001(\0132\031.google.protobuf.Duration\"/\n\rMess"
      "ageFormat\022\013\n\007UNKNOWN\020\000\022\007\n\003CSV\020\001\022\010\n\004JSON\020"
      "\002B2Z0github.com/lyft/flyteidl/gen/pb-go/"
      "flyteidl/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 821);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/core/execution.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fcore_2fexecution_2eproto
namespace flyteidl {
namespace core {
const ::google::protobuf::EnumDescriptor* WorkflowExecution_Phase_descriptor() {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_enum_descriptors[0];
}
bool WorkflowExecution_Phase_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorkflowExecution_Phase WorkflowExecution::UNDEFINED;
const WorkflowExecution_Phase WorkflowExecution::QUEUED;
const WorkflowExecution_Phase WorkflowExecution::RUNNING;
const WorkflowExecution_Phase WorkflowExecution::SUCCEEDING;
const WorkflowExecution_Phase WorkflowExecution::SUCCEEDED;
const WorkflowExecution_Phase WorkflowExecution::FAILING;
const WorkflowExecution_Phase WorkflowExecution::FAILED;
const WorkflowExecution_Phase WorkflowExecution::ABORTED;
const WorkflowExecution_Phase WorkflowExecution::TIMED_OUT;
const WorkflowExecution_Phase WorkflowExecution::LAUNCHED;
const WorkflowExecution_Phase WorkflowExecution::Phase_MIN;
const WorkflowExecution_Phase WorkflowExecution::Phase_MAX;
const int WorkflowExecution::Phase_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NodeExecution_Phase_descriptor() {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_enum_descriptors[1];
}
bool NodeExecution_Phase_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodeExecution_Phase NodeExecution::UNDEFINED;
const NodeExecution_Phase NodeExecution::QUEUED;
const NodeExecution_Phase NodeExecution::RUNNING;
const NodeExecution_Phase NodeExecution::SUCCEEDED;
const NodeExecution_Phase NodeExecution::FAILING;
const NodeExecution_Phase NodeExecution::FAILED;
const NodeExecution_Phase NodeExecution::ABORTED;
const NodeExecution_Phase NodeExecution::SKIPPED;
const NodeExecution_Phase NodeExecution::TIMED_OUT;
const NodeExecution_Phase NodeExecution::Phase_MIN;
const NodeExecution_Phase NodeExecution::Phase_MAX;
const int NodeExecution::Phase_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TaskExecution_Phase_descriptor() {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_enum_descriptors[2];
}
bool TaskExecution_Phase_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TaskExecution_Phase TaskExecution::UNDEFINED;
const TaskExecution_Phase TaskExecution::QUEUED;
const TaskExecution_Phase TaskExecution::RUNNING;
const TaskExecution_Phase TaskExecution::SUCCEEDED;
const TaskExecution_Phase TaskExecution::ABORTED;
const TaskExecution_Phase TaskExecution::FAILED;
const TaskExecution_Phase TaskExecution::Phase_MIN;
const TaskExecution_Phase TaskExecution::Phase_MAX;
const int TaskExecution::Phase_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TaskLog_MessageFormat_descriptor() {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_enum_descriptors[3];
}
bool TaskLog_MessageFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TaskLog_MessageFormat TaskLog::UNKNOWN;
const TaskLog_MessageFormat TaskLog::CSV;
const TaskLog_MessageFormat TaskLog::JSON;
const TaskLog_MessageFormat TaskLog::MessageFormat_MIN;
const TaskLog_MessageFormat TaskLog::MessageFormat_MAX;
const int TaskLog::MessageFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void WorkflowExecution::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowExecution::WorkflowExecution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsWorkflowExecution();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.WorkflowExecution)
}
WorkflowExecution::WorkflowExecution(const WorkflowExecution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.WorkflowExecution)
}

void WorkflowExecution::SharedCtor() {
  _cached_size_ = 0;
}

WorkflowExecution::~WorkflowExecution() {
  // @@protoc_insertion_point(destructor:flyteidl.core.WorkflowExecution)
  SharedDtor();
}

void WorkflowExecution::SharedDtor() {
}

void WorkflowExecution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkflowExecution::descriptor() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowExecution& WorkflowExecution::default_instance() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsWorkflowExecution();
  return *internal_default_instance();
}

WorkflowExecution* WorkflowExecution::New(::google::protobuf::Arena* arena) const {
  WorkflowExecution* n = new WorkflowExecution;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkflowExecution::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.WorkflowExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool WorkflowExecution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.WorkflowExecution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.WorkflowExecution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.WorkflowExecution)
  return false;
#undef DO_
}

void WorkflowExecution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.WorkflowExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.WorkflowExecution)
}

::google::protobuf::uint8* WorkflowExecution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.WorkflowExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.WorkflowExecution)
  return target;
}

size_t WorkflowExecution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.WorkflowExecution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkflowExecution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.WorkflowExecution)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowExecution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowExecution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.WorkflowExecution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.WorkflowExecution)
    MergeFrom(*source);
  }
}

void WorkflowExecution::MergeFrom(const WorkflowExecution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.WorkflowExecution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WorkflowExecution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.WorkflowExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowExecution::CopyFrom(const WorkflowExecution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.WorkflowExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowExecution::IsInitialized() const {
  return true;
}

void WorkflowExecution::Swap(WorkflowExecution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowExecution::InternalSwap(WorkflowExecution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkflowExecution::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeExecution::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeExecution::NodeExecution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsNodeExecution();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.NodeExecution)
}
NodeExecution::NodeExecution(const NodeExecution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.NodeExecution)
}

void NodeExecution::SharedCtor() {
  _cached_size_ = 0;
}

NodeExecution::~NodeExecution() {
  // @@protoc_insertion_point(destructor:flyteidl.core.NodeExecution)
  SharedDtor();
}

void NodeExecution::SharedDtor() {
}

void NodeExecution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeExecution::descriptor() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeExecution& NodeExecution::default_instance() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsNodeExecution();
  return *internal_default_instance();
}

NodeExecution* NodeExecution::New(::google::protobuf::Arena* arena) const {
  NodeExecution* n = new NodeExecution;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeExecution::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.NodeExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool NodeExecution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.NodeExecution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.NodeExecution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.NodeExecution)
  return false;
#undef DO_
}

void NodeExecution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.NodeExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.NodeExecution)
}

::google::protobuf::uint8* NodeExecution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.NodeExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.NodeExecution)
  return target;
}

size_t NodeExecution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.NodeExecution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeExecution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.NodeExecution)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeExecution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeExecution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.NodeExecution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.NodeExecution)
    MergeFrom(*source);
  }
}

void NodeExecution::MergeFrom(const NodeExecution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.NodeExecution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NodeExecution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.NodeExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeExecution::CopyFrom(const NodeExecution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.NodeExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeExecution::IsInitialized() const {
  return true;
}

void NodeExecution::Swap(NodeExecution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeExecution::InternalSwap(NodeExecution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeExecution::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskExecution::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskExecution::TaskExecution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsTaskExecution();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.TaskExecution)
}
TaskExecution::TaskExecution(const TaskExecution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.TaskExecution)
}

void TaskExecution::SharedCtor() {
  _cached_size_ = 0;
}

TaskExecution::~TaskExecution() {
  // @@protoc_insertion_point(destructor:flyteidl.core.TaskExecution)
  SharedDtor();
}

void TaskExecution::SharedDtor() {
}

void TaskExecution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskExecution::descriptor() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskExecution& TaskExecution::default_instance() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsTaskExecution();
  return *internal_default_instance();
}

TaskExecution* TaskExecution::New(::google::protobuf::Arena* arena) const {
  TaskExecution* n = new TaskExecution;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskExecution::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.TaskExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TaskExecution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.TaskExecution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.TaskExecution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.TaskExecution)
  return false;
#undef DO_
}

void TaskExecution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.TaskExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.TaskExecution)
}

::google::protobuf::uint8* TaskExecution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.TaskExecution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.TaskExecution)
  return target;
}

size_t TaskExecution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.TaskExecution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskExecution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.TaskExecution)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskExecution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskExecution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.TaskExecution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.TaskExecution)
    MergeFrom(*source);
  }
}

void TaskExecution::MergeFrom(const TaskExecution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.TaskExecution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TaskExecution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.TaskExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskExecution::CopyFrom(const TaskExecution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.TaskExecution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskExecution::IsInitialized() const {
  return true;
}

void TaskExecution::Swap(TaskExecution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskExecution::InternalSwap(TaskExecution* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskExecution::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecutionError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionError::kCodeFieldNumber;
const int ExecutionError::kMessageFieldNumber;
const int ExecutionError::kErrorUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionError::ExecutionError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsExecutionError();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ExecutionError)
}
ExecutionError::ExecutionError(const ExecutionError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  error_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_uri().size() > 0) {
    error_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_uri_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ExecutionError)
}

void ExecutionError::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ExecutionError::~ExecutionError() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ExecutionError)
  SharedDtor();
}

void ExecutionError::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecutionError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionError::descriptor() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecutionError& ExecutionError::default_instance() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsExecutionError();
  return *internal_default_instance();
}

ExecutionError* ExecutionError::New(::google::protobuf::Arena* arena) const {
  ExecutionError* n = new ExecutionError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecutionError::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ExecutionError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecutionError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ExecutionError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ExecutionError.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ExecutionError.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_uri().data(), static_cast<int>(this->error_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ExecutionError.error_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ExecutionError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ExecutionError)
  return false;
#undef DO_
}

void ExecutionError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ExecutionError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionError.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionError.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // string error_uri = 3;
  if (this->error_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_uri().data(), static_cast<int>(this->error_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionError.error_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ExecutionError)
}

::google::protobuf::uint8* ExecutionError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ExecutionError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionError.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionError.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // string error_uri = 3;
  if (this->error_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_uri().data(), static_cast<int>(this->error_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionError.error_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ExecutionError)
  return target;
}

size_t ExecutionError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ExecutionError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string error_uri = 3;
  if (this->error_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ExecutionError)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecutionError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ExecutionError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ExecutionError)
    MergeFrom(*source);
  }
}

void ExecutionError::MergeFrom(const ExecutionError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ExecutionError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.error_uri().size() > 0) {

    error_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_uri_);
  }
}

void ExecutionError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ExecutionError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionError::CopyFrom(const ExecutionError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ExecutionError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionError::IsInitialized() const {
  return true;
}

void ExecutionError::Swap(ExecutionError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionError::InternalSwap(ExecutionError* other) {
  using std::swap;
  code_.Swap(&other->code_);
  message_.Swap(&other->message_);
  error_uri_.Swap(&other->error_uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecutionError::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskLog::InitAsDefaultInstance() {
  ::flyteidl::core::_TaskLog_default_instance_._instance.get_mutable()->ttl_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void TaskLog::clear_ttl() {
  if (GetArenaNoVirtual() == NULL && ttl_ != NULL) {
    delete ttl_;
  }
  ttl_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskLog::kUriFieldNumber;
const int TaskLog::kNameFieldNumber;
const int TaskLog::kMessageFormatFieldNumber;
const int TaskLog::kTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskLog::TaskLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsTaskLog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.TaskLog)
}
TaskLog::TaskLog(const TaskLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_ttl()) {
    ttl_ = new ::google::protobuf::Duration(*from.ttl_);
  } else {
    ttl_ = NULL;
  }
  message_format_ = from.message_format_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.TaskLog)
}

void TaskLog::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ttl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_format_) -
      reinterpret_cast<char*>(&ttl_)) + sizeof(message_format_));
  _cached_size_ = 0;
}

TaskLog::~TaskLog() {
  // @@protoc_insertion_point(destructor:flyteidl.core.TaskLog)
  SharedDtor();
}

void TaskLog::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ttl_;
}

void TaskLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskLog::descriptor() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskLog& TaskLog::default_instance() {
  ::protobuf_flyteidl_2fcore_2fexecution_2eproto::InitDefaultsTaskLog();
  return *internal_default_instance();
}

TaskLog* TaskLog::New(::google::protobuf::Arena* arena) const {
  TaskLog* n = new TaskLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskLog::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.TaskLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ttl_ != NULL) {
    delete ttl_;
  }
  ttl_ = NULL;
  message_format_ = 0;
  _internal_metadata_.Clear();
}

bool TaskLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.TaskLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.TaskLog.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.TaskLog.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.TaskLog.MessageFormat message_format = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_message_format(static_cast< ::flyteidl::core::TaskLog_MessageFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration ttl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ttl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.TaskLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.TaskLog)
  return false;
#undef DO_
}

void TaskLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.TaskLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskLog.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskLog.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .flyteidl.core.TaskLog.MessageFormat message_format = 3;
  if (this->message_format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->message_format(), output);
  }

  // .google.protobuf.Duration ttl = 4;
  if (this->has_ttl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->ttl_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.TaskLog)
}

::google::protobuf::uint8* TaskLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.TaskLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskLog.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskLog.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .flyteidl.core.TaskLog.MessageFormat message_format = 3;
  if (this->message_format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->message_format(), target);
  }

  // .google.protobuf.Duration ttl = 4;
  if (this->has_ttl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->ttl_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.TaskLog)
  return target;
}

size_t TaskLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.TaskLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Duration ttl = 4;
  if (this->has_ttl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ttl_);
  }

  // .flyteidl.core.TaskLog.MessageFormat message_format = 3;
  if (this->message_format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->message_format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.TaskLog)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.TaskLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.TaskLog)
    MergeFrom(*source);
  }
}

void TaskLog::MergeFrom(const TaskLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.TaskLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_ttl()) {
    mutable_ttl()->::google::protobuf::Duration::MergeFrom(from.ttl());
  }
  if (from.message_format() != 0) {
    set_message_format(from.message_format());
  }
}

void TaskLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.TaskLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskLog::CopyFrom(const TaskLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.TaskLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskLog::IsInitialized() const {
  return true;
}

void TaskLog::Swap(TaskLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskLog::InternalSwap(TaskLog* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  name_.Swap(&other->name_);
  swap(ttl_, other->ttl_);
  swap(message_format_, other->message_format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskLog::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fexecution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fexecution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
