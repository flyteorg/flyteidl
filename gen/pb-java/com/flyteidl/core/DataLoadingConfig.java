// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/tasks.proto

package com.flyteidl.core;

/**
 * <pre>
 * This configuration allows executing raw containers in Flyte using the Flyte CoPilot system.
 * Flyte CoPilot, eliminates the needs of flytekit or sdk inside the container. Any inputs required by the users container are side-loaded in the input_path
 * Any outputs generated by the user container - within output_path are automatically uploaded.
 * </pre>
 *
 * Protobuf type {@code flyteidl.core.DataLoadingConfig}
 */
public final class DataLoadingConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.core.DataLoadingConfig)
    DataLoadingConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DataLoadingConfig.newBuilder() to construct.
  private DataLoadingConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DataLoadingConfig() {
    inputPath_ = "";
    outputPath_ = "";
    format_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DataLoadingConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DataLoadingConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            enabled_ = input.readBool();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            inputPath_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            outputPath_ = s;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            format_ = rawValue;
            break;
          }
          case 42: {
            com.flyteidl.core.IOStrategy.Builder subBuilder = null;
            if (ioStrategy_ != null) {
              subBuilder = ioStrategy_.toBuilder();
            }
            ioStrategy_ = input.readMessage(com.flyteidl.core.IOStrategy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ioStrategy_);
              ioStrategy_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.core.TasksProto.internal_static_flyteidl_core_DataLoadingConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.core.TasksProto.internal_static_flyteidl_core_DataLoadingConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.core.DataLoadingConfig.class, com.flyteidl.core.DataLoadingConfig.Builder.class);
  }

  /**
   * <pre>
   * LiteralMapFormat decides the encoding format in which the input metadata should be made available to the containers.
   * If the user has access to the protocol buffer definitions, it is recommended to use the PROTO format.
   * JSON and YAML do not need any protobuf definitions to read it
   * All remote references in core.LiteralMap are replaced with local filesystem references (the data is downloaded to local filesystem)
   * </pre>
   *
   * Protobuf enum {@code flyteidl.core.DataLoadingConfig.LiteralMapFormat}
   */
  public enum LiteralMapFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * JSON / YAML for the metadata (which contains inlined primitive values). The representation is inline with the standard json specification as specified - https://www.json.org/json-en.html
     * </pre>
     *
     * <code>JSON = 0;</code>
     */
    JSON(0),
    /**
     * <code>YAML = 1;</code>
     */
    YAML(1),
    /**
     * <pre>
     * Proto is a serialized binary of `core.LiteralMap` defined in flyteidl/core
     * </pre>
     *
     * <code>PROTO = 2;</code>
     */
    PROTO(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * JSON / YAML for the metadata (which contains inlined primitive values). The representation is inline with the standard json specification as specified - https://www.json.org/json-en.html
     * </pre>
     *
     * <code>JSON = 0;</code>
     */
    public static final int JSON_VALUE = 0;
    /**
     * <code>YAML = 1;</code>
     */
    public static final int YAML_VALUE = 1;
    /**
     * <pre>
     * Proto is a serialized binary of `core.LiteralMap` defined in flyteidl/core
     * </pre>
     *
     * <code>PROTO = 2;</code>
     */
    public static final int PROTO_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LiteralMapFormat valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LiteralMapFormat forNumber(int value) {
      switch (value) {
        case 0: return JSON;
        case 1: return YAML;
        case 2: return PROTO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LiteralMapFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LiteralMapFormat> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LiteralMapFormat>() {
            public LiteralMapFormat findValueByNumber(int number) {
              return LiteralMapFormat.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.flyteidl.core.DataLoadingConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final LiteralMapFormat[] VALUES = values();

    public static LiteralMapFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LiteralMapFormat(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.core.DataLoadingConfig.LiteralMapFormat)
  }

  public static final int ENABLED_FIELD_NUMBER = 1;
  private boolean enabled_;
  /**
   * <pre>
   * Flag enables DataLoading Config. If this is not set, data loading will not be used!
   * </pre>
   *
   * <code>bool enabled = 1 [json_name = "enabled"];</code>
   * @return The enabled.
   */
  @java.lang.Override
  public boolean getEnabled() {
    return enabled_;
  }

  public static final int INPUT_PATH_FIELD_NUMBER = 2;
  private volatile java.lang.Object inputPath_;
  /**
   * <pre>
   * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
   * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is "/var/flyte/inputs", then the file system will look like
   * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
   * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
   * /var/flyte/inputs/y -&gt; Y is a file in Binary format
   * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
   * More information about the protocol - refer to docs #TODO reference docs here
   * </pre>
   *
   * <code>string input_path = 2 [json_name = "inputPath"];</code>
   * @return The inputPath.
   */
  @java.lang.Override
  public java.lang.String getInputPath() {
    java.lang.Object ref = inputPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      inputPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
   * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is "/var/flyte/inputs", then the file system will look like
   * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
   * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
   * /var/flyte/inputs/y -&gt; Y is a file in Binary format
   * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
   * More information about the protocol - refer to docs #TODO reference docs here
   * </pre>
   *
   * <code>string input_path = 2 [json_name = "inputPath"];</code>
   * @return The bytes for inputPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInputPathBytes() {
    java.lang.Object ref = inputPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      inputPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OUTPUT_PATH_FIELD_NUMBER = 3;
  private volatile java.lang.Object outputPath_;
  /**
   * <pre>
   * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
   * </pre>
   *
   * <code>string output_path = 3 [json_name = "outputPath"];</code>
   * @return The outputPath.
   */
  @java.lang.Override
  public java.lang.String getOutputPath() {
    java.lang.Object ref = outputPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      outputPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
   * </pre>
   *
   * <code>string output_path = 3 [json_name = "outputPath"];</code>
   * @return The bytes for outputPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getOutputPathBytes() {
    java.lang.Object ref = outputPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      outputPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FORMAT_FIELD_NUMBER = 4;
  private int format_;
  /**
   * <pre>
   * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
   * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
   * </pre>
   *
   * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4 [json_name = "format"];</code>
   * @return The enum numeric value on the wire for format.
   */
  @java.lang.Override public int getFormatValue() {
    return format_;
  }
  /**
   * <pre>
   * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
   * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
   * </pre>
   *
   * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4 [json_name = "format"];</code>
   * @return The format.
   */
  @java.lang.Override public com.flyteidl.core.DataLoadingConfig.LiteralMapFormat getFormat() {
    @SuppressWarnings("deprecation")
    com.flyteidl.core.DataLoadingConfig.LiteralMapFormat result = com.flyteidl.core.DataLoadingConfig.LiteralMapFormat.valueOf(format_);
    return result == null ? com.flyteidl.core.DataLoadingConfig.LiteralMapFormat.UNRECOGNIZED : result;
  }

  public static final int IO_STRATEGY_FIELD_NUMBER = 5;
  private com.flyteidl.core.IOStrategy ioStrategy_;
  /**
   * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
   * @return Whether the ioStrategy field is set.
   */
  @java.lang.Override
  public boolean hasIoStrategy() {
    return ioStrategy_ != null;
  }
  /**
   * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
   * @return The ioStrategy.
   */
  @java.lang.Override
  public com.flyteidl.core.IOStrategy getIoStrategy() {
    return ioStrategy_ == null ? com.flyteidl.core.IOStrategy.getDefaultInstance() : ioStrategy_;
  }
  /**
   * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.IOStrategyOrBuilder getIoStrategyOrBuilder() {
    return getIoStrategy();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (enabled_ != false) {
      output.writeBool(1, enabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(inputPath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, inputPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(outputPath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, outputPath_);
    }
    if (format_ != com.flyteidl.core.DataLoadingConfig.LiteralMapFormat.JSON.getNumber()) {
      output.writeEnum(4, format_);
    }
    if (ioStrategy_ != null) {
      output.writeMessage(5, getIoStrategy());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (enabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, enabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(inputPath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, inputPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(outputPath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, outputPath_);
    }
    if (format_ != com.flyteidl.core.DataLoadingConfig.LiteralMapFormat.JSON.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, format_);
    }
    if (ioStrategy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getIoStrategy());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.core.DataLoadingConfig)) {
      return super.equals(obj);
    }
    com.flyteidl.core.DataLoadingConfig other = (com.flyteidl.core.DataLoadingConfig) obj;

    if (getEnabled()
        != other.getEnabled()) return false;
    if (!getInputPath()
        .equals(other.getInputPath())) return false;
    if (!getOutputPath()
        .equals(other.getOutputPath())) return false;
    if (format_ != other.format_) return false;
    if (hasIoStrategy() != other.hasIoStrategy()) return false;
    if (hasIoStrategy()) {
      if (!getIoStrategy()
          .equals(other.getIoStrategy())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnabled());
    hash = (37 * hash) + INPUT_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getInputPath().hashCode();
    hash = (37 * hash) + OUTPUT_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getOutputPath().hashCode();
    hash = (37 * hash) + FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + format_;
    if (hasIoStrategy()) {
      hash = (37 * hash) + IO_STRATEGY_FIELD_NUMBER;
      hash = (53 * hash) + getIoStrategy().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.DataLoadingConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.DataLoadingConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.DataLoadingConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.core.DataLoadingConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This configuration allows executing raw containers in Flyte using the Flyte CoPilot system.
   * Flyte CoPilot, eliminates the needs of flytekit or sdk inside the container. Any inputs required by the users container are side-loaded in the input_path
   * Any outputs generated by the user container - within output_path are automatically uploaded.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.DataLoadingConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.core.DataLoadingConfig)
      com.flyteidl.core.DataLoadingConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.TasksProto.internal_static_flyteidl_core_DataLoadingConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.TasksProto.internal_static_flyteidl_core_DataLoadingConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.DataLoadingConfig.class, com.flyteidl.core.DataLoadingConfig.Builder.class);
    }

    // Construct using com.flyteidl.core.DataLoadingConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      enabled_ = false;

      inputPath_ = "";

      outputPath_ = "";

      format_ = 0;

      if (ioStrategyBuilder_ == null) {
        ioStrategy_ = null;
      } else {
        ioStrategy_ = null;
        ioStrategyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.core.TasksProto.internal_static_flyteidl_core_DataLoadingConfig_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.core.DataLoadingConfig getDefaultInstanceForType() {
      return com.flyteidl.core.DataLoadingConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.core.DataLoadingConfig build() {
      com.flyteidl.core.DataLoadingConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.core.DataLoadingConfig buildPartial() {
      com.flyteidl.core.DataLoadingConfig result = new com.flyteidl.core.DataLoadingConfig(this);
      result.enabled_ = enabled_;
      result.inputPath_ = inputPath_;
      result.outputPath_ = outputPath_;
      result.format_ = format_;
      if (ioStrategyBuilder_ == null) {
        result.ioStrategy_ = ioStrategy_;
      } else {
        result.ioStrategy_ = ioStrategyBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.core.DataLoadingConfig) {
        return mergeFrom((com.flyteidl.core.DataLoadingConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.core.DataLoadingConfig other) {
      if (other == com.flyteidl.core.DataLoadingConfig.getDefaultInstance()) return this;
      if (other.getEnabled() != false) {
        setEnabled(other.getEnabled());
      }
      if (!other.getInputPath().isEmpty()) {
        inputPath_ = other.inputPath_;
        onChanged();
      }
      if (!other.getOutputPath().isEmpty()) {
        outputPath_ = other.outputPath_;
        onChanged();
      }
      if (other.format_ != 0) {
        setFormatValue(other.getFormatValue());
      }
      if (other.hasIoStrategy()) {
        mergeIoStrategy(other.getIoStrategy());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.core.DataLoadingConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.core.DataLoadingConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean enabled_ ;
    /**
     * <pre>
     * Flag enables DataLoading Config. If this is not set, data loading will not be used!
     * </pre>
     *
     * <code>bool enabled = 1 [json_name = "enabled"];</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }
    /**
     * <pre>
     * Flag enables DataLoading Config. If this is not set, data loading will not be used!
     * </pre>
     *
     * <code>bool enabled = 1 [json_name = "enabled"];</code>
     * @param value The enabled to set.
     * @return This builder for chaining.
     */
    public Builder setEnabled(boolean value) {
      
      enabled_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flag enables DataLoading Config. If this is not set, data loading will not be used!
     * </pre>
     *
     * <code>bool enabled = 1 [json_name = "enabled"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEnabled() {
      
      enabled_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object inputPath_ = "";
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is "/var/flyte/inputs", then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2 [json_name = "inputPath"];</code>
     * @return The inputPath.
     */
    public java.lang.String getInputPath() {
      java.lang.Object ref = inputPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        inputPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is "/var/flyte/inputs", then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2 [json_name = "inputPath"];</code>
     * @return The bytes for inputPath.
     */
    public com.google.protobuf.ByteString
        getInputPathBytes() {
      java.lang.Object ref = inputPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is "/var/flyte/inputs", then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2 [json_name = "inputPath"];</code>
     * @param value The inputPath to set.
     * @return This builder for chaining.
     */
    public Builder setInputPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      inputPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is "/var/flyte/inputs", then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2 [json_name = "inputPath"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInputPath() {
      
      inputPath_ = getDefaultInstance().getInputPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * File system path (start at root). This folder will contain all the inputs exploded to a separate file.
     * Example, if the input interface needs (x: int, y: blob, z: multipart_blob) and the input path is "/var/flyte/inputs", then the file system will look like
     * /var/flyte/inputs/inputs.&lt;metadata format dependent -&gt; .pb .json .yaml&gt; -&gt; Format as defined previously. The Blob and Multipart blob will reference local filesystem instead of remote locations
     * /var/flyte/inputs/x -&gt; X is a file that contains the value of x (integer) in string format
     * /var/flyte/inputs/y -&gt; Y is a file in Binary format
     * /var/flyte/inputs/z/... -&gt; Note Z itself is a directory
     * More information about the protocol - refer to docs #TODO reference docs here
     * </pre>
     *
     * <code>string input_path = 2 [json_name = "inputPath"];</code>
     * @param value The bytes for inputPath to set.
     * @return This builder for chaining.
     */
    public Builder setInputPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      inputPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object outputPath_ = "";
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3 [json_name = "outputPath"];</code>
     * @return The outputPath.
     */
    public java.lang.String getOutputPath() {
      java.lang.Object ref = outputPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        outputPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3 [json_name = "outputPath"];</code>
     * @return The bytes for outputPath.
     */
    public com.google.protobuf.ByteString
        getOutputPathBytes() {
      java.lang.Object ref = outputPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3 [json_name = "outputPath"];</code>
     * @param value The outputPath to set.
     * @return This builder for chaining.
     */
    public Builder setOutputPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      outputPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3 [json_name = "outputPath"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOutputPath() {
      
      outputPath_ = getDefaultInstance().getOutputPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * File system path (start at root). This folder should contain all the outputs for the task as individual files and/or an error text file
     * </pre>
     *
     * <code>string output_path = 3 [json_name = "outputPath"];</code>
     * @param value The bytes for outputPath to set.
     * @return This builder for chaining.
     */
    public Builder setOutputPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      outputPath_ = value;
      onChanged();
      return this;
    }

    private int format_ = 0;
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4 [json_name = "format"];</code>
     * @return The enum numeric value on the wire for format.
     */
    @java.lang.Override public int getFormatValue() {
      return format_;
    }
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4 [json_name = "format"];</code>
     * @param value The enum numeric value on the wire for format to set.
     * @return This builder for chaining.
     */
    public Builder setFormatValue(int value) {
      
      format_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4 [json_name = "format"];</code>
     * @return The format.
     */
    @java.lang.Override
    public com.flyteidl.core.DataLoadingConfig.LiteralMapFormat getFormat() {
      @SuppressWarnings("deprecation")
      com.flyteidl.core.DataLoadingConfig.LiteralMapFormat result = com.flyteidl.core.DataLoadingConfig.LiteralMapFormat.valueOf(format_);
      return result == null ? com.flyteidl.core.DataLoadingConfig.LiteralMapFormat.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4 [json_name = "format"];</code>
     * @param value The format to set.
     * @return This builder for chaining.
     */
    public Builder setFormat(com.flyteidl.core.DataLoadingConfig.LiteralMapFormat value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      format_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * In the inputs folder, there will be an additional summary/metadata file that contains references to all files or inlined primitive values.
     * This format decides the actual encoding for the data. Refer to the encoding to understand the specifics of the contents and the encoding
     * </pre>
     *
     * <code>.flyteidl.core.DataLoadingConfig.LiteralMapFormat format = 4 [json_name = "format"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFormat() {
      
      format_ = 0;
      onChanged();
      return this;
    }

    private com.flyteidl.core.IOStrategy ioStrategy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.IOStrategy, com.flyteidl.core.IOStrategy.Builder, com.flyteidl.core.IOStrategyOrBuilder> ioStrategyBuilder_;
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     * @return Whether the ioStrategy field is set.
     */
    public boolean hasIoStrategy() {
      return ioStrategyBuilder_ != null || ioStrategy_ != null;
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     * @return The ioStrategy.
     */
    public com.flyteidl.core.IOStrategy getIoStrategy() {
      if (ioStrategyBuilder_ == null) {
        return ioStrategy_ == null ? com.flyteidl.core.IOStrategy.getDefaultInstance() : ioStrategy_;
      } else {
        return ioStrategyBuilder_.getMessage();
      }
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     */
    public Builder setIoStrategy(com.flyteidl.core.IOStrategy value) {
      if (ioStrategyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ioStrategy_ = value;
        onChanged();
      } else {
        ioStrategyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     */
    public Builder setIoStrategy(
        com.flyteidl.core.IOStrategy.Builder builderForValue) {
      if (ioStrategyBuilder_ == null) {
        ioStrategy_ = builderForValue.build();
        onChanged();
      } else {
        ioStrategyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     */
    public Builder mergeIoStrategy(com.flyteidl.core.IOStrategy value) {
      if (ioStrategyBuilder_ == null) {
        if (ioStrategy_ != null) {
          ioStrategy_ =
            com.flyteidl.core.IOStrategy.newBuilder(ioStrategy_).mergeFrom(value).buildPartial();
        } else {
          ioStrategy_ = value;
        }
        onChanged();
      } else {
        ioStrategyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     */
    public Builder clearIoStrategy() {
      if (ioStrategyBuilder_ == null) {
        ioStrategy_ = null;
        onChanged();
      } else {
        ioStrategy_ = null;
        ioStrategyBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     */
    public com.flyteidl.core.IOStrategy.Builder getIoStrategyBuilder() {
      
      onChanged();
      return getIoStrategyFieldBuilder().getBuilder();
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     */
    public com.flyteidl.core.IOStrategyOrBuilder getIoStrategyOrBuilder() {
      if (ioStrategyBuilder_ != null) {
        return ioStrategyBuilder_.getMessageOrBuilder();
      } else {
        return ioStrategy_ == null ?
            com.flyteidl.core.IOStrategy.getDefaultInstance() : ioStrategy_;
      }
    }
    /**
     * <code>.flyteidl.core.IOStrategy io_strategy = 5 [json_name = "ioStrategy"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.IOStrategy, com.flyteidl.core.IOStrategy.Builder, com.flyteidl.core.IOStrategyOrBuilder> 
        getIoStrategyFieldBuilder() {
      if (ioStrategyBuilder_ == null) {
        ioStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.IOStrategy, com.flyteidl.core.IOStrategy.Builder, com.flyteidl.core.IOStrategyOrBuilder>(
                getIoStrategy(),
                getParentForChildren(),
                isClean());
        ioStrategy_ = null;
      }
      return ioStrategyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.core.DataLoadingConfig)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.core.DataLoadingConfig)
  private static final com.flyteidl.core.DataLoadingConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.core.DataLoadingConfig();
  }

  public static com.flyteidl.core.DataLoadingConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DataLoadingConfig>
      PARSER = new com.google.protobuf.AbstractParser<DataLoadingConfig>() {
    @java.lang.Override
    public DataLoadingConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DataLoadingConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DataLoadingConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DataLoadingConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.core.DataLoadingConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

