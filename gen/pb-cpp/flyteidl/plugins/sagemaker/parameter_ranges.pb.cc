// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/parameter_ranges.proto

#include "flyteidl/plugins/sagemaker/parameter_ranges.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace plugins {
namespace sagemaker {
constexpr HyperparameterScalingType::HyperparameterScalingType(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct HyperparameterScalingTypeDefaultTypeInternal {
  constexpr HyperparameterScalingTypeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HyperparameterScalingTypeDefaultTypeInternal() {}
  union {
    HyperparameterScalingType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HyperparameterScalingTypeDefaultTypeInternal _HyperparameterScalingType_default_instance_;
constexpr ContinuousParameterRange::ContinuousParameterRange(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : max_value_(0)
  , min_value_(0)
  , scaling_type_(0)
{}
struct ContinuousParameterRangeDefaultTypeInternal {
  constexpr ContinuousParameterRangeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ContinuousParameterRangeDefaultTypeInternal() {}
  union {
    ContinuousParameterRange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ContinuousParameterRangeDefaultTypeInternal _ContinuousParameterRange_default_instance_;
constexpr IntegerParameterRange::IntegerParameterRange(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : max_value_(int64_t{0})
  , min_value_(int64_t{0})
  , scaling_type_(0)
{}
struct IntegerParameterRangeDefaultTypeInternal {
  constexpr IntegerParameterRangeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IntegerParameterRangeDefaultTypeInternal() {}
  union {
    IntegerParameterRange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IntegerParameterRangeDefaultTypeInternal _IntegerParameterRange_default_instance_;
constexpr CategoricalParameterRange::CategoricalParameterRange(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : values_(){}
struct CategoricalParameterRangeDefaultTypeInternal {
  constexpr CategoricalParameterRangeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CategoricalParameterRangeDefaultTypeInternal() {}
  union {
    CategoricalParameterRange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CategoricalParameterRangeDefaultTypeInternal _CategoricalParameterRange_default_instance_;
constexpr ParameterRangeOneOf::ParameterRangeOneOf(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct ParameterRangeOneOfDefaultTypeInternal {
  constexpr ParameterRangeOneOfDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParameterRangeOneOfDefaultTypeInternal() {}
  union {
    ParameterRangeOneOf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParameterRangeOneOfDefaultTypeInternal _ParameterRangeOneOf_default_instance_;
constexpr ParameterRanges_ParameterRangeMapEntry_DoNotUse::ParameterRanges_ParameterRangeMapEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ParameterRanges_ParameterRangeMapEntry_DoNotUseDefaultTypeInternal {
  constexpr ParameterRanges_ParameterRangeMapEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParameterRanges_ParameterRangeMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ParameterRanges_ParameterRangeMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParameterRanges_ParameterRangeMapEntry_DoNotUseDefaultTypeInternal _ParameterRanges_ParameterRangeMapEntry_DoNotUse_default_instance_;
constexpr ParameterRanges::ParameterRanges(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parameter_range_map_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ParameterRangesDefaultTypeInternal {
  constexpr ParameterRangesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ParameterRangesDefaultTypeInternal() {}
  union {
    ParameterRanges _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ParameterRangesDefaultTypeInternal _ParameterRanges_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HyperparameterScalingType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, max_value_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, min_value_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, scaling_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, max_value_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, min_value_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, scaling_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::CategoricalParameterRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::CategoricalParameterRange, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRangeOneOf, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRangeOneOf, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRangeOneOf, parameter_range_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges, parameter_range_map_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::plugins::sagemaker::HyperparameterScalingType)},
  { 6, -1, -1, sizeof(::flyteidl::plugins::sagemaker::ContinuousParameterRange)},
  { 15, -1, -1, sizeof(::flyteidl::plugins::sagemaker::IntegerParameterRange)},
  { 24, -1, -1, sizeof(::flyteidl::plugins::sagemaker::CategoricalParameterRange)},
  { 31, -1, -1, sizeof(::flyteidl::plugins::sagemaker::ParameterRangeOneOf)},
  { 41, 49, -1, sizeof(::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse)},
  { 51, -1, -1, sizeof(::flyteidl::plugins::sagemaker::ParameterRanges)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::plugins::sagemaker::_HyperparameterScalingType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::plugins::sagemaker::_ContinuousParameterRange_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::plugins::sagemaker::_IntegerParameterRange_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::plugins::sagemaker::_CategoricalParameterRange_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::plugins::sagemaker::_ParameterRangeOneOf_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::plugins::sagemaker::_ParameterRanges_ParameterRangeMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::plugins::sagemaker::_ParameterRanges_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n1flyteidl/plugins/sagemaker/parameter_r"
  "anges.proto\022\032flyteidl.plugins.sagemaker\""
  "c\n\031HyperparameterScalingType\"F\n\005Value\022\010\n"
  "\004AUTO\020\000\022\n\n\006LINEAR\020\001\022\017\n\013LOGARITHMIC\020\002\022\026\n\022"
  "REVERSELOGARITHMIC\020\003\"\264\001\n\030ContinuousParam"
  "eterRange\022\033\n\tmax_value\030\001 \001(\001R\010maxValue\022\033"
  "\n\tmin_value\030\002 \001(\001R\010minValue\022^\n\014scaling_t"
  "ype\030\003 \001(\0162;.flyteidl.plugins.sagemaker.H"
  "yperparameterScalingType.ValueR\013scalingT"
  "ype\"\261\001\n\025IntegerParameterRange\022\033\n\tmax_val"
  "ue\030\001 \001(\003R\010maxValue\022\033\n\tmin_value\030\002 \001(\003R\010m"
  "inValue\022^\n\014scaling_type\030\003 \001(\0162;.flyteidl"
  ".plugins.sagemaker.HyperparameterScaling"
  "Type.ValueR\013scalingType\"3\n\031CategoricalPa"
  "rameterRange\022\026\n\006values\030\001 \003(\tR\006values\"\211\003\n"
  "\023ParameterRangeOneOf\022t\n\032continuous_param"
  "eter_range\030\001 \001(\01324.flyteidl.plugins.sage"
  "maker.ContinuousParameterRangeH\000R\030contin"
  "uousParameterRange\022k\n\027integer_parameter_"
  "range\030\002 \001(\01321.flyteidl.plugins.sagemaker"
  ".IntegerParameterRangeH\000R\025integerParamet"
  "erRange\022w\n\033categorical_parameter_range\030\003"
  " \001(\01325.flyteidl.plugins.sagemaker.Catego"
  "ricalParameterRangeH\000R\031categoricalParame"
  "terRangeB\026\n\024parameter_range_type\"\374\001\n\017Par"
  "ameterRanges\022r\n\023parameter_range_map\030\001 \003("
  "\0132B.flyteidl.plugins.sagemaker.Parameter"
  "Ranges.ParameterRangeMapEntryR\021parameter"
  "RangeMap\032u\n\026ParameterRangeMapEntry\022\020\n\003ke"
  "y\030\001 \001(\tR\003key\022E\n\005value\030\002 \001(\0132/.flyteidl.p"
  "lugins.sagemaker.ParameterRangeOneOfR\005va"
  "lue:\0028\001B\206\002\n\036com.flyteidl.plugins.sagemak"
  "erB\024ParameterRangesProtoH\002ZAgithub.com/f"
  "lyteorg/flyteidl/gen/pb-go/flyteidl/plug"
  "ins/sagemaker\370\001\000\242\002\003FPS\252\002\032Flyteidl.Plugin"
  "s.Sagemaker\312\002\032Flyteidl\\Plugins\\Sagemaker"
  "\342\002&Flyteidl\\Plugins\\Sagemaker\\GPBMetadat"
  "a\352\002\034Flyteidl::Plugins::Sagemakerb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto = {
  false, false, 1520, descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto, "flyteidl/plugins/sagemaker/parameter_ranges.proto", 
  &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once, nullptr, 0, 7,
  schemas, file_default_instances, TableStruct_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto::offsets,
  file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto, file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto, file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter() {
  return &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto(&descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto);
namespace flyteidl {
namespace plugins {
namespace sagemaker {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HyperparameterScalingType_Value_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[0];
}
bool HyperparameterScalingType_Value_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr HyperparameterScalingType_Value HyperparameterScalingType::AUTO;
constexpr HyperparameterScalingType_Value HyperparameterScalingType::LINEAR;
constexpr HyperparameterScalingType_Value HyperparameterScalingType::LOGARITHMIC;
constexpr HyperparameterScalingType_Value HyperparameterScalingType::REVERSELOGARITHMIC;
constexpr HyperparameterScalingType_Value HyperparameterScalingType::Value_MIN;
constexpr HyperparameterScalingType_Value HyperparameterScalingType::Value_MAX;
constexpr int HyperparameterScalingType::Value_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class HyperparameterScalingType::_Internal {
 public:
};

HyperparameterScalingType::HyperparameterScalingType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.plugins.sagemaker.HyperparameterScalingType)
}
HyperparameterScalingType::HyperparameterScalingType(const HyperparameterScalingType& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.HyperparameterScalingType)
}



::PROTOBUF_NAMESPACE_ID::Metadata HyperparameterScalingType::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter, &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once,
      file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[0]);
}

// ===================================================================

class ContinuousParameterRange::_Internal {
 public:
};

ContinuousParameterRange::ContinuousParameterRange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.plugins.sagemaker.ContinuousParameterRange)
}
ContinuousParameterRange::ContinuousParameterRange(const ContinuousParameterRange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&max_value_, &from.max_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&scaling_type_) -
    reinterpret_cast<char*>(&max_value_)) + sizeof(scaling_type_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.ContinuousParameterRange)
}

inline void ContinuousParameterRange::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&max_value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&scaling_type_) -
    reinterpret_cast<char*>(&max_value_)) + sizeof(scaling_type_));
}

ContinuousParameterRange::~ContinuousParameterRange() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ContinuousParameterRange::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ContinuousParameterRange::ArenaDtor(void* object) {
  ContinuousParameterRange* _this = reinterpret_cast< ContinuousParameterRange* >(object);
  (void)_this;
}
void ContinuousParameterRange::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ContinuousParameterRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ContinuousParameterRange::InternalSwap(ContinuousParameterRange* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ContinuousParameterRange::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter, &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once,
      file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[1]);
}

// ===================================================================

class IntegerParameterRange::_Internal {
 public:
};

IntegerParameterRange::IntegerParameterRange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.plugins.sagemaker.IntegerParameterRange)
}
IntegerParameterRange::IntegerParameterRange(const IntegerParameterRange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&max_value_, &from.max_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&scaling_type_) -
    reinterpret_cast<char*>(&max_value_)) + sizeof(scaling_type_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.IntegerParameterRange)
}

inline void IntegerParameterRange::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&max_value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&scaling_type_) -
    reinterpret_cast<char*>(&max_value_)) + sizeof(scaling_type_));
}

IntegerParameterRange::~IntegerParameterRange() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.IntegerParameterRange)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void IntegerParameterRange::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IntegerParameterRange::ArenaDtor(void* object) {
  IntegerParameterRange* _this = reinterpret_cast< IntegerParameterRange* >(object);
  (void)_this;
}
void IntegerParameterRange::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntegerParameterRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IntegerParameterRange::InternalSwap(IntegerParameterRange* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata IntegerParameterRange::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter, &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once,
      file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[2]);
}

// ===================================================================

class CategoricalParameterRange::_Internal {
 public:
};

CategoricalParameterRange::CategoricalParameterRange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.plugins.sagemaker.CategoricalParameterRange)
}
CategoricalParameterRange::CategoricalParameterRange(const CategoricalParameterRange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.CategoricalParameterRange)
}

inline void CategoricalParameterRange::SharedCtor() {
}

CategoricalParameterRange::~CategoricalParameterRange() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CategoricalParameterRange::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CategoricalParameterRange::ArenaDtor(void* object) {
  CategoricalParameterRange* _this = reinterpret_cast< CategoricalParameterRange* >(object);
  (void)_this;
}
void CategoricalParameterRange::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CategoricalParameterRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CategoricalParameterRange::InternalSwap(CategoricalParameterRange* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata CategoricalParameterRange::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter, &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once,
      file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[3]);
}

// ===================================================================

class ParameterRangeOneOf::_Internal {
 public:
  static const ::flyteidl::plugins::sagemaker::ContinuousParameterRange& continuous_parameter_range(const ParameterRangeOneOf* msg);
  static const ::flyteidl::plugins::sagemaker::IntegerParameterRange& integer_parameter_range(const ParameterRangeOneOf* msg);
  static const ::flyteidl::plugins::sagemaker::CategoricalParameterRange& categorical_parameter_range(const ParameterRangeOneOf* msg);
};

const ::flyteidl::plugins::sagemaker::ContinuousParameterRange&
ParameterRangeOneOf::_Internal::continuous_parameter_range(const ParameterRangeOneOf* msg) {
  return *msg->parameter_range_type_.continuous_parameter_range_;
}
const ::flyteidl::plugins::sagemaker::IntegerParameterRange&
ParameterRangeOneOf::_Internal::integer_parameter_range(const ParameterRangeOneOf* msg) {
  return *msg->parameter_range_type_.integer_parameter_range_;
}
const ::flyteidl::plugins::sagemaker::CategoricalParameterRange&
ParameterRangeOneOf::_Internal::categorical_parameter_range(const ParameterRangeOneOf* msg) {
  return *msg->parameter_range_type_.categorical_parameter_range_;
}
void ParameterRangeOneOf::set_allocated_continuous_parameter_range(::flyteidl::plugins::sagemaker::ContinuousParameterRange* continuous_parameter_range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_parameter_range_type();
  if (continuous_parameter_range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::flyteidl::plugins::sagemaker::ContinuousParameterRange>::GetOwningArena(continuous_parameter_range);
    if (message_arena != submessage_arena) {
      continuous_parameter_range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, continuous_parameter_range, submessage_arena);
    }
    set_has_continuous_parameter_range();
    parameter_range_type_.continuous_parameter_range_ = continuous_parameter_range;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.ParameterRangeOneOf.continuous_parameter_range)
}
void ParameterRangeOneOf::set_allocated_integer_parameter_range(::flyteidl::plugins::sagemaker::IntegerParameterRange* integer_parameter_range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_parameter_range_type();
  if (integer_parameter_range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::flyteidl::plugins::sagemaker::IntegerParameterRange>::GetOwningArena(integer_parameter_range);
    if (message_arena != submessage_arena) {
      integer_parameter_range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, integer_parameter_range, submessage_arena);
    }
    set_has_integer_parameter_range();
    parameter_range_type_.integer_parameter_range_ = integer_parameter_range;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.ParameterRangeOneOf.integer_parameter_range)
}
void ParameterRangeOneOf::set_allocated_categorical_parameter_range(::flyteidl::plugins::sagemaker::CategoricalParameterRange* categorical_parameter_range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_parameter_range_type();
  if (categorical_parameter_range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::flyteidl::plugins::sagemaker::CategoricalParameterRange>::GetOwningArena(categorical_parameter_range);
    if (message_arena != submessage_arena) {
      categorical_parameter_range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, categorical_parameter_range, submessage_arena);
    }
    set_has_categorical_parameter_range();
    parameter_range_type_.categorical_parameter_range_ = categorical_parameter_range;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.ParameterRangeOneOf.categorical_parameter_range)
}
ParameterRangeOneOf::ParameterRangeOneOf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.plugins.sagemaker.ParameterRangeOneOf)
}
ParameterRangeOneOf::ParameterRangeOneOf(const ParameterRangeOneOf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_parameter_range_type();
  switch (from.parameter_range_type_case()) {
    case kContinuousParameterRange: {
      _internal_mutable_continuous_parameter_range()->::flyteidl::plugins::sagemaker::ContinuousParameterRange::MergeFrom(from._internal_continuous_parameter_range());
      break;
    }
    case kIntegerParameterRange: {
      _internal_mutable_integer_parameter_range()->::flyteidl::plugins::sagemaker::IntegerParameterRange::MergeFrom(from._internal_integer_parameter_range());
      break;
    }
    case kCategoricalParameterRange: {
      _internal_mutable_categorical_parameter_range()->::flyteidl::plugins::sagemaker::CategoricalParameterRange::MergeFrom(from._internal_categorical_parameter_range());
      break;
    }
    case PARAMETER_RANGE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.ParameterRangeOneOf)
}

inline void ParameterRangeOneOf::SharedCtor() {
clear_has_parameter_range_type();
}

ParameterRangeOneOf::~ParameterRangeOneOf() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.ParameterRangeOneOf)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ParameterRangeOneOf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_parameter_range_type()) {
    clear_parameter_range_type();
  }
}

void ParameterRangeOneOf::ArenaDtor(void* object) {
  ParameterRangeOneOf* _this = reinterpret_cast< ParameterRangeOneOf* >(object);
  (void)_this;
}
void ParameterRangeOneOf::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterRangeOneOf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ParameterRangeOneOf::clear_parameter_range_type() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.plugins.sagemaker.ParameterRangeOneOf)
  switch (parameter_range_type_case()) {
    case kContinuousParameterRange: {
      if (GetArenaForAllocation() == nullptr) {
        delete parameter_range_type_.continuous_parameter_range_;
      }
      break;
    }
    case kIntegerParameterRange: {
      if (GetArenaForAllocation() == nullptr) {
        delete parameter_range_type_.integer_parameter_range_;
      }
      break;
    }
    case kCategoricalParameterRange: {
      if (GetArenaForAllocation() == nullptr) {
        delete parameter_range_type_.categorical_parameter_range_;
      }
      break;
    }
    case PARAMETER_RANGE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETER_RANGE_TYPE_NOT_SET;
}


void ParameterRangeOneOf::InternalSwap(ParameterRangeOneOf* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterRangeOneOf::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter, &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once,
      file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[4]);
}

// ===================================================================

ParameterRanges_ParameterRangeMapEntry_DoNotUse::ParameterRanges_ParameterRangeMapEntry_DoNotUse() {}
ParameterRanges_ParameterRangeMapEntry_DoNotUse::ParameterRanges_ParameterRangeMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ParameterRanges_ParameterRangeMapEntry_DoNotUse::MergeFrom(const ParameterRanges_ParameterRangeMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ParameterRanges_ParameterRangeMapEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter, &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once,
      file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[5]);
}

// ===================================================================

class ParameterRanges::_Internal {
 public:
};

ParameterRanges::ParameterRanges(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  parameter_range_map_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.plugins.sagemaker.ParameterRanges)
}
ParameterRanges::ParameterRanges(const ParameterRanges& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameter_range_map_.MergeFrom(from.parameter_range_map_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.ParameterRanges)
}

inline void ParameterRanges::SharedCtor() {
}

ParameterRanges::~ParameterRanges() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.ParameterRanges)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ParameterRanges::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ParameterRanges::ArenaDtor(void* object) {
  ParameterRanges* _this = reinterpret_cast< ParameterRanges* >(object);
  (void)_this;
  _this->parameter_range_map_. ~MapField();
}
inline void ParameterRanges::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ParameterRanges::ArenaDtor);
  }
}
void ParameterRanges::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ParameterRanges::InternalSwap(ParameterRanges* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterRanges::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_getter, &descriptor_table_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto_once,
      file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fparameter_5franges_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::HyperparameterScalingType* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::HyperparameterScalingType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::plugins::sagemaker::HyperparameterScalingType >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::ContinuousParameterRange* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ContinuousParameterRange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::plugins::sagemaker::ContinuousParameterRange >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::IntegerParameterRange* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::IntegerParameterRange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::plugins::sagemaker::IntegerParameterRange >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::CategoricalParameterRange* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::CategoricalParameterRange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::plugins::sagemaker::CategoricalParameterRange >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::ParameterRangeOneOf* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ParameterRangeOneOf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::plugins::sagemaker::ParameterRangeOneOf >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::plugins::sagemaker::ParameterRanges_ParameterRangeMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::ParameterRanges* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ParameterRanges >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::plugins::sagemaker::ParameterRanges >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
