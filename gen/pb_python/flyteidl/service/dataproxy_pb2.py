# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/service/dataproxy.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from protoc_gen_swagger.options import annotations_pb2 as protoc__gen__swagger_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='flyteidl/service/dataproxy.proto',
  package='flyteidl.service',
  syntax='proto3',
  serialized_options=_b('Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/service'),
  serialized_pb=_b('\n flyteidl/service/dataproxy.proto\x12\x10\x66lyteidl.service\x1a\x1cgoogle/api/annotations.proto\x1a,protoc-gen-swagger/options/annotations.proto\"F\n\x1c\x43reateUploadLocationResponse\x12\x12\n\nsigned_url\x18\x01 \x01(\t\x12\x12\n\nnative_url\x18\x02 \x01(\t\"-\n\x1b\x43reateUploadLocationRequest\x12\x0e\n\x06suffix\x18\x01 \x01(\t2\xf1\x01\n\tDataProxy\x12\xe3\x01\n\x14\x43reateUploadLocation\x12-.flyteidl.service.CreateUploadLocationRequest\x1a..flyteidl.service.CreateUploadLocationResponse\"l\x82\xd3\xe4\x93\x02\x16\"\x11/api/v1/dataproxy:\x01*\x92\x41M\x1aKCreates a write-only http location that is accessible for tasks at runtime.B9Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/serviceb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,protoc__gen__swagger_dot_options_dot_annotations__pb2.DESCRIPTOR,])




_CREATEUPLOADLOCATIONRESPONSE = _descriptor.Descriptor(
  name='CreateUploadLocationResponse',
  full_name='flyteidl.service.CreateUploadLocationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='signed_url', full_name='flyteidl.service.CreateUploadLocationResponse.signed_url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='native_url', full_name='flyteidl.service.CreateUploadLocationResponse.native_url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=200,
)


_CREATEUPLOADLOCATIONREQUEST = _descriptor.Descriptor(
  name='CreateUploadLocationRequest',
  full_name='flyteidl.service.CreateUploadLocationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='suffix', full_name='flyteidl.service.CreateUploadLocationRequest.suffix', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=247,
)

DESCRIPTOR.message_types_by_name['CreateUploadLocationResponse'] = _CREATEUPLOADLOCATIONRESPONSE
DESCRIPTOR.message_types_by_name['CreateUploadLocationRequest'] = _CREATEUPLOADLOCATIONREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CreateUploadLocationResponse = _reflection.GeneratedProtocolMessageType('CreateUploadLocationResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATEUPLOADLOCATIONRESPONSE,
  __module__ = 'flyteidl.service.dataproxy_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.service.CreateUploadLocationResponse)
  ))
_sym_db.RegisterMessage(CreateUploadLocationResponse)

CreateUploadLocationRequest = _reflection.GeneratedProtocolMessageType('CreateUploadLocationRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEUPLOADLOCATIONREQUEST,
  __module__ = 'flyteidl.service.dataproxy_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.service.CreateUploadLocationRequest)
  ))
_sym_db.RegisterMessage(CreateUploadLocationRequest)


DESCRIPTOR._options = None

_DATAPROXY = _descriptor.ServiceDescriptor(
  name='DataProxy',
  full_name='flyteidl.service.DataProxy',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=250,
  serialized_end=491,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateUploadLocation',
    full_name='flyteidl.service.DataProxy.CreateUploadLocation',
    index=0,
    containing_service=None,
    input_type=_CREATEUPLOADLOCATIONREQUEST,
    output_type=_CREATEUPLOADLOCATIONRESPONSE,
    serialized_options=_b('\202\323\344\223\002\026\"\021/api/v1/dataproxy:\001*\222AM\032KCreates a write-only http location that is accessible for tasks at runtime.'),
  ),
])
_sym_db.RegisterServiceDescriptor(_DATAPROXY)

DESCRIPTOR.services_by_name['DataProxy'] = _DATAPROXY

# @@protoc_insertion_point(module_scope)
