// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/datacatalog/datacatalog.proto

package com.datacatalog;

/**
 * <pre>
 * A single property to filter on.
 * </pre>
 *
 * Protobuf type {@code datacatalog.SinglePropertyFilter}
 */
public final class SinglePropertyFilter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datacatalog.SinglePropertyFilter)
    SinglePropertyFilterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SinglePropertyFilter.newBuilder() to construct.
  private SinglePropertyFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SinglePropertyFilter() {
    operator_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SinglePropertyFilter();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SinglePropertyFilter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.datacatalog.TagPropertyFilter.Builder subBuilder = null;
            if (propertyFilterCase_ == 1) {
              subBuilder = ((com.datacatalog.TagPropertyFilter) propertyFilter_).toBuilder();
            }
            propertyFilter_ =
                input.readMessage(com.datacatalog.TagPropertyFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.datacatalog.TagPropertyFilter) propertyFilter_);
              propertyFilter_ = subBuilder.buildPartial();
            }
            propertyFilterCase_ = 1;
            break;
          }
          case 18: {
            com.datacatalog.PartitionPropertyFilter.Builder subBuilder = null;
            if (propertyFilterCase_ == 2) {
              subBuilder = ((com.datacatalog.PartitionPropertyFilter) propertyFilter_).toBuilder();
            }
            propertyFilter_ =
                input.readMessage(com.datacatalog.PartitionPropertyFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.datacatalog.PartitionPropertyFilter) propertyFilter_);
              propertyFilter_ = subBuilder.buildPartial();
            }
            propertyFilterCase_ = 2;
            break;
          }
          case 26: {
            com.datacatalog.ArtifactPropertyFilter.Builder subBuilder = null;
            if (propertyFilterCase_ == 3) {
              subBuilder = ((com.datacatalog.ArtifactPropertyFilter) propertyFilter_).toBuilder();
            }
            propertyFilter_ =
                input.readMessage(com.datacatalog.ArtifactPropertyFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.datacatalog.ArtifactPropertyFilter) propertyFilter_);
              propertyFilter_ = subBuilder.buildPartial();
            }
            propertyFilterCase_ = 3;
            break;
          }
          case 34: {
            com.datacatalog.DatasetPropertyFilter.Builder subBuilder = null;
            if (propertyFilterCase_ == 4) {
              subBuilder = ((com.datacatalog.DatasetPropertyFilter) propertyFilter_).toBuilder();
            }
            propertyFilter_ =
                input.readMessage(com.datacatalog.DatasetPropertyFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.datacatalog.DatasetPropertyFilter) propertyFilter_);
              propertyFilter_ = subBuilder.buildPartial();
            }
            propertyFilterCase_ = 4;
            break;
          }
          case 80: {
            int rawValue = input.readEnum();

            operator_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.datacatalog.DatacatalogProto.internal_static_datacatalog_SinglePropertyFilter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.datacatalog.DatacatalogProto.internal_static_datacatalog_SinglePropertyFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.datacatalog.SinglePropertyFilter.class, com.datacatalog.SinglePropertyFilter.Builder.class);
  }

  /**
   * <pre>
   * as use-cases come up we can add more operators, ex: gte, like, not eq etc.
   * </pre>
   *
   * Protobuf enum {@code datacatalog.SinglePropertyFilter.ComparisonOperator}
   */
  public enum ComparisonOperator
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EQUALS = 0;</code>
     */
    EQUALS(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EQUALS = 0;</code>
     */
    public static final int EQUALS_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ComparisonOperator valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ComparisonOperator forNumber(int value) {
      switch (value) {
        case 0: return EQUALS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ComparisonOperator>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ComparisonOperator> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ComparisonOperator>() {
            public ComparisonOperator findValueByNumber(int number) {
              return ComparisonOperator.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.datacatalog.SinglePropertyFilter.getDescriptor().getEnumTypes().get(0);
    }

    private static final ComparisonOperator[] VALUES = values();

    public static ComparisonOperator valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ComparisonOperator(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:datacatalog.SinglePropertyFilter.ComparisonOperator)
  }

  private int propertyFilterCase_ = 0;
  private java.lang.Object propertyFilter_;
  public enum PropertyFilterCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TAG_FILTER(1),
    PARTITION_FILTER(2),
    ARTIFACT_FILTER(3),
    DATASET_FILTER(4),
    PROPERTYFILTER_NOT_SET(0);
    private final int value;
    private PropertyFilterCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PropertyFilterCase valueOf(int value) {
      return forNumber(value);
    }

    public static PropertyFilterCase forNumber(int value) {
      switch (value) {
        case 1: return TAG_FILTER;
        case 2: return PARTITION_FILTER;
        case 3: return ARTIFACT_FILTER;
        case 4: return DATASET_FILTER;
        case 0: return PROPERTYFILTER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PropertyFilterCase
  getPropertyFilterCase() {
    return PropertyFilterCase.forNumber(
        propertyFilterCase_);
  }

  public static final int TAG_FILTER_FIELD_NUMBER = 1;
  /**
   * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
   * @return Whether the tagFilter field is set.
   */
  @java.lang.Override
  public boolean hasTagFilter() {
    return propertyFilterCase_ == 1;
  }
  /**
   * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
   * @return The tagFilter.
   */
  @java.lang.Override
  public com.datacatalog.TagPropertyFilter getTagFilter() {
    if (propertyFilterCase_ == 1) {
       return (com.datacatalog.TagPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.TagPropertyFilter.getDefaultInstance();
  }
  /**
   * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
   */
  @java.lang.Override
  public com.datacatalog.TagPropertyFilterOrBuilder getTagFilterOrBuilder() {
    if (propertyFilterCase_ == 1) {
       return (com.datacatalog.TagPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.TagPropertyFilter.getDefaultInstance();
  }

  public static final int PARTITION_FILTER_FIELD_NUMBER = 2;
  /**
   * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
   * @return Whether the partitionFilter field is set.
   */
  @java.lang.Override
  public boolean hasPartitionFilter() {
    return propertyFilterCase_ == 2;
  }
  /**
   * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
   * @return The partitionFilter.
   */
  @java.lang.Override
  public com.datacatalog.PartitionPropertyFilter getPartitionFilter() {
    if (propertyFilterCase_ == 2) {
       return (com.datacatalog.PartitionPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.PartitionPropertyFilter.getDefaultInstance();
  }
  /**
   * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
   */
  @java.lang.Override
  public com.datacatalog.PartitionPropertyFilterOrBuilder getPartitionFilterOrBuilder() {
    if (propertyFilterCase_ == 2) {
       return (com.datacatalog.PartitionPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.PartitionPropertyFilter.getDefaultInstance();
  }

  public static final int ARTIFACT_FILTER_FIELD_NUMBER = 3;
  /**
   * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
   * @return Whether the artifactFilter field is set.
   */
  @java.lang.Override
  public boolean hasArtifactFilter() {
    return propertyFilterCase_ == 3;
  }
  /**
   * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
   * @return The artifactFilter.
   */
  @java.lang.Override
  public com.datacatalog.ArtifactPropertyFilter getArtifactFilter() {
    if (propertyFilterCase_ == 3) {
       return (com.datacatalog.ArtifactPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.ArtifactPropertyFilter.getDefaultInstance();
  }
  /**
   * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
   */
  @java.lang.Override
  public com.datacatalog.ArtifactPropertyFilterOrBuilder getArtifactFilterOrBuilder() {
    if (propertyFilterCase_ == 3) {
       return (com.datacatalog.ArtifactPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.ArtifactPropertyFilter.getDefaultInstance();
  }

  public static final int DATASET_FILTER_FIELD_NUMBER = 4;
  /**
   * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
   * @return Whether the datasetFilter field is set.
   */
  @java.lang.Override
  public boolean hasDatasetFilter() {
    return propertyFilterCase_ == 4;
  }
  /**
   * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
   * @return The datasetFilter.
   */
  @java.lang.Override
  public com.datacatalog.DatasetPropertyFilter getDatasetFilter() {
    if (propertyFilterCase_ == 4) {
       return (com.datacatalog.DatasetPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.DatasetPropertyFilter.getDefaultInstance();
  }
  /**
   * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
   */
  @java.lang.Override
  public com.datacatalog.DatasetPropertyFilterOrBuilder getDatasetFilterOrBuilder() {
    if (propertyFilterCase_ == 4) {
       return (com.datacatalog.DatasetPropertyFilter) propertyFilter_;
    }
    return com.datacatalog.DatasetPropertyFilter.getDefaultInstance();
  }

  public static final int OPERATOR_FIELD_NUMBER = 10;
  private int operator_;
  /**
   * <pre>
   * field 10 in case we add more entities to query
   * </pre>
   *
   * <code>.datacatalog.SinglePropertyFilter.ComparisonOperator operator = 10 [json_name = "operator"];</code>
   * @return The enum numeric value on the wire for operator.
   */
  @java.lang.Override public int getOperatorValue() {
    return operator_;
  }
  /**
   * <pre>
   * field 10 in case we add more entities to query
   * </pre>
   *
   * <code>.datacatalog.SinglePropertyFilter.ComparisonOperator operator = 10 [json_name = "operator"];</code>
   * @return The operator.
   */
  @java.lang.Override public com.datacatalog.SinglePropertyFilter.ComparisonOperator getOperator() {
    @SuppressWarnings("deprecation")
    com.datacatalog.SinglePropertyFilter.ComparisonOperator result = com.datacatalog.SinglePropertyFilter.ComparisonOperator.valueOf(operator_);
    return result == null ? com.datacatalog.SinglePropertyFilter.ComparisonOperator.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (propertyFilterCase_ == 1) {
      output.writeMessage(1, (com.datacatalog.TagPropertyFilter) propertyFilter_);
    }
    if (propertyFilterCase_ == 2) {
      output.writeMessage(2, (com.datacatalog.PartitionPropertyFilter) propertyFilter_);
    }
    if (propertyFilterCase_ == 3) {
      output.writeMessage(3, (com.datacatalog.ArtifactPropertyFilter) propertyFilter_);
    }
    if (propertyFilterCase_ == 4) {
      output.writeMessage(4, (com.datacatalog.DatasetPropertyFilter) propertyFilter_);
    }
    if (operator_ != com.datacatalog.SinglePropertyFilter.ComparisonOperator.EQUALS.getNumber()) {
      output.writeEnum(10, operator_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (propertyFilterCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.datacatalog.TagPropertyFilter) propertyFilter_);
    }
    if (propertyFilterCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.datacatalog.PartitionPropertyFilter) propertyFilter_);
    }
    if (propertyFilterCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.datacatalog.ArtifactPropertyFilter) propertyFilter_);
    }
    if (propertyFilterCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.datacatalog.DatasetPropertyFilter) propertyFilter_);
    }
    if (operator_ != com.datacatalog.SinglePropertyFilter.ComparisonOperator.EQUALS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, operator_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.datacatalog.SinglePropertyFilter)) {
      return super.equals(obj);
    }
    com.datacatalog.SinglePropertyFilter other = (com.datacatalog.SinglePropertyFilter) obj;

    if (operator_ != other.operator_) return false;
    if (!getPropertyFilterCase().equals(other.getPropertyFilterCase())) return false;
    switch (propertyFilterCase_) {
      case 1:
        if (!getTagFilter()
            .equals(other.getTagFilter())) return false;
        break;
      case 2:
        if (!getPartitionFilter()
            .equals(other.getPartitionFilter())) return false;
        break;
      case 3:
        if (!getArtifactFilter()
            .equals(other.getArtifactFilter())) return false;
        break;
      case 4:
        if (!getDatasetFilter()
            .equals(other.getDatasetFilter())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
    hash = (53 * hash) + operator_;
    switch (propertyFilterCase_) {
      case 1:
        hash = (37 * hash) + TAG_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getTagFilter().hashCode();
        break;
      case 2:
        hash = (37 * hash) + PARTITION_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getPartitionFilter().hashCode();
        break;
      case 3:
        hash = (37 * hash) + ARTIFACT_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getArtifactFilter().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DATASET_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getDatasetFilter().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.datacatalog.SinglePropertyFilter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.datacatalog.SinglePropertyFilter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.datacatalog.SinglePropertyFilter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.datacatalog.SinglePropertyFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.datacatalog.SinglePropertyFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A single property to filter on.
   * </pre>
   *
   * Protobuf type {@code datacatalog.SinglePropertyFilter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datacatalog.SinglePropertyFilter)
      com.datacatalog.SinglePropertyFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.datacatalog.DatacatalogProto.internal_static_datacatalog_SinglePropertyFilter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.datacatalog.DatacatalogProto.internal_static_datacatalog_SinglePropertyFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.datacatalog.SinglePropertyFilter.class, com.datacatalog.SinglePropertyFilter.Builder.class);
    }

    // Construct using com.datacatalog.SinglePropertyFilter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      operator_ = 0;

      propertyFilterCase_ = 0;
      propertyFilter_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.datacatalog.DatacatalogProto.internal_static_datacatalog_SinglePropertyFilter_descriptor;
    }

    @java.lang.Override
    public com.datacatalog.SinglePropertyFilter getDefaultInstanceForType() {
      return com.datacatalog.SinglePropertyFilter.getDefaultInstance();
    }

    @java.lang.Override
    public com.datacatalog.SinglePropertyFilter build() {
      com.datacatalog.SinglePropertyFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.datacatalog.SinglePropertyFilter buildPartial() {
      com.datacatalog.SinglePropertyFilter result = new com.datacatalog.SinglePropertyFilter(this);
      if (propertyFilterCase_ == 1) {
        if (tagFilterBuilder_ == null) {
          result.propertyFilter_ = propertyFilter_;
        } else {
          result.propertyFilter_ = tagFilterBuilder_.build();
        }
      }
      if (propertyFilterCase_ == 2) {
        if (partitionFilterBuilder_ == null) {
          result.propertyFilter_ = propertyFilter_;
        } else {
          result.propertyFilter_ = partitionFilterBuilder_.build();
        }
      }
      if (propertyFilterCase_ == 3) {
        if (artifactFilterBuilder_ == null) {
          result.propertyFilter_ = propertyFilter_;
        } else {
          result.propertyFilter_ = artifactFilterBuilder_.build();
        }
      }
      if (propertyFilterCase_ == 4) {
        if (datasetFilterBuilder_ == null) {
          result.propertyFilter_ = propertyFilter_;
        } else {
          result.propertyFilter_ = datasetFilterBuilder_.build();
        }
      }
      result.operator_ = operator_;
      result.propertyFilterCase_ = propertyFilterCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.datacatalog.SinglePropertyFilter) {
        return mergeFrom((com.datacatalog.SinglePropertyFilter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.datacatalog.SinglePropertyFilter other) {
      if (other == com.datacatalog.SinglePropertyFilter.getDefaultInstance()) return this;
      if (other.operator_ != 0) {
        setOperatorValue(other.getOperatorValue());
      }
      switch (other.getPropertyFilterCase()) {
        case TAG_FILTER: {
          mergeTagFilter(other.getTagFilter());
          break;
        }
        case PARTITION_FILTER: {
          mergePartitionFilter(other.getPartitionFilter());
          break;
        }
        case ARTIFACT_FILTER: {
          mergeArtifactFilter(other.getArtifactFilter());
          break;
        }
        case DATASET_FILTER: {
          mergeDatasetFilter(other.getDatasetFilter());
          break;
        }
        case PROPERTYFILTER_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.datacatalog.SinglePropertyFilter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.datacatalog.SinglePropertyFilter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int propertyFilterCase_ = 0;
    private java.lang.Object propertyFilter_;
    public PropertyFilterCase
        getPropertyFilterCase() {
      return PropertyFilterCase.forNumber(
          propertyFilterCase_);
    }

    public Builder clearPropertyFilter() {
      propertyFilterCase_ = 0;
      propertyFilter_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.TagPropertyFilter, com.datacatalog.TagPropertyFilter.Builder, com.datacatalog.TagPropertyFilterOrBuilder> tagFilterBuilder_;
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     * @return Whether the tagFilter field is set.
     */
    @java.lang.Override
    public boolean hasTagFilter() {
      return propertyFilterCase_ == 1;
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     * @return The tagFilter.
     */
    @java.lang.Override
    public com.datacatalog.TagPropertyFilter getTagFilter() {
      if (tagFilterBuilder_ == null) {
        if (propertyFilterCase_ == 1) {
          return (com.datacatalog.TagPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.TagPropertyFilter.getDefaultInstance();
      } else {
        if (propertyFilterCase_ == 1) {
          return tagFilterBuilder_.getMessage();
        }
        return com.datacatalog.TagPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     */
    public Builder setTagFilter(com.datacatalog.TagPropertyFilter value) {
      if (tagFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        propertyFilter_ = value;
        onChanged();
      } else {
        tagFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 1;
      return this;
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     */
    public Builder setTagFilter(
        com.datacatalog.TagPropertyFilter.Builder builderForValue) {
      if (tagFilterBuilder_ == null) {
        propertyFilter_ = builderForValue.build();
        onChanged();
      } else {
        tagFilterBuilder_.setMessage(builderForValue.build());
      }
      propertyFilterCase_ = 1;
      return this;
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     */
    public Builder mergeTagFilter(com.datacatalog.TagPropertyFilter value) {
      if (tagFilterBuilder_ == null) {
        if (propertyFilterCase_ == 1 &&
            propertyFilter_ != com.datacatalog.TagPropertyFilter.getDefaultInstance()) {
          propertyFilter_ = com.datacatalog.TagPropertyFilter.newBuilder((com.datacatalog.TagPropertyFilter) propertyFilter_)
              .mergeFrom(value).buildPartial();
        } else {
          propertyFilter_ = value;
        }
        onChanged();
      } else {
        if (propertyFilterCase_ == 1) {
          tagFilterBuilder_.mergeFrom(value);
        }
        tagFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 1;
      return this;
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     */
    public Builder clearTagFilter() {
      if (tagFilterBuilder_ == null) {
        if (propertyFilterCase_ == 1) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
          onChanged();
        }
      } else {
        if (propertyFilterCase_ == 1) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
        }
        tagFilterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     */
    public com.datacatalog.TagPropertyFilter.Builder getTagFilterBuilder() {
      return getTagFilterFieldBuilder().getBuilder();
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     */
    @java.lang.Override
    public com.datacatalog.TagPropertyFilterOrBuilder getTagFilterOrBuilder() {
      if ((propertyFilterCase_ == 1) && (tagFilterBuilder_ != null)) {
        return tagFilterBuilder_.getMessageOrBuilder();
      } else {
        if (propertyFilterCase_ == 1) {
          return (com.datacatalog.TagPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.TagPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.TagPropertyFilter tag_filter = 1 [json_name = "tagFilter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.TagPropertyFilter, com.datacatalog.TagPropertyFilter.Builder, com.datacatalog.TagPropertyFilterOrBuilder> 
        getTagFilterFieldBuilder() {
      if (tagFilterBuilder_ == null) {
        if (!(propertyFilterCase_ == 1)) {
          propertyFilter_ = com.datacatalog.TagPropertyFilter.getDefaultInstance();
        }
        tagFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.datacatalog.TagPropertyFilter, com.datacatalog.TagPropertyFilter.Builder, com.datacatalog.TagPropertyFilterOrBuilder>(
                (com.datacatalog.TagPropertyFilter) propertyFilter_,
                getParentForChildren(),
                isClean());
        propertyFilter_ = null;
      }
      propertyFilterCase_ = 1;
      onChanged();;
      return tagFilterBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.PartitionPropertyFilter, com.datacatalog.PartitionPropertyFilter.Builder, com.datacatalog.PartitionPropertyFilterOrBuilder> partitionFilterBuilder_;
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     * @return Whether the partitionFilter field is set.
     */
    @java.lang.Override
    public boolean hasPartitionFilter() {
      return propertyFilterCase_ == 2;
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     * @return The partitionFilter.
     */
    @java.lang.Override
    public com.datacatalog.PartitionPropertyFilter getPartitionFilter() {
      if (partitionFilterBuilder_ == null) {
        if (propertyFilterCase_ == 2) {
          return (com.datacatalog.PartitionPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.PartitionPropertyFilter.getDefaultInstance();
      } else {
        if (propertyFilterCase_ == 2) {
          return partitionFilterBuilder_.getMessage();
        }
        return com.datacatalog.PartitionPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     */
    public Builder setPartitionFilter(com.datacatalog.PartitionPropertyFilter value) {
      if (partitionFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        propertyFilter_ = value;
        onChanged();
      } else {
        partitionFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 2;
      return this;
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     */
    public Builder setPartitionFilter(
        com.datacatalog.PartitionPropertyFilter.Builder builderForValue) {
      if (partitionFilterBuilder_ == null) {
        propertyFilter_ = builderForValue.build();
        onChanged();
      } else {
        partitionFilterBuilder_.setMessage(builderForValue.build());
      }
      propertyFilterCase_ = 2;
      return this;
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     */
    public Builder mergePartitionFilter(com.datacatalog.PartitionPropertyFilter value) {
      if (partitionFilterBuilder_ == null) {
        if (propertyFilterCase_ == 2 &&
            propertyFilter_ != com.datacatalog.PartitionPropertyFilter.getDefaultInstance()) {
          propertyFilter_ = com.datacatalog.PartitionPropertyFilter.newBuilder((com.datacatalog.PartitionPropertyFilter) propertyFilter_)
              .mergeFrom(value).buildPartial();
        } else {
          propertyFilter_ = value;
        }
        onChanged();
      } else {
        if (propertyFilterCase_ == 2) {
          partitionFilterBuilder_.mergeFrom(value);
        }
        partitionFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 2;
      return this;
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     */
    public Builder clearPartitionFilter() {
      if (partitionFilterBuilder_ == null) {
        if (propertyFilterCase_ == 2) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
          onChanged();
        }
      } else {
        if (propertyFilterCase_ == 2) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
        }
        partitionFilterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     */
    public com.datacatalog.PartitionPropertyFilter.Builder getPartitionFilterBuilder() {
      return getPartitionFilterFieldBuilder().getBuilder();
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     */
    @java.lang.Override
    public com.datacatalog.PartitionPropertyFilterOrBuilder getPartitionFilterOrBuilder() {
      if ((propertyFilterCase_ == 2) && (partitionFilterBuilder_ != null)) {
        return partitionFilterBuilder_.getMessageOrBuilder();
      } else {
        if (propertyFilterCase_ == 2) {
          return (com.datacatalog.PartitionPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.PartitionPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.PartitionPropertyFilter partition_filter = 2 [json_name = "partitionFilter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.PartitionPropertyFilter, com.datacatalog.PartitionPropertyFilter.Builder, com.datacatalog.PartitionPropertyFilterOrBuilder> 
        getPartitionFilterFieldBuilder() {
      if (partitionFilterBuilder_ == null) {
        if (!(propertyFilterCase_ == 2)) {
          propertyFilter_ = com.datacatalog.PartitionPropertyFilter.getDefaultInstance();
        }
        partitionFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.datacatalog.PartitionPropertyFilter, com.datacatalog.PartitionPropertyFilter.Builder, com.datacatalog.PartitionPropertyFilterOrBuilder>(
                (com.datacatalog.PartitionPropertyFilter) propertyFilter_,
                getParentForChildren(),
                isClean());
        propertyFilter_ = null;
      }
      propertyFilterCase_ = 2;
      onChanged();;
      return partitionFilterBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.ArtifactPropertyFilter, com.datacatalog.ArtifactPropertyFilter.Builder, com.datacatalog.ArtifactPropertyFilterOrBuilder> artifactFilterBuilder_;
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     * @return Whether the artifactFilter field is set.
     */
    @java.lang.Override
    public boolean hasArtifactFilter() {
      return propertyFilterCase_ == 3;
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     * @return The artifactFilter.
     */
    @java.lang.Override
    public com.datacatalog.ArtifactPropertyFilter getArtifactFilter() {
      if (artifactFilterBuilder_ == null) {
        if (propertyFilterCase_ == 3) {
          return (com.datacatalog.ArtifactPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.ArtifactPropertyFilter.getDefaultInstance();
      } else {
        if (propertyFilterCase_ == 3) {
          return artifactFilterBuilder_.getMessage();
        }
        return com.datacatalog.ArtifactPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     */
    public Builder setArtifactFilter(com.datacatalog.ArtifactPropertyFilter value) {
      if (artifactFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        propertyFilter_ = value;
        onChanged();
      } else {
        artifactFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 3;
      return this;
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     */
    public Builder setArtifactFilter(
        com.datacatalog.ArtifactPropertyFilter.Builder builderForValue) {
      if (artifactFilterBuilder_ == null) {
        propertyFilter_ = builderForValue.build();
        onChanged();
      } else {
        artifactFilterBuilder_.setMessage(builderForValue.build());
      }
      propertyFilterCase_ = 3;
      return this;
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     */
    public Builder mergeArtifactFilter(com.datacatalog.ArtifactPropertyFilter value) {
      if (artifactFilterBuilder_ == null) {
        if (propertyFilterCase_ == 3 &&
            propertyFilter_ != com.datacatalog.ArtifactPropertyFilter.getDefaultInstance()) {
          propertyFilter_ = com.datacatalog.ArtifactPropertyFilter.newBuilder((com.datacatalog.ArtifactPropertyFilter) propertyFilter_)
              .mergeFrom(value).buildPartial();
        } else {
          propertyFilter_ = value;
        }
        onChanged();
      } else {
        if (propertyFilterCase_ == 3) {
          artifactFilterBuilder_.mergeFrom(value);
        }
        artifactFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 3;
      return this;
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     */
    public Builder clearArtifactFilter() {
      if (artifactFilterBuilder_ == null) {
        if (propertyFilterCase_ == 3) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
          onChanged();
        }
      } else {
        if (propertyFilterCase_ == 3) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
        }
        artifactFilterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     */
    public com.datacatalog.ArtifactPropertyFilter.Builder getArtifactFilterBuilder() {
      return getArtifactFilterFieldBuilder().getBuilder();
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     */
    @java.lang.Override
    public com.datacatalog.ArtifactPropertyFilterOrBuilder getArtifactFilterOrBuilder() {
      if ((propertyFilterCase_ == 3) && (artifactFilterBuilder_ != null)) {
        return artifactFilterBuilder_.getMessageOrBuilder();
      } else {
        if (propertyFilterCase_ == 3) {
          return (com.datacatalog.ArtifactPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.ArtifactPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.ArtifactPropertyFilter artifact_filter = 3 [json_name = "artifactFilter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.ArtifactPropertyFilter, com.datacatalog.ArtifactPropertyFilter.Builder, com.datacatalog.ArtifactPropertyFilterOrBuilder> 
        getArtifactFilterFieldBuilder() {
      if (artifactFilterBuilder_ == null) {
        if (!(propertyFilterCase_ == 3)) {
          propertyFilter_ = com.datacatalog.ArtifactPropertyFilter.getDefaultInstance();
        }
        artifactFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.datacatalog.ArtifactPropertyFilter, com.datacatalog.ArtifactPropertyFilter.Builder, com.datacatalog.ArtifactPropertyFilterOrBuilder>(
                (com.datacatalog.ArtifactPropertyFilter) propertyFilter_,
                getParentForChildren(),
                isClean());
        propertyFilter_ = null;
      }
      propertyFilterCase_ = 3;
      onChanged();;
      return artifactFilterBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.DatasetPropertyFilter, com.datacatalog.DatasetPropertyFilter.Builder, com.datacatalog.DatasetPropertyFilterOrBuilder> datasetFilterBuilder_;
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     * @return Whether the datasetFilter field is set.
     */
    @java.lang.Override
    public boolean hasDatasetFilter() {
      return propertyFilterCase_ == 4;
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     * @return The datasetFilter.
     */
    @java.lang.Override
    public com.datacatalog.DatasetPropertyFilter getDatasetFilter() {
      if (datasetFilterBuilder_ == null) {
        if (propertyFilterCase_ == 4) {
          return (com.datacatalog.DatasetPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.DatasetPropertyFilter.getDefaultInstance();
      } else {
        if (propertyFilterCase_ == 4) {
          return datasetFilterBuilder_.getMessage();
        }
        return com.datacatalog.DatasetPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     */
    public Builder setDatasetFilter(com.datacatalog.DatasetPropertyFilter value) {
      if (datasetFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        propertyFilter_ = value;
        onChanged();
      } else {
        datasetFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 4;
      return this;
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     */
    public Builder setDatasetFilter(
        com.datacatalog.DatasetPropertyFilter.Builder builderForValue) {
      if (datasetFilterBuilder_ == null) {
        propertyFilter_ = builderForValue.build();
        onChanged();
      } else {
        datasetFilterBuilder_.setMessage(builderForValue.build());
      }
      propertyFilterCase_ = 4;
      return this;
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     */
    public Builder mergeDatasetFilter(com.datacatalog.DatasetPropertyFilter value) {
      if (datasetFilterBuilder_ == null) {
        if (propertyFilterCase_ == 4 &&
            propertyFilter_ != com.datacatalog.DatasetPropertyFilter.getDefaultInstance()) {
          propertyFilter_ = com.datacatalog.DatasetPropertyFilter.newBuilder((com.datacatalog.DatasetPropertyFilter) propertyFilter_)
              .mergeFrom(value).buildPartial();
        } else {
          propertyFilter_ = value;
        }
        onChanged();
      } else {
        if (propertyFilterCase_ == 4) {
          datasetFilterBuilder_.mergeFrom(value);
        }
        datasetFilterBuilder_.setMessage(value);
      }
      propertyFilterCase_ = 4;
      return this;
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     */
    public Builder clearDatasetFilter() {
      if (datasetFilterBuilder_ == null) {
        if (propertyFilterCase_ == 4) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
          onChanged();
        }
      } else {
        if (propertyFilterCase_ == 4) {
          propertyFilterCase_ = 0;
          propertyFilter_ = null;
        }
        datasetFilterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     */
    public com.datacatalog.DatasetPropertyFilter.Builder getDatasetFilterBuilder() {
      return getDatasetFilterFieldBuilder().getBuilder();
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     */
    @java.lang.Override
    public com.datacatalog.DatasetPropertyFilterOrBuilder getDatasetFilterOrBuilder() {
      if ((propertyFilterCase_ == 4) && (datasetFilterBuilder_ != null)) {
        return datasetFilterBuilder_.getMessageOrBuilder();
      } else {
        if (propertyFilterCase_ == 4) {
          return (com.datacatalog.DatasetPropertyFilter) propertyFilter_;
        }
        return com.datacatalog.DatasetPropertyFilter.getDefaultInstance();
      }
    }
    /**
     * <code>.datacatalog.DatasetPropertyFilter dataset_filter = 4 [json_name = "datasetFilter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.datacatalog.DatasetPropertyFilter, com.datacatalog.DatasetPropertyFilter.Builder, com.datacatalog.DatasetPropertyFilterOrBuilder> 
        getDatasetFilterFieldBuilder() {
      if (datasetFilterBuilder_ == null) {
        if (!(propertyFilterCase_ == 4)) {
          propertyFilter_ = com.datacatalog.DatasetPropertyFilter.getDefaultInstance();
        }
        datasetFilterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.datacatalog.DatasetPropertyFilter, com.datacatalog.DatasetPropertyFilter.Builder, com.datacatalog.DatasetPropertyFilterOrBuilder>(
                (com.datacatalog.DatasetPropertyFilter) propertyFilter_,
                getParentForChildren(),
                isClean());
        propertyFilter_ = null;
      }
      propertyFilterCase_ = 4;
      onChanged();;
      return datasetFilterBuilder_;
    }

    private int operator_ = 0;
    /**
     * <pre>
     * field 10 in case we add more entities to query
     * </pre>
     *
     * <code>.datacatalog.SinglePropertyFilter.ComparisonOperator operator = 10 [json_name = "operator"];</code>
     * @return The enum numeric value on the wire for operator.
     */
    @java.lang.Override public int getOperatorValue() {
      return operator_;
    }
    /**
     * <pre>
     * field 10 in case we add more entities to query
     * </pre>
     *
     * <code>.datacatalog.SinglePropertyFilter.ComparisonOperator operator = 10 [json_name = "operator"];</code>
     * @param value The enum numeric value on the wire for operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperatorValue(int value) {
      
      operator_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * field 10 in case we add more entities to query
     * </pre>
     *
     * <code>.datacatalog.SinglePropertyFilter.ComparisonOperator operator = 10 [json_name = "operator"];</code>
     * @return The operator.
     */
    @java.lang.Override
    public com.datacatalog.SinglePropertyFilter.ComparisonOperator getOperator() {
      @SuppressWarnings("deprecation")
      com.datacatalog.SinglePropertyFilter.ComparisonOperator result = com.datacatalog.SinglePropertyFilter.ComparisonOperator.valueOf(operator_);
      return result == null ? com.datacatalog.SinglePropertyFilter.ComparisonOperator.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * field 10 in case we add more entities to query
     * </pre>
     *
     * <code>.datacatalog.SinglePropertyFilter.ComparisonOperator operator = 10 [json_name = "operator"];</code>
     * @param value The operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperator(com.datacatalog.SinglePropertyFilter.ComparisonOperator value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      operator_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * field 10 in case we add more entities to query
     * </pre>
     *
     * <code>.datacatalog.SinglePropertyFilter.ComparisonOperator operator = 10 [json_name = "operator"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOperator() {
      
      operator_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datacatalog.SinglePropertyFilter)
  }

  // @@protoc_insertion_point(class_scope:datacatalog.SinglePropertyFilter)
  private static final com.datacatalog.SinglePropertyFilter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.datacatalog.SinglePropertyFilter();
  }

  public static com.datacatalog.SinglePropertyFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SinglePropertyFilter>
      PARSER = new com.google.protobuf.AbstractParser<SinglePropertyFilter>() {
    @java.lang.Override
    public SinglePropertyFilter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SinglePropertyFilter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SinglePropertyFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SinglePropertyFilter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.datacatalog.SinglePropertyFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

