// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/types.proto

package com.flyteidl.core;

/**
 * <pre>
 * Defines schema columns and types to strongly type-validate schemas interoperability.
 * </pre>
 *
 * Protobuf type {@code flyteidl.core.SchemaType}
 */
public final class SchemaType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.core.SchemaType)
    SchemaTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SchemaType.newBuilder() to construct.
  private SchemaType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SchemaType() {
    columns_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SchemaType();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SchemaType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              columns_ = new java.util.ArrayList<com.flyteidl.core.SchemaType.SchemaColumn>();
              mutable_bitField0_ |= 0x00000001;
            }
            columns_.add(
                input.readMessage(com.flyteidl.core.SchemaType.SchemaColumn.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        columns_ = java.util.Collections.unmodifiableList(columns_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.core.SchemaType.class, com.flyteidl.core.SchemaType.Builder.class);
  }

  public interface SchemaColumnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.SchemaType.SchemaColumn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A unique name -within the schema type- for the column
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * A unique name -within the schema type- for the column
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The column type. This allows a limited set of types currently.
     * </pre>
     *
     * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The column type. This allows a limited set of types currently.
     * </pre>
     *
     * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
     * @return The type.
     */
    com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType getType();
  }
  /**
   * Protobuf type {@code flyteidl.core.SchemaType.SchemaColumn}
   */
  public static final class SchemaColumn extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.SchemaType.SchemaColumn)
      SchemaColumnOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SchemaColumn.newBuilder() to construct.
    private SchemaColumn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SchemaColumn() {
      name_ = "";
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SchemaColumn();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SchemaColumn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_SchemaColumn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_SchemaColumn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.SchemaType.SchemaColumn.class, com.flyteidl.core.SchemaType.SchemaColumn.Builder.class);
    }

    /**
     * Protobuf enum {@code flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType}
     */
    public enum SchemaColumnType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INTEGER = 0;</code>
       */
      INTEGER(0),
      /**
       * <code>FLOAT = 1;</code>
       */
      FLOAT(1),
      /**
       * <code>STRING = 2;</code>
       */
      STRING(2),
      /**
       * <code>BOOLEAN = 3;</code>
       */
      BOOLEAN(3),
      /**
       * <code>DATETIME = 4;</code>
       */
      DATETIME(4),
      /**
       * <code>DURATION = 5;</code>
       */
      DURATION(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>INTEGER = 0;</code>
       */
      public static final int INTEGER_VALUE = 0;
      /**
       * <code>FLOAT = 1;</code>
       */
      public static final int FLOAT_VALUE = 1;
      /**
       * <code>STRING = 2;</code>
       */
      public static final int STRING_VALUE = 2;
      /**
       * <code>BOOLEAN = 3;</code>
       */
      public static final int BOOLEAN_VALUE = 3;
      /**
       * <code>DATETIME = 4;</code>
       */
      public static final int DATETIME_VALUE = 4;
      /**
       * <code>DURATION = 5;</code>
       */
      public static final int DURATION_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SchemaColumnType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SchemaColumnType forNumber(int value) {
        switch (value) {
          case 0: return INTEGER;
          case 1: return FLOAT;
          case 2: return STRING;
          case 3: return BOOLEAN;
          case 4: return DATETIME;
          case 5: return DURATION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SchemaColumnType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SchemaColumnType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SchemaColumnType>() {
              public SchemaColumnType findValueByNumber(int number) {
                return SchemaColumnType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.flyteidl.core.SchemaType.SchemaColumn.getDescriptor().getEnumTypes().get(0);
      }

      private static final SchemaColumnType[] VALUES = values();

      public static SchemaColumnType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SchemaColumnType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType)
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * A unique name -within the schema type- for the column
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique name -within the schema type- for the column
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     * The column type. This allows a limited set of types currently.
     * </pre>
     *
     * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The column type. This allows a limited set of types currently.
     * </pre>
     *
     * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
     * @return The type.
     */
    @java.lang.Override public com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType getType() {
      @SuppressWarnings("deprecation")
      com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType result = com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType.valueOf(type_);
      return result == null ? com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType.INTEGER.getNumber()) {
        output.writeEnum(2, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType.INTEGER.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.flyteidl.core.SchemaType.SchemaColumn)) {
        return super.equals(obj);
      }
      com.flyteidl.core.SchemaType.SchemaColumn other = (com.flyteidl.core.SchemaType.SchemaColumn) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (type_ != other.type_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.core.SchemaType.SchemaColumn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.core.SchemaType.SchemaColumn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flyteidl.core.SchemaType.SchemaColumn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.SchemaType.SchemaColumn)
        com.flyteidl.core.SchemaType.SchemaColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_SchemaColumn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_SchemaColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.core.SchemaType.SchemaColumn.class, com.flyteidl.core.SchemaType.SchemaColumn.Builder.class);
      }

      // Construct using com.flyteidl.core.SchemaType.SchemaColumn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        type_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_SchemaColumn_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.core.SchemaType.SchemaColumn getDefaultInstanceForType() {
        return com.flyteidl.core.SchemaType.SchemaColumn.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.core.SchemaType.SchemaColumn build() {
        com.flyteidl.core.SchemaType.SchemaColumn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.core.SchemaType.SchemaColumn buildPartial() {
        com.flyteidl.core.SchemaType.SchemaColumn result = new com.flyteidl.core.SchemaType.SchemaColumn(this);
        result.name_ = name_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.flyteidl.core.SchemaType.SchemaColumn) {
          return mergeFrom((com.flyteidl.core.SchemaType.SchemaColumn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.flyteidl.core.SchemaType.SchemaColumn other) {
        if (other == com.flyteidl.core.SchemaType.SchemaColumn.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.flyteidl.core.SchemaType.SchemaColumn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.flyteidl.core.SchemaType.SchemaColumn) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A unique name -within the schema type- for the column
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique name -within the schema type- for the column
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique name -within the schema type- for the column
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique name -within the schema type- for the column
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique name -within the schema type- for the column
       * </pre>
       *
       * <code>string name = 1 [json_name = "name"];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The column type. This allows a limited set of types currently.
       * </pre>
       *
       * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The column type. This allows a limited set of types currently.
       * </pre>
       *
       * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The column type. This allows a limited set of types currently.
       * </pre>
       *
       * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
       * @return The type.
       */
      @java.lang.Override
      public com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType getType() {
        @SuppressWarnings("deprecation")
        com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType result = com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType.valueOf(type_);
        return result == null ? com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The column type. This allows a limited set of types currently.
       * </pre>
       *
       * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The column type. This allows a limited set of types currently.
       * </pre>
       *
       * <code>.flyteidl.core.SchemaType.SchemaColumn.SchemaColumnType type = 2 [json_name = "type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.SchemaType.SchemaColumn)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.SchemaType.SchemaColumn)
    private static final com.flyteidl.core.SchemaType.SchemaColumn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.core.SchemaType.SchemaColumn();
    }

    public static com.flyteidl.core.SchemaType.SchemaColumn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SchemaColumn>
        PARSER = new com.google.protobuf.AbstractParser<SchemaColumn>() {
      @java.lang.Override
      public SchemaColumn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SchemaColumn(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SchemaColumn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SchemaColumn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.core.SchemaType.SchemaColumn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int COLUMNS_FIELD_NUMBER = 3;
  private java.util.List<com.flyteidl.core.SchemaType.SchemaColumn> columns_;
  /**
   * <pre>
   * A list of ordered columns this schema comprises of.
   * </pre>
   *
   * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public java.util.List<com.flyteidl.core.SchemaType.SchemaColumn> getColumnsList() {
    return columns_;
  }
  /**
   * <pre>
   * A list of ordered columns this schema comprises of.
   * </pre>
   *
   * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.flyteidl.core.SchemaType.SchemaColumnOrBuilder> 
      getColumnsOrBuilderList() {
    return columns_;
  }
  /**
   * <pre>
   * A list of ordered columns this schema comprises of.
   * </pre>
   *
   * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public int getColumnsCount() {
    return columns_.size();
  }
  /**
   * <pre>
   * A list of ordered columns this schema comprises of.
   * </pre>
   *
   * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.SchemaType.SchemaColumn getColumns(int index) {
    return columns_.get(index);
  }
  /**
   * <pre>
   * A list of ordered columns this schema comprises of.
   * </pre>
   *
   * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.SchemaType.SchemaColumnOrBuilder getColumnsOrBuilder(
      int index) {
    return columns_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < columns_.size(); i++) {
      output.writeMessage(3, columns_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < columns_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, columns_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.core.SchemaType)) {
      return super.equals(obj);
    }
    com.flyteidl.core.SchemaType other = (com.flyteidl.core.SchemaType) obj;

    if (!getColumnsList()
        .equals(other.getColumnsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getColumnsCount() > 0) {
      hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getColumnsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.core.SchemaType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.SchemaType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.SchemaType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.SchemaType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.SchemaType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.core.SchemaType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.core.SchemaType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.SchemaType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.SchemaType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.SchemaType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.core.SchemaType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.core.SchemaType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.core.SchemaType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines schema columns and types to strongly type-validate schemas interoperability.
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.SchemaType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.core.SchemaType)
      com.flyteidl.core.SchemaTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.core.SchemaType.class, com.flyteidl.core.SchemaType.Builder.class);
    }

    // Construct using com.flyteidl.core.SchemaType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getColumnsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        columnsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.core.TypesProto.internal_static_flyteidl_core_SchemaType_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.core.SchemaType getDefaultInstanceForType() {
      return com.flyteidl.core.SchemaType.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.core.SchemaType build() {
      com.flyteidl.core.SchemaType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.core.SchemaType buildPartial() {
      com.flyteidl.core.SchemaType result = new com.flyteidl.core.SchemaType(this);
      int from_bitField0_ = bitField0_;
      if (columnsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          columns_ = java.util.Collections.unmodifiableList(columns_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.columns_ = columns_;
      } else {
        result.columns_ = columnsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.core.SchemaType) {
        return mergeFrom((com.flyteidl.core.SchemaType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.core.SchemaType other) {
      if (other == com.flyteidl.core.SchemaType.getDefaultInstance()) return this;
      if (columnsBuilder_ == null) {
        if (!other.columns_.isEmpty()) {
          if (columns_.isEmpty()) {
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureColumnsIsMutable();
            columns_.addAll(other.columns_);
          }
          onChanged();
        }
      } else {
        if (!other.columns_.isEmpty()) {
          if (columnsBuilder_.isEmpty()) {
            columnsBuilder_.dispose();
            columnsBuilder_ = null;
            columns_ = other.columns_;
            bitField0_ = (bitField0_ & ~0x00000001);
            columnsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getColumnsFieldBuilder() : null;
          } else {
            columnsBuilder_.addAllMessages(other.columns_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.core.SchemaType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.core.SchemaType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.flyteidl.core.SchemaType.SchemaColumn> columns_ =
      java.util.Collections.emptyList();
    private void ensureColumnsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        columns_ = new java.util.ArrayList<com.flyteidl.core.SchemaType.SchemaColumn>(columns_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.SchemaType.SchemaColumn, com.flyteidl.core.SchemaType.SchemaColumn.Builder, com.flyteidl.core.SchemaType.SchemaColumnOrBuilder> columnsBuilder_;

    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public java.util.List<com.flyteidl.core.SchemaType.SchemaColumn> getColumnsList() {
      if (columnsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(columns_);
      } else {
        return columnsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public int getColumnsCount() {
      if (columnsBuilder_ == null) {
        return columns_.size();
      } else {
        return columnsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public com.flyteidl.core.SchemaType.SchemaColumn getColumns(int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);
      } else {
        return columnsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder setColumns(
        int index, com.flyteidl.core.SchemaType.SchemaColumn value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.set(index, value);
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder setColumns(
        int index, com.flyteidl.core.SchemaType.SchemaColumn.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.set(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder addColumns(com.flyteidl.core.SchemaType.SchemaColumn value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder addColumns(
        int index, com.flyteidl.core.SchemaType.SchemaColumn value) {
      if (columnsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColumnsIsMutable();
        columns_.add(index, value);
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder addColumns(
        com.flyteidl.core.SchemaType.SchemaColumn.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder addColumns(
        int index, com.flyteidl.core.SchemaType.SchemaColumn.Builder builderForValue) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.add(index, builderForValue.build());
        onChanged();
      } else {
        columnsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder addAllColumns(
        java.lang.Iterable<? extends com.flyteidl.core.SchemaType.SchemaColumn> values) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, columns_);
        onChanged();
      } else {
        columnsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder clearColumns() {
      if (columnsBuilder_ == null) {
        columns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        columnsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public Builder removeColumns(int index) {
      if (columnsBuilder_ == null) {
        ensureColumnsIsMutable();
        columns_.remove(index);
        onChanged();
      } else {
        columnsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public com.flyteidl.core.SchemaType.SchemaColumn.Builder getColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public com.flyteidl.core.SchemaType.SchemaColumnOrBuilder getColumnsOrBuilder(
        int index) {
      if (columnsBuilder_ == null) {
        return columns_.get(index);  } else {
        return columnsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public java.util.List<? extends com.flyteidl.core.SchemaType.SchemaColumnOrBuilder> 
         getColumnsOrBuilderList() {
      if (columnsBuilder_ != null) {
        return columnsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(columns_);
      }
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public com.flyteidl.core.SchemaType.SchemaColumn.Builder addColumnsBuilder() {
      return getColumnsFieldBuilder().addBuilder(
          com.flyteidl.core.SchemaType.SchemaColumn.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public com.flyteidl.core.SchemaType.SchemaColumn.Builder addColumnsBuilder(
        int index) {
      return getColumnsFieldBuilder().addBuilder(
          index, com.flyteidl.core.SchemaType.SchemaColumn.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of ordered columns this schema comprises of.
     * </pre>
     *
     * <code>repeated .flyteidl.core.SchemaType.SchemaColumn columns = 3 [json_name = "columns"];</code>
     */
    public java.util.List<com.flyteidl.core.SchemaType.SchemaColumn.Builder> 
         getColumnsBuilderList() {
      return getColumnsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.flyteidl.core.SchemaType.SchemaColumn, com.flyteidl.core.SchemaType.SchemaColumn.Builder, com.flyteidl.core.SchemaType.SchemaColumnOrBuilder> 
        getColumnsFieldBuilder() {
      if (columnsBuilder_ == null) {
        columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.flyteidl.core.SchemaType.SchemaColumn, com.flyteidl.core.SchemaType.SchemaColumn.Builder, com.flyteidl.core.SchemaType.SchemaColumnOrBuilder>(
                columns_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        columns_ = null;
      }
      return columnsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.core.SchemaType)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.core.SchemaType)
  private static final com.flyteidl.core.SchemaType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.core.SchemaType();
  }

  public static com.flyteidl.core.SchemaType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SchemaType>
      PARSER = new com.google.protobuf.AbstractParser<SchemaType>() {
    @java.lang.Override
    public SchemaType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SchemaType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SchemaType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SchemaType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.core.SchemaType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

