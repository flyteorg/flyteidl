// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/workflow_closure.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fcore_2fworkflow_5fclosure_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fcore_2fworkflow_5fclosure_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/core/workflow.pb.h"
#include "flyteidl/core/tasks.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fworkflow_5fclosure_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fcore_2fworkflow_5fclosure_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fcore_2fworkflow_5fclosure_2eproto();
namespace flyteidl {
namespace core {
class WorkflowClosure;
class WorkflowClosureDefaultTypeInternal;
extern WorkflowClosureDefaultTypeInternal _WorkflowClosure_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::core::WorkflowClosure* Arena::CreateMaybeMessage<::flyteidl::core::WorkflowClosure>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace core {

// ===================================================================

class WorkflowClosure final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.core.WorkflowClosure) */ {
 public:
  WorkflowClosure();
  virtual ~WorkflowClosure();

  WorkflowClosure(const WorkflowClosure& from);

  inline WorkflowClosure& operator=(const WorkflowClosure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowClosure(WorkflowClosure&& from) noexcept
    : WorkflowClosure() {
    *this = ::std::move(from);
  }

  inline WorkflowClosure& operator=(WorkflowClosure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowClosure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowClosure* internal_default_instance() {
    return reinterpret_cast<const WorkflowClosure*>(
               &_WorkflowClosure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(WorkflowClosure* other);
  friend void swap(WorkflowClosure& a, WorkflowClosure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowClosure* New() const final {
    return CreateMaybeMessage<WorkflowClosure>(nullptr);
  }

  WorkflowClosure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowClosure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowClosure& from);
  void MergeFrom(const WorkflowClosure& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowClosure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .flyteidl.core.TaskTemplate tasks = 2;
  int tasks_size() const;
  void clear_tasks();
  static const int kTasksFieldNumber = 2;
  ::flyteidl::core::TaskTemplate* mutable_tasks(int index);
  ::google::protobuf::RepeatedPtrField< ::flyteidl::core::TaskTemplate >*
      mutable_tasks();
  const ::flyteidl::core::TaskTemplate& tasks(int index) const;
  ::flyteidl::core::TaskTemplate* add_tasks();
  const ::google::protobuf::RepeatedPtrField< ::flyteidl::core::TaskTemplate >&
      tasks() const;

  // .flyteidl.core.WorkflowTemplate workflow = 1;
  bool has_workflow() const;
  void clear_workflow();
  static const int kWorkflowFieldNumber = 1;
  const ::flyteidl::core::WorkflowTemplate& workflow() const;
  ::flyteidl::core::WorkflowTemplate* release_workflow();
  ::flyteidl::core::WorkflowTemplate* mutable_workflow();
  void set_allocated_workflow(::flyteidl::core::WorkflowTemplate* workflow);

  // @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowClosure)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::flyteidl::core::TaskTemplate > tasks_;
  ::flyteidl::core::WorkflowTemplate* workflow_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fcore_2fworkflow_5fclosure_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorkflowClosure

// .flyteidl.core.WorkflowTemplate workflow = 1;
inline bool WorkflowClosure::has_workflow() const {
  return this != internal_default_instance() && workflow_ != nullptr;
}
inline const ::flyteidl::core::WorkflowTemplate& WorkflowClosure::workflow() const {
  const ::flyteidl::core::WorkflowTemplate* p = workflow_;
  // @@protoc_insertion_point(field_get:flyteidl.core.WorkflowClosure.workflow)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::core::WorkflowTemplate*>(
      &::flyteidl::core::_WorkflowTemplate_default_instance_);
}
inline ::flyteidl::core::WorkflowTemplate* WorkflowClosure::release_workflow() {
  // @@protoc_insertion_point(field_release:flyteidl.core.WorkflowClosure.workflow)
  
  ::flyteidl::core::WorkflowTemplate* temp = workflow_;
  workflow_ = nullptr;
  return temp;
}
inline ::flyteidl::core::WorkflowTemplate* WorkflowClosure::mutable_workflow() {
  
  if (workflow_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::core::WorkflowTemplate>(GetArenaNoVirtual());
    workflow_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.core.WorkflowClosure.workflow)
  return workflow_;
}
inline void WorkflowClosure::set_allocated_workflow(::flyteidl::core::WorkflowTemplate* workflow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(workflow_);
  }
  if (workflow) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      workflow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, workflow, submessage_arena);
    }
    
  } else {
    
  }
  workflow_ = workflow;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.WorkflowClosure.workflow)
}

// repeated .flyteidl.core.TaskTemplate tasks = 2;
inline int WorkflowClosure::tasks_size() const {
  return tasks_.size();
}
inline ::flyteidl::core::TaskTemplate* WorkflowClosure::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:flyteidl.core.WorkflowClosure.tasks)
  return tasks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::flyteidl::core::TaskTemplate >*
WorkflowClosure::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:flyteidl.core.WorkflowClosure.tasks)
  return &tasks_;
}
inline const ::flyteidl::core::TaskTemplate& WorkflowClosure::tasks(int index) const {
  // @@protoc_insertion_point(field_get:flyteidl.core.WorkflowClosure.tasks)
  return tasks_.Get(index);
}
inline ::flyteidl::core::TaskTemplate* WorkflowClosure::add_tasks() {
  // @@protoc_insertion_point(field_add:flyteidl.core.WorkflowClosure.tasks)
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::flyteidl::core::TaskTemplate >&
WorkflowClosure::tasks() const {
  // @@protoc_insertion_point(field_list:flyteidl.core.WorkflowClosure.tasks)
  return tasks_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fcore_2fworkflow_5fclosure_2eproto
