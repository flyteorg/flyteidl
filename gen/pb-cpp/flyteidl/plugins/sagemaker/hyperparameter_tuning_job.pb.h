// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/plugins/sagemaker/parameter_ranges.pb.h"
#include "flyteidl/plugins/sagemaker/training_job.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class HyperparameterTuningJob;
class HyperparameterTuningJobDefaultTypeInternal;
extern HyperparameterTuningJobDefaultTypeInternal _HyperparameterTuningJob_default_instance_;
class HyperparameterTuningJobConfig;
class HyperparameterTuningJobConfigDefaultTypeInternal;
extern HyperparameterTuningJobConfigDefaultTypeInternal _HyperparameterTuningJobConfig_default_instance_;
class HyperparameterTuningObjective;
class HyperparameterTuningObjectiveDefaultTypeInternal;
extern HyperparameterTuningObjectiveDefaultTypeInternal _HyperparameterTuningObjective_default_instance_;
class HyperparameterTuningObjectiveType;
class HyperparameterTuningObjectiveTypeDefaultTypeInternal;
extern HyperparameterTuningObjectiveTypeDefaultTypeInternal _HyperparameterTuningObjectiveType_default_instance_;
class HyperparameterTuningStrategy;
class HyperparameterTuningStrategyDefaultTypeInternal;
extern HyperparameterTuningStrategyDefaultTypeInternal _HyperparameterTuningStrategy_default_instance_;
class TrainingJobEarlyStoppingType;
class TrainingJobEarlyStoppingTypeDefaultTypeInternal;
extern TrainingJobEarlyStoppingTypeDefaultTypeInternal _TrainingJobEarlyStoppingType_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::plugins::sagemaker::HyperparameterTuningJob* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningJob>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningJobConfig>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningObjective>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy>(Arena*);
template<> ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace plugins {
namespace sagemaker {

enum HyperparameterTuningObjectiveType_Value {
  HyperparameterTuningObjectiveType_Value_MINIMIZE = 0,
  HyperparameterTuningObjectiveType_Value_MAXIMIZE = 1,
  HyperparameterTuningObjectiveType_Value_HyperparameterTuningObjectiveType_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HyperparameterTuningObjectiveType_Value_HyperparameterTuningObjectiveType_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HyperparameterTuningObjectiveType_Value_IsValid(int value);
const HyperparameterTuningObjectiveType_Value HyperparameterTuningObjectiveType_Value_Value_MIN = HyperparameterTuningObjectiveType_Value_MINIMIZE;
const HyperparameterTuningObjectiveType_Value HyperparameterTuningObjectiveType_Value_Value_MAX = HyperparameterTuningObjectiveType_Value_MAXIMIZE;
const int HyperparameterTuningObjectiveType_Value_Value_ARRAYSIZE = HyperparameterTuningObjectiveType_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* HyperparameterTuningObjectiveType_Value_descriptor();
inline const ::std::string& HyperparameterTuningObjectiveType_Value_Name(HyperparameterTuningObjectiveType_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    HyperparameterTuningObjectiveType_Value_descriptor(), value);
}
inline bool HyperparameterTuningObjectiveType_Value_Parse(
    const ::std::string& name, HyperparameterTuningObjectiveType_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HyperparameterTuningObjectiveType_Value>(
    HyperparameterTuningObjectiveType_Value_descriptor(), name, value);
}
enum HyperparameterTuningStrategy_Value {
  HyperparameterTuningStrategy_Value_BAYESIAN = 0,
  HyperparameterTuningStrategy_Value_RANDOM = 1,
  HyperparameterTuningStrategy_Value_HyperparameterTuningStrategy_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HyperparameterTuningStrategy_Value_HyperparameterTuningStrategy_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HyperparameterTuningStrategy_Value_IsValid(int value);
const HyperparameterTuningStrategy_Value HyperparameterTuningStrategy_Value_Value_MIN = HyperparameterTuningStrategy_Value_BAYESIAN;
const HyperparameterTuningStrategy_Value HyperparameterTuningStrategy_Value_Value_MAX = HyperparameterTuningStrategy_Value_RANDOM;
const int HyperparameterTuningStrategy_Value_Value_ARRAYSIZE = HyperparameterTuningStrategy_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* HyperparameterTuningStrategy_Value_descriptor();
inline const ::std::string& HyperparameterTuningStrategy_Value_Name(HyperparameterTuningStrategy_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    HyperparameterTuningStrategy_Value_descriptor(), value);
}
inline bool HyperparameterTuningStrategy_Value_Parse(
    const ::std::string& name, HyperparameterTuningStrategy_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HyperparameterTuningStrategy_Value>(
    HyperparameterTuningStrategy_Value_descriptor(), name, value);
}
enum TrainingJobEarlyStoppingType_Value {
  TrainingJobEarlyStoppingType_Value_OFF = 0,
  TrainingJobEarlyStoppingType_Value_AUTO = 1,
  TrainingJobEarlyStoppingType_Value_TrainingJobEarlyStoppingType_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TrainingJobEarlyStoppingType_Value_TrainingJobEarlyStoppingType_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool TrainingJobEarlyStoppingType_Value_IsValid(int value);
const TrainingJobEarlyStoppingType_Value TrainingJobEarlyStoppingType_Value_Value_MIN = TrainingJobEarlyStoppingType_Value_OFF;
const TrainingJobEarlyStoppingType_Value TrainingJobEarlyStoppingType_Value_Value_MAX = TrainingJobEarlyStoppingType_Value_AUTO;
const int TrainingJobEarlyStoppingType_Value_Value_ARRAYSIZE = TrainingJobEarlyStoppingType_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrainingJobEarlyStoppingType_Value_descriptor();
inline const ::std::string& TrainingJobEarlyStoppingType_Value_Name(TrainingJobEarlyStoppingType_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrainingJobEarlyStoppingType_Value_descriptor(), value);
}
inline bool TrainingJobEarlyStoppingType_Value_Parse(
    const ::std::string& name, TrainingJobEarlyStoppingType_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrainingJobEarlyStoppingType_Value>(
    TrainingJobEarlyStoppingType_Value_descriptor(), name, value);
}
// ===================================================================

class HyperparameterTuningJob final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HyperparameterTuningJob) */ {
 public:
  HyperparameterTuningJob();
  virtual ~HyperparameterTuningJob();

  HyperparameterTuningJob(const HyperparameterTuningJob& from);

  inline HyperparameterTuningJob& operator=(const HyperparameterTuningJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterTuningJob(HyperparameterTuningJob&& from) noexcept
    : HyperparameterTuningJob() {
    *this = ::std::move(from);
  }

  inline HyperparameterTuningJob& operator=(HyperparameterTuningJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HyperparameterTuningJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterTuningJob* internal_default_instance() {
    return reinterpret_cast<const HyperparameterTuningJob*>(
               &_HyperparameterTuningJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HyperparameterTuningJob* other);
  friend void swap(HyperparameterTuningJob& a, HyperparameterTuningJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterTuningJob* New() const final {
    return CreateMaybeMessage<HyperparameterTuningJob>(nullptr);
  }

  HyperparameterTuningJob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HyperparameterTuningJob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HyperparameterTuningJob& from);
  void MergeFrom(const HyperparameterTuningJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HyperparameterTuningJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
  bool has_training_job() const;
  void clear_training_job();
  static const int kTrainingJobFieldNumber = 1;
  const ::flyteidl::plugins::sagemaker::TrainingJob& training_job() const;
  ::flyteidl::plugins::sagemaker::TrainingJob* release_training_job();
  ::flyteidl::plugins::sagemaker::TrainingJob* mutable_training_job();
  void set_allocated_training_job(::flyteidl::plugins::sagemaker::TrainingJob* training_job);

  // int64 max_number_of_training_jobs = 2;
  void clear_max_number_of_training_jobs();
  static const int kMaxNumberOfTrainingJobsFieldNumber = 2;
  ::google::protobuf::int64 max_number_of_training_jobs() const;
  void set_max_number_of_training_jobs(::google::protobuf::int64 value);

  // int64 max_parallel_training_jobs = 3;
  void clear_max_parallel_training_jobs();
  static const int kMaxParallelTrainingJobsFieldNumber = 3;
  ::google::protobuf::int64 max_parallel_training_jobs() const;
  void set_max_parallel_training_jobs(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::plugins::sagemaker::TrainingJob* training_job_;
  ::google::protobuf::int64 max_number_of_training_jobs_;
  ::google::protobuf::int64 max_parallel_training_jobs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto;
};
// -------------------------------------------------------------------

class HyperparameterTuningObjectiveType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType) */ {
 public:
  HyperparameterTuningObjectiveType();
  virtual ~HyperparameterTuningObjectiveType();

  HyperparameterTuningObjectiveType(const HyperparameterTuningObjectiveType& from);

  inline HyperparameterTuningObjectiveType& operator=(const HyperparameterTuningObjectiveType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterTuningObjectiveType(HyperparameterTuningObjectiveType&& from) noexcept
    : HyperparameterTuningObjectiveType() {
    *this = ::std::move(from);
  }

  inline HyperparameterTuningObjectiveType& operator=(HyperparameterTuningObjectiveType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HyperparameterTuningObjectiveType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterTuningObjectiveType* internal_default_instance() {
    return reinterpret_cast<const HyperparameterTuningObjectiveType*>(
               &_HyperparameterTuningObjectiveType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HyperparameterTuningObjectiveType* other);
  friend void swap(HyperparameterTuningObjectiveType& a, HyperparameterTuningObjectiveType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterTuningObjectiveType* New() const final {
    return CreateMaybeMessage<HyperparameterTuningObjectiveType>(nullptr);
  }

  HyperparameterTuningObjectiveType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HyperparameterTuningObjectiveType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HyperparameterTuningObjectiveType& from);
  void MergeFrom(const HyperparameterTuningObjectiveType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HyperparameterTuningObjectiveType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HyperparameterTuningObjectiveType_Value Value;
  static const Value MINIMIZE =
    HyperparameterTuningObjectiveType_Value_MINIMIZE;
  static const Value MAXIMIZE =
    HyperparameterTuningObjectiveType_Value_MAXIMIZE;
  static inline bool Value_IsValid(int value) {
    return HyperparameterTuningObjectiveType_Value_IsValid(value);
  }
  static const Value Value_MIN =
    HyperparameterTuningObjectiveType_Value_Value_MIN;
  static const Value Value_MAX =
    HyperparameterTuningObjectiveType_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    HyperparameterTuningObjectiveType_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return HyperparameterTuningObjectiveType_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return HyperparameterTuningObjectiveType_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return HyperparameterTuningObjectiveType_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto;
};
// -------------------------------------------------------------------

class HyperparameterTuningObjective final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HyperparameterTuningObjective) */ {
 public:
  HyperparameterTuningObjective();
  virtual ~HyperparameterTuningObjective();

  HyperparameterTuningObjective(const HyperparameterTuningObjective& from);

  inline HyperparameterTuningObjective& operator=(const HyperparameterTuningObjective& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterTuningObjective(HyperparameterTuningObjective&& from) noexcept
    : HyperparameterTuningObjective() {
    *this = ::std::move(from);
  }

  inline HyperparameterTuningObjective& operator=(HyperparameterTuningObjective&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HyperparameterTuningObjective& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterTuningObjective* internal_default_instance() {
    return reinterpret_cast<const HyperparameterTuningObjective*>(
               &_HyperparameterTuningObjective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HyperparameterTuningObjective* other);
  friend void swap(HyperparameterTuningObjective& a, HyperparameterTuningObjective& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterTuningObjective* New() const final {
    return CreateMaybeMessage<HyperparameterTuningObjective>(nullptr);
  }

  HyperparameterTuningObjective* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HyperparameterTuningObjective>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HyperparameterTuningObjective& from);
  void MergeFrom(const HyperparameterTuningObjective& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HyperparameterTuningObjective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string metric_name = 2;
  void clear_metric_name();
  static const int kMetricNameFieldNumber = 2;
  const ::std::string& metric_name() const;
  void set_metric_name(const ::std::string& value);
  #if LANG_CXX11
  void set_metric_name(::std::string&& value);
  #endif
  void set_metric_name(const char* value);
  void set_metric_name(const char* value, size_t size);
  ::std::string* mutable_metric_name();
  ::std::string* release_metric_name();
  void set_allocated_metric_name(::std::string* metric_name);

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value objective_type = 1;
  void clear_objective_type();
  static const int kObjectiveTypeFieldNumber = 1;
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value objective_type() const;
  void set_objective_type(::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr metric_name_;
  int objective_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto;
};
// -------------------------------------------------------------------

class HyperparameterTuningStrategy final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy) */ {
 public:
  HyperparameterTuningStrategy();
  virtual ~HyperparameterTuningStrategy();

  HyperparameterTuningStrategy(const HyperparameterTuningStrategy& from);

  inline HyperparameterTuningStrategy& operator=(const HyperparameterTuningStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterTuningStrategy(HyperparameterTuningStrategy&& from) noexcept
    : HyperparameterTuningStrategy() {
    *this = ::std::move(from);
  }

  inline HyperparameterTuningStrategy& operator=(HyperparameterTuningStrategy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HyperparameterTuningStrategy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterTuningStrategy* internal_default_instance() {
    return reinterpret_cast<const HyperparameterTuningStrategy*>(
               &_HyperparameterTuningStrategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HyperparameterTuningStrategy* other);
  friend void swap(HyperparameterTuningStrategy& a, HyperparameterTuningStrategy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterTuningStrategy* New() const final {
    return CreateMaybeMessage<HyperparameterTuningStrategy>(nullptr);
  }

  HyperparameterTuningStrategy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HyperparameterTuningStrategy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HyperparameterTuningStrategy& from);
  void MergeFrom(const HyperparameterTuningStrategy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HyperparameterTuningStrategy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HyperparameterTuningStrategy_Value Value;
  static const Value BAYESIAN =
    HyperparameterTuningStrategy_Value_BAYESIAN;
  static const Value RANDOM =
    HyperparameterTuningStrategy_Value_RANDOM;
  static inline bool Value_IsValid(int value) {
    return HyperparameterTuningStrategy_Value_IsValid(value);
  }
  static const Value Value_MIN =
    HyperparameterTuningStrategy_Value_Value_MIN;
  static const Value Value_MAX =
    HyperparameterTuningStrategy_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    HyperparameterTuningStrategy_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return HyperparameterTuningStrategy_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return HyperparameterTuningStrategy_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return HyperparameterTuningStrategy_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterTuningStrategy)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto;
};
// -------------------------------------------------------------------

class TrainingJobEarlyStoppingType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType) */ {
 public:
  TrainingJobEarlyStoppingType();
  virtual ~TrainingJobEarlyStoppingType();

  TrainingJobEarlyStoppingType(const TrainingJobEarlyStoppingType& from);

  inline TrainingJobEarlyStoppingType& operator=(const TrainingJobEarlyStoppingType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainingJobEarlyStoppingType(TrainingJobEarlyStoppingType&& from) noexcept
    : TrainingJobEarlyStoppingType() {
    *this = ::std::move(from);
  }

  inline TrainingJobEarlyStoppingType& operator=(TrainingJobEarlyStoppingType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrainingJobEarlyStoppingType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainingJobEarlyStoppingType* internal_default_instance() {
    return reinterpret_cast<const TrainingJobEarlyStoppingType*>(
               &_TrainingJobEarlyStoppingType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TrainingJobEarlyStoppingType* other);
  friend void swap(TrainingJobEarlyStoppingType& a, TrainingJobEarlyStoppingType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainingJobEarlyStoppingType* New() const final {
    return CreateMaybeMessage<TrainingJobEarlyStoppingType>(nullptr);
  }

  TrainingJobEarlyStoppingType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrainingJobEarlyStoppingType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrainingJobEarlyStoppingType& from);
  void MergeFrom(const TrainingJobEarlyStoppingType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainingJobEarlyStoppingType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef TrainingJobEarlyStoppingType_Value Value;
  static const Value OFF =
    TrainingJobEarlyStoppingType_Value_OFF;
  static const Value AUTO =
    TrainingJobEarlyStoppingType_Value_AUTO;
  static inline bool Value_IsValid(int value) {
    return TrainingJobEarlyStoppingType_Value_IsValid(value);
  }
  static const Value Value_MIN =
    TrainingJobEarlyStoppingType_Value_Value_MIN;
  static const Value Value_MAX =
    TrainingJobEarlyStoppingType_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    TrainingJobEarlyStoppingType_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return TrainingJobEarlyStoppingType_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return TrainingJobEarlyStoppingType_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return TrainingJobEarlyStoppingType_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto;
};
// -------------------------------------------------------------------

class HyperparameterTuningJobConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig) */ {
 public:
  HyperparameterTuningJobConfig();
  virtual ~HyperparameterTuningJobConfig();

  HyperparameterTuningJobConfig(const HyperparameterTuningJobConfig& from);

  inline HyperparameterTuningJobConfig& operator=(const HyperparameterTuningJobConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterTuningJobConfig(HyperparameterTuningJobConfig&& from) noexcept
    : HyperparameterTuningJobConfig() {
    *this = ::std::move(from);
  }

  inline HyperparameterTuningJobConfig& operator=(HyperparameterTuningJobConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HyperparameterTuningJobConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterTuningJobConfig* internal_default_instance() {
    return reinterpret_cast<const HyperparameterTuningJobConfig*>(
               &_HyperparameterTuningJobConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(HyperparameterTuningJobConfig* other);
  friend void swap(HyperparameterTuningJobConfig& a, HyperparameterTuningJobConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterTuningJobConfig* New() const final {
    return CreateMaybeMessage<HyperparameterTuningJobConfig>(nullptr);
  }

  HyperparameterTuningJobConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HyperparameterTuningJobConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HyperparameterTuningJobConfig& from);
  void MergeFrom(const HyperparameterTuningJobConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HyperparameterTuningJobConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
  bool has_hyperparameter_ranges() const;
  void clear_hyperparameter_ranges();
  static const int kHyperparameterRangesFieldNumber = 1;
  const ::flyteidl::plugins::sagemaker::ParameterRanges& hyperparameter_ranges() const;
  ::flyteidl::plugins::sagemaker::ParameterRanges* release_hyperparameter_ranges();
  ::flyteidl::plugins::sagemaker::ParameterRanges* mutable_hyperparameter_ranges();
  void set_allocated_hyperparameter_ranges(::flyteidl::plugins::sagemaker::ParameterRanges* hyperparameter_ranges);

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
  bool has_tuning_objective() const;
  void clear_tuning_objective();
  static const int kTuningObjectiveFieldNumber = 3;
  const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective& tuning_objective() const;
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* release_tuning_objective();
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* mutable_tuning_objective();
  void set_allocated_tuning_objective(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* tuning_objective);

  // .flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2;
  void clear_tuning_strategy();
  static const int kTuningStrategyFieldNumber = 2;
  ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value tuning_strategy() const;
  void set_tuning_strategy(::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value value);

  // .flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4;
  void clear_training_job_early_stopping_type();
  static const int kTrainingJobEarlyStoppingTypeFieldNumber = 4;
  ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value training_job_early_stopping_type() const;
  void set_training_job_early_stopping_type(::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::plugins::sagemaker::ParameterRanges* hyperparameter_ranges_;
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* tuning_objective_;
  int tuning_strategy_;
  int training_job_early_stopping_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HyperparameterTuningJob

// .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
inline bool HyperparameterTuningJob::has_training_job() const {
  return this != internal_default_instance() && training_job_ != nullptr;
}
inline const ::flyteidl::plugins::sagemaker::TrainingJob& HyperparameterTuningJob::training_job() const {
  const ::flyteidl::plugins::sagemaker::TrainingJob* p = training_job_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningJob.training_job)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::TrainingJob*>(
      &::flyteidl::plugins::sagemaker::_TrainingJob_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::TrainingJob* HyperparameterTuningJob::release_training_job() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HyperparameterTuningJob.training_job)
  
  ::flyteidl::plugins::sagemaker::TrainingJob* temp = training_job_;
  training_job_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::TrainingJob* HyperparameterTuningJob::mutable_training_job() {
  
  if (training_job_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::TrainingJob>(GetArenaNoVirtual());
    training_job_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HyperparameterTuningJob.training_job)
  return training_job_;
}
inline void HyperparameterTuningJob::set_allocated_training_job(::flyteidl::plugins::sagemaker::TrainingJob* training_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(training_job_);
  }
  if (training_job) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      training_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, training_job, submessage_arena);
    }
    
  } else {
    
  }
  training_job_ = training_job;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HyperparameterTuningJob.training_job)
}

// int64 max_number_of_training_jobs = 2;
inline void HyperparameterTuningJob::clear_max_number_of_training_jobs() {
  max_number_of_training_jobs_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 HyperparameterTuningJob::max_number_of_training_jobs() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningJob.max_number_of_training_jobs)
  return max_number_of_training_jobs_;
}
inline void HyperparameterTuningJob::set_max_number_of_training_jobs(::google::protobuf::int64 value) {
  
  max_number_of_training_jobs_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningJob.max_number_of_training_jobs)
}

// int64 max_parallel_training_jobs = 3;
inline void HyperparameterTuningJob::clear_max_parallel_training_jobs() {
  max_parallel_training_jobs_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 HyperparameterTuningJob::max_parallel_training_jobs() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningJob.max_parallel_training_jobs)
  return max_parallel_training_jobs_;
}
inline void HyperparameterTuningJob::set_max_parallel_training_jobs(::google::protobuf::int64 value) {
  
  max_parallel_training_jobs_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningJob.max_parallel_training_jobs)
}

// -------------------------------------------------------------------

// HyperparameterTuningObjectiveType

// -------------------------------------------------------------------

// HyperparameterTuningObjective

// .flyteidl.plugins.sagemaker.HyperparameterTuningObjectiveType.Value objective_type = 1;
inline void HyperparameterTuningObjective::clear_objective_type() {
  objective_type_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value HyperparameterTuningObjective::objective_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.objective_type)
  return static_cast< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value >(objective_type_);
}
inline void HyperparameterTuningObjective::set_objective_type(::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value value) {
  
  objective_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.objective_type)
}

// string metric_name = 2;
inline void HyperparameterTuningObjective::clear_metric_name() {
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HyperparameterTuningObjective::metric_name() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
  return metric_name_.GetNoArena();
}
inline void HyperparameterTuningObjective::set_metric_name(const ::std::string& value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
#if LANG_CXX11
inline void HyperparameterTuningObjective::set_metric_name(::std::string&& value) {
  
  metric_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
#endif
inline void HyperparameterTuningObjective::set_metric_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
inline void HyperparameterTuningObjective::set_metric_name(const char* value, size_t size) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
inline ::std::string* HyperparameterTuningObjective::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
  return metric_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HyperparameterTuningObjective::release_metric_name() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
  
  return metric_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HyperparameterTuningObjective::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != nullptr) {
    
  } else {
    
  }
  metric_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}

// -------------------------------------------------------------------

// HyperparameterTuningStrategy

// -------------------------------------------------------------------

// TrainingJobEarlyStoppingType

// -------------------------------------------------------------------

// HyperparameterTuningJobConfig

// .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
inline bool HyperparameterTuningJobConfig::has_hyperparameter_ranges() const {
  return this != internal_default_instance() && hyperparameter_ranges_ != nullptr;
}
inline const ::flyteidl::plugins::sagemaker::ParameterRanges& HyperparameterTuningJobConfig::hyperparameter_ranges() const {
  const ::flyteidl::plugins::sagemaker::ParameterRanges* p = hyperparameter_ranges_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.hyperparameter_ranges)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::ParameterRanges*>(
      &::flyteidl::plugins::sagemaker::_ParameterRanges_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::ParameterRanges* HyperparameterTuningJobConfig::release_hyperparameter_ranges() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.hyperparameter_ranges)
  
  ::flyteidl::plugins::sagemaker::ParameterRanges* temp = hyperparameter_ranges_;
  hyperparameter_ranges_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::ParameterRanges* HyperparameterTuningJobConfig::mutable_hyperparameter_ranges() {
  
  if (hyperparameter_ranges_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::ParameterRanges>(GetArenaNoVirtual());
    hyperparameter_ranges_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.hyperparameter_ranges)
  return hyperparameter_ranges_;
}
inline void HyperparameterTuningJobConfig::set_allocated_hyperparameter_ranges(::flyteidl::plugins::sagemaker::ParameterRanges* hyperparameter_ranges) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hyperparameter_ranges_);
  }
  if (hyperparameter_ranges) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hyperparameter_ranges = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hyperparameter_ranges, submessage_arena);
    }
    
  } else {
    
  }
  hyperparameter_ranges_ = hyperparameter_ranges;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.hyperparameter_ranges)
}

// .flyteidl.plugins.sagemaker.HyperparameterTuningStrategy.Value tuning_strategy = 2;
inline void HyperparameterTuningJobConfig::clear_tuning_strategy() {
  tuning_strategy_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value HyperparameterTuningJobConfig::tuning_strategy() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_strategy)
  return static_cast< ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value >(tuning_strategy_);
}
inline void HyperparameterTuningJobConfig::set_tuning_strategy(::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value value) {
  
  tuning_strategy_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_strategy)
}

// .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
inline bool HyperparameterTuningJobConfig::has_tuning_objective() const {
  return this != internal_default_instance() && tuning_objective_ != nullptr;
}
inline void HyperparameterTuningJobConfig::clear_tuning_objective() {
  if (GetArenaNoVirtual() == nullptr && tuning_objective_ != nullptr) {
    delete tuning_objective_;
  }
  tuning_objective_ = nullptr;
}
inline const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective& HyperparameterTuningJobConfig::tuning_objective() const {
  const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* p = tuning_objective_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_objective)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective*>(
      &::flyteidl::plugins::sagemaker::_HyperparameterTuningObjective_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* HyperparameterTuningJobConfig::release_tuning_objective() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_objective)
  
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* temp = tuning_objective_;
  tuning_objective_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* HyperparameterTuningJobConfig::mutable_tuning_objective() {
  
  if (tuning_objective_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningObjective>(GetArenaNoVirtual());
    tuning_objective_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_objective)
  return tuning_objective_;
}
inline void HyperparameterTuningJobConfig::set_allocated_tuning_objective(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* tuning_objective) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete tuning_objective_;
  }
  if (tuning_objective) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tuning_objective = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tuning_objective, submessage_arena);
    }
    
  } else {
    
  }
  tuning_objective_ = tuning_objective;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.tuning_objective)
}

// .flyteidl.plugins.sagemaker.TrainingJobEarlyStoppingType.Value training_job_early_stopping_type = 4;
inline void HyperparameterTuningJobConfig::clear_training_job_early_stopping_type() {
  training_job_early_stopping_type_ = 0;
}
inline ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value HyperparameterTuningJobConfig::training_job_early_stopping_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.training_job_early_stopping_type)
  return static_cast< ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value >(training_job_early_stopping_type_);
}
inline void HyperparameterTuningJobConfig::set_training_job_early_stopping_type(::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value value) {
  
  training_job_early_stopping_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningJobConfig.training_job_early_stopping_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value>() {
  return ::flyteidl::plugins::sagemaker::HyperparameterTuningObjectiveType_Value_descriptor();
}
template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value>() {
  return ::flyteidl::plugins::sagemaker::HyperparameterTuningStrategy_Value_descriptor();
}
template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value>() {
  return ::flyteidl::plugins::sagemaker::TrainingJobEarlyStoppingType_Value_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhyperparameter_5ftuning_5fjob_2eproto
