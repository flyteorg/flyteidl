// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/admin.proto

#include "flyteidl/service/admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace flyteidl {
namespace service {
}  // namespace service
}  // namespace flyteidl
void InitDefaults_flyteidl_2fservice_2fadmin_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = nullptr;
static constexpr ::google::protobuf::Message* const* file_default_instances = nullptr;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fadmin_2eproto, "flyteidl/service/admin.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fadmin_2eproto, 0, file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto[] =
  "\n\034flyteidl/service/admin.proto\022\020flyteidl"
  ".service\032\034google/api/annotations.proto\032\034"
  "flyteidl/admin/project.proto\032.flyteidl/a"
  "dmin/project_domain_attributes.proto\032\031fl"
  "yteidl/admin/task.proto\032\035flyteidl/admin/"
  "workflow.proto\032(flyteidl/admin/workflow_"
  "attributes.proto\032 flyteidl/admin/launch_"
  "plan.proto\032\032flyteidl/admin/event.proto\032\036"
  "flyteidl/admin/execution.proto\032\'flyteidl"
  "/admin/matchable_resource.proto\032#flyteid"
  "l/admin/node_execution.proto\032#flyteidl/a"
  "dmin/task_execution.proto\032\034flyteidl/admi"
  "n/version.proto\032\033flyteidl/admin/common.p"
  "roto\032,protoc-gen-swagger/options/annotat"
  "ions.proto2\311e\n\014AdminService\022\305\002\n\nCreateTa"
  "sk\022!.flyteidl.admin.TaskCreateRequest\032\"."
  "flyteidl.admin.TaskCreateResponse\"\357\001\202\323\344\223"
  "\002\022\"\r/api/v1/tasks:\001*\222A\323\001\032&Create and reg"
  "ister a task definition.JB\n\003400\022;\n9Retur"
  "ned for bad request that may have failed"
  " validation.Je\n\003409\022^\n\\Returned for a re"
  "quest that references an identical entit"
  "y that has already been registered.\022\262\001\n\007"
  "GetTask\022 .flyteidl.admin.ObjectGetReques"
  "t\032\024.flyteidl.admin.Task\"o\202\323\344\223\002\?\022=/api/v1"
  "/tasks/{id.project}/{id.domain}/{id.name"
  "}/{id.version}\222A\'\032%Retrieve an existing "
  "task definition.\022\336\001\n\013ListTaskIds\0220.flyte"
  "idl.admin.NamedEntityIdentifierListReque"
  "st\032).flyteidl.admin.NamedEntityIdentifie"
  "rList\"r\202\323\344\223\002%\022#/api/v1/task_ids/{project"
  "}/{domain}\222AD\032BFetch existing task defin"
  "ition identifiers matching input filters"
  ".\022\353\001\n\tListTasks\022#.flyteidl.admin.Resourc"
  "eListRequest\032\030.flyteidl.admin.TaskList\"\236"
  "\001\202\323\344\223\002\\\0220/api/v1/tasks/{id.project}/{id."
  "domain}/{id.name}Z(\022&/api/v1/tasks/{id.p"
  "roject}/{id.domain}\222A9\0327Fetch existing t"
  "ask definitions matching input filters.\022"
  "\331\002\n\016CreateWorkflow\022%.flyteidl.admin.Work"
  "flowCreateRequest\032&.flyteidl.admin.Workf"
  "lowCreateResponse\"\367\001\202\323\344\223\002\026\"\021/api/v1/work"
  "flows:\001*\222A\327\001\032*Create and register a work"
  "flow definition.JB\n\003400\022;\n9Returned for "
  "bad request that may have failed validat"
  "ion.Je\n\003409\022^\n\\Returned for a request th"
  "at references an identical entity that h"
  "as already been registered.\022\302\001\n\013GetWorkf"
  "low\022 .flyteidl.admin.ObjectGetRequest\032\030."
  "flyteidl.admin.Workflow\"w\202\323\344\223\002C\022A/api/v1"
  "/workflows/{id.project}/{id.domain}/{id."
  "name}/{id.version}\222A+\032)Retrieve an exist"
  "ing workflow definition.\022\355\001\n\017ListWorkflo"
  "wIds\0220.flyteidl.admin.NamedEntityIdentif"
  "ierListRequest\032).flyteidl.admin.NamedEnt"
  "ityIdentifierList\"}\202\323\344\223\002)\022\'/api/v1/workf"
  "low_ids/{project}/{domain}\222AK\032IFetch an "
  "existing workflow definition identifiers"
  " matching input filters.\022\377\001\n\rListWorkflo"
  "ws\022#.flyteidl.admin.ResourceListRequest\032"
  "\034.flyteidl.admin.WorkflowList\"\252\001\202\323\344\223\002d\0224"
  "/api/v1/workflows/{id.project}/{id.domai"
  "n}/{id.name}Z,\022*/api/v1/workflows/{id.pr"
  "oject}/{id.domain}\222A=\032;Fetch existing wo"
  "rkflow definitions matching input filter"
  "s.\022\345\002\n\020CreateLaunchPlan\022\'.flyteidl.admin"
  ".LaunchPlanCreateRequest\032(.flyteidl.admi"
  "n.LaunchPlanCreateResponse\"\375\001\202\323\344\223\002\031\"\024/ap"
  "i/v1/launch_plans:\001*\222A\332\001\032-Create and reg"
  "ister a launch plan definition.JB\n\003400\022;"
  "\n9Returned for bad request that may have"
  " failed validation.Je\n\003409\022^\n\\Returned f"
  "or a request that references an identica"
  "l entity that has already been registere"
  "d.\022\314\001\n\rGetLaunchPlan\022 .flyteidl.admin.Ob"
  "jectGetRequest\032\032.flyteidl.admin.LaunchPl"
  "an\"}\202\323\344\223\002F\022D/api/v1/launch_plans/{id.pro"
  "ject}/{id.domain}/{id.name}/{id.version}"
  "\222A.\032,Retrieve an existing launch plan de"
  "finition.\022\363\001\n\023GetActiveLaunchPlan\022\'.flyt"
  "eidl.admin.ActiveLaunchPlanRequest\032\032.fly"
  "teidl.admin.LaunchPlan\"\226\001\202\323\344\223\002@\022>/api/v1"
  "/active_launch_plans/{id.project}/{id.do"
  "main}/{id.name}\222AM\032KRetrieve the active "
  "launch plan version specified by input r"
  "equest filters.\022\353\001\n\025ListActiveLaunchPlan"
  "s\022+.flyteidl.admin.ActiveLaunchPlanListR"
  "equest\032\036.flyteidl.admin.LaunchPlanList\"\204"
  "\001\202\323\344\223\0020\022./api/v1/active_launch_plans/{pr"
  "oject}/{domain}\222AK\032IFetch the active lau"
  "nch plan versions specified by input req"
  "uest filters.\022\363\001\n\021ListLaunchPlanIds\0220.fl"
  "yteidl.admin.NamedEntityIdentifierListRe"
  "quest\032).flyteidl.admin.NamedEntityIdenti"
  "fierList\"\200\001\202\323\344\223\002,\022*/api/v1/launch_plan_i"
  "ds/{project}/{domain}\222AK\032IFetch existing"
  " launch plan definition identifiers matc"
  "hing input filters.\022\214\002\n\017ListLaunchPlans\022"
  "#.flyteidl.admin.ResourceListRequest\032\036.f"
  "lyteidl.admin.LaunchPlanList\"\263\001\202\323\344\223\002j\0227/"
  "api/v1/launch_plans/{id.project}/{id.dom"
  "ain}/{id.name}Z/\022-/api/v1/launch_plans/{"
  "id.project}/{id.domain}\222A@\032>Fetch existi"
  "ng launch plan definitions matching inpu"
  "t filters.\022\300\006\n\020UpdateLaunchPlan\022\'.flytei"
  "dl.admin.LaunchPlanUpdateRequest\032(.flyte"
  "idl.admin.LaunchPlanUpdateResponse\"\330\005\202\323\344"
  "\223\002I\032D/api/v1/launch_plans/{id.project}/{"
  "id.domain}/{id.name}/{id.version}:\001*\222A\205\005"
  "\032\202\005Update the status of an existing laun"
  "ch plan definition. At most one launch p"
  "lan version for a given {project, domain"
  ", name} can be active at a time. If this"
  " call sets a launch plan to active and e"
  "xisting version is already active, the r"
  "esult of this call will be that the form"
  "erly active launch plan will be made ina"
  "ctive and specified launch plan in this "
  "request will be made active. In the even"
  "t that the formerly active launch plan h"
  "ad a schedule associated it with it, thi"
  "s schedule will be disabled. If the refe"
  "rence launch plan in this request is bei"
  "ng set to active and has a schedule asso"
  "ciated with it, the schedule will be ena"
  "bled.\022\242\001\n\017CreateExecution\022&.flyteidl.adm"
  "in.ExecutionCreateRequest\032\'.flyteidl.adm"
  "in.ExecutionCreateResponse\">\202\323\344\223\002\027\"\022/api"
  "/v1/executions:\001*\222A\036\032\034Create a workflow "
  "execution.\022\261\001\n\021RelaunchExecution\022(.flyte"
  "idl.admin.ExecutionRelaunchRequest\032\'.fly"
  "teidl.admin.ExecutionCreateResponse\"I\202\323\344"
  "\223\002 \"\033/api/v1/executions/relaunch:\001*\222A \032\036"
  "Relaunch a workflow execution.\022\337\001\n\020Recov"
  "erExecution\022\'.flyteidl.admin.ExecutionRe"
  "coverRequest\032\'.flyteidl.admin.ExecutionC"
  "reateResponse\"y\202\323\344\223\002\037\"\032/api/v1/execution"
  "s/recover:\001*\222AQ\032ORecovers a previously-r"
  "un workflow execution that failed due to"
  " system failure.\022\302\001\n\014GetExecution\022+.flyt"
  "eidl.admin.WorkflowExecutionGetRequest\032\031"
  ".flyteidl.admin.Execution\"j\202\323\344\223\0027\0225/api/"
  "v1/executions/{id.project}/{id.domain}/{"
  "id.name}\222A*\032(Retrieve an existing workfl"
  "ow execution.\022\202\002\n\020GetExecutionData\022/.fly"
  "teidl.admin.WorkflowExecutionGetDataRequ"
  "est\0320.flyteidl.admin.WorkflowExecutionGe"
  "tDataResponse\"\212\001\202\323\344\223\002<\022:/api/v1/data/exe"
  "cutions/{id.project}/{id.domain}/{id.nam"
  "e}\222AE\032CRetrieve input and output data fr"
  "om an existing workflow execution.\022\310\001\n\016L"
  "istExecutions\022#.flyteidl.admin.ResourceL"
  "istRequest\032\035.flyteidl.admin.ExecutionLis"
  "t\"r\202\323\344\223\002-\022+/api/v1/executions/{id.projec"
  "t}/{id.domain}\222A<\032:Fetch existing workfl"
  "ow executions matching input filters.\022\364\001"
  "\n\022TerminateExecution\022).flyteidl.admin.Ex"
  "ecutionTerminateRequest\032*.flyteidl.admin"
  ".ExecutionTerminateResponse\"\206\001\202\323\344\223\002:*5/a"
  "pi/v1/executions/{id.project}/{id.domain"
  "}/{id.name}:\001*\222AC\032ATerminate the active "
  "workflow execution specified in the requ"
  "est.\022\374\001\n\020GetNodeExecution\022\'.flyteidl.adm"
  "in.NodeExecutionGetRequest\032\035.flyteidl.ad"
  "min.NodeExecution\"\237\001\202\323\344\223\002p\022n/api/v1/node"
  "_executions/{id.execution_id.project}/{i"
  "d.execution_id.domain}/{id.execution_id."
  "name}/{id.node_id}\222A&\032$Retrieve an exist"
  "ing node execution.\022\277\002\n\024RecoverNodeExecu"
  "tion\022+.flyteidl.admin.NodeExecutionRecov"
  "erRequest\032,.flyteidl.admin.NodeExecution"
  "RecoverResponse\"\313\001\202\323\344\223\002x\022v/api/v1/node_e"
  "xecutions/recover/{id.execution_id.proje"
  "ct}/{id.execution_id.domain}/{id.executi"
  "on_id.name}/{id.node_id}\222AJ\032HRecovers al"
  "ready produced data from an existing nod"
  "e execution (if any).\022\232\002\n\022ListNodeExecut"
  "ions\022(.flyteidl.admin.NodeExecutionListR"
  "equest\032!.flyteidl.admin.NodeExecutionLis"
  "t\"\266\001\202\323\344\223\002u\022s/api/v1/node_executions/{wor"
  "kflow_execution_id.project}/{workflow_ex"
  "ecution_id.domain}/{workflow_execution_i"
  "d.name}\222A8\0326Fetch existing node executio"
  "ns matching input filters.\022\357\004\n\031ListNodeE"
  "xecutionsForTask\022/.flyteidl.admin.NodeEx"
  "ecutionForTaskListRequest\032!.flyteidl.adm"
  "in.NodeExecutionList\"\375\003\202\323\344\223\002\254\003\022\251\003/api/v1"
  "/children/task_executions/{task_executio"
  "n_id.node_execution_id.execution_id.proj"
  "ect}/{task_execution_id.node_execution_i"
  "d.execution_id.domain}/{task_execution_i"
  "d.node_execution_id.execution_id.name}/{"
  "task_execution_id.node_execution_id.node"
  "_id}/{task_execution_id.task_id.project}"
  "/{task_execution_id.task_id.domain}/{tas"
  "k_execution_id.task_id.name}/{task_execu"
  "tion_id.task_id.version}/{task_execution"
  "_id.retry_attempt}\222AG\032EFetch child node "
  "executions launched by the specified tas"
  "k execution.\022\263\002\n\024GetNodeExecutionData\022+."
  "flyteidl.admin.NodeExecutionGetDataReque"
  "st\032,.flyteidl.admin.NodeExecutionGetData"
  "Response\"\277\001\202\323\344\223\002u\022s/api/v1/data/node_exe"
  "cutions/{id.execution_id.project}/{id.ex"
  "ecution_id.domain}/{id.execution_id.name"
  "}/{id.node_id}\222AA\032\?Retrieve input and ou"
  "tput data from an existing node executio"
  "n.\022\227\001\n\017RegisterProject\022&.flyteidl.admin."
  "ProjectRegisterRequest\032\'.flyteidl.admin."
  "ProjectRegisterResponse\"3\202\323\344\223\002\025\"\020/api/v1"
  "/projects:\001*\222A\025\032\023Register a project.\022\207\001\n"
  "\rUpdateProject\022\027.flyteidl.admin.Project\032"
  "%.flyteidl.admin.ProjectUpdateResponse\"6"
  "\202\323\344\223\002\032\032\025/api/v1/projects/{id}:\001*\222A\023\032\021Upd"
  "ate a project.\022\205\001\n\014ListProjects\022\".flytei"
  "dl.admin.ProjectListRequest\032\030.flyteidl.a"
  "dmin.Projects\"7\202\323\344\223\002\022\022\020/api/v1/projects\222"
  "A\034\032\032Fetch registered projects.\022\335\001\n\023Creat"
  "eWorkflowEvent\022-.flyteidl.admin.Workflow"
  "ExecutionEventRequest\032..flyteidl.admin.W"
  "orkflowExecutionEventResponse\"g\202\323\344\223\002\035\"\030/"
  "api/v1/events/workflows:\001*\222AA\032\?Create a "
  "workflow execution event recording a pha"
  "se transition.\022\311\001\n\017CreateNodeEvent\022).fly"
  "teidl.admin.NodeExecutionEventRequest\032*."
  "flyteidl.admin.NodeExecutionEventRespons"
  "e\"_\202\323\344\223\002\031\"\024/api/v1/events/nodes:\001*\222A=\032;C"
  "reate a node execution event recording a"
  " phase transition.\022\311\001\n\017CreateTaskEvent\022)"
  ".flyteidl.admin.TaskExecutionEventReques"
  "t\032*.flyteidl.admin.TaskExecutionEventRes"
  "ponse\"_\202\323\344\223\002\031\"\024/api/v1/events/tasks:\001*\222A"
  "=\032;Create a task execution event recordi"
  "ng a phase transition.\022\251\003\n\020GetTaskExecut"
  "ion\022\'.flyteidl.admin.TaskExecutionGetReq"
  "uest\032\035.flyteidl.admin.TaskExecution\"\314\002\202\323"
  "\344\223\002\234\002\022\231\002/api/v1/task_executions/{id.node"
  "_execution_id.execution_id.project}/{id."
  "node_execution_id.execution_id.domain}/{"
  "id.node_execution_id.execution_id.name}/"
  "{id.node_execution_id.node_id}/{id.task_"
  "id.project}/{id.task_id.domain}/{id.task"
  "_id.name}/{id.task_id.version}/{id.retry"
  "_attempt}\222A&\032$Retrieve an existing task "
  "execution.\022\323\002\n\022ListTaskExecutions\022(.flyt"
  "eidl.admin.TaskExecutionListRequest\032!.fl"
  "yteidl.admin.TaskExecutionList\"\357\001\202\323\344\223\002\255\001"
  "\022\252\001/api/v1/task_executions/{node_executi"
  "on_id.execution_id.project}/{node_execut"
  "ion_id.execution_id.domain}/{node_execut"
  "ion_id.execution_id.name}/{node_executio"
  "n_id.node_id}\222A8\0326Fetch existing task ex"
  "ecutions matching input filters.\022\340\003\n\024Get"
  "TaskExecutionData\022+.flyteidl.admin.TaskE"
  "xecutionGetDataRequest\032,.flyteidl.admin."
  "TaskExecutionGetDataResponse\"\354\002\202\323\344\223\002\241\002\022\236"
  "\002/api/v1/data/task_executions/{id.node_e"
  "xecution_id.execution_id.project}/{id.no"
  "de_execution_id.execution_id.domain}/{id"
  ".node_execution_id.execution_id.name}/{i"
  "d.node_execution_id.node_id}/{id.task_id"
  ".project}/{id.task_id.domain}/{id.task_i"
  "d.name}/{id.task_id.version}/{id.retry_a"
  "ttempt}\222AA\032\?Retrieve input and output da"
  "ta from an existing task execution.\022\277\002\n\035"
  "UpdateProjectDomainAttributes\0224.flyteidl"
  ".admin.ProjectDomainAttributesUpdateRequ"
  "est\0325.flyteidl.admin.ProjectDomainAttrib"
  "utesUpdateResponse\"\260\001\202\323\344\223\002O\032J/api/v1/pro"
  "ject_domain_attributes/{attributes.proje"
  "ct}/{attributes.domain}:\001*\222AX\032VUpdate th"
  "e customized resource attributes associa"
  "ted with a project-domain combination\022\237\002"
  "\n\032GetProjectDomainAttributes\0221.flyteidl."
  "admin.ProjectDomainAttributesGetRequest\032"
  "2.flyteidl.admin.ProjectDomainAttributes"
  "GetResponse\"\231\001\202\323\344\223\0026\0224/api/v1/project_do"
  "main_attributes/{project}/{domain}\222AZ\032XR"
  "etrieve the customized resource attribut"
  "es associated with a project-domain comb"
  "ination\022\251\002\n\035DeleteProjectDomainAttribute"
  "s\0224.flyteidl.admin.ProjectDomainAttribut"
  "esDeleteRequest\0325.flyteidl.admin.Project"
  "DomainAttributesDeleteResponse\"\232\001\202\323\344\223\0029*"
  "4/api/v1/project_domain_attributes/{proj"
  "ect}/{domain}:\001*\222AX\032VDelete the customiz"
  "ed resource attributes associated with a"
  " project-domain combination\022\316\002\n\030UpdateWo"
  "rkflowAttributes\022/.flyteidl.admin.Workfl"
  "owAttributesUpdateRequest\0320.flyteidl.adm"
  "in.WorkflowAttributesUpdateResponse\"\316\001\202\323"
  "\344\223\002_\032Z/api/v1/workflow_attributes/{attri"
  "butes.project}/{attributes.domain}/{attr"
  "ibutes.workflow}:\001*\222Af\032dUpdate the custo"
  "mized resource attributes associated wit"
  "h a project, domain and workflow combina"
  "tion\022\243\002\n\025GetWorkflowAttributes\022,.flyteid"
  "l.admin.WorkflowAttributesGetRequest\032-.f"
  "lyteidl.admin.WorkflowAttributesGetRespo"
  "nse\"\254\001\202\323\344\223\002;\0229/api/v1/workflow_attribute"
  "s/{project}/{domain}/{workflow}\222Ah\032fRetr"
  "ieve the customized resource attributes "
  "associated with a project, domain and wo"
  "rkflow combination\022\255\002\n\030DeleteWorkflowAtt"
  "ributes\022/.flyteidl.admin.WorkflowAttribu"
  "tesDeleteRequest\0320.flyteidl.admin.Workfl"
  "owAttributesDeleteResponse\"\255\001\202\323\344\223\002>*9/ap"
  "i/v1/workflow_attributes/{project}/{doma"
  "in}/{workflow}:\001*\222Af\032dDelete the customi"
  "zed resource attributes associated with "
  "a project, domain and workflow combinati"
  "on\022\341\001\n\027ListMatchableAttributes\022..flyteid"
  "l.admin.ListMatchableAttributesRequest\032/"
  ".flyteidl.admin.ListMatchableAttributesR"
  "esponse\"e\202\323\344\223\002\036\022\034/api/v1/matchable_attri"
  "butes\222A>\032<Retrieve a list of MatchableAt"
  "tributesConfiguration objects.\022\200\002\n\021ListN"
  "amedEntities\022&.flyteidl.admin.NamedEntit"
  "yListRequest\032\037.flyteidl.admin.NamedEntit"
  "yList\"\241\001\202\323\344\223\002;\0229/api/v1/named_entities/{"
  "resource_type}/{project}/{domain}\222A]\032[Re"
  "trieve a list of NamedEntity objects sha"
  "ring a common resource type, project, an"
  "d domain.\022\312\001\n\016GetNamedEntity\022%.flyteidl."
  "admin.NamedEntityGetRequest\032\033.flyteidl.a"
  "dmin.NamedEntity\"t\202\323\344\223\002K\022I/api/v1/named_"
  "entities/{resource_type}/{id.project}/{i"
  "d.domain}/{id.name}\222A \032\036Retrieve a Named"
  "Entity object.\022\363\001\n\021UpdateNamedEntity\022(.f"
  "lyteidl.admin.NamedEntityUpdateRequest\032)"
  ".flyteidl.admin.NamedEntityUpdateRespons"
  "e\"\210\001\202\323\344\223\002N\032I/api/v1/named_entities/{reso"
  "urce_type}/{id.project}/{id.domain}/{id."
  "name}:\001*\222A1\032/Update the fields associate"
  "d with a NamedEntity\022\277\001\n\nGetVersion\022!.fl"
  "yteidl.admin.GetVersionRequest\032\".flyteid"
  "l.admin.GetVersionResponse\"j\202\323\344\223\002\021\022\017/api"
  "/v1/version\222AP\032NRetrieve the Version (in"
  "cluding the Build  information) for Flyt"
  "eAdmin serviceB9Z7github.com/flyteorg/fl"
  "yteidl/gen/pb-go/flyteidl/serviceb\006proto"
  "3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fadmin_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fadmin_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto,
  "flyteidl/service/admin.proto", &assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto, 13641,
};

void AddDescriptors_flyteidl_2fservice_2fadmin_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[15] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fworkflow_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fevent_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fnode_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fversion_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fcommon_2eproto,
    ::AddDescriptors_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fadmin_2eproto, deps, 15);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fadmin_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fadmin_2eproto(); return true; }();
namespace flyteidl {
namespace service {

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
