// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/hyperparameter_tuning_job.proto

package com.flyteidl.plugins.sagemaker;

public interface HyperparameterTuningJobOrBuilder extends
    // @@protoc_insertion_point(interface_extends:flyteidl.plugins.sagemaker.HyperparameterTuningJob)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The underlying training job that the hyperparameter tuning job will launch during the process
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
   * @return Whether the trainingJob field is set.
   */
  boolean hasTrainingJob();
  /**
   * <pre>
   * The underlying training job that the hyperparameter tuning job will launch during the process
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
   * @return The trainingJob.
   */
  com.flyteidl.plugins.sagemaker.TrainingJob getTrainingJob();
  /**
   * <pre>
   * The underlying training job that the hyperparameter tuning job will launch during the process
   * </pre>
   *
   * <code>.flyteidl.plugins.sagemaker.TrainingJob training_job = 1 [json_name = "trainingJob"];</code>
   */
  com.flyteidl.plugins.sagemaker.TrainingJobOrBuilder getTrainingJobOrBuilder();

  /**
   * <pre>
   * The maximum number of training jobs that an hpo job can launch. For resource limit purpose.
   * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
   * </pre>
   *
   * <code>int64 max_number_of_training_jobs = 2 [json_name = "maxNumberOfTrainingJobs"];</code>
   * @return The maxNumberOfTrainingJobs.
   */
  long getMaxNumberOfTrainingJobs();

  /**
   * <pre>
   * The maximum number of concurrent training job that an hpo job can launch
   * https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceLimits.html
   * </pre>
   *
   * <code>int64 max_parallel_training_jobs = 3 [json_name = "maxParallelTrainingJobs"];</code>
   * @return The maxParallelTrainingJobs.
   */
  long getMaxParallelTrainingJobs();
}
