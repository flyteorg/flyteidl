// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/identity.proto

#include "flyteidl/service/identity.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace flyteidl {
namespace service {
constexpr UserInfoRequest::UserInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct UserInfoRequestDefaultTypeInternal {
  constexpr UserInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UserInfoRequestDefaultTypeInternal() {}
  union {
    UserInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserInfoRequestDefaultTypeInternal _UserInfoRequest_default_instance_;
constexpr UserInfoResponse::UserInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subject_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , preferred_username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , given_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , family_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , email_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , picture_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UserInfoResponseDefaultTypeInternal {
  constexpr UserInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UserInfoResponseDefaultTypeInternal() {}
  union {
    UserInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserInfoResponseDefaultTypeInternal _UserInfoResponse_default_instance_;
}  // namespace service
}  // namespace flyteidl
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_flyteidl_2fservice_2fidentity_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fidentity_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fidentity_2eproto = nullptr;

const uint32_t TableStruct_flyteidl_2fservice_2fidentity_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, subject_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, preferred_username_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, given_name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, family_name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, email_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::service::UserInfoResponse, picture_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::flyteidl::service::UserInfoRequest)},
  { 6, -1, -1, sizeof(::flyteidl::service::UserInfoResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::service::_UserInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::flyteidl::service::_UserInfoResponse_default_instance_),
};

const char descriptor_table_protodef_flyteidl_2fservice_2fidentity_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037flyteidl/service/identity.proto\022\020flyte"
  "idl.service\032\034google/api/annotations.prot"
  "o\032,protoc-gen-swagger/options/annotation"
  "s.proto\"\021\n\017UserInfoRequest\"\337\001\n\020UserInfoR"
  "esponse\022\030\n\007subject\030\001 \001(\tR\007subject\022\022\n\004nam"
  "e\030\002 \001(\tR\004name\022-\n\022preferred_username\030\003 \001("
  "\tR\021preferredUsername\022\035\n\ngiven_name\030\004 \001(\t"
  "R\tgivenName\022\037\n\013family_name\030\005 \001(\tR\nfamily"
  "Name\022\024\n\005email\030\006 \001(\tR\005email\022\030\n\007picture\030\007 "
  "\001(\tR\007picture2\235\001\n\017IdentityService\022\211\001\n\010Use"
  "rInfo\022!.flyteidl.service.UserInfoRequest"
  "\032\".flyteidl.service.UserInfoResponse\"6\222A"
  "(\032&Retrieves authenticated identity info"
  ".\202\323\344\223\002\005\022\003/meB\302\001\n\024com.flyteidl.serviceB\rI"
  "dentityProtoH\002Z7github.com/flyteorg/flyt"
  "eidl/gen/pb-go/flyteidl/service\370\001\000\242\002\003FSX"
  "\252\002\020Flyteidl.Service\312\002\020Flyteidl\\Service\342\002"
  "\034Flyteidl\\Service\\GPBMetadata\352\002\021Flyteidl"
  "::Serviceb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_flyteidl_2fservice_2fidentity_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_flyteidl_2fservice_2fidentity_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fidentity_2eproto = {
  false, false, 737, descriptor_table_protodef_flyteidl_2fservice_2fidentity_2eproto, "flyteidl/service/identity.proto", 
  &descriptor_table_flyteidl_2fservice_2fidentity_2eproto_once, descriptor_table_flyteidl_2fservice_2fidentity_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_flyteidl_2fservice_2fidentity_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fidentity_2eproto, file_level_enum_descriptors_flyteidl_2fservice_2fidentity_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fidentity_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_flyteidl_2fservice_2fidentity_2eproto_getter() {
  return &descriptor_table_flyteidl_2fservice_2fidentity_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_flyteidl_2fservice_2fidentity_2eproto(&descriptor_table_flyteidl_2fservice_2fidentity_2eproto);
namespace flyteidl {
namespace service {

// ===================================================================

class UserInfoRequest::_Internal {
 public:
};

UserInfoRequest::UserInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:flyteidl.service.UserInfoRequest)
}
UserInfoRequest::UserInfoRequest(const UserInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.UserInfoRequest)
}



::PROTOBUF_NAMESPACE_ID::Metadata UserInfoRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fservice_2fidentity_2eproto_getter, &descriptor_table_flyteidl_2fservice_2fidentity_2eproto_once,
      file_level_metadata_flyteidl_2fservice_2fidentity_2eproto[0]);
}

// ===================================================================

class UserInfoResponse::_Internal {
 public:
};

UserInfoResponse::UserInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:flyteidl.service.UserInfoResponse)
}
UserInfoResponse::UserInfoResponse(const UserInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subject().empty()) {
    subject_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subject(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  preferred_username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    preferred_username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_preferred_username().empty()) {
    preferred_username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_preferred_username(), 
      GetArenaForAllocation());
  }
  given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    given_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_given_name().empty()) {
    given_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_given_name(), 
      GetArenaForAllocation());
  }
  family_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    family_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_family_name().empty()) {
    family_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_family_name(), 
      GetArenaForAllocation());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArenaForAllocation());
  }
  picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    picture_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_picture().empty()) {
    picture_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_picture(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.service.UserInfoResponse)
}

inline void UserInfoResponse::SharedCtor() {
subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  subject_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
preferred_username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  preferred_username_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  given_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
family_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  family_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
picture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  picture_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserInfoResponse::~UserInfoResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.service.UserInfoResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UserInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preferred_username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  given_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  family_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  picture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserInfoResponse::ArenaDtor(void* object) {
  UserInfoResponse* _this = reinterpret_cast< UserInfoResponse* >(object);
  (void)_this;
}
void UserInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UserInfoResponse::InternalSwap(UserInfoResponse* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata UserInfoResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_flyteidl_2fservice_2fidentity_2eproto_getter, &descriptor_table_flyteidl_2fservice_2fidentity_2eproto_once,
      file_level_metadata_flyteidl_2fservice_2fidentity_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::flyteidl::service::UserInfoRequest* Arena::CreateMaybeMessage< ::flyteidl::service::UserInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::service::UserInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::service::UserInfoResponse* Arena::CreateMaybeMessage< ::flyteidl::service::UserInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::flyteidl::service::UserInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
