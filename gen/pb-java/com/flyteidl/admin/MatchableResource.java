// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/matchable_resource.proto

package com.flyteidl.admin;

/**
 * <pre>
 * Defines a resource that can be configured by customizable Project-, ProjectDomain- or WorkflowAttributes
 * based on matching tags.
 * </pre>
 *
 * Protobuf enum {@code flyteidl.admin.MatchableResource}
 */
public enum MatchableResource
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Applies to customizable task resource requests and limits.
   * </pre>
   *
   * <code>TASK_RESOURCE = 0;</code>
   */
  TASK_RESOURCE(0),
  /**
   * <pre>
   * Applies to configuring templated kubernetes cluster resources.
   * </pre>
   *
   * <code>CLUSTER_RESOURCE = 1;</code>
   */
  CLUSTER_RESOURCE(1),
  /**
   * <pre>
   * Configures task and dynamic task execution queue assignment.
   * </pre>
   *
   * <code>EXECUTION_QUEUE = 2;</code>
   */
  EXECUTION_QUEUE(2),
  /**
   * <pre>
   * Configures the K8s cluster label to be used for execution to be run
   * </pre>
   *
   * <code>EXECUTION_CLUSTER_LABEL = 3;</code>
   */
  EXECUTION_CLUSTER_LABEL(3),
  /**
   * <pre>
   * Configures default quality of service when undefined in an execution spec.
   * </pre>
   *
   * <code>QUALITY_OF_SERVICE_SPECIFICATION = 4;</code>
   */
  QUALITY_OF_SERVICE_SPECIFICATION(4),
  /**
   * <pre>
   * Selects configurable plugin implementation behavior for a given task type.
   * </pre>
   *
   * <code>PLUGIN_OVERRIDE = 5;</code>
   */
  PLUGIN_OVERRIDE(5),
  /**
   * <pre>
   * Adds defaults for customizable workflow-execution specifications and overrides.
   * </pre>
   *
   * <code>WORKFLOW_EXECUTION_CONFIG = 6;</code>
   */
  WORKFLOW_EXECUTION_CONFIG(6),
  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>CLUSTER_ASSIGNMENT = 7;</code>
   */
  CLUSTER_ASSIGNMENT(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Applies to customizable task resource requests and limits.
   * </pre>
   *
   * <code>TASK_RESOURCE = 0;</code>
   */
  public static final int TASK_RESOURCE_VALUE = 0;
  /**
   * <pre>
   * Applies to configuring templated kubernetes cluster resources.
   * </pre>
   *
   * <code>CLUSTER_RESOURCE = 1;</code>
   */
  public static final int CLUSTER_RESOURCE_VALUE = 1;
  /**
   * <pre>
   * Configures task and dynamic task execution queue assignment.
   * </pre>
   *
   * <code>EXECUTION_QUEUE = 2;</code>
   */
  public static final int EXECUTION_QUEUE_VALUE = 2;
  /**
   * <pre>
   * Configures the K8s cluster label to be used for execution to be run
   * </pre>
   *
   * <code>EXECUTION_CLUSTER_LABEL = 3;</code>
   */
  public static final int EXECUTION_CLUSTER_LABEL_VALUE = 3;
  /**
   * <pre>
   * Configures default quality of service when undefined in an execution spec.
   * </pre>
   *
   * <code>QUALITY_OF_SERVICE_SPECIFICATION = 4;</code>
   */
  public static final int QUALITY_OF_SERVICE_SPECIFICATION_VALUE = 4;
  /**
   * <pre>
   * Selects configurable plugin implementation behavior for a given task type.
   * </pre>
   *
   * <code>PLUGIN_OVERRIDE = 5;</code>
   */
  public static final int PLUGIN_OVERRIDE_VALUE = 5;
  /**
   * <pre>
   * Adds defaults for customizable workflow-execution specifications and overrides.
   * </pre>
   *
   * <code>WORKFLOW_EXECUTION_CONFIG = 6;</code>
   */
  public static final int WORKFLOW_EXECUTION_CONFIG_VALUE = 6;
  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>CLUSTER_ASSIGNMENT = 7;</code>
   */
  public static final int CLUSTER_ASSIGNMENT_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MatchableResource valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static MatchableResource forNumber(int value) {
    switch (value) {
      case 0: return TASK_RESOURCE;
      case 1: return CLUSTER_RESOURCE;
      case 2: return EXECUTION_QUEUE;
      case 3: return EXECUTION_CLUSTER_LABEL;
      case 4: return QUALITY_OF_SERVICE_SPECIFICATION;
      case 5: return PLUGIN_OVERRIDE;
      case 6: return WORKFLOW_EXECUTION_CONFIG;
      case 7: return CLUSTER_ASSIGNMENT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MatchableResource>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MatchableResource> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MatchableResource>() {
          public MatchableResource findValueByNumber(int number) {
            return MatchableResource.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.flyteidl.admin.MatchableResourceProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final MatchableResource[] VALUES = values();

  public static MatchableResource valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private MatchableResource(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:flyteidl.admin.MatchableResource)
}

