// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/literals.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Primitive Types
type Primitive struct {
	// Defines one of simple primitive types. These types will get translated into different programming languages as
	// described in https://developers.google.com/protocol-buffers/docs/proto#scalar.
	//
	// Types that are valid to be assigned to Value:
	//	*Primitive_Integer
	//	*Primitive_FloatValue
	//	*Primitive_StringValue
	//	*Primitive_Boolean
	//	*Primitive_Datetime
	//	*Primitive_Duration
	Value                isPrimitive_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Primitive) Reset()         { *m = Primitive{} }
func (m *Primitive) String() string { return proto.CompactTextString(m) }
func (*Primitive) ProtoMessage()    {}
func (*Primitive) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{0}
}

func (m *Primitive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Primitive.Unmarshal(m, b)
}
func (m *Primitive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Primitive.Marshal(b, m, deterministic)
}
func (m *Primitive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Primitive.Merge(m, src)
}
func (m *Primitive) XXX_Size() int {
	return xxx_messageInfo_Primitive.Size(m)
}
func (m *Primitive) XXX_DiscardUnknown() {
	xxx_messageInfo_Primitive.DiscardUnknown(m)
}

var xxx_messageInfo_Primitive proto.InternalMessageInfo

type isPrimitive_Value interface {
	isPrimitive_Value()
}

type Primitive_Integer struct {
	Integer int64 `protobuf:"varint,1,opt,name=integer,proto3,oneof"`
}

type Primitive_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,2,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Primitive_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Primitive_Boolean struct {
	Boolean bool `protobuf:"varint,4,opt,name=boolean,proto3,oneof"`
}

type Primitive_Datetime struct {
	Datetime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=datetime,proto3,oneof"`
}

type Primitive_Duration struct {
	Duration *duration.Duration `protobuf:"bytes,6,opt,name=duration,proto3,oneof"`
}

func (*Primitive_Integer) isPrimitive_Value() {}

func (*Primitive_FloatValue) isPrimitive_Value() {}

func (*Primitive_StringValue) isPrimitive_Value() {}

func (*Primitive_Boolean) isPrimitive_Value() {}

func (*Primitive_Datetime) isPrimitive_Value() {}

func (*Primitive_Duration) isPrimitive_Value() {}

func (m *Primitive) GetValue() isPrimitive_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Primitive) GetInteger() int64 {
	if x, ok := m.GetValue().(*Primitive_Integer); ok {
		return x.Integer
	}
	return 0
}

func (m *Primitive) GetFloatValue() float64 {
	if x, ok := m.GetValue().(*Primitive_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *Primitive) GetStringValue() string {
	if x, ok := m.GetValue().(*Primitive_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Primitive) GetBoolean() bool {
	if x, ok := m.GetValue().(*Primitive_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (m *Primitive) GetDatetime() *timestamp.Timestamp {
	if x, ok := m.GetValue().(*Primitive_Datetime); ok {
		return x.Datetime
	}
	return nil
}

func (m *Primitive) GetDuration() *duration.Duration {
	if x, ok := m.GetValue().(*Primitive_Duration); ok {
		return x.Duration
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Primitive) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Primitive_Integer)(nil),
		(*Primitive_FloatValue)(nil),
		(*Primitive_StringValue)(nil),
		(*Primitive_Boolean)(nil),
		(*Primitive_Datetime)(nil),
		(*Primitive_Duration)(nil),
	}
}

// Used to denote a nil/null/None assignment to a scalar value. The underlying LiteralType for Void is intentionally
// undefined since it can be assigned to a scalar of any LiteralType.
type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{1}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

// Refers to an offloaded set of files. It encapsulates the type of the store and a unique uri for where the data is.
// There are no restrictions on how the uri is formatted since it will depend on how to interact with the store.
type Blob struct {
	Metadata             *BlobMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Uri                  string        `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{2}
}

func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (m *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(m, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

func (m *Blob) GetMetadata() *BlobMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Blob) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type BlobMetadata struct {
	Type                 *BlobType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BlobMetadata) Reset()         { *m = BlobMetadata{} }
func (m *BlobMetadata) String() string { return proto.CompactTextString(m) }
func (*BlobMetadata) ProtoMessage()    {}
func (*BlobMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{3}
}

func (m *BlobMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobMetadata.Unmarshal(m, b)
}
func (m *BlobMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobMetadata.Marshal(b, m, deterministic)
}
func (m *BlobMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobMetadata.Merge(m, src)
}
func (m *BlobMetadata) XXX_Size() int {
	return xxx_messageInfo_BlobMetadata.Size(m)
}
func (m *BlobMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_BlobMetadata proto.InternalMessageInfo

func (m *BlobMetadata) GetType() *BlobType {
	if m != nil {
		return m.Type
	}
	return nil
}

// A simple byte array with a tag to help different parts of the system communicate about what is in the byte array.
// It's strongly advisable that consumers of this type define a unique tag and validate the tag before parsing the data.
type Binary struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Binary) Reset()         { *m = Binary{} }
func (m *Binary) String() string { return proto.CompactTextString(m) }
func (*Binary) ProtoMessage()    {}
func (*Binary) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{4}
}

func (m *Binary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binary.Unmarshal(m, b)
}
func (m *Binary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binary.Marshal(b, m, deterministic)
}
func (m *Binary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binary.Merge(m, src)
}
func (m *Binary) XXX_Size() int {
	return xxx_messageInfo_Binary.Size(m)
}
func (m *Binary) XXX_DiscardUnknown() {
	xxx_messageInfo_Binary.DiscardUnknown(m)
}

var xxx_messageInfo_Binary proto.InternalMessageInfo

func (m *Binary) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Binary) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

// A strongly typed schema that defines the interface of data retrieved from the underlying storage medium.
type Schema struct {
	Uri                  string      `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Type                 *SchemaType `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{5}
}

func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (m *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(m, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

func (m *Schema) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Schema) GetType() *SchemaType {
	if m != nil {
		return m.Type
	}
	return nil
}

// The runtime representation of a tagged union value. See `UnionType` for more details.
type Union struct {
	Value                *Literal     `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type                 *LiteralType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Union) Reset()         { *m = Union{} }
func (m *Union) String() string { return proto.CompactTextString(m) }
func (*Union) ProtoMessage()    {}
func (*Union) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{6}
}

func (m *Union) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Union.Unmarshal(m, b)
}
func (m *Union) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Union.Marshal(b, m, deterministic)
}
func (m *Union) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Union.Merge(m, src)
}
func (m *Union) XXX_Size() int {
	return xxx_messageInfo_Union.Size(m)
}
func (m *Union) XXX_DiscardUnknown() {
	xxx_messageInfo_Union.DiscardUnknown(m)
}

var xxx_messageInfo_Union proto.InternalMessageInfo

func (m *Union) GetValue() *Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Union) GetType() *LiteralType {
	if m != nil {
		return m.Type
	}
	return nil
}

type StructuredDatasetMetadata struct {
	// Bundle the type information along with the literal.
	// This is here because StructuredDatasets can often be more defined at run time than at compile time.
	// That is, at compile time you might only declare a task to return a pandas dataframe or a StructuredDataset,
	// without any column information, but at run time, you might have that column information.
	// flytekit python will copy this type information into the literal, from the type information, if not provided by
	// the various plugins (encoders).
	// Since this field is run time generated, it's not used for any type checking.
	StructuredDatasetType *StructuredDatasetType `protobuf:"bytes,1,opt,name=structured_dataset_type,json=structuredDatasetType,proto3" json:"structured_dataset_type,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *StructuredDatasetMetadata) Reset()         { *m = StructuredDatasetMetadata{} }
func (m *StructuredDatasetMetadata) String() string { return proto.CompactTextString(m) }
func (*StructuredDatasetMetadata) ProtoMessage()    {}
func (*StructuredDatasetMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{7}
}

func (m *StructuredDatasetMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructuredDatasetMetadata.Unmarshal(m, b)
}
func (m *StructuredDatasetMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructuredDatasetMetadata.Marshal(b, m, deterministic)
}
func (m *StructuredDatasetMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructuredDatasetMetadata.Merge(m, src)
}
func (m *StructuredDatasetMetadata) XXX_Size() int {
	return xxx_messageInfo_StructuredDatasetMetadata.Size(m)
}
func (m *StructuredDatasetMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_StructuredDatasetMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_StructuredDatasetMetadata proto.InternalMessageInfo

func (m *StructuredDatasetMetadata) GetStructuredDatasetType() *StructuredDatasetType {
	if m != nil {
		return m.StructuredDatasetType
	}
	return nil
}

type StructuredDataset struct {
	// String location uniquely identifying where the data is.
	// Should start with the storage location (e.g. s3://, gs://, bq://, etc.)
	Uri                  string                     `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Metadata             *StructuredDatasetMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *StructuredDataset) Reset()         { *m = StructuredDataset{} }
func (m *StructuredDataset) String() string { return proto.CompactTextString(m) }
func (*StructuredDataset) ProtoMessage()    {}
func (*StructuredDataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{8}
}

func (m *StructuredDataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructuredDataset.Unmarshal(m, b)
}
func (m *StructuredDataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructuredDataset.Marshal(b, m, deterministic)
}
func (m *StructuredDataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructuredDataset.Merge(m, src)
}
func (m *StructuredDataset) XXX_Size() int {
	return xxx_messageInfo_StructuredDataset.Size(m)
}
func (m *StructuredDataset) XXX_DiscardUnknown() {
	xxx_messageInfo_StructuredDataset.DiscardUnknown(m)
}

var xxx_messageInfo_StructuredDataset proto.InternalMessageInfo

func (m *StructuredDataset) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *StructuredDataset) GetMetadata() *StructuredDatasetMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Scalar struct {
	// Types that are valid to be assigned to Value:
	//	*Scalar_Primitive
	//	*Scalar_Blob
	//	*Scalar_Binary
	//	*Scalar_Schema
	//	*Scalar_NoneType
	//	*Scalar_Error
	//	*Scalar_Generic
	//	*Scalar_StructuredDataset
	//	*Scalar_Union
	Value                isScalar_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Scalar) Reset()         { *m = Scalar{} }
func (m *Scalar) String() string { return proto.CompactTextString(m) }
func (*Scalar) ProtoMessage()    {}
func (*Scalar) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{9}
}

func (m *Scalar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scalar.Unmarshal(m, b)
}
func (m *Scalar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scalar.Marshal(b, m, deterministic)
}
func (m *Scalar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scalar.Merge(m, src)
}
func (m *Scalar) XXX_Size() int {
	return xxx_messageInfo_Scalar.Size(m)
}
func (m *Scalar) XXX_DiscardUnknown() {
	xxx_messageInfo_Scalar.DiscardUnknown(m)
}

var xxx_messageInfo_Scalar proto.InternalMessageInfo

type isScalar_Value interface {
	isScalar_Value()
}

type Scalar_Primitive struct {
	Primitive *Primitive `protobuf:"bytes,1,opt,name=primitive,proto3,oneof"`
}

type Scalar_Blob struct {
	Blob *Blob `protobuf:"bytes,2,opt,name=blob,proto3,oneof"`
}

type Scalar_Binary struct {
	Binary *Binary `protobuf:"bytes,3,opt,name=binary,proto3,oneof"`
}

type Scalar_Schema struct {
	Schema *Schema `protobuf:"bytes,4,opt,name=schema,proto3,oneof"`
}

type Scalar_NoneType struct {
	NoneType *Void `protobuf:"bytes,5,opt,name=none_type,json=noneType,proto3,oneof"`
}

type Scalar_Error struct {
	Error *Error `protobuf:"bytes,6,opt,name=error,proto3,oneof"`
}

type Scalar_Generic struct {
	Generic *_struct.Struct `protobuf:"bytes,7,opt,name=generic,proto3,oneof"`
}

type Scalar_StructuredDataset struct {
	StructuredDataset *StructuredDataset `protobuf:"bytes,8,opt,name=structured_dataset,json=structuredDataset,proto3,oneof"`
}

type Scalar_Union struct {
	Union *Union `protobuf:"bytes,9,opt,name=union,proto3,oneof"`
}

func (*Scalar_Primitive) isScalar_Value() {}

func (*Scalar_Blob) isScalar_Value() {}

func (*Scalar_Binary) isScalar_Value() {}

func (*Scalar_Schema) isScalar_Value() {}

func (*Scalar_NoneType) isScalar_Value() {}

func (*Scalar_Error) isScalar_Value() {}

func (*Scalar_Generic) isScalar_Value() {}

func (*Scalar_StructuredDataset) isScalar_Value() {}

func (*Scalar_Union) isScalar_Value() {}

func (m *Scalar) GetValue() isScalar_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Scalar) GetPrimitive() *Primitive {
	if x, ok := m.GetValue().(*Scalar_Primitive); ok {
		return x.Primitive
	}
	return nil
}

func (m *Scalar) GetBlob() *Blob {
	if x, ok := m.GetValue().(*Scalar_Blob); ok {
		return x.Blob
	}
	return nil
}

func (m *Scalar) GetBinary() *Binary {
	if x, ok := m.GetValue().(*Scalar_Binary); ok {
		return x.Binary
	}
	return nil
}

func (m *Scalar) GetSchema() *Schema {
	if x, ok := m.GetValue().(*Scalar_Schema); ok {
		return x.Schema
	}
	return nil
}

func (m *Scalar) GetNoneType() *Void {
	if x, ok := m.GetValue().(*Scalar_NoneType); ok {
		return x.NoneType
	}
	return nil
}

func (m *Scalar) GetError() *Error {
	if x, ok := m.GetValue().(*Scalar_Error); ok {
		return x.Error
	}
	return nil
}

func (m *Scalar) GetGeneric() *_struct.Struct {
	if x, ok := m.GetValue().(*Scalar_Generic); ok {
		return x.Generic
	}
	return nil
}

func (m *Scalar) GetStructuredDataset() *StructuredDataset {
	if x, ok := m.GetValue().(*Scalar_StructuredDataset); ok {
		return x.StructuredDataset
	}
	return nil
}

func (m *Scalar) GetUnion() *Union {
	if x, ok := m.GetValue().(*Scalar_Union); ok {
		return x.Union
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Scalar) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Scalar_Primitive)(nil),
		(*Scalar_Blob)(nil),
		(*Scalar_Binary)(nil),
		(*Scalar_Schema)(nil),
		(*Scalar_NoneType)(nil),
		(*Scalar_Error)(nil),
		(*Scalar_Generic)(nil),
		(*Scalar_StructuredDataset)(nil),
		(*Scalar_Union)(nil),
	}
}

// A simple value. This supports any level of nesting (e.g. array of array of array of Blobs) as well as simple primitives.
type Literal struct {
	// Types that are valid to be assigned to Value:
	//	*Literal_Scalar
	//	*Literal_Collection
	//	*Literal_Map
	Value isLiteral_Value `protobuf_oneof:"value"`
	// A hash representing this literal.
	// This is used for caching purposes. For more details refer to RFC 1893
	// (https://github.com/flyteorg/flyte/blob/master/rfc/system/1893-caching-of-offloaded-objects.md)
	Hash                 string   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Literal) Reset()         { *m = Literal{} }
func (m *Literal) String() string { return proto.CompactTextString(m) }
func (*Literal) ProtoMessage()    {}
func (*Literal) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{10}
}

func (m *Literal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Literal.Unmarshal(m, b)
}
func (m *Literal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Literal.Marshal(b, m, deterministic)
}
func (m *Literal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Literal.Merge(m, src)
}
func (m *Literal) XXX_Size() int {
	return xxx_messageInfo_Literal.Size(m)
}
func (m *Literal) XXX_DiscardUnknown() {
	xxx_messageInfo_Literal.DiscardUnknown(m)
}

var xxx_messageInfo_Literal proto.InternalMessageInfo

type isLiteral_Value interface {
	isLiteral_Value()
}

type Literal_Scalar struct {
	Scalar *Scalar `protobuf:"bytes,1,opt,name=scalar,proto3,oneof"`
}

type Literal_Collection struct {
	Collection *LiteralCollection `protobuf:"bytes,2,opt,name=collection,proto3,oneof"`
}

type Literal_Map struct {
	Map *LiteralMap `protobuf:"bytes,3,opt,name=map,proto3,oneof"`
}

func (*Literal_Scalar) isLiteral_Value() {}

func (*Literal_Collection) isLiteral_Value() {}

func (*Literal_Map) isLiteral_Value() {}

func (m *Literal) GetValue() isLiteral_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Literal) GetScalar() *Scalar {
	if x, ok := m.GetValue().(*Literal_Scalar); ok {
		return x.Scalar
	}
	return nil
}

func (m *Literal) GetCollection() *LiteralCollection {
	if x, ok := m.GetValue().(*Literal_Collection); ok {
		return x.Collection
	}
	return nil
}

func (m *Literal) GetMap() *LiteralMap {
	if x, ok := m.GetValue().(*Literal_Map); ok {
		return x.Map
	}
	return nil
}

func (m *Literal) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Literal) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Literal_Scalar)(nil),
		(*Literal_Collection)(nil),
		(*Literal_Map)(nil),
	}
}

// A collection of literals. This is a workaround since oneofs in proto messages cannot contain a repeated field.
type LiteralCollection struct {
	Literals             []*Literal `protobuf:"bytes,1,rep,name=literals,proto3" json:"literals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LiteralCollection) Reset()         { *m = LiteralCollection{} }
func (m *LiteralCollection) String() string { return proto.CompactTextString(m) }
func (*LiteralCollection) ProtoMessage()    {}
func (*LiteralCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{11}
}

func (m *LiteralCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiteralCollection.Unmarshal(m, b)
}
func (m *LiteralCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiteralCollection.Marshal(b, m, deterministic)
}
func (m *LiteralCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiteralCollection.Merge(m, src)
}
func (m *LiteralCollection) XXX_Size() int {
	return xxx_messageInfo_LiteralCollection.Size(m)
}
func (m *LiteralCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_LiteralCollection.DiscardUnknown(m)
}

var xxx_messageInfo_LiteralCollection proto.InternalMessageInfo

func (m *LiteralCollection) GetLiterals() []*Literal {
	if m != nil {
		return m.Literals
	}
	return nil
}

// A map of literals. This is a workaround since oneofs in proto messages cannot contain a repeated field.
type LiteralMap struct {
	Literals             map[string]*Literal `protobuf:"bytes,1,rep,name=literals,proto3" json:"literals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LiteralMap) Reset()         { *m = LiteralMap{} }
func (m *LiteralMap) String() string { return proto.CompactTextString(m) }
func (*LiteralMap) ProtoMessage()    {}
func (*LiteralMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{12}
}

func (m *LiteralMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiteralMap.Unmarshal(m, b)
}
func (m *LiteralMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiteralMap.Marshal(b, m, deterministic)
}
func (m *LiteralMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiteralMap.Merge(m, src)
}
func (m *LiteralMap) XXX_Size() int {
	return xxx_messageInfo_LiteralMap.Size(m)
}
func (m *LiteralMap) XXX_DiscardUnknown() {
	xxx_messageInfo_LiteralMap.DiscardUnknown(m)
}

var xxx_messageInfo_LiteralMap proto.InternalMessageInfo

func (m *LiteralMap) GetLiterals() map[string]*Literal {
	if m != nil {
		return m.Literals
	}
	return nil
}

// A collection of BindingData items.
type BindingDataCollection struct {
	Bindings             []*BindingData `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BindingDataCollection) Reset()         { *m = BindingDataCollection{} }
func (m *BindingDataCollection) String() string { return proto.CompactTextString(m) }
func (*BindingDataCollection) ProtoMessage()    {}
func (*BindingDataCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{13}
}

func (m *BindingDataCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindingDataCollection.Unmarshal(m, b)
}
func (m *BindingDataCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindingDataCollection.Marshal(b, m, deterministic)
}
func (m *BindingDataCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindingDataCollection.Merge(m, src)
}
func (m *BindingDataCollection) XXX_Size() int {
	return xxx_messageInfo_BindingDataCollection.Size(m)
}
func (m *BindingDataCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_BindingDataCollection.DiscardUnknown(m)
}

var xxx_messageInfo_BindingDataCollection proto.InternalMessageInfo

func (m *BindingDataCollection) GetBindings() []*BindingData {
	if m != nil {
		return m.Bindings
	}
	return nil
}

// A map of BindingData items.
type BindingDataMap struct {
	Bindings             map[string]*BindingData `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BindingDataMap) Reset()         { *m = BindingDataMap{} }
func (m *BindingDataMap) String() string { return proto.CompactTextString(m) }
func (*BindingDataMap) ProtoMessage()    {}
func (*BindingDataMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{14}
}

func (m *BindingDataMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindingDataMap.Unmarshal(m, b)
}
func (m *BindingDataMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindingDataMap.Marshal(b, m, deterministic)
}
func (m *BindingDataMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindingDataMap.Merge(m, src)
}
func (m *BindingDataMap) XXX_Size() int {
	return xxx_messageInfo_BindingDataMap.Size(m)
}
func (m *BindingDataMap) XXX_DiscardUnknown() {
	xxx_messageInfo_BindingDataMap.DiscardUnknown(m)
}

var xxx_messageInfo_BindingDataMap proto.InternalMessageInfo

func (m *BindingDataMap) GetBindings() map[string]*BindingData {
	if m != nil {
		return m.Bindings
	}
	return nil
}

type UnionInfo struct {
	TargetType           *LiteralType `protobuf:"bytes,1,opt,name=targetType,proto3" json:"targetType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UnionInfo) Reset()         { *m = UnionInfo{} }
func (m *UnionInfo) String() string { return proto.CompactTextString(m) }
func (*UnionInfo) ProtoMessage()    {}
func (*UnionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{15}
}

func (m *UnionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnionInfo.Unmarshal(m, b)
}
func (m *UnionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnionInfo.Marshal(b, m, deterministic)
}
func (m *UnionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnionInfo.Merge(m, src)
}
func (m *UnionInfo) XXX_Size() int {
	return xxx_messageInfo_UnionInfo.Size(m)
}
func (m *UnionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UnionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UnionInfo proto.InternalMessageInfo

func (m *UnionInfo) GetTargetType() *LiteralType {
	if m != nil {
		return m.TargetType
	}
	return nil
}

// Specifies either a simple value or a reference to another output.
type BindingData struct {
	// Types that are valid to be assigned to Value:
	//	*BindingData_Scalar
	//	*BindingData_Collection
	//	*BindingData_Promise
	//	*BindingData_Map
	Value                isBindingData_Value `protobuf_oneof:"value"`
	Union                *UnionInfo          `protobuf:"bytes,5,opt,name=union,proto3" json:"union,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BindingData) Reset()         { *m = BindingData{} }
func (m *BindingData) String() string { return proto.CompactTextString(m) }
func (*BindingData) ProtoMessage()    {}
func (*BindingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{16}
}

func (m *BindingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindingData.Unmarshal(m, b)
}
func (m *BindingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindingData.Marshal(b, m, deterministic)
}
func (m *BindingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindingData.Merge(m, src)
}
func (m *BindingData) XXX_Size() int {
	return xxx_messageInfo_BindingData.Size(m)
}
func (m *BindingData) XXX_DiscardUnknown() {
	xxx_messageInfo_BindingData.DiscardUnknown(m)
}

var xxx_messageInfo_BindingData proto.InternalMessageInfo

type isBindingData_Value interface {
	isBindingData_Value()
}

type BindingData_Scalar struct {
	Scalar *Scalar `protobuf:"bytes,1,opt,name=scalar,proto3,oneof"`
}

type BindingData_Collection struct {
	Collection *BindingDataCollection `protobuf:"bytes,2,opt,name=collection,proto3,oneof"`
}

type BindingData_Promise struct {
	Promise *OutputReference `protobuf:"bytes,3,opt,name=promise,proto3,oneof"`
}

type BindingData_Map struct {
	Map *BindingDataMap `protobuf:"bytes,4,opt,name=map,proto3,oneof"`
}

func (*BindingData_Scalar) isBindingData_Value() {}

func (*BindingData_Collection) isBindingData_Value() {}

func (*BindingData_Promise) isBindingData_Value() {}

func (*BindingData_Map) isBindingData_Value() {}

func (m *BindingData) GetValue() isBindingData_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *BindingData) GetScalar() *Scalar {
	if x, ok := m.GetValue().(*BindingData_Scalar); ok {
		return x.Scalar
	}
	return nil
}

func (m *BindingData) GetCollection() *BindingDataCollection {
	if x, ok := m.GetValue().(*BindingData_Collection); ok {
		return x.Collection
	}
	return nil
}

func (m *BindingData) GetPromise() *OutputReference {
	if x, ok := m.GetValue().(*BindingData_Promise); ok {
		return x.Promise
	}
	return nil
}

func (m *BindingData) GetMap() *BindingDataMap {
	if x, ok := m.GetValue().(*BindingData_Map); ok {
		return x.Map
	}
	return nil
}

func (m *BindingData) GetUnion() *UnionInfo {
	if m != nil {
		return m.Union
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BindingData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BindingData_Scalar)(nil),
		(*BindingData_Collection)(nil),
		(*BindingData_Promise)(nil),
		(*BindingData_Map)(nil),
	}
}

// An input/output binding of a variable to either static value or a node output.
type Binding struct {
	// Variable name must match an input/output variable of the node.
	Var string `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	// Data to use to bind this variable.
	Binding              *BindingData `protobuf:"bytes,2,opt,name=binding,proto3" json:"binding,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Binding) Reset()         { *m = Binding{} }
func (m *Binding) String() string { return proto.CompactTextString(m) }
func (*Binding) ProtoMessage()    {}
func (*Binding) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{17}
}

func (m *Binding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binding.Unmarshal(m, b)
}
func (m *Binding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binding.Marshal(b, m, deterministic)
}
func (m *Binding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binding.Merge(m, src)
}
func (m *Binding) XXX_Size() int {
	return xxx_messageInfo_Binding.Size(m)
}
func (m *Binding) XXX_DiscardUnknown() {
	xxx_messageInfo_Binding.DiscardUnknown(m)
}

var xxx_messageInfo_Binding proto.InternalMessageInfo

func (m *Binding) GetVar() string {
	if m != nil {
		return m.Var
	}
	return ""
}

func (m *Binding) GetBinding() *BindingData {
	if m != nil {
		return m.Binding
	}
	return nil
}

// A generic key value pair.
type KeyValuePair struct {
	//required.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	//+optional.
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{18}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Retry strategy associated with an executable unit.
type RetryStrategy struct {
	// Number of retries. Retries will be consumed when the job fails with a recoverable error.
	// The number of retries must be less than or equals to 10.
	Retries              uint32   `protobuf:"varint,5,opt,name=retries,proto3" json:"retries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryStrategy) Reset()         { *m = RetryStrategy{} }
func (m *RetryStrategy) String() string { return proto.CompactTextString(m) }
func (*RetryStrategy) ProtoMessage()    {}
func (*RetryStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1a523b10667cdfb, []int{19}
}

func (m *RetryStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryStrategy.Unmarshal(m, b)
}
func (m *RetryStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryStrategy.Marshal(b, m, deterministic)
}
func (m *RetryStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryStrategy.Merge(m, src)
}
func (m *RetryStrategy) XXX_Size() int {
	return xxx_messageInfo_RetryStrategy.Size(m)
}
func (m *RetryStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_RetryStrategy proto.InternalMessageInfo

func (m *RetryStrategy) GetRetries() uint32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func init() {
	proto.RegisterType((*Primitive)(nil), "flyteidl.core.Primitive")
	proto.RegisterType((*Void)(nil), "flyteidl.core.Void")
	proto.RegisterType((*Blob)(nil), "flyteidl.core.Blob")
	proto.RegisterType((*BlobMetadata)(nil), "flyteidl.core.BlobMetadata")
	proto.RegisterType((*Binary)(nil), "flyteidl.core.Binary")
	proto.RegisterType((*Schema)(nil), "flyteidl.core.Schema")
	proto.RegisterType((*Union)(nil), "flyteidl.core.Union")
	proto.RegisterType((*StructuredDatasetMetadata)(nil), "flyteidl.core.StructuredDatasetMetadata")
	proto.RegisterType((*StructuredDataset)(nil), "flyteidl.core.StructuredDataset")
	proto.RegisterType((*Scalar)(nil), "flyteidl.core.Scalar")
	proto.RegisterType((*Literal)(nil), "flyteidl.core.Literal")
	proto.RegisterType((*LiteralCollection)(nil), "flyteidl.core.LiteralCollection")
	proto.RegisterType((*LiteralMap)(nil), "flyteidl.core.LiteralMap")
	proto.RegisterMapType((map[string]*Literal)(nil), "flyteidl.core.LiteralMap.LiteralsEntry")
	proto.RegisterType((*BindingDataCollection)(nil), "flyteidl.core.BindingDataCollection")
	proto.RegisterType((*BindingDataMap)(nil), "flyteidl.core.BindingDataMap")
	proto.RegisterMapType((map[string]*BindingData)(nil), "flyteidl.core.BindingDataMap.BindingsEntry")
	proto.RegisterType((*UnionInfo)(nil), "flyteidl.core.UnionInfo")
	proto.RegisterType((*BindingData)(nil), "flyteidl.core.BindingData")
	proto.RegisterType((*Binding)(nil), "flyteidl.core.Binding")
	proto.RegisterType((*KeyValuePair)(nil), "flyteidl.core.KeyValuePair")
	proto.RegisterType((*RetryStrategy)(nil), "flyteidl.core.RetryStrategy")
}

func init() { proto.RegisterFile("flyteidl/core/literals.proto", fileDescriptor_a1a523b10667cdfb) }

var fileDescriptor_a1a523b10667cdfb = []byte{
	// 1066 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xf6, 0xda, 0x8e, 0x7f, 0x8e, 0x13, 0x44, 0x86, 0x84, 0x6e, 0x4c, 0x29, 0x66, 0xa9, 0x84,
	0xab, 0x12, 0xbb, 0xa4, 0x55, 0x88, 0xc2, 0x9d, 0x9b, 0x12, 0x57, 0x50, 0xb5, 0xd9, 0x94, 0x22,
	0x21, 0xa4, 0x68, 0x6c, 0x4f, 0x36, 0xa3, 0xac, 0x77, 0xac, 0xd9, 0x71, 0xa4, 0x7d, 0x02, 0xde,
	0x84, 0x4b, 0x2e, 0x78, 0x0c, 0x9e, 0x86, 0x47, 0x40, 0xf3, 0xb7, 0x5e, 0xef, 0x6e, 0xd2, 0xf6,
	0x6e, 0x76, 0xce, 0x77, 0xfe, 0xcf, 0x77, 0x76, 0xe0, 0xfe, 0x65, 0x98, 0x08, 0x42, 0x67, 0xe1,
	0x70, 0xca, 0x38, 0x19, 0x86, 0x54, 0x10, 0x8e, 0xc3, 0x78, 0xb0, 0xe0, 0x4c, 0x30, 0xb4, 0x65,
	0xa5, 0x03, 0x29, 0xed, 0x7e, 0x15, 0x30, 0x16, 0x84, 0x64, 0xa8, 0x84, 0x93, 0xe5, 0xe5, 0x50,
	0xd0, 0x39, 0x89, 0x05, 0x9e, 0x2f, 0x34, 0xbe, 0xfb, 0x20, 0x0f, 0x98, 0x2d, 0x39, 0x16, 0x94,
	0x45, 0x46, 0x7e, 0x3f, 0x2f, 0x8f, 0x05, 0x5f, 0x4e, 0x85, 0x91, 0xee, 0xad, 0xc7, 0x22, 0x92,
	0x05, 0x31, 0x81, 0x78, 0x7f, 0x56, 0xa1, 0xfd, 0x86, 0xd3, 0x39, 0x15, 0xf4, 0x86, 0xa0, 0x2e,
	0x34, 0x69, 0x24, 0x48, 0x40, 0xb8, 0xeb, 0xf4, 0x9c, 0x7e, 0x6d, 0x5c, 0xf1, 0xed, 0x05, 0xfa,
	0x1a, 0x3a, 0x97, 0x21, 0xc3, 0xe2, 0xe2, 0x06, 0x87, 0x4b, 0xe2, 0x56, 0x7b, 0x4e, 0xdf, 0x19,
	0x57, 0x7c, 0x50, 0x97, 0xef, 0xe4, 0x1d, 0xfa, 0x06, 0x36, 0x63, 0xc1, 0x69, 0x14, 0x18, 0x4c,
	0xad, 0xe7, 0xf4, 0xdb, 0xe3, 0x8a, 0xdf, 0xd1, 0xb7, 0x1a, 0xd4, 0x85, 0xe6, 0x84, 0xb1, 0x90,
	0xe0, 0xc8, 0xad, 0xf7, 0x9c, 0x7e, 0x4b, 0xfa, 0x30, 0x17, 0xe8, 0x08, 0x5a, 0x33, 0x2c, 0x88,
	0xcc, 0xde, 0xdd, 0xe8, 0x39, 0xfd, 0xce, 0x41, 0x77, 0xa0, 0x33, 0x1b, 0xd8, 0xcc, 0x06, 0x6f,
	0x6d, 0x69, 0xc6, 0x15, 0x3f, 0x45, 0xa3, 0x1f, 0xa0, 0x65, 0x4b, 0xe2, 0x36, 0x94, 0xe6, 0x5e,
	0x41, 0xf3, 0xc4, 0x00, 0x94, 0xa2, 0x39, 0x8f, 0x9a, 0xb0, 0xa1, 0x82, 0xf5, 0x1a, 0x50, 0x7f,
	0xc7, 0xe8, 0xcc, 0x3b, 0x83, 0xfa, 0x28, 0x64, 0x13, 0x69, 0x71, 0x4e, 0x04, 0x9e, 0x61, 0x81,
	0x55, 0x31, 0x3a, 0x07, 0x5f, 0x0c, 0xd6, 0xba, 0x36, 0x90, 0xb0, 0x57, 0x06, 0xe2, 0xa7, 0x60,
	0xf4, 0x29, 0xd4, 0x96, 0x9c, 0xea, 0xe4, 0x7d, 0x79, 0xf4, 0x7e, 0x84, 0xcd, 0x2c, 0x16, 0x3d,
	0x86, 0xba, 0xec, 0x81, 0x31, 0x7b, 0xaf, 0xc4, 0xec, 0xdb, 0x64, 0x41, 0x7c, 0x05, 0xf2, 0x9e,
	0x40, 0x63, 0x44, 0x23, 0xcc, 0x13, 0xb4, 0x63, 0x42, 0x55, 0x7a, 0x9b, 0xbe, 0xfe, 0x90, 0xee,
	0x04, 0x0e, 0x54, 0x3f, 0xda, 0xbe, 0x3c, 0x7a, 0x2f, 0xa1, 0x71, 0x3e, 0xbd, 0x22, 0xf3, 0x34,
	0x14, 0x27, 0x0d, 0x05, 0xed, 0x1b, 0xd7, 0x35, 0x53, 0xa3, 0x75, 0xd7, 0x5a, 0x2d, 0xe3, 0x9c,
	0xc0, 0xc6, 0xaf, 0x11, 0x65, 0x11, 0xfa, 0x2e, 0xeb, 0xbb, 0x73, 0xf0, 0x79, 0x4e, 0xf1, 0x17,
	0x3d, 0xde, 0x36, 0xa6, 0x81, 0xf1, 0x52, 0x35, 0x3d, 0x2c, 0x05, 0x67, 0xdc, 0x24, 0xb0, 0x77,
	0xae, 0x06, 0x76, 0xc9, 0xc9, 0xec, 0x04, 0x0b, 0x1c, 0x13, 0x91, 0x56, 0xeb, 0x0f, 0xb8, 0x17,
	0xa7, 0xc2, 0x8b, 0x99, 0x96, 0x5e, 0x64, 0x0a, 0xf8, 0x30, 0x9f, 0x45, 0xde, 0x94, 0xf2, 0xb4,
	0x1b, 0x97, 0x5d, 0x7b, 0xd7, 0xb0, 0x5d, 0xc0, 0x97, 0xd4, 0xed, 0x24, 0x33, 0x0d, 0x3a, 0xab,
	0xfe, 0xfb, 0xbc, 0x16, 0x47, 0xc3, 0xfb, 0xaf, 0x26, 0x5b, 0x83, 0x43, 0xcc, 0xd1, 0x11, 0xb4,
	0x17, 0x96, 0x77, 0x26, 0x0f, 0x37, 0x67, 0x31, 0xe5, 0xe5, 0xb8, 0xe2, 0xaf, 0xc0, 0xe8, 0x11,
	0xd4, 0x27, 0x21, 0x9b, 0x98, 0x30, 0x3e, 0x2b, 0x99, 0x9e, 0x71, 0xc5, 0x57, 0x10, 0x34, 0x84,
	0xc6, 0x44, 0xcd, 0x8e, 0xe9, 0xf7, 0x6e, 0x1e, 0xac, 0x84, 0xe3, 0x8a, 0x6f, 0x60, 0x52, 0x21,
	0x56, 0x33, 0xa0, 0xb8, 0x59, 0x54, 0xd0, 0x03, 0x22, 0x15, 0x34, 0x0c, 0x1d, 0x40, 0x3b, 0x62,
	0x11, 0xd1, 0xed, 0xd8, 0x28, 0x8d, 0x48, 0xb2, 0x4a, 0x52, 0x4e, 0xe2, 0x64, 0xc9, 0xe5, 0x2c,
	0x11, 0xce, 0x19, 0x37, 0x44, 0xdd, 0xc9, 0xe1, 0x5f, 0x48, 0xd9, 0xb8, 0xe2, 0x6b, 0x10, 0x7a,
	0x0a, 0xcd, 0x80, 0x44, 0x84, 0xd3, 0xa9, 0xdb, 0x34, 0x7c, 0xc9, 0x13, 0x5b, 0x97, 0x5e, 0x2e,
	0x12, 0x83, 0x44, 0x67, 0x80, 0x8a, 0x33, 0xe3, 0xb6, 0x94, 0x7e, 0xef, 0x7d, 0x8d, 0x1b, 0x57,
	0xfc, 0xed, 0xc2, 0xb0, 0xc8, 0xa8, 0x97, 0x92, 0x0a, 0x6e, 0xbb, 0x34, 0x6a, 0x45, 0x13, 0x19,
	0xb5, 0x02, 0xad, 0xd6, 0xca, 0xbf, 0x0e, 0x34, 0xcd, 0xc0, 0xeb, 0xea, 0xca, 0xee, 0x9b, 0x86,
	0x17, 0xab, 0x2b, 0x85, 0xba, 0xba, 0x6a, 0x48, 0x46, 0x00, 0x53, 0x16, 0x86, 0x64, 0xaa, 0xf6,
	0x5a, 0xb5, 0x34, 0x7c, 0x63, 0xfc, 0x79, 0x8a, 0x93, 0x4b, 0x79, 0xa5, 0x85, 0xf6, 0xa1, 0x36,
	0xc7, 0x8b, 0x5b, 0x08, 0x6f, 0x94, 0x5f, 0x61, 0xb9, 0x4d, 0x25, 0x0e, 0x21, 0xa8, 0x5f, 0xe1,
	0xf8, 0x4a, 0xf5, 0xbf, 0xed, 0xab, 0xf3, 0x2a, 0x99, 0x53, 0xd8, 0x2e, 0xb8, 0x43, 0x07, 0xd0,
	0xb2, 0x7f, 0x37, 0xd7, 0xe9, 0xd5, 0xee, 0xd8, 0x0e, 0x29, 0xce, 0xfb, 0xcb, 0x01, 0x58, 0xf9,
	0x46, 0xcf, 0x0b, 0x26, 0xbe, 0xbd, 0x35, 0x50, 0x7b, 0x8c, 0x5f, 0x44, 0x82, 0x27, 0x2b, 0x9b,
	0xdd, 0x73, 0xd8, 0x5a, 0x13, 0x49, 0x16, 0x5f, 0x93, 0xc4, 0xb2, 0xf8, 0x9a, 0x24, 0xab, 0x2d,
	0x56, 0xfd, 0x80, 0x2d, 0x76, 0x5c, 0x3d, 0x72, 0xbc, 0xd7, 0xb0, 0x3b, 0xa2, 0xd1, 0x8c, 0x46,
	0x81, 0x9c, 0x83, 0x4c, 0xd6, 0x87, 0xd0, 0x9a, 0x68, 0x81, 0x0d, 0xb9, 0x5b, 0x24, 0x97, 0xd5,
	0xf3, 0x53, 0xac, 0xf7, 0x8f, 0x03, 0x9f, 0x64, 0x24, 0x32, 0xfb, 0xd3, 0x82, 0xa9, 0xc7, 0xb7,
	0x9b, 0x92, 0x15, 0x30, 0x9f, 0xb6, 0x02, 0x56, 0xb9, 0xfb, 0x1b, 0x6c, 0xad, 0x89, 0x4a, 0x2a,
	0xf0, 0x64, 0xbd, 0x02, 0x77, 0xc5, 0x9c, 0xa9, 0xc2, 0x29, 0xb4, 0xd5, 0x7c, 0xbf, 0x8c, 0x2e,
	0x19, 0x3a, 0x06, 0x10, 0x98, 0x07, 0x7a, 0x7f, 0x9a, 0x49, 0xbe, 0x6b, 0xc5, 0x67, 0xd0, 0xde,
	0xdf, 0x55, 0xe8, 0x64, 0x7c, 0x7c, 0x3c, 0x23, 0x7e, 0x2a, 0x61, 0xc4, 0xc3, 0xdb, 0x93, 0xb8,
	0x95, 0x15, 0xc7, 0xd0, 0x5c, 0x70, 0x36, 0xa7, 0xb1, 0xfd, 0x15, 0x3e, 0xc8, 0x19, 0x79, 0xbd,
	0x14, 0x8b, 0xa5, 0xf0, 0xc9, 0x25, 0xe1, 0x24, 0x9a, 0xca, 0x15, 0x6c, 0x15, 0xd0, 0xf7, 0x9a,
	0x51, 0x7a, 0x43, 0x7e, 0x79, 0x67, 0xab, 0x2c, 0xab, 0x06, 0x76, 0x79, 0x6c, 0x94, 0x6e, 0xfa,
	0xb4, 0xb8, 0x85, 0xf5, 0x71, 0x06, 0x4d, 0x63, 0x51, 0x36, 0xf3, 0xc6, 0x14, 0xaa, 0xed, 0xcb,
	0x23, 0x7a, 0x06, 0x4d, 0xd3, 0xfb, 0x0f, 0x68, 0xa7, 0x85, 0x7a, 0x87, 0xb0, 0xf9, 0x33, 0x49,
	0xd4, 0x63, 0xec, 0x0d, 0xa6, 0xbc, 0x64, 0x48, 0x76, 0xb2, 0x43, 0xd2, 0x36, 0x83, 0xe0, 0x3d,
	0x82, 0x2d, 0x9f, 0x08, 0x9e, 0x9c, 0x0b, 0x8e, 0x05, 0x09, 0x12, 0xe4, 0x42, 0x93, 0x13, 0xc1,
	0x29, 0x89, 0x55, 0x5a, 0x5b, 0xbe, 0xfd, 0x1c, 0x1d, 0xfe, 0xfe, 0x2c, 0xa0, 0xe2, 0x6a, 0x39,
	0x19, 0x4c, 0xd9, 0x7c, 0xa8, 0x62, 0x62, 0x3c, 0x18, 0xa6, 0xcf, 0xd0, 0x80, 0x44, 0xc3, 0xc5,
	0x64, 0x3f, 0x60, 0xc3, 0xb5, 0x97, 0xe9, 0xa4, 0xa1, 0x56, 0xfa, 0xd3, 0xff, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xea, 0x75, 0xf9, 0xee, 0x3d, 0x0b, 0x00, 0x00,
}
