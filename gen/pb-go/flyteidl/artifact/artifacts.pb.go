// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/artifact/artifacts.proto

package artifact

import (
	context "context"
	fmt "fmt"
	core "github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/core"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Artifact struct {
	ArtifactId *core.ArtifactID `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// This is unique access url generated by the service based on the ArtifactKey.
	Uri                  string        `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Spec                 *ArtifactSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{0}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetArtifactId() *core.ArtifactID {
	if m != nil {
		return m.ArtifactId
	}
	return nil
}

func (m *Artifact) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Artifact) GetSpec() *ArtifactSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type CreateArtifactRequest struct {
	// Specify just project/domain on creation
	ArtifactKey          *core.ArtifactKey `protobuf:"bytes,1,opt,name=artifact_key,json=artifactKey,proto3" json:"artifact_key,omitempty"`
	Spec                 *ArtifactSpec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateArtifactRequest) Reset()         { *m = CreateArtifactRequest{} }
func (m *CreateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactRequest) ProtoMessage()    {}
func (*CreateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{1}
}

func (m *CreateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactRequest.Unmarshal(m, b)
}
func (m *CreateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *CreateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactRequest.Merge(m, src)
}
func (m *CreateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactRequest.Size(m)
}
func (m *CreateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactRequest proto.InternalMessageInfo

func (m *CreateArtifactRequest) GetArtifactKey() *core.ArtifactKey {
	if m != nil {
		return m.ArtifactKey
	}
	return nil
}

func (m *CreateArtifactRequest) GetSpec() *ArtifactSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type ArtifactSpec struct {
	Value *core.Literal `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// This type will not form part of the artifact key, so for user-named artifacts, if the user changes the type, but
	// forgets to change the name, that is okay. And the reason why this is a separate field is because adding the
	// type to all Literals is a lot of work.
	Type *core.LiteralType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// When you want to set tags on creation.
	Tags []*Tag `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// Set here when you want to set an alias on creation.
	// Aliases created will have the same project/domain as the artifact.
	Aliases []*core.ArtifactAlias `protobuf:"bytes,4,rep,name=aliases,proto3" json:"aliases,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*ArtifactSpec_TaskExecution
	//	*ArtifactSpec_Execution
	//	*ArtifactSpec_Principal
	Source               isArtifactSpec_Source `protobuf_oneof:"source"`
	ShortDescription     string                `protobuf:"bytes,8,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription      string                `protobuf:"bytes,9,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ArtifactSpec) Reset()         { *m = ArtifactSpec{} }
func (m *ArtifactSpec) String() string { return proto.CompactTextString(m) }
func (*ArtifactSpec) ProtoMessage()    {}
func (*ArtifactSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{2}
}

func (m *ArtifactSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactSpec.Unmarshal(m, b)
}
func (m *ArtifactSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactSpec.Marshal(b, m, deterministic)
}
func (m *ArtifactSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactSpec.Merge(m, src)
}
func (m *ArtifactSpec) XXX_Size() int {
	return xxx_messageInfo_ArtifactSpec.Size(m)
}
func (m *ArtifactSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactSpec proto.InternalMessageInfo

func (m *ArtifactSpec) GetValue() *core.Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ArtifactSpec) GetType() *core.LiteralType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ArtifactSpec) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ArtifactSpec) GetAliases() []*core.ArtifactAlias {
	if m != nil {
		return m.Aliases
	}
	return nil
}

type isArtifactSpec_Source interface {
	isArtifactSpec_Source()
}

type ArtifactSpec_TaskExecution struct {
	TaskExecution *core.TaskExecutionIdentifier `protobuf:"bytes,5,opt,name=task_execution,json=taskExecution,proto3,oneof"`
}

type ArtifactSpec_Execution struct {
	Execution *core.WorkflowExecutionIdentifier `protobuf:"bytes,6,opt,name=execution,proto3,oneof"`
}

type ArtifactSpec_Principal struct {
	Principal string `protobuf:"bytes,7,opt,name=principal,proto3,oneof"`
}

func (*ArtifactSpec_TaskExecution) isArtifactSpec_Source() {}

func (*ArtifactSpec_Execution) isArtifactSpec_Source() {}

func (*ArtifactSpec_Principal) isArtifactSpec_Source() {}

func (m *ArtifactSpec) GetSource() isArtifactSpec_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ArtifactSpec) GetTaskExecution() *core.TaskExecutionIdentifier {
	if x, ok := m.GetSource().(*ArtifactSpec_TaskExecution); ok {
		return x.TaskExecution
	}
	return nil
}

func (m *ArtifactSpec) GetExecution() *core.WorkflowExecutionIdentifier {
	if x, ok := m.GetSource().(*ArtifactSpec_Execution); ok {
		return x.Execution
	}
	return nil
}

func (m *ArtifactSpec) GetPrincipal() string {
	if x, ok := m.GetSource().(*ArtifactSpec_Principal); ok {
		return x.Principal
	}
	return ""
}

func (m *ArtifactSpec) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *ArtifactSpec) GetLongDescription() string {
	if m != nil {
		return m.LongDescription
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ArtifactSpec) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ArtifactSpec_TaskExecution)(nil),
		(*ArtifactSpec_Execution)(nil),
		(*ArtifactSpec_Principal)(nil),
	}
}

type CreateArtifactResponse struct {
	Artifact             *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateArtifactResponse) Reset()         { *m = CreateArtifactResponse{} }
func (m *CreateArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactResponse) ProtoMessage()    {}
func (*CreateArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{3}
}

func (m *CreateArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactResponse.Unmarshal(m, b)
}
func (m *CreateArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactResponse.Marshal(b, m, deterministic)
}
func (m *CreateArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactResponse.Merge(m, src)
}
func (m *CreateArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactResponse.Size(m)
}
func (m *CreateArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactResponse proto.InternalMessageInfo

func (m *CreateArtifactResponse) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type GetArtifactRequest struct {
	// Types that are valid to be assigned to Identifier:
	//	*GetArtifactRequest_ArtifactKey
	//	*GetArtifactRequest_ArtifactId
	//	*GetArtifactRequest_Uri
	Identifier isGetArtifactRequest_Identifier `protobuf_oneof:"identifier"`
	// If false, then long_description is not returned.
	Details              bool     `protobuf:"varint,4,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArtifactRequest) Reset()         { *m = GetArtifactRequest{} }
func (m *GetArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtifactRequest) ProtoMessage()    {}
func (*GetArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{4}
}

func (m *GetArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactRequest.Unmarshal(m, b)
}
func (m *GetArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactRequest.Marshal(b, m, deterministic)
}
func (m *GetArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactRequest.Merge(m, src)
}
func (m *GetArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_GetArtifactRequest.Size(m)
}
func (m *GetArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactRequest proto.InternalMessageInfo

type isGetArtifactRequest_Identifier interface {
	isGetArtifactRequest_Identifier()
}

type GetArtifactRequest_ArtifactKey struct {
	ArtifactKey *core.ArtifactKey `protobuf:"bytes,1,opt,name=artifact_key,json=artifactKey,proto3,oneof"`
}

type GetArtifactRequest_ArtifactId struct {
	ArtifactId *core.ArtifactID `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId,proto3,oneof"`
}

type GetArtifactRequest_Uri struct {
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3,oneof"`
}

func (*GetArtifactRequest_ArtifactKey) isGetArtifactRequest_Identifier() {}

func (*GetArtifactRequest_ArtifactId) isGetArtifactRequest_Identifier() {}

func (*GetArtifactRequest_Uri) isGetArtifactRequest_Identifier() {}

func (m *GetArtifactRequest) GetIdentifier() isGetArtifactRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *GetArtifactRequest) GetArtifactKey() *core.ArtifactKey {
	if x, ok := m.GetIdentifier().(*GetArtifactRequest_ArtifactKey); ok {
		return x.ArtifactKey
	}
	return nil
}

func (m *GetArtifactRequest) GetArtifactId() *core.ArtifactID {
	if x, ok := m.GetIdentifier().(*GetArtifactRequest_ArtifactId); ok {
		return x.ArtifactId
	}
	return nil
}

func (m *GetArtifactRequest) GetUri() string {
	if x, ok := m.GetIdentifier().(*GetArtifactRequest_Uri); ok {
		return x.Uri
	}
	return ""
}

func (m *GetArtifactRequest) GetDetails() bool {
	if m != nil {
		return m.Details
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetArtifactRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetArtifactRequest_ArtifactKey)(nil),
		(*GetArtifactRequest_ArtifactId)(nil),
		(*GetArtifactRequest_Uri)(nil),
	}
}

// Tags are general key/value pairs associated with an Artifact. They can be used to search and filter things.
// Tags have to be unique by key for a given artifact. That is, for a given project/domain/name/version/key, there
// can only be one value, obviously.
type Tag struct {
	// tag types can be user specified if they want, though we'd probably recommend sticking with some constants
	// that we embed in various libraries.
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{5}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Add tags on an artifact.
type AddTagsRequest struct {
	ArtifactId *core.ArtifactID `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// Why is this a repeated and not a map? Not sure. Just what ketan and I ended up on when we were quickly
	// hacking this out.
	Tags                 []*Tag   `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagsRequest) Reset()         { *m = AddTagsRequest{} }
func (m *AddTagsRequest) String() string { return proto.CompactTextString(m) }
func (*AddTagsRequest) ProtoMessage()    {}
func (*AddTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{6}
}

func (m *AddTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagsRequest.Unmarshal(m, b)
}
func (m *AddTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagsRequest.Marshal(b, m, deterministic)
}
func (m *AddTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagsRequest.Merge(m, src)
}
func (m *AddTagsRequest) XXX_Size() int {
	return xxx_messageInfo_AddTagsRequest.Size(m)
}
func (m *AddTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagsRequest proto.InternalMessageInfo

func (m *AddTagsRequest) GetArtifactId() *core.ArtifactID {
	if m != nil {
		return m.ArtifactId
	}
	return nil
}

func (m *AddTagsRequest) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type AddTagsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagsResponse) Reset()         { *m = AddTagsResponse{} }
func (m *AddTagsResponse) String() string { return proto.CompactTextString(m) }
func (*AddTagsResponse) ProtoMessage()    {}
func (*AddTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{7}
}

func (m *AddTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagsResponse.Unmarshal(m, b)
}
func (m *AddTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagsResponse.Marshal(b, m, deterministic)
}
func (m *AddTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagsResponse.Merge(m, src)
}
func (m *AddTagsResponse) XXX_Size() int {
	return xxx_messageInfo_AddTagsResponse.Size(m)
}
func (m *AddTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagsResponse proto.InternalMessageInfo

// Probably will not do value match. Just remove by key.
type RemoveTagsRequest struct {
	ArtifactId           *core.ArtifactID `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	Tags                 []*Tag           `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RemoveTagsRequest) Reset()         { *m = RemoveTagsRequest{} }
func (m *RemoveTagsRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveTagsRequest) ProtoMessage()    {}
func (*RemoveTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{8}
}

func (m *RemoveTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTagsRequest.Unmarshal(m, b)
}
func (m *RemoveTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTagsRequest.Marshal(b, m, deterministic)
}
func (m *RemoveTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTagsRequest.Merge(m, src)
}
func (m *RemoveTagsRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveTagsRequest.Size(m)
}
func (m *RemoveTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTagsRequest proto.InternalMessageInfo

func (m *RemoveTagsRequest) GetArtifactId() *core.ArtifactID {
	if m != nil {
		return m.ArtifactId
	}
	return nil
}

func (m *RemoveTagsRequest) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type RemoveTagsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTagsResponse) Reset()         { *m = RemoveTagsResponse{} }
func (m *RemoveTagsResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveTagsResponse) ProtoMessage()    {}
func (*RemoveTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{9}
}

func (m *RemoveTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTagsResponse.Unmarshal(m, b)
}
func (m *RemoveTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTagsResponse.Marshal(b, m, deterministic)
}
func (m *RemoveTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTagsResponse.Merge(m, src)
}
func (m *RemoveTagsResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveTagsResponse.Size(m)
}
func (m *RemoveTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTagsResponse proto.InternalMessageInfo

type ListArtifactNamesRequest struct {
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArtifactNamesRequest) Reset()         { *m = ListArtifactNamesRequest{} }
func (m *ListArtifactNamesRequest) String() string { return proto.CompactTextString(m) }
func (*ListArtifactNamesRequest) ProtoMessage()    {}
func (*ListArtifactNamesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{10}
}

func (m *ListArtifactNamesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactNamesRequest.Unmarshal(m, b)
}
func (m *ListArtifactNamesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactNamesRequest.Marshal(b, m, deterministic)
}
func (m *ListArtifactNamesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactNamesRequest.Merge(m, src)
}
func (m *ListArtifactNamesRequest) XXX_Size() int {
	return xxx_messageInfo_ListArtifactNamesRequest.Size(m)
}
func (m *ListArtifactNamesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactNamesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactNamesRequest proto.InternalMessageInfo

func (m *ListArtifactNamesRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *ListArtifactNamesRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type ListArtifactNamesResponse struct {
	ArtifactKeys         []*core.ArtifactKey `protobuf:"bytes,1,rep,name=artifact_keys,json=artifactKeys,proto3" json:"artifact_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListArtifactNamesResponse) Reset()         { *m = ListArtifactNamesResponse{} }
func (m *ListArtifactNamesResponse) String() string { return proto.CompactTextString(m) }
func (*ListArtifactNamesResponse) ProtoMessage()    {}
func (*ListArtifactNamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{11}
}

func (m *ListArtifactNamesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactNamesResponse.Unmarshal(m, b)
}
func (m *ListArtifactNamesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactNamesResponse.Marshal(b, m, deterministic)
}
func (m *ListArtifactNamesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactNamesResponse.Merge(m, src)
}
func (m *ListArtifactNamesResponse) XXX_Size() int {
	return xxx_messageInfo_ListArtifactNamesResponse.Size(m)
}
func (m *ListArtifactNamesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactNamesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactNamesResponse proto.InternalMessageInfo

func (m *ListArtifactNamesResponse) GetArtifactKeys() []*core.ArtifactKey {
	if m != nil {
		return m.ArtifactKeys
	}
	return nil
}

type ListArtifactsRequest struct {
	ArtifactKey          *core.ArtifactKey `protobuf:"bytes,1,opt,name=artifact_key,json=artifactKey,proto3" json:"artifact_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListArtifactsRequest) Reset()         { *m = ListArtifactsRequest{} }
func (m *ListArtifactsRequest) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsRequest) ProtoMessage()    {}
func (*ListArtifactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{12}
}

func (m *ListArtifactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsRequest.Unmarshal(m, b)
}
func (m *ListArtifactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsRequest.Marshal(b, m, deterministic)
}
func (m *ListArtifactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsRequest.Merge(m, src)
}
func (m *ListArtifactsRequest) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsRequest.Size(m)
}
func (m *ListArtifactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsRequest proto.InternalMessageInfo

func (m *ListArtifactsRequest) GetArtifactKey() *core.ArtifactKey {
	if m != nil {
		return m.ArtifactKey
	}
	return nil
}

type ListArtifactsResponse struct {
	Artifacts            []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListArtifactsResponse) Reset()         { *m = ListArtifactsResponse{} }
func (m *ListArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsResponse) ProtoMessage()    {}
func (*ListArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{13}
}

func (m *ListArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsResponse.Unmarshal(m, b)
}
func (m *ListArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *ListArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsResponse.Merge(m, src)
}
func (m *ListArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsResponse.Size(m)
}
func (m *ListArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsResponse proto.InternalMessageInfo

func (m *ListArtifactsResponse) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

// Aliases identify a particular version of an artifact. They are different than tags in that they
// have to be unique for a given artifact project/domain/name. That is, for a given project/domain/name/kind,
// at most one version can have any given value at any point.
type CreateAliasRequest struct {
	ArtifactKey *core.ArtifactKey   `protobuf:"bytes,1,opt,name=artifact_key,json=artifactKey,proto3" json:"artifact_key,omitempty"`
	Alias       *core.ArtifactAlias `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	// If true, and another version already has the specified kind/value, set this version instead.
	Overwrite            bool     `protobuf:"varint,3,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAliasRequest) Reset()         { *m = CreateAliasRequest{} }
func (m *CreateAliasRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAliasRequest) ProtoMessage()    {}
func (*CreateAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{14}
}

func (m *CreateAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAliasRequest.Unmarshal(m, b)
}
func (m *CreateAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAliasRequest.Marshal(b, m, deterministic)
}
func (m *CreateAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAliasRequest.Merge(m, src)
}
func (m *CreateAliasRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAliasRequest.Size(m)
}
func (m *CreateAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAliasRequest proto.InternalMessageInfo

func (m *CreateAliasRequest) GetArtifactKey() *core.ArtifactKey {
	if m != nil {
		return m.ArtifactKey
	}
	return nil
}

func (m *CreateAliasRequest) GetAlias() *core.ArtifactAlias {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *CreateAliasRequest) GetOverwrite() bool {
	if m != nil {
		return m.Overwrite
	}
	return false
}

type CreateAliasResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAliasResponse) Reset()         { *m = CreateAliasResponse{} }
func (m *CreateAliasResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAliasResponse) ProtoMessage()    {}
func (*CreateAliasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{15}
}

func (m *CreateAliasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAliasResponse.Unmarshal(m, b)
}
func (m *CreateAliasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAliasResponse.Marshal(b, m, deterministic)
}
func (m *CreateAliasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAliasResponse.Merge(m, src)
}
func (m *CreateAliasResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAliasResponse.Size(m)
}
func (m *CreateAliasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAliasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAliasResponse proto.InternalMessageInfo

// This removes an exact match only. That is, the kind/value in the Alias have to be set on the version for the
// given core.ArtifactKey.
type RemoveAliasRequest struct {
	ArtifactKey          *core.ArtifactKey   `protobuf:"bytes,1,opt,name=artifact_key,json=artifactKey,proto3" json:"artifact_key,omitempty"`
	Alias                *core.ArtifactAlias `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RemoveAliasRequest) Reset()         { *m = RemoveAliasRequest{} }
func (m *RemoveAliasRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveAliasRequest) ProtoMessage()    {}
func (*RemoveAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{16}
}

func (m *RemoveAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAliasRequest.Unmarshal(m, b)
}
func (m *RemoveAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAliasRequest.Marshal(b, m, deterministic)
}
func (m *RemoveAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAliasRequest.Merge(m, src)
}
func (m *RemoveAliasRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveAliasRequest.Size(m)
}
func (m *RemoveAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAliasRequest proto.InternalMessageInfo

func (m *RemoveAliasRequest) GetArtifactKey() *core.ArtifactKey {
	if m != nil {
		return m.ArtifactKey
	}
	return nil
}

func (m *RemoveAliasRequest) GetAlias() *core.ArtifactAlias {
	if m != nil {
		return m.Alias
	}
	return nil
}

type RemoveAliasResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAliasResponse) Reset()         { *m = RemoveAliasResponse{} }
func (m *RemoveAliasResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveAliasResponse) ProtoMessage()    {}
func (*RemoveAliasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_804518da5936dedb, []int{17}
}

func (m *RemoveAliasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAliasResponse.Unmarshal(m, b)
}
func (m *RemoveAliasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAliasResponse.Marshal(b, m, deterministic)
}
func (m *RemoveAliasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAliasResponse.Merge(m, src)
}
func (m *RemoveAliasResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveAliasResponse.Size(m)
}
func (m *RemoveAliasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAliasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAliasResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Artifact)(nil), "flyteidl.artifact.Artifact")
	proto.RegisterType((*CreateArtifactRequest)(nil), "flyteidl.artifact.CreateArtifactRequest")
	proto.RegisterType((*ArtifactSpec)(nil), "flyteidl.artifact.ArtifactSpec")
	proto.RegisterType((*CreateArtifactResponse)(nil), "flyteidl.artifact.CreateArtifactResponse")
	proto.RegisterType((*GetArtifactRequest)(nil), "flyteidl.artifact.GetArtifactRequest")
	proto.RegisterType((*Tag)(nil), "flyteidl.artifact.Tag")
	proto.RegisterType((*AddTagsRequest)(nil), "flyteidl.artifact.AddTagsRequest")
	proto.RegisterType((*AddTagsResponse)(nil), "flyteidl.artifact.AddTagsResponse")
	proto.RegisterType((*RemoveTagsRequest)(nil), "flyteidl.artifact.RemoveTagsRequest")
	proto.RegisterType((*RemoveTagsResponse)(nil), "flyteidl.artifact.RemoveTagsResponse")
	proto.RegisterType((*ListArtifactNamesRequest)(nil), "flyteidl.artifact.ListArtifactNamesRequest")
	proto.RegisterType((*ListArtifactNamesResponse)(nil), "flyteidl.artifact.ListArtifactNamesResponse")
	proto.RegisterType((*ListArtifactsRequest)(nil), "flyteidl.artifact.ListArtifactsRequest")
	proto.RegisterType((*ListArtifactsResponse)(nil), "flyteidl.artifact.ListArtifactsResponse")
	proto.RegisterType((*CreateAliasRequest)(nil), "flyteidl.artifact.CreateAliasRequest")
	proto.RegisterType((*CreateAliasResponse)(nil), "flyteidl.artifact.CreateAliasResponse")
	proto.RegisterType((*RemoveAliasRequest)(nil), "flyteidl.artifact.RemoveAliasRequest")
	proto.RegisterType((*RemoveAliasResponse)(nil), "flyteidl.artifact.RemoveAliasResponse")
}

func init() { proto.RegisterFile("flyteidl/artifact/artifacts.proto", fileDescriptor_804518da5936dedb) }

var fileDescriptor_804518da5936dedb = []byte{
	// 939 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xed, 0x6e, 0x1b, 0x45,
	0x14, 0xf5, 0xc6, 0x89, 0x63, 0x5f, 0x27, 0x69, 0x3c, 0x24, 0xd1, 0x66, 0x89, 0x4a, 0xba, 0xa2,
	0xc5, 0xfd, 0xb2, 0xa5, 0x54, 0xe2, 0xa3, 0x02, 0x55, 0x09, 0x45, 0x24, 0x34, 0x02, 0xb1, 0x35,
	0x20, 0x01, 0x22, 0x9a, 0x78, 0x27, 0xdb, 0x21, 0x1b, 0xcf, 0x32, 0x33, 0x4e, 0x6b, 0xf1, 0x00,
	0xfc, 0x40, 0x3c, 0x02, 0x3f, 0x79, 0x1e, 0x1e, 0x85, 0x57, 0x40, 0x3b, 0x3b, 0x33, 0xde, 0xb5,
	0x37, 0x76, 0xab, 0x56, 0xea, 0xbf, 0xdd, 0xb9, 0xe7, 0xde, 0x7b, 0x66, 0xe6, 0x9c, 0xbb, 0x36,
	0xdc, 0x38, 0x8b, 0x47, 0x92, 0xd0, 0x30, 0xee, 0x62, 0x2e, 0xe9, 0x19, 0xee, 0x4b, 0xfb, 0x20,
	0x3a, 0x09, 0x67, 0x92, 0xa1, 0x96, 0x81, 0x74, 0x4c, 0xc4, 0xdb, 0xb1, 0x59, 0x7d, 0xc6, 0x49,
	0x37, 0xa6, 0x92, 0x70, 0x1c, 0xeb, 0x04, 0x6f, 0xbb, 0x18, 0x95, 0xa3, 0x84, 0x98, 0xd0, 0xf5,
	0x62, 0x88, 0x86, 0x64, 0x20, 0xe9, 0x19, 0x25, 0x3c, 0x8b, 0xfb, 0x7f, 0x39, 0x50, 0xdf, 0xd7,
	0x5d, 0xd0, 0x43, 0x68, 0x9a, 0x8e, 0x27, 0x34, 0x74, 0x9d, 0x5d, 0xa7, 0xdd, 0xdc, 0xdb, 0xee,
	0x58, 0x3a, 0x69, 0x89, 0x8e, 0x41, 0x1f, 0x3d, 0x0e, 0xc0, 0xa0, 0x8f, 0x42, 0xb4, 0x0e, 0xd5,
	0x21, 0xa7, 0xee, 0xc2, 0xae, 0xd3, 0x6e, 0x04, 0xe9, 0x23, 0x7a, 0x00, 0x8b, 0x22, 0x21, 0x7d,
	0xb7, 0xaa, 0xca, 0xbc, 0xd7, 0x99, 0xda, 0x95, 0x2d, 0xf5, 0x34, 0x21, 0xfd, 0x40, 0x81, 0xfd,
	0x3f, 0x1d, 0xd8, 0xfc, 0x9c, 0x13, 0x2c, 0x89, 0x09, 0x06, 0xe4, 0xb7, 0x21, 0x11, 0x12, 0x7d,
	0x06, 0x2b, 0x96, 0xdc, 0x39, 0x19, 0x69, 0x76, 0xde, 0x15, 0xec, 0x9e, 0x90, 0x51, 0x60, 0x37,
	0xf3, 0x84, 0x8c, 0x2c, 0x9b, 0x85, 0x57, 0x61, 0xf3, 0x5f, 0x15, 0x56, 0xf2, 0xcb, 0xe8, 0x1e,
	0x2c, 0x5d, 0xe2, 0x78, 0x48, 0x74, 0xf7, 0xad, 0x89, 0xee, 0xc7, 0xd9, 0xbd, 0x04, 0x19, 0x08,
	0x75, 0x60, 0x31, 0xbd, 0x0b, 0xdd, 0xd3, 0x2b, 0x07, 0xf7, 0x46, 0x09, 0x09, 0x14, 0x0e, 0xdd,
	0x81, 0x45, 0x89, 0x23, 0xe1, 0x56, 0x77, 0xab, 0xc5, 0xe2, 0x96, 0x63, 0x0f, 0x47, 0x81, 0xc2,
	0xa0, 0x0f, 0x61, 0x19, 0xc7, 0x14, 0x0b, 0x22, 0xdc, 0x45, 0x05, 0xdf, 0xb9, 0xe2, 0x24, 0xf6,
	0x53, 0x54, 0x60, 0xc0, 0xe8, 0x1b, 0x58, 0x93, 0x58, 0x9c, 0x9f, 0x90, 0x17, 0xa4, 0x3f, 0x94,
	0x94, 0x0d, 0xdc, 0x25, 0xc5, 0xee, 0xd6, 0x44, 0x7a, 0x0f, 0x8b, 0xf3, 0x2f, 0x0c, 0xe6, 0xc8,
	0xca, 0xe6, 0xb0, 0x12, 0xac, 0xca, 0x7c, 0x08, 0x7d, 0x05, 0x8d, 0x71, 0xad, 0x9a, 0xaa, 0x75,
	0x67, 0xa2, 0xd6, 0x0f, 0x8c, 0x9f, 0x9f, 0xc5, 0xec, 0x79, 0x79, 0xbd, 0x71, 0x3a, 0xba, 0x0e,
	0x8d, 0x84, 0xd3, 0x41, 0x9f, 0x26, 0x38, 0x76, 0x97, 0x53, 0x29, 0xa5, 0x71, 0xbb, 0x84, 0xee,
	0x42, 0x4b, 0x3c, 0x63, 0x5c, 0x9e, 0x84, 0x44, 0xf4, 0x39, 0x4d, 0x54, 0xcf, 0xba, 0x92, 0xdc,
	0xba, 0x0a, 0x3c, 0x1e, 0xaf, 0xa3, 0xdb, 0xb0, 0x1e, 0xb3, 0x41, 0x54, 0xc0, 0x36, 0x14, 0xf6,
	0x5a, 0xba, 0x9e, 0x83, 0x1e, 0xd4, 0xa1, 0x26, 0xd8, 0x90, 0xf7, 0x89, 0xff, 0x2d, 0x6c, 0x4d,
	0xca, 0x4f, 0x24, 0x6c, 0x20, 0x08, 0xfa, 0x08, 0xea, 0xe6, 0x1a, 0xf4, 0xed, 0xbf, 0x3b, 0x43,
	0x44, 0x81, 0x05, 0xfb, 0xff, 0x3a, 0x80, 0xbe, 0x24, 0x72, 0x52, 0xcf, 0x8f, 0x5e, 0x55, 0xcf,
	0x87, 0x95, 0xa2, 0xa2, 0x3f, 0x2d, 0xba, 0x75, 0x61, 0x8e, 0x5b, 0x0f, 0x2b, 0x05, 0xbf, 0xa2,
	0xcc, 0xaf, 0x55, 0x7d, 0xc8, 0xca, 0xb1, 0x2e, 0x2c, 0x87, 0x44, 0x62, 0x1a, 0xa7, 0x9a, 0x72,
	0xda, 0xf5, 0xc0, 0xbc, 0x1e, 0xac, 0x00, 0x8c, 0x47, 0x87, 0x7f, 0x1f, 0xaa, 0x3d, 0x1c, 0xa5,
	0x96, 0x37, 0xc4, 0x1b, 0x41, 0xfa, 0x88, 0x36, 0x8c, 0x3d, 0xb2, 0x31, 0x90, 0xbd, 0xf8, 0x2f,
	0x60, 0x6d, 0x3f, 0x0c, 0x7b, 0x38, 0x12, 0x66, 0xef, 0xaf, 0x33, 0x68, 0x8c, 0x49, 0x16, 0xe6,
	0x9b, 0xc4, 0x6f, 0xc1, 0x35, 0xdb, 0x39, 0xbb, 0x46, 0xff, 0x77, 0x68, 0x05, 0xe4, 0x82, 0x5d,
	0x92, 0xb7, 0xc1, 0x67, 0x03, 0x50, 0xbe, 0xb9, 0xa6, 0x74, 0x0c, 0xee, 0x31, 0x15, 0x56, 0x20,
	0x5f, 0xe3, 0x0b, 0x62, 0x99, 0xb9, 0xb0, 0x9c, 0x70, 0xf6, 0x2b, 0xd1, 0xa2, 0x6b, 0x04, 0xe6,
	0x15, 0x6d, 0x41, 0x2d, 0x64, 0x17, 0x98, 0x0e, 0xf4, 0x61, 0xeb, 0x37, 0xff, 0x67, 0xd8, 0x2e,
	0xa9, 0xa6, 0x45, 0xfc, 0x08, 0x56, 0xf3, 0xa2, 0x13, 0xae, 0xa3, 0x58, 0xcf, 0x9a, 0xa2, 0x2b,
	0x39, 0xcd, 0x09, 0xff, 0x3b, 0xd8, 0xc8, 0x57, 0x17, 0x6f, 0x66, 0x3a, 0xfb, 0x01, 0x6c, 0x4e,
	0x94, 0xd5, 0x84, 0x3f, 0x81, 0x86, 0xfd, 0x3c, 0x6a, 0xb2, 0x33, 0x6d, 0x37, 0x46, 0xfb, 0xff,
	0x38, 0x80, 0xb4, 0x97, 0xd5, 0x08, 0x7c, 0x33, 0xdf, 0x91, 0x3d, 0x58, 0x52, 0xa3, 0x54, 0xfb,
	0x6d, 0xf6, 0xd4, 0xcd, 0xa0, 0x68, 0x07, 0x1a, 0xec, 0x92, 0xf0, 0xe7, 0x9c, 0x4a, 0xa2, 0x1c,
	0x57, 0x0f, 0xc6, 0x0b, 0xfe, 0x26, 0xbc, 0x53, 0xa0, 0xa9, 0x55, 0xf1, 0x87, 0x63, 0xc4, 0xf2,
	0x96, 0xe9, 0xa7, 0x04, 0x0b, 0x44, 0x32, 0x82, 0x7b, 0x7f, 0xd7, 0x60, 0x7d, 0x3c, 0xd4, 0x22,
	0x2a, 0x24, 0x1f, 0xa1, 0x08, 0xd6, 0x8a, 0xf3, 0x13, 0xb5, 0x4b, 0xae, 0xab, 0xf4, 0x0b, 0xef,
	0xdd, 0x7e, 0x09, 0xa4, 0x3e, 0x9c, 0x0a, 0x7a, 0x0a, 0xcd, 0xdc, 0x50, 0x45, 0x37, 0x4b, 0x72,
	0xa7, 0x87, 0xae, 0x37, 0x4b, 0x3b, 0x7e, 0x05, 0x25, 0xd0, 0x9a, 0xf2, 0x0e, 0xba, 0x5b, 0x92,
	0x73, 0x95, 0x5f, 0xbd, 0x7b, 0x2f, 0x07, 0xb6, 0xdb, 0x08, 0x61, 0xb5, 0x20, 0x7c, 0xf4, 0xc1,
	0x9c, 0x02, 0xb6, 0x53, 0x7b, 0x3e, 0xd0, 0x76, 0xf9, 0x1e, 0x9a, 0x3d, 0x1c, 0xd9, 0xc3, 0xba,
	0x51, 0x76, 0x0a, 0x85, 0x09, 0xed, 0xf9, 0xb3, 0x20, 0xb6, 0xee, 0x4f, 0x00, 0xe3, 0x79, 0x86,
	0xde, 0x2f, 0xc9, 0x99, 0x9a, 0xb5, 0xde, 0xcd, 0x39, 0x28, 0x5b, 0xfc, 0x17, 0x68, 0xe6, 0x7c,
	0x51, 0x7a, 0xc3, 0xd3, 0xf6, 0xf6, 0x6e, 0xcd, 0x83, 0xe5, 0xeb, 0xe7, 0x64, 0x8d, 0xae, 0xe6,
	0x35, 0xb7, 0x7e, 0x89, 0x3b, 0xfc, 0xca, 0xc1, 0xc3, 0x1f, 0x3f, 0x8e, 0xa8, 0x7c, 0x36, 0x3c,
	0xed, 0xf4, 0xd9, 0x45, 0x57, 0x65, 0x31, 0x1e, 0x75, 0xed, 0x0f, 0xf2, 0x88, 0x0c, 0xba, 0xc9,
	0xe9, 0xfd, 0x88, 0x75, 0xa7, 0xfe, 0x12, 0x9c, 0xd6, 0xd4, 0xaf, 0xf3, 0x07, 0xff, 0x07, 0x00,
	0x00, 0xff, 0xff, 0xda, 0x14, 0x47, 0xc6, 0x2e, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArtifactRegistryClient is the client API for ArtifactRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtifactRegistryClient interface {
	CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error)
	GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*Artifact, error)
	ListArtifactNames(ctx context.Context, in *ListArtifactNamesRequest, opts ...grpc.CallOption) (*ListArtifactNamesResponse, error)
	ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error)
	TagArtifact(ctx context.Context, in *AddTagsRequest, opts ...grpc.CallOption) (*AddTagsResponse, error)
	RemoveTags(ctx context.Context, in *RemoveTagsRequest, opts ...grpc.CallOption) (*RemoveTagsResponse, error)
	CreateAlias(ctx context.Context, in *CreateAliasRequest, opts ...grpc.CallOption) (*CreateAliasResponse, error)
	RemoveAlias(ctx context.Context, in *RemoveAliasRequest, opts ...grpc.CallOption) (*RemoveAliasResponse, error)
}

type artifactRegistryClient struct {
	cc *grpc.ClientConn
}

func NewArtifactRegistryClient(cc *grpc.ClientConn) ArtifactRegistryClient {
	return &artifactRegistryClient{cc}
}

func (c *artifactRegistryClient) CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*CreateArtifactResponse, error) {
	out := new(CreateArtifactResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/CreateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*Artifact, error) {
	out := new(Artifact)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/GetArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) ListArtifactNames(ctx context.Context, in *ListArtifactNamesRequest, opts ...grpc.CallOption) (*ListArtifactNamesResponse, error) {
	out := new(ListArtifactNamesResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/ListArtifactNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error) {
	out := new(ListArtifactsResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/ListArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) TagArtifact(ctx context.Context, in *AddTagsRequest, opts ...grpc.CallOption) (*AddTagsResponse, error) {
	out := new(AddTagsResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/TagArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) RemoveTags(ctx context.Context, in *RemoveTagsRequest, opts ...grpc.CallOption) (*RemoveTagsResponse, error) {
	out := new(RemoveTagsResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/RemoveTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) CreateAlias(ctx context.Context, in *CreateAliasRequest, opts ...grpc.CallOption) (*CreateAliasResponse, error) {
	out := new(CreateAliasResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/CreateAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactRegistryClient) RemoveAlias(ctx context.Context, in *RemoveAliasRequest, opts ...grpc.CallOption) (*RemoveAliasResponse, error) {
	out := new(RemoveAliasResponse)
	err := c.cc.Invoke(ctx, "/flyteidl.artifact.ArtifactRegistry/RemoveAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtifactRegistryServer is the server API for ArtifactRegistry service.
type ArtifactRegistryServer interface {
	CreateArtifact(context.Context, *CreateArtifactRequest) (*CreateArtifactResponse, error)
	GetArtifact(context.Context, *GetArtifactRequest) (*Artifact, error)
	ListArtifactNames(context.Context, *ListArtifactNamesRequest) (*ListArtifactNamesResponse, error)
	ListArtifacts(context.Context, *ListArtifactsRequest) (*ListArtifactsResponse, error)
	TagArtifact(context.Context, *AddTagsRequest) (*AddTagsResponse, error)
	RemoveTags(context.Context, *RemoveTagsRequest) (*RemoveTagsResponse, error)
	CreateAlias(context.Context, *CreateAliasRequest) (*CreateAliasResponse, error)
	RemoveAlias(context.Context, *RemoveAliasRequest) (*RemoveAliasResponse, error)
}

// UnimplementedArtifactRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedArtifactRegistryServer struct {
}

func (*UnimplementedArtifactRegistryServer) CreateArtifact(ctx context.Context, req *CreateArtifactRequest) (*CreateArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArtifact not implemented")
}
func (*UnimplementedArtifactRegistryServer) GetArtifact(ctx context.Context, req *GetArtifactRequest) (*Artifact, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifact not implemented")
}
func (*UnimplementedArtifactRegistryServer) ListArtifactNames(ctx context.Context, req *ListArtifactNamesRequest) (*ListArtifactNamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArtifactNames not implemented")
}
func (*UnimplementedArtifactRegistryServer) ListArtifacts(ctx context.Context, req *ListArtifactsRequest) (*ListArtifactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArtifacts not implemented")
}
func (*UnimplementedArtifactRegistryServer) TagArtifact(ctx context.Context, req *AddTagsRequest) (*AddTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagArtifact not implemented")
}
func (*UnimplementedArtifactRegistryServer) RemoveTags(ctx context.Context, req *RemoveTagsRequest) (*RemoveTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTags not implemented")
}
func (*UnimplementedArtifactRegistryServer) CreateAlias(ctx context.Context, req *CreateAliasRequest) (*CreateAliasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAlias not implemented")
}
func (*UnimplementedArtifactRegistryServer) RemoveAlias(ctx context.Context, req *RemoveAliasRequest) (*RemoveAliasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAlias not implemented")
}

func RegisterArtifactRegistryServer(s *grpc.Server, srv ArtifactRegistryServer) {
	s.RegisterService(&_ArtifactRegistry_serviceDesc, srv)
}

func _ArtifactRegistry_CreateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).CreateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/CreateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).CreateArtifact(ctx, req.(*CreateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_GetArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).GetArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/GetArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).GetArtifact(ctx, req.(*GetArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_ListArtifactNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArtifactNamesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).ListArtifactNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/ListArtifactNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).ListArtifactNames(ctx, req.(*ListArtifactNamesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_ListArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArtifactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).ListArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/ListArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).ListArtifacts(ctx, req.(*ListArtifactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_TagArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).TagArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/TagArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).TagArtifact(ctx, req.(*AddTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_RemoveTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).RemoveTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/RemoveTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).RemoveTags(ctx, req.(*RemoveTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_CreateAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).CreateAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/CreateAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).CreateAlias(ctx, req.(*CreateAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactRegistry_RemoveAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactRegistryServer).RemoveAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flyteidl.artifact.ArtifactRegistry/RemoveAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactRegistryServer).RemoveAlias(ctx, req.(*RemoveAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtifactRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flyteidl.artifact.ArtifactRegistry",
	HandlerType: (*ArtifactRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateArtifact",
			Handler:    _ArtifactRegistry_CreateArtifact_Handler,
		},
		{
			MethodName: "GetArtifact",
			Handler:    _ArtifactRegistry_GetArtifact_Handler,
		},
		{
			MethodName: "ListArtifactNames",
			Handler:    _ArtifactRegistry_ListArtifactNames_Handler,
		},
		{
			MethodName: "ListArtifacts",
			Handler:    _ArtifactRegistry_ListArtifacts_Handler,
		},
		{
			MethodName: "TagArtifact",
			Handler:    _ArtifactRegistry_TagArtifact_Handler,
		},
		{
			MethodName: "RemoveTags",
			Handler:    _ArtifactRegistry_RemoveTags_Handler,
		},
		{
			MethodName: "CreateAlias",
			Handler:    _ArtifactRegistry_CreateAlias_Handler,
		},
		{
			MethodName: "RemoveAlias",
			Handler:    _ArtifactRegistry_RemoveAlias_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flyteidl/artifact/artifacts.proto",
}
