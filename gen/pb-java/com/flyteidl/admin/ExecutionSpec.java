// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/execution.proto

package com.flyteidl.admin;

/**
 * <pre>
 * An ExecutionSpec encompasses all data used to launch this execution. The Spec does not change over the lifetime
 * of an execution as it progresses across phase changes.
 * </pre>
 *
 * Protobuf type {@code flyteidl.admin.ExecutionSpec}
 */
public final class ExecutionSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:flyteidl.admin.ExecutionSpec)
    ExecutionSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExecutionSpec.newBuilder() to construct.
  private ExecutionSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExecutionSpec() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExecutionSpec();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ExecutionSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.flyteidl.core.Identifier.Builder subBuilder = null;
            if (launchPlan_ != null) {
              subBuilder = launchPlan_.toBuilder();
            }
            launchPlan_ = input.readMessage(com.flyteidl.core.Identifier.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(launchPlan_);
              launchPlan_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.flyteidl.core.LiteralMap.Builder subBuilder = null;
            if (inputs_ != null) {
              subBuilder = inputs_.toBuilder();
            }
            inputs_ = input.readMessage(com.flyteidl.core.LiteralMap.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(inputs_);
              inputs_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.flyteidl.admin.ExecutionMetadata.Builder subBuilder = null;
            if (metadata_ != null) {
              subBuilder = metadata_.toBuilder();
            }
            metadata_ = input.readMessage(com.flyteidl.admin.ExecutionMetadata.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(metadata_);
              metadata_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.flyteidl.admin.NotificationList.Builder subBuilder = null;
            if (notificationOverridesCase_ == 5) {
              subBuilder = ((com.flyteidl.admin.NotificationList) notificationOverrides_).toBuilder();
            }
            notificationOverrides_ =
                input.readMessage(com.flyteidl.admin.NotificationList.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.flyteidl.admin.NotificationList) notificationOverrides_);
              notificationOverrides_ = subBuilder.buildPartial();
            }
            notificationOverridesCase_ = 5;
            break;
          }
          case 48: {
            notificationOverrides_ = input.readBool();
            notificationOverridesCase_ = 6;
            break;
          }
          case 58: {
            com.flyteidl.admin.Labels.Builder subBuilder = null;
            if (labels_ != null) {
              subBuilder = labels_.toBuilder();
            }
            labels_ = input.readMessage(com.flyteidl.admin.Labels.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(labels_);
              labels_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            com.flyteidl.admin.Annotations.Builder subBuilder = null;
            if (annotations_ != null) {
              subBuilder = annotations_.toBuilder();
            }
            annotations_ = input.readMessage(com.flyteidl.admin.Annotations.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(annotations_);
              annotations_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            com.flyteidl.core.SecurityContext.Builder subBuilder = null;
            if (securityContext_ != null) {
              subBuilder = securityContext_.toBuilder();
            }
            securityContext_ = input.readMessage(com.flyteidl.core.SecurityContext.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(securityContext_);
              securityContext_ = subBuilder.buildPartial();
            }

            break;
          }
          case 130: {
            com.flyteidl.admin.AuthRole.Builder subBuilder = null;
            if (authRole_ != null) {
              subBuilder = authRole_.toBuilder();
            }
            authRole_ = input.readMessage(com.flyteidl.admin.AuthRole.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(authRole_);
              authRole_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            com.flyteidl.core.QualityOfService.Builder subBuilder = null;
            if (qualityOfService_ != null) {
              subBuilder = qualityOfService_.toBuilder();
            }
            qualityOfService_ = input.readMessage(com.flyteidl.core.QualityOfService.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qualityOfService_);
              qualityOfService_ = subBuilder.buildPartial();
            }

            break;
          }
          case 144: {

            maxParallelism_ = input.readInt32();
            break;
          }
          case 154: {
            com.flyteidl.admin.RawOutputDataConfig.Builder subBuilder = null;
            if (rawOutputDataConfig_ != null) {
              subBuilder = rawOutputDataConfig_.toBuilder();
            }
            rawOutputDataConfig_ = input.readMessage(com.flyteidl.admin.RawOutputDataConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rawOutputDataConfig_);
              rawOutputDataConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 162: {
            com.flyteidl.admin.ClusterAssignment.Builder subBuilder = null;
            if (clusterAssignment_ != null) {
              subBuilder = clusterAssignment_.toBuilder();
            }
            clusterAssignment_ = input.readMessage(com.flyteidl.admin.ClusterAssignment.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(clusterAssignment_);
              clusterAssignment_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.flyteidl.admin.ExecutionProto.internal_static_flyteidl_admin_ExecutionSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.flyteidl.admin.ExecutionProto.internal_static_flyteidl_admin_ExecutionSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.flyteidl.admin.ExecutionSpec.class, com.flyteidl.admin.ExecutionSpec.Builder.class);
  }

  private int notificationOverridesCase_ = 0;
  private java.lang.Object notificationOverrides_;
  public enum NotificationOverridesCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    NOTIFICATIONS(5),
    DISABLE_ALL(6),
    NOTIFICATIONOVERRIDES_NOT_SET(0);
    private final int value;
    private NotificationOverridesCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NotificationOverridesCase valueOf(int value) {
      return forNumber(value);
    }

    public static NotificationOverridesCase forNumber(int value) {
      switch (value) {
        case 5: return NOTIFICATIONS;
        case 6: return DISABLE_ALL;
        case 0: return NOTIFICATIONOVERRIDES_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public NotificationOverridesCase
  getNotificationOverridesCase() {
    return NotificationOverridesCase.forNumber(
        notificationOverridesCase_);
  }

  public static final int LAUNCH_PLAN_FIELD_NUMBER = 1;
  private com.flyteidl.core.Identifier launchPlan_;
  /**
   * <pre>
   * Launch plan to be executed
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
   * @return Whether the launchPlan field is set.
   */
  @java.lang.Override
  public boolean hasLaunchPlan() {
    return launchPlan_ != null;
  }
  /**
   * <pre>
   * Launch plan to be executed
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
   * @return The launchPlan.
   */
  @java.lang.Override
  public com.flyteidl.core.Identifier getLaunchPlan() {
    return launchPlan_ == null ? com.flyteidl.core.Identifier.getDefaultInstance() : launchPlan_;
  }
  /**
   * <pre>
   * Launch plan to be executed
   * </pre>
   *
   * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.IdentifierOrBuilder getLaunchPlanOrBuilder() {
    return getLaunchPlan();
  }

  public static final int INPUTS_FIELD_NUMBER = 2;
  private com.flyteidl.core.LiteralMap inputs_;
  /**
   * <pre>
   * Input values to be passed for the execution
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
   * @deprecated
   * @return Whether the inputs field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasInputs() {
    return inputs_ != null;
  }
  /**
   * <pre>
   * Input values to be passed for the execution
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
   * @deprecated
   * @return The inputs.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.flyteidl.core.LiteralMap getInputs() {
    return inputs_ == null ? com.flyteidl.core.LiteralMap.getDefaultInstance() : inputs_;
  }
  /**
   * <pre>
   * Input values to be passed for the execution
   * </pre>
   *
   * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.flyteidl.core.LiteralMapOrBuilder getInputsOrBuilder() {
    return getInputs();
  }

  public static final int METADATA_FIELD_NUMBER = 3;
  private com.flyteidl.admin.ExecutionMetadata metadata_;
  /**
   * <pre>
   * Metadata for the execution
   * </pre>
   *
   * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return Whether the metadata field is set.
   */
  @java.lang.Override
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <pre>
   * Metadata for the execution
   * </pre>
   *
   * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  @java.lang.Override
  public com.flyteidl.admin.ExecutionMetadata getMetadata() {
    return metadata_ == null ? com.flyteidl.admin.ExecutionMetadata.getDefaultInstance() : metadata_;
  }
  /**
   * <pre>
   * Metadata for the execution
   * </pre>
   *
   * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.ExecutionMetadataOrBuilder getMetadataOrBuilder() {
    return getMetadata();
  }

  public static final int NOTIFICATIONS_FIELD_NUMBER = 5;
  /**
   * <pre>
   * List of notifications based on Execution status transitions
   * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
   * When this list is empty, the notifications defined for the launch plan will be applied.
   * </pre>
   *
   * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
   * @return Whether the notifications field is set.
   */
  @java.lang.Override
  public boolean hasNotifications() {
    return notificationOverridesCase_ == 5;
  }
  /**
   * <pre>
   * List of notifications based on Execution status transitions
   * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
   * When this list is empty, the notifications defined for the launch plan will be applied.
   * </pre>
   *
   * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
   * @return The notifications.
   */
  @java.lang.Override
  public com.flyteidl.admin.NotificationList getNotifications() {
    if (notificationOverridesCase_ == 5) {
       return (com.flyteidl.admin.NotificationList) notificationOverrides_;
    }
    return com.flyteidl.admin.NotificationList.getDefaultInstance();
  }
  /**
   * <pre>
   * List of notifications based on Execution status transitions
   * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
   * When this list is empty, the notifications defined for the launch plan will be applied.
   * </pre>
   *
   * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.NotificationListOrBuilder getNotificationsOrBuilder() {
    if (notificationOverridesCase_ == 5) {
       return (com.flyteidl.admin.NotificationList) notificationOverrides_;
    }
    return com.flyteidl.admin.NotificationList.getDefaultInstance();
  }

  public static final int DISABLE_ALL_FIELD_NUMBER = 6;
  /**
   * <pre>
   * This should be set to true if all notifications are intended to be disabled for this execution.
   * </pre>
   *
   * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
   * @return Whether the disableAll field is set.
   */
  @java.lang.Override
  public boolean hasDisableAll() {
    return notificationOverridesCase_ == 6;
  }
  /**
   * <pre>
   * This should be set to true if all notifications are intended to be disabled for this execution.
   * </pre>
   *
   * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
   * @return The disableAll.
   */
  @java.lang.Override
  public boolean getDisableAll() {
    if (notificationOverridesCase_ == 6) {
      return (java.lang.Boolean) notificationOverrides_;
    }
    return false;
  }

  public static final int LABELS_FIELD_NUMBER = 7;
  private com.flyteidl.admin.Labels labels_;
  /**
   * <pre>
   * Labels to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
   * @return Whether the labels field is set.
   */
  @java.lang.Override
  public boolean hasLabels() {
    return labels_ != null;
  }
  /**
   * <pre>
   * Labels to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
   * @return The labels.
   */
  @java.lang.Override
  public com.flyteidl.admin.Labels getLabels() {
    return labels_ == null ? com.flyteidl.admin.Labels.getDefaultInstance() : labels_;
  }
  /**
   * <pre>
   * Labels to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.LabelsOrBuilder getLabelsOrBuilder() {
    return getLabels();
  }

  public static final int ANNOTATIONS_FIELD_NUMBER = 8;
  private com.flyteidl.admin.Annotations annotations_;
  /**
   * <pre>
   * Annotations to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
   * @return Whether the annotations field is set.
   */
  @java.lang.Override
  public boolean hasAnnotations() {
    return annotations_ != null;
  }
  /**
   * <pre>
   * Annotations to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
   * @return The annotations.
   */
  @java.lang.Override
  public com.flyteidl.admin.Annotations getAnnotations() {
    return annotations_ == null ? com.flyteidl.admin.Annotations.getDefaultInstance() : annotations_;
  }
  /**
   * <pre>
   * Annotations to apply to the execution resource.
   * </pre>
   *
   * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.AnnotationsOrBuilder getAnnotationsOrBuilder() {
    return getAnnotations();
  }

  public static final int SECURITY_CONTEXT_FIELD_NUMBER = 10;
  private com.flyteidl.core.SecurityContext securityContext_;
  /**
   * <pre>
   * Optional: security context override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   * @return Whether the securityContext field is set.
   */
  @java.lang.Override
  public boolean hasSecurityContext() {
    return securityContext_ != null;
  }
  /**
   * <pre>
   * Optional: security context override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   * @return The securityContext.
   */
  @java.lang.Override
  public com.flyteidl.core.SecurityContext getSecurityContext() {
    return securityContext_ == null ? com.flyteidl.core.SecurityContext.getDefaultInstance() : securityContext_;
  }
  /**
   * <pre>
   * Optional: security context override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.SecurityContextOrBuilder getSecurityContextOrBuilder() {
    return getSecurityContext();
  }

  public static final int AUTH_ROLE_FIELD_NUMBER = 16;
  private com.flyteidl.admin.AuthRole authRole_;
  /**
   * <pre>
   * Optional: auth override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
   * @deprecated
   * @return Whether the authRole field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasAuthRole() {
    return authRole_ != null;
  }
  /**
   * <pre>
   * Optional: auth override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
   * @deprecated
   * @return The authRole.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.flyteidl.admin.AuthRole getAuthRole() {
    return authRole_ == null ? com.flyteidl.admin.AuthRole.getDefaultInstance() : authRole_;
  }
  /**
   * <pre>
   * Optional: auth override to apply this execution.
   * </pre>
   *
   * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.flyteidl.admin.AuthRoleOrBuilder getAuthRoleOrBuilder() {
    return getAuthRole();
  }

  public static final int QUALITY_OF_SERVICE_FIELD_NUMBER = 17;
  private com.flyteidl.core.QualityOfService qualityOfService_;
  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
   * @return Whether the qualityOfService field is set.
   */
  @java.lang.Override
  public boolean hasQualityOfService() {
    return qualityOfService_ != null;
  }
  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
   * @return The qualityOfService.
   */
  @java.lang.Override
  public com.flyteidl.core.QualityOfService getQualityOfService() {
    return qualityOfService_ == null ? com.flyteidl.core.QualityOfService.getDefaultInstance() : qualityOfService_;
  }
  /**
   * <pre>
   * Indicates the runtime priority of the execution.
   * </pre>
   *
   * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
   */
  @java.lang.Override
  public com.flyteidl.core.QualityOfServiceOrBuilder getQualityOfServiceOrBuilder() {
    return getQualityOfService();
  }

  public static final int MAX_PARALLELISM_FIELD_NUMBER = 18;
  private int maxParallelism_;
  /**
   * <pre>
   * Controls the maximum number of task nodes that can be run in parallel for the entire workflow.
   * This is useful to achieve fairness. Note: MapTasks are regarded as one unit,
   * and parallelism/concurrency of MapTasks is independent from this.
   * </pre>
   *
   * <code>int32 max_parallelism = 18 [json_name = "maxParallelism"];</code>
   * @return The maxParallelism.
   */
  @java.lang.Override
  public int getMaxParallelism() {
    return maxParallelism_;
  }

  public static final int RAW_OUTPUT_DATA_CONFIG_FIELD_NUMBER = 19;
  private com.flyteidl.admin.RawOutputDataConfig rawOutputDataConfig_;
  /**
   * <pre>
   * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
   * This should be a prefix like s3://my-bucket/my-data
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
   * @return Whether the rawOutputDataConfig field is set.
   */
  @java.lang.Override
  public boolean hasRawOutputDataConfig() {
    return rawOutputDataConfig_ != null;
  }
  /**
   * <pre>
   * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
   * This should be a prefix like s3://my-bucket/my-data
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
   * @return The rawOutputDataConfig.
   */
  @java.lang.Override
  public com.flyteidl.admin.RawOutputDataConfig getRawOutputDataConfig() {
    return rawOutputDataConfig_ == null ? com.flyteidl.admin.RawOutputDataConfig.getDefaultInstance() : rawOutputDataConfig_;
  }
  /**
   * <pre>
   * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
   * This should be a prefix like s3://my-bucket/my-data
   * </pre>
   *
   * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.RawOutputDataConfigOrBuilder getRawOutputDataConfigOrBuilder() {
    return getRawOutputDataConfig();
  }

  public static final int CLUSTER_ASSIGNMENT_FIELD_NUMBER = 20;
  private com.flyteidl.admin.ClusterAssignment clusterAssignment_;
  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
   * @return Whether the clusterAssignment field is set.
   */
  @java.lang.Override
  public boolean hasClusterAssignment() {
    return clusterAssignment_ != null;
  }
  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
   * @return The clusterAssignment.
   */
  @java.lang.Override
  public com.flyteidl.admin.ClusterAssignment getClusterAssignment() {
    return clusterAssignment_ == null ? com.flyteidl.admin.ClusterAssignment.getDefaultInstance() : clusterAssignment_;
  }
  /**
   * <pre>
   * Controls how to select an available cluster on which this execution should run.
   * </pre>
   *
   * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
   */
  @java.lang.Override
  public com.flyteidl.admin.ClusterAssignmentOrBuilder getClusterAssignmentOrBuilder() {
    return getClusterAssignment();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (launchPlan_ != null) {
      output.writeMessage(1, getLaunchPlan());
    }
    if (inputs_ != null) {
      output.writeMessage(2, getInputs());
    }
    if (metadata_ != null) {
      output.writeMessage(3, getMetadata());
    }
    if (notificationOverridesCase_ == 5) {
      output.writeMessage(5, (com.flyteidl.admin.NotificationList) notificationOverrides_);
    }
    if (notificationOverridesCase_ == 6) {
      output.writeBool(
          6, (boolean)((java.lang.Boolean) notificationOverrides_));
    }
    if (labels_ != null) {
      output.writeMessage(7, getLabels());
    }
    if (annotations_ != null) {
      output.writeMessage(8, getAnnotations());
    }
    if (securityContext_ != null) {
      output.writeMessage(10, getSecurityContext());
    }
    if (authRole_ != null) {
      output.writeMessage(16, getAuthRole());
    }
    if (qualityOfService_ != null) {
      output.writeMessage(17, getQualityOfService());
    }
    if (maxParallelism_ != 0) {
      output.writeInt32(18, maxParallelism_);
    }
    if (rawOutputDataConfig_ != null) {
      output.writeMessage(19, getRawOutputDataConfig());
    }
    if (clusterAssignment_ != null) {
      output.writeMessage(20, getClusterAssignment());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (launchPlan_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLaunchPlan());
    }
    if (inputs_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getInputs());
    }
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getMetadata());
    }
    if (notificationOverridesCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.flyteidl.admin.NotificationList) notificationOverrides_);
    }
    if (notificationOverridesCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            6, (boolean)((java.lang.Boolean) notificationOverrides_));
    }
    if (labels_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getLabels());
    }
    if (annotations_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getAnnotations());
    }
    if (securityContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getSecurityContext());
    }
    if (authRole_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getAuthRole());
    }
    if (qualityOfService_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getQualityOfService());
    }
    if (maxParallelism_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(18, maxParallelism_);
    }
    if (rawOutputDataConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getRawOutputDataConfig());
    }
    if (clusterAssignment_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, getClusterAssignment());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.flyteidl.admin.ExecutionSpec)) {
      return super.equals(obj);
    }
    com.flyteidl.admin.ExecutionSpec other = (com.flyteidl.admin.ExecutionSpec) obj;

    if (hasLaunchPlan() != other.hasLaunchPlan()) return false;
    if (hasLaunchPlan()) {
      if (!getLaunchPlan()
          .equals(other.getLaunchPlan())) return false;
    }
    if (hasInputs() != other.hasInputs()) return false;
    if (hasInputs()) {
      if (!getInputs()
          .equals(other.getInputs())) return false;
    }
    if (hasMetadata() != other.hasMetadata()) return false;
    if (hasMetadata()) {
      if (!getMetadata()
          .equals(other.getMetadata())) return false;
    }
    if (hasLabels() != other.hasLabels()) return false;
    if (hasLabels()) {
      if (!getLabels()
          .equals(other.getLabels())) return false;
    }
    if (hasAnnotations() != other.hasAnnotations()) return false;
    if (hasAnnotations()) {
      if (!getAnnotations()
          .equals(other.getAnnotations())) return false;
    }
    if (hasSecurityContext() != other.hasSecurityContext()) return false;
    if (hasSecurityContext()) {
      if (!getSecurityContext()
          .equals(other.getSecurityContext())) return false;
    }
    if (hasAuthRole() != other.hasAuthRole()) return false;
    if (hasAuthRole()) {
      if (!getAuthRole()
          .equals(other.getAuthRole())) return false;
    }
    if (hasQualityOfService() != other.hasQualityOfService()) return false;
    if (hasQualityOfService()) {
      if (!getQualityOfService()
          .equals(other.getQualityOfService())) return false;
    }
    if (getMaxParallelism()
        != other.getMaxParallelism()) return false;
    if (hasRawOutputDataConfig() != other.hasRawOutputDataConfig()) return false;
    if (hasRawOutputDataConfig()) {
      if (!getRawOutputDataConfig()
          .equals(other.getRawOutputDataConfig())) return false;
    }
    if (hasClusterAssignment() != other.hasClusterAssignment()) return false;
    if (hasClusterAssignment()) {
      if (!getClusterAssignment()
          .equals(other.getClusterAssignment())) return false;
    }
    if (!getNotificationOverridesCase().equals(other.getNotificationOverridesCase())) return false;
    switch (notificationOverridesCase_) {
      case 5:
        if (!getNotifications()
            .equals(other.getNotifications())) return false;
        break;
      case 6:
        if (getDisableAll()
            != other.getDisableAll()) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLaunchPlan()) {
      hash = (37 * hash) + LAUNCH_PLAN_FIELD_NUMBER;
      hash = (53 * hash) + getLaunchPlan().hashCode();
    }
    if (hasInputs()) {
      hash = (37 * hash) + INPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getInputs().hashCode();
    }
    if (hasMetadata()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
    }
    if (hasLabels()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + getLabels().hashCode();
    }
    if (hasAnnotations()) {
      hash = (37 * hash) + ANNOTATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getAnnotations().hashCode();
    }
    if (hasSecurityContext()) {
      hash = (37 * hash) + SECURITY_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getSecurityContext().hashCode();
    }
    if (hasAuthRole()) {
      hash = (37 * hash) + AUTH_ROLE_FIELD_NUMBER;
      hash = (53 * hash) + getAuthRole().hashCode();
    }
    if (hasQualityOfService()) {
      hash = (37 * hash) + QUALITY_OF_SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getQualityOfService().hashCode();
    }
    hash = (37 * hash) + MAX_PARALLELISM_FIELD_NUMBER;
    hash = (53 * hash) + getMaxParallelism();
    if (hasRawOutputDataConfig()) {
      hash = (37 * hash) + RAW_OUTPUT_DATA_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getRawOutputDataConfig().hashCode();
    }
    if (hasClusterAssignment()) {
      hash = (37 * hash) + CLUSTER_ASSIGNMENT_FIELD_NUMBER;
      hash = (53 * hash) + getClusterAssignment().hashCode();
    }
    switch (notificationOverridesCase_) {
      case 5:
        hash = (37 * hash) + NOTIFICATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getNotifications().hashCode();
        break;
      case 6:
        hash = (37 * hash) + DISABLE_ALL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDisableAll());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.admin.ExecutionSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.ExecutionSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.flyteidl.admin.ExecutionSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.flyteidl.admin.ExecutionSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An ExecutionSpec encompasses all data used to launch this execution. The Spec does not change over the lifetime
   * of an execution as it progresses across phase changes.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.ExecutionSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:flyteidl.admin.ExecutionSpec)
      com.flyteidl.admin.ExecutionSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.admin.ExecutionProto.internal_static_flyteidl_admin_ExecutionSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.admin.ExecutionProto.internal_static_flyteidl_admin_ExecutionSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.admin.ExecutionSpec.class, com.flyteidl.admin.ExecutionSpec.Builder.class);
    }

    // Construct using com.flyteidl.admin.ExecutionSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (launchPlanBuilder_ == null) {
        launchPlan_ = null;
      } else {
        launchPlan_ = null;
        launchPlanBuilder_ = null;
      }
      if (inputsBuilder_ == null) {
        inputs_ = null;
      } else {
        inputs_ = null;
        inputsBuilder_ = null;
      }
      if (metadataBuilder_ == null) {
        metadata_ = null;
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }
      if (labelsBuilder_ == null) {
        labels_ = null;
      } else {
        labels_ = null;
        labelsBuilder_ = null;
      }
      if (annotationsBuilder_ == null) {
        annotations_ = null;
      } else {
        annotations_ = null;
        annotationsBuilder_ = null;
      }
      if (securityContextBuilder_ == null) {
        securityContext_ = null;
      } else {
        securityContext_ = null;
        securityContextBuilder_ = null;
      }
      if (authRoleBuilder_ == null) {
        authRole_ = null;
      } else {
        authRole_ = null;
        authRoleBuilder_ = null;
      }
      if (qualityOfServiceBuilder_ == null) {
        qualityOfService_ = null;
      } else {
        qualityOfService_ = null;
        qualityOfServiceBuilder_ = null;
      }
      maxParallelism_ = 0;

      if (rawOutputDataConfigBuilder_ == null) {
        rawOutputDataConfig_ = null;
      } else {
        rawOutputDataConfig_ = null;
        rawOutputDataConfigBuilder_ = null;
      }
      if (clusterAssignmentBuilder_ == null) {
        clusterAssignment_ = null;
      } else {
        clusterAssignment_ = null;
        clusterAssignmentBuilder_ = null;
      }
      notificationOverridesCase_ = 0;
      notificationOverrides_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.flyteidl.admin.ExecutionProto.internal_static_flyteidl_admin_ExecutionSpec_descriptor;
    }

    @java.lang.Override
    public com.flyteidl.admin.ExecutionSpec getDefaultInstanceForType() {
      return com.flyteidl.admin.ExecutionSpec.getDefaultInstance();
    }

    @java.lang.Override
    public com.flyteidl.admin.ExecutionSpec build() {
      com.flyteidl.admin.ExecutionSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.flyteidl.admin.ExecutionSpec buildPartial() {
      com.flyteidl.admin.ExecutionSpec result = new com.flyteidl.admin.ExecutionSpec(this);
      if (launchPlanBuilder_ == null) {
        result.launchPlan_ = launchPlan_;
      } else {
        result.launchPlan_ = launchPlanBuilder_.build();
      }
      if (inputsBuilder_ == null) {
        result.inputs_ = inputs_;
      } else {
        result.inputs_ = inputsBuilder_.build();
      }
      if (metadataBuilder_ == null) {
        result.metadata_ = metadata_;
      } else {
        result.metadata_ = metadataBuilder_.build();
      }
      if (notificationOverridesCase_ == 5) {
        if (notificationsBuilder_ == null) {
          result.notificationOverrides_ = notificationOverrides_;
        } else {
          result.notificationOverrides_ = notificationsBuilder_.build();
        }
      }
      if (notificationOverridesCase_ == 6) {
        result.notificationOverrides_ = notificationOverrides_;
      }
      if (labelsBuilder_ == null) {
        result.labels_ = labels_;
      } else {
        result.labels_ = labelsBuilder_.build();
      }
      if (annotationsBuilder_ == null) {
        result.annotations_ = annotations_;
      } else {
        result.annotations_ = annotationsBuilder_.build();
      }
      if (securityContextBuilder_ == null) {
        result.securityContext_ = securityContext_;
      } else {
        result.securityContext_ = securityContextBuilder_.build();
      }
      if (authRoleBuilder_ == null) {
        result.authRole_ = authRole_;
      } else {
        result.authRole_ = authRoleBuilder_.build();
      }
      if (qualityOfServiceBuilder_ == null) {
        result.qualityOfService_ = qualityOfService_;
      } else {
        result.qualityOfService_ = qualityOfServiceBuilder_.build();
      }
      result.maxParallelism_ = maxParallelism_;
      if (rawOutputDataConfigBuilder_ == null) {
        result.rawOutputDataConfig_ = rawOutputDataConfig_;
      } else {
        result.rawOutputDataConfig_ = rawOutputDataConfigBuilder_.build();
      }
      if (clusterAssignmentBuilder_ == null) {
        result.clusterAssignment_ = clusterAssignment_;
      } else {
        result.clusterAssignment_ = clusterAssignmentBuilder_.build();
      }
      result.notificationOverridesCase_ = notificationOverridesCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.flyteidl.admin.ExecutionSpec) {
        return mergeFrom((com.flyteidl.admin.ExecutionSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.flyteidl.admin.ExecutionSpec other) {
      if (other == com.flyteidl.admin.ExecutionSpec.getDefaultInstance()) return this;
      if (other.hasLaunchPlan()) {
        mergeLaunchPlan(other.getLaunchPlan());
      }
      if (other.hasInputs()) {
        mergeInputs(other.getInputs());
      }
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      if (other.hasLabels()) {
        mergeLabels(other.getLabels());
      }
      if (other.hasAnnotations()) {
        mergeAnnotations(other.getAnnotations());
      }
      if (other.hasSecurityContext()) {
        mergeSecurityContext(other.getSecurityContext());
      }
      if (other.hasAuthRole()) {
        mergeAuthRole(other.getAuthRole());
      }
      if (other.hasQualityOfService()) {
        mergeQualityOfService(other.getQualityOfService());
      }
      if (other.getMaxParallelism() != 0) {
        setMaxParallelism(other.getMaxParallelism());
      }
      if (other.hasRawOutputDataConfig()) {
        mergeRawOutputDataConfig(other.getRawOutputDataConfig());
      }
      if (other.hasClusterAssignment()) {
        mergeClusterAssignment(other.getClusterAssignment());
      }
      switch (other.getNotificationOverridesCase()) {
        case NOTIFICATIONS: {
          mergeNotifications(other.getNotifications());
          break;
        }
        case DISABLE_ALL: {
          setDisableAll(other.getDisableAll());
          break;
        }
        case NOTIFICATIONOVERRIDES_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.flyteidl.admin.ExecutionSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.flyteidl.admin.ExecutionSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int notificationOverridesCase_ = 0;
    private java.lang.Object notificationOverrides_;
    public NotificationOverridesCase
        getNotificationOverridesCase() {
      return NotificationOverridesCase.forNumber(
          notificationOverridesCase_);
    }

    public Builder clearNotificationOverrides() {
      notificationOverridesCase_ = 0;
      notificationOverrides_ = null;
      onChanged();
      return this;
    }


    private com.flyteidl.core.Identifier launchPlan_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder> launchPlanBuilder_;
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     * @return Whether the launchPlan field is set.
     */
    public boolean hasLaunchPlan() {
      return launchPlanBuilder_ != null || launchPlan_ != null;
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     * @return The launchPlan.
     */
    public com.flyteidl.core.Identifier getLaunchPlan() {
      if (launchPlanBuilder_ == null) {
        return launchPlan_ == null ? com.flyteidl.core.Identifier.getDefaultInstance() : launchPlan_;
      } else {
        return launchPlanBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     */
    public Builder setLaunchPlan(com.flyteidl.core.Identifier value) {
      if (launchPlanBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        launchPlan_ = value;
        onChanged();
      } else {
        launchPlanBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     */
    public Builder setLaunchPlan(
        com.flyteidl.core.Identifier.Builder builderForValue) {
      if (launchPlanBuilder_ == null) {
        launchPlan_ = builderForValue.build();
        onChanged();
      } else {
        launchPlanBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     */
    public Builder mergeLaunchPlan(com.flyteidl.core.Identifier value) {
      if (launchPlanBuilder_ == null) {
        if (launchPlan_ != null) {
          launchPlan_ =
            com.flyteidl.core.Identifier.newBuilder(launchPlan_).mergeFrom(value).buildPartial();
        } else {
          launchPlan_ = value;
        }
        onChanged();
      } else {
        launchPlanBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     */
    public Builder clearLaunchPlan() {
      if (launchPlanBuilder_ == null) {
        launchPlan_ = null;
        onChanged();
      } else {
        launchPlan_ = null;
        launchPlanBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     */
    public com.flyteidl.core.Identifier.Builder getLaunchPlanBuilder() {
      
      onChanged();
      return getLaunchPlanFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     */
    public com.flyteidl.core.IdentifierOrBuilder getLaunchPlanOrBuilder() {
      if (launchPlanBuilder_ != null) {
        return launchPlanBuilder_.getMessageOrBuilder();
      } else {
        return launchPlan_ == null ?
            com.flyteidl.core.Identifier.getDefaultInstance() : launchPlan_;
      }
    }
    /**
     * <pre>
     * Launch plan to be executed
     * </pre>
     *
     * <code>.flyteidl.core.Identifier launch_plan = 1 [json_name = "launchPlan"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder> 
        getLaunchPlanFieldBuilder() {
      if (launchPlanBuilder_ == null) {
        launchPlanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.Identifier, com.flyteidl.core.Identifier.Builder, com.flyteidl.core.IdentifierOrBuilder>(
                getLaunchPlan(),
                getParentForChildren(),
                isClean());
        launchPlan_ = null;
      }
      return launchPlanBuilder_;
    }

    private com.flyteidl.core.LiteralMap inputs_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.LiteralMap, com.flyteidl.core.LiteralMap.Builder, com.flyteidl.core.LiteralMapOrBuilder> inputsBuilder_;
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     * @deprecated
     * @return Whether the inputs field is set.
     */
    @java.lang.Deprecated public boolean hasInputs() {
      return inputsBuilder_ != null || inputs_ != null;
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     * @deprecated
     * @return The inputs.
     */
    @java.lang.Deprecated public com.flyteidl.core.LiteralMap getInputs() {
      if (inputsBuilder_ == null) {
        return inputs_ == null ? com.flyteidl.core.LiteralMap.getDefaultInstance() : inputs_;
      } else {
        return inputsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setInputs(com.flyteidl.core.LiteralMap value) {
      if (inputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inputs_ = value;
        onChanged();
      } else {
        inputsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setInputs(
        com.flyteidl.core.LiteralMap.Builder builderForValue) {
      if (inputsBuilder_ == null) {
        inputs_ = builderForValue.build();
        onChanged();
      } else {
        inputsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeInputs(com.flyteidl.core.LiteralMap value) {
      if (inputsBuilder_ == null) {
        if (inputs_ != null) {
          inputs_ =
            com.flyteidl.core.LiteralMap.newBuilder(inputs_).mergeFrom(value).buildPartial();
        } else {
          inputs_ = value;
        }
        onChanged();
      } else {
        inputsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearInputs() {
      if (inputsBuilder_ == null) {
        inputs_ = null;
        onChanged();
      } else {
        inputs_ = null;
        inputsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.flyteidl.core.LiteralMap.Builder getInputsBuilder() {
      
      onChanged();
      return getInputsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.flyteidl.core.LiteralMapOrBuilder getInputsOrBuilder() {
      if (inputsBuilder_ != null) {
        return inputsBuilder_.getMessageOrBuilder();
      } else {
        return inputs_ == null ?
            com.flyteidl.core.LiteralMap.getDefaultInstance() : inputs_;
      }
    }
    /**
     * <pre>
     * Input values to be passed for the execution
     * </pre>
     *
     * <code>.flyteidl.core.LiteralMap inputs = 2 [json_name = "inputs", deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.LiteralMap, com.flyteidl.core.LiteralMap.Builder, com.flyteidl.core.LiteralMapOrBuilder> 
        getInputsFieldBuilder() {
      if (inputsBuilder_ == null) {
        inputsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.LiteralMap, com.flyteidl.core.LiteralMap.Builder, com.flyteidl.core.LiteralMapOrBuilder>(
                getInputs(),
                getParentForChildren(),
                isClean());
        inputs_ = null;
      }
      return inputsBuilder_;
    }

    private com.flyteidl.admin.ExecutionMetadata metadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.ExecutionMetadata, com.flyteidl.admin.ExecutionMetadata.Builder, com.flyteidl.admin.ExecutionMetadataOrBuilder> metadataBuilder_;
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     * @return Whether the metadata field is set.
     */
    public boolean hasMetadata() {
      return metadataBuilder_ != null || metadata_ != null;
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     * @return The metadata.
     */
    public com.flyteidl.admin.ExecutionMetadata getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? com.flyteidl.admin.ExecutionMetadata.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder setMetadata(com.flyteidl.admin.ExecutionMetadata value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        metadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder setMetadata(
        com.flyteidl.admin.ExecutionMetadata.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder mergeMetadata(com.flyteidl.admin.ExecutionMetadata value) {
      if (metadataBuilder_ == null) {
        if (metadata_ != null) {
          metadata_ =
            com.flyteidl.admin.ExecutionMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        metadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder clearMetadata() {
      if (metadataBuilder_ == null) {
        metadata_ = null;
        onChanged();
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public com.flyteidl.admin.ExecutionMetadata.Builder getMetadataBuilder() {
      
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public com.flyteidl.admin.ExecutionMetadataOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            com.flyteidl.admin.ExecutionMetadata.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <pre>
     * Metadata for the execution
     * </pre>
     *
     * <code>.flyteidl.admin.ExecutionMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.ExecutionMetadata, com.flyteidl.admin.ExecutionMetadata.Builder, com.flyteidl.admin.ExecutionMetadataOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.ExecutionMetadata, com.flyteidl.admin.ExecutionMetadata.Builder, com.flyteidl.admin.ExecutionMetadataOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.NotificationList, com.flyteidl.admin.NotificationList.Builder, com.flyteidl.admin.NotificationListOrBuilder> notificationsBuilder_;
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     * @return Whether the notifications field is set.
     */
    @java.lang.Override
    public boolean hasNotifications() {
      return notificationOverridesCase_ == 5;
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     * @return The notifications.
     */
    @java.lang.Override
    public com.flyteidl.admin.NotificationList getNotifications() {
      if (notificationsBuilder_ == null) {
        if (notificationOverridesCase_ == 5) {
          return (com.flyteidl.admin.NotificationList) notificationOverrides_;
        }
        return com.flyteidl.admin.NotificationList.getDefaultInstance();
      } else {
        if (notificationOverridesCase_ == 5) {
          return notificationsBuilder_.getMessage();
        }
        return com.flyteidl.admin.NotificationList.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     */
    public Builder setNotifications(com.flyteidl.admin.NotificationList value) {
      if (notificationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        notificationOverrides_ = value;
        onChanged();
      } else {
        notificationsBuilder_.setMessage(value);
      }
      notificationOverridesCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     */
    public Builder setNotifications(
        com.flyteidl.admin.NotificationList.Builder builderForValue) {
      if (notificationsBuilder_ == null) {
        notificationOverrides_ = builderForValue.build();
        onChanged();
      } else {
        notificationsBuilder_.setMessage(builderForValue.build());
      }
      notificationOverridesCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     */
    public Builder mergeNotifications(com.flyteidl.admin.NotificationList value) {
      if (notificationsBuilder_ == null) {
        if (notificationOverridesCase_ == 5 &&
            notificationOverrides_ != com.flyteidl.admin.NotificationList.getDefaultInstance()) {
          notificationOverrides_ = com.flyteidl.admin.NotificationList.newBuilder((com.flyteidl.admin.NotificationList) notificationOverrides_)
              .mergeFrom(value).buildPartial();
        } else {
          notificationOverrides_ = value;
        }
        onChanged();
      } else {
        if (notificationOverridesCase_ == 5) {
          notificationsBuilder_.mergeFrom(value);
        }
        notificationsBuilder_.setMessage(value);
      }
      notificationOverridesCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     */
    public Builder clearNotifications() {
      if (notificationsBuilder_ == null) {
        if (notificationOverridesCase_ == 5) {
          notificationOverridesCase_ = 0;
          notificationOverrides_ = null;
          onChanged();
        }
      } else {
        if (notificationOverridesCase_ == 5) {
          notificationOverridesCase_ = 0;
          notificationOverrides_ = null;
        }
        notificationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     */
    public com.flyteidl.admin.NotificationList.Builder getNotificationsBuilder() {
      return getNotificationsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     */
    @java.lang.Override
    public com.flyteidl.admin.NotificationListOrBuilder getNotificationsOrBuilder() {
      if ((notificationOverridesCase_ == 5) && (notificationsBuilder_ != null)) {
        return notificationsBuilder_.getMessageOrBuilder();
      } else {
        if (notificationOverridesCase_ == 5) {
          return (com.flyteidl.admin.NotificationList) notificationOverrides_;
        }
        return com.flyteidl.admin.NotificationList.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * List of notifications based on Execution status transitions
     * When this list is not empty it is used rather than any notifications defined in the referenced launch plan.
     * When this list is empty, the notifications defined for the launch plan will be applied.
     * </pre>
     *
     * <code>.flyteidl.admin.NotificationList notifications = 5 [json_name = "notifications"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.NotificationList, com.flyteidl.admin.NotificationList.Builder, com.flyteidl.admin.NotificationListOrBuilder> 
        getNotificationsFieldBuilder() {
      if (notificationsBuilder_ == null) {
        if (!(notificationOverridesCase_ == 5)) {
          notificationOverrides_ = com.flyteidl.admin.NotificationList.getDefaultInstance();
        }
        notificationsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.NotificationList, com.flyteidl.admin.NotificationList.Builder, com.flyteidl.admin.NotificationListOrBuilder>(
                (com.flyteidl.admin.NotificationList) notificationOverrides_,
                getParentForChildren(),
                isClean());
        notificationOverrides_ = null;
      }
      notificationOverridesCase_ = 5;
      onChanged();;
      return notificationsBuilder_;
    }

    /**
     * <pre>
     * This should be set to true if all notifications are intended to be disabled for this execution.
     * </pre>
     *
     * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
     * @return Whether the disableAll field is set.
     */
    public boolean hasDisableAll() {
      return notificationOverridesCase_ == 6;
    }
    /**
     * <pre>
     * This should be set to true if all notifications are intended to be disabled for this execution.
     * </pre>
     *
     * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
     * @return The disableAll.
     */
    public boolean getDisableAll() {
      if (notificationOverridesCase_ == 6) {
        return (java.lang.Boolean) notificationOverrides_;
      }
      return false;
    }
    /**
     * <pre>
     * This should be set to true if all notifications are intended to be disabled for this execution.
     * </pre>
     *
     * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
     * @param value The disableAll to set.
     * @return This builder for chaining.
     */
    public Builder setDisableAll(boolean value) {
      notificationOverridesCase_ = 6;
      notificationOverrides_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This should be set to true if all notifications are intended to be disabled for this execution.
     * </pre>
     *
     * <code>bool disable_all = 6 [json_name = "disableAll"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDisableAll() {
      if (notificationOverridesCase_ == 6) {
        notificationOverridesCase_ = 0;
        notificationOverrides_ = null;
        onChanged();
      }
      return this;
    }

    private com.flyteidl.admin.Labels labels_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.Labels, com.flyteidl.admin.Labels.Builder, com.flyteidl.admin.LabelsOrBuilder> labelsBuilder_;
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     * @return Whether the labels field is set.
     */
    public boolean hasLabels() {
      return labelsBuilder_ != null || labels_ != null;
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     * @return The labels.
     */
    public com.flyteidl.admin.Labels getLabels() {
      if (labelsBuilder_ == null) {
        return labels_ == null ? com.flyteidl.admin.Labels.getDefaultInstance() : labels_;
      } else {
        return labelsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     */
    public Builder setLabels(com.flyteidl.admin.Labels value) {
      if (labelsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        labels_ = value;
        onChanged();
      } else {
        labelsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     */
    public Builder setLabels(
        com.flyteidl.admin.Labels.Builder builderForValue) {
      if (labelsBuilder_ == null) {
        labels_ = builderForValue.build();
        onChanged();
      } else {
        labelsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     */
    public Builder mergeLabels(com.flyteidl.admin.Labels value) {
      if (labelsBuilder_ == null) {
        if (labels_ != null) {
          labels_ =
            com.flyteidl.admin.Labels.newBuilder(labels_).mergeFrom(value).buildPartial();
        } else {
          labels_ = value;
        }
        onChanged();
      } else {
        labelsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     */
    public Builder clearLabels() {
      if (labelsBuilder_ == null) {
        labels_ = null;
        onChanged();
      } else {
        labels_ = null;
        labelsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     */
    public com.flyteidl.admin.Labels.Builder getLabelsBuilder() {
      
      onChanged();
      return getLabelsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     */
    public com.flyteidl.admin.LabelsOrBuilder getLabelsOrBuilder() {
      if (labelsBuilder_ != null) {
        return labelsBuilder_.getMessageOrBuilder();
      } else {
        return labels_ == null ?
            com.flyteidl.admin.Labels.getDefaultInstance() : labels_;
      }
    }
    /**
     * <pre>
     * Labels to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Labels labels = 7 [json_name = "labels"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.Labels, com.flyteidl.admin.Labels.Builder, com.flyteidl.admin.LabelsOrBuilder> 
        getLabelsFieldBuilder() {
      if (labelsBuilder_ == null) {
        labelsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.Labels, com.flyteidl.admin.Labels.Builder, com.flyteidl.admin.LabelsOrBuilder>(
                getLabels(),
                getParentForChildren(),
                isClean());
        labels_ = null;
      }
      return labelsBuilder_;
    }

    private com.flyteidl.admin.Annotations annotations_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.Annotations, com.flyteidl.admin.Annotations.Builder, com.flyteidl.admin.AnnotationsOrBuilder> annotationsBuilder_;
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     * @return Whether the annotations field is set.
     */
    public boolean hasAnnotations() {
      return annotationsBuilder_ != null || annotations_ != null;
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     * @return The annotations.
     */
    public com.flyteidl.admin.Annotations getAnnotations() {
      if (annotationsBuilder_ == null) {
        return annotations_ == null ? com.flyteidl.admin.Annotations.getDefaultInstance() : annotations_;
      } else {
        return annotationsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     */
    public Builder setAnnotations(com.flyteidl.admin.Annotations value) {
      if (annotationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        annotations_ = value;
        onChanged();
      } else {
        annotationsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     */
    public Builder setAnnotations(
        com.flyteidl.admin.Annotations.Builder builderForValue) {
      if (annotationsBuilder_ == null) {
        annotations_ = builderForValue.build();
        onChanged();
      } else {
        annotationsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     */
    public Builder mergeAnnotations(com.flyteidl.admin.Annotations value) {
      if (annotationsBuilder_ == null) {
        if (annotations_ != null) {
          annotations_ =
            com.flyteidl.admin.Annotations.newBuilder(annotations_).mergeFrom(value).buildPartial();
        } else {
          annotations_ = value;
        }
        onChanged();
      } else {
        annotationsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     */
    public Builder clearAnnotations() {
      if (annotationsBuilder_ == null) {
        annotations_ = null;
        onChanged();
      } else {
        annotations_ = null;
        annotationsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     */
    public com.flyteidl.admin.Annotations.Builder getAnnotationsBuilder() {
      
      onChanged();
      return getAnnotationsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     */
    public com.flyteidl.admin.AnnotationsOrBuilder getAnnotationsOrBuilder() {
      if (annotationsBuilder_ != null) {
        return annotationsBuilder_.getMessageOrBuilder();
      } else {
        return annotations_ == null ?
            com.flyteidl.admin.Annotations.getDefaultInstance() : annotations_;
      }
    }
    /**
     * <pre>
     * Annotations to apply to the execution resource.
     * </pre>
     *
     * <code>.flyteidl.admin.Annotations annotations = 8 [json_name = "annotations"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.Annotations, com.flyteidl.admin.Annotations.Builder, com.flyteidl.admin.AnnotationsOrBuilder> 
        getAnnotationsFieldBuilder() {
      if (annotationsBuilder_ == null) {
        annotationsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.Annotations, com.flyteidl.admin.Annotations.Builder, com.flyteidl.admin.AnnotationsOrBuilder>(
                getAnnotations(),
                getParentForChildren(),
                isClean());
        annotations_ = null;
      }
      return annotationsBuilder_;
    }

    private com.flyteidl.core.SecurityContext securityContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.SecurityContext, com.flyteidl.core.SecurityContext.Builder, com.flyteidl.core.SecurityContextOrBuilder> securityContextBuilder_;
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     * @return Whether the securityContext field is set.
     */
    public boolean hasSecurityContext() {
      return securityContextBuilder_ != null || securityContext_ != null;
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     * @return The securityContext.
     */
    public com.flyteidl.core.SecurityContext getSecurityContext() {
      if (securityContextBuilder_ == null) {
        return securityContext_ == null ? com.flyteidl.core.SecurityContext.getDefaultInstance() : securityContext_;
      } else {
        return securityContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     */
    public Builder setSecurityContext(com.flyteidl.core.SecurityContext value) {
      if (securityContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        securityContext_ = value;
        onChanged();
      } else {
        securityContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     */
    public Builder setSecurityContext(
        com.flyteidl.core.SecurityContext.Builder builderForValue) {
      if (securityContextBuilder_ == null) {
        securityContext_ = builderForValue.build();
        onChanged();
      } else {
        securityContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     */
    public Builder mergeSecurityContext(com.flyteidl.core.SecurityContext value) {
      if (securityContextBuilder_ == null) {
        if (securityContext_ != null) {
          securityContext_ =
            com.flyteidl.core.SecurityContext.newBuilder(securityContext_).mergeFrom(value).buildPartial();
        } else {
          securityContext_ = value;
        }
        onChanged();
      } else {
        securityContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     */
    public Builder clearSecurityContext() {
      if (securityContextBuilder_ == null) {
        securityContext_ = null;
        onChanged();
      } else {
        securityContext_ = null;
        securityContextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     */
    public com.flyteidl.core.SecurityContext.Builder getSecurityContextBuilder() {
      
      onChanged();
      return getSecurityContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     */
    public com.flyteidl.core.SecurityContextOrBuilder getSecurityContextOrBuilder() {
      if (securityContextBuilder_ != null) {
        return securityContextBuilder_.getMessageOrBuilder();
      } else {
        return securityContext_ == null ?
            com.flyteidl.core.SecurityContext.getDefaultInstance() : securityContext_;
      }
    }
    /**
     * <pre>
     * Optional: security context override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.core.SecurityContext security_context = 10 [json_name = "securityContext"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.SecurityContext, com.flyteidl.core.SecurityContext.Builder, com.flyteidl.core.SecurityContextOrBuilder> 
        getSecurityContextFieldBuilder() {
      if (securityContextBuilder_ == null) {
        securityContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.SecurityContext, com.flyteidl.core.SecurityContext.Builder, com.flyteidl.core.SecurityContextOrBuilder>(
                getSecurityContext(),
                getParentForChildren(),
                isClean());
        securityContext_ = null;
      }
      return securityContextBuilder_;
    }

    private com.flyteidl.admin.AuthRole authRole_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.AuthRole, com.flyteidl.admin.AuthRole.Builder, com.flyteidl.admin.AuthRoleOrBuilder> authRoleBuilder_;
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     * @deprecated
     * @return Whether the authRole field is set.
     */
    @java.lang.Deprecated public boolean hasAuthRole() {
      return authRoleBuilder_ != null || authRole_ != null;
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     * @deprecated
     * @return The authRole.
     */
    @java.lang.Deprecated public com.flyteidl.admin.AuthRole getAuthRole() {
      if (authRoleBuilder_ == null) {
        return authRole_ == null ? com.flyteidl.admin.AuthRole.getDefaultInstance() : authRole_;
      } else {
        return authRoleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setAuthRole(com.flyteidl.admin.AuthRole value) {
      if (authRoleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        authRole_ = value;
        onChanged();
      } else {
        authRoleBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setAuthRole(
        com.flyteidl.admin.AuthRole.Builder builderForValue) {
      if (authRoleBuilder_ == null) {
        authRole_ = builderForValue.build();
        onChanged();
      } else {
        authRoleBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeAuthRole(com.flyteidl.admin.AuthRole value) {
      if (authRoleBuilder_ == null) {
        if (authRole_ != null) {
          authRole_ =
            com.flyteidl.admin.AuthRole.newBuilder(authRole_).mergeFrom(value).buildPartial();
        } else {
          authRole_ = value;
        }
        onChanged();
      } else {
        authRoleBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearAuthRole() {
      if (authRoleBuilder_ == null) {
        authRole_ = null;
        onChanged();
      } else {
        authRole_ = null;
        authRoleBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.flyteidl.admin.AuthRole.Builder getAuthRoleBuilder() {
      
      onChanged();
      return getAuthRoleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.flyteidl.admin.AuthRoleOrBuilder getAuthRoleOrBuilder() {
      if (authRoleBuilder_ != null) {
        return authRoleBuilder_.getMessageOrBuilder();
      } else {
        return authRole_ == null ?
            com.flyteidl.admin.AuthRole.getDefaultInstance() : authRole_;
      }
    }
    /**
     * <pre>
     * Optional: auth override to apply this execution.
     * </pre>
     *
     * <code>.flyteidl.admin.AuthRole auth_role = 16 [json_name = "authRole", deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.AuthRole, com.flyteidl.admin.AuthRole.Builder, com.flyteidl.admin.AuthRoleOrBuilder> 
        getAuthRoleFieldBuilder() {
      if (authRoleBuilder_ == null) {
        authRoleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.AuthRole, com.flyteidl.admin.AuthRole.Builder, com.flyteidl.admin.AuthRoleOrBuilder>(
                getAuthRole(),
                getParentForChildren(),
                isClean());
        authRole_ = null;
      }
      return authRoleBuilder_;
    }

    private com.flyteidl.core.QualityOfService qualityOfService_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.QualityOfService, com.flyteidl.core.QualityOfService.Builder, com.flyteidl.core.QualityOfServiceOrBuilder> qualityOfServiceBuilder_;
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     * @return Whether the qualityOfService field is set.
     */
    public boolean hasQualityOfService() {
      return qualityOfServiceBuilder_ != null || qualityOfService_ != null;
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     * @return The qualityOfService.
     */
    public com.flyteidl.core.QualityOfService getQualityOfService() {
      if (qualityOfServiceBuilder_ == null) {
        return qualityOfService_ == null ? com.flyteidl.core.QualityOfService.getDefaultInstance() : qualityOfService_;
      } else {
        return qualityOfServiceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     */
    public Builder setQualityOfService(com.flyteidl.core.QualityOfService value) {
      if (qualityOfServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qualityOfService_ = value;
        onChanged();
      } else {
        qualityOfServiceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     */
    public Builder setQualityOfService(
        com.flyteidl.core.QualityOfService.Builder builderForValue) {
      if (qualityOfServiceBuilder_ == null) {
        qualityOfService_ = builderForValue.build();
        onChanged();
      } else {
        qualityOfServiceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     */
    public Builder mergeQualityOfService(com.flyteidl.core.QualityOfService value) {
      if (qualityOfServiceBuilder_ == null) {
        if (qualityOfService_ != null) {
          qualityOfService_ =
            com.flyteidl.core.QualityOfService.newBuilder(qualityOfService_).mergeFrom(value).buildPartial();
        } else {
          qualityOfService_ = value;
        }
        onChanged();
      } else {
        qualityOfServiceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     */
    public Builder clearQualityOfService() {
      if (qualityOfServiceBuilder_ == null) {
        qualityOfService_ = null;
        onChanged();
      } else {
        qualityOfService_ = null;
        qualityOfServiceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     */
    public com.flyteidl.core.QualityOfService.Builder getQualityOfServiceBuilder() {
      
      onChanged();
      return getQualityOfServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     */
    public com.flyteidl.core.QualityOfServiceOrBuilder getQualityOfServiceOrBuilder() {
      if (qualityOfServiceBuilder_ != null) {
        return qualityOfServiceBuilder_.getMessageOrBuilder();
      } else {
        return qualityOfService_ == null ?
            com.flyteidl.core.QualityOfService.getDefaultInstance() : qualityOfService_;
      }
    }
    /**
     * <pre>
     * Indicates the runtime priority of the execution.
     * </pre>
     *
     * <code>.flyteidl.core.QualityOfService quality_of_service = 17 [json_name = "qualityOfService"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.core.QualityOfService, com.flyteidl.core.QualityOfService.Builder, com.flyteidl.core.QualityOfServiceOrBuilder> 
        getQualityOfServiceFieldBuilder() {
      if (qualityOfServiceBuilder_ == null) {
        qualityOfServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.core.QualityOfService, com.flyteidl.core.QualityOfService.Builder, com.flyteidl.core.QualityOfServiceOrBuilder>(
                getQualityOfService(),
                getParentForChildren(),
                isClean());
        qualityOfService_ = null;
      }
      return qualityOfServiceBuilder_;
    }

    private int maxParallelism_ ;
    /**
     * <pre>
     * Controls the maximum number of task nodes that can be run in parallel for the entire workflow.
     * This is useful to achieve fairness. Note: MapTasks are regarded as one unit,
     * and parallelism/concurrency of MapTasks is independent from this.
     * </pre>
     *
     * <code>int32 max_parallelism = 18 [json_name = "maxParallelism"];</code>
     * @return The maxParallelism.
     */
    @java.lang.Override
    public int getMaxParallelism() {
      return maxParallelism_;
    }
    /**
     * <pre>
     * Controls the maximum number of task nodes that can be run in parallel for the entire workflow.
     * This is useful to achieve fairness. Note: MapTasks are regarded as one unit,
     * and parallelism/concurrency of MapTasks is independent from this.
     * </pre>
     *
     * <code>int32 max_parallelism = 18 [json_name = "maxParallelism"];</code>
     * @param value The maxParallelism to set.
     * @return This builder for chaining.
     */
    public Builder setMaxParallelism(int value) {
      
      maxParallelism_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Controls the maximum number of task nodes that can be run in parallel for the entire workflow.
     * This is useful to achieve fairness. Note: MapTasks are regarded as one unit,
     * and parallelism/concurrency of MapTasks is independent from this.
     * </pre>
     *
     * <code>int32 max_parallelism = 18 [json_name = "maxParallelism"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxParallelism() {
      
      maxParallelism_ = 0;
      onChanged();
      return this;
    }

    private com.flyteidl.admin.RawOutputDataConfig rawOutputDataConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.RawOutputDataConfig, com.flyteidl.admin.RawOutputDataConfig.Builder, com.flyteidl.admin.RawOutputDataConfigOrBuilder> rawOutputDataConfigBuilder_;
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     * @return Whether the rawOutputDataConfig field is set.
     */
    public boolean hasRawOutputDataConfig() {
      return rawOutputDataConfigBuilder_ != null || rawOutputDataConfig_ != null;
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     * @return The rawOutputDataConfig.
     */
    public com.flyteidl.admin.RawOutputDataConfig getRawOutputDataConfig() {
      if (rawOutputDataConfigBuilder_ == null) {
        return rawOutputDataConfig_ == null ? com.flyteidl.admin.RawOutputDataConfig.getDefaultInstance() : rawOutputDataConfig_;
      } else {
        return rawOutputDataConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     */
    public Builder setRawOutputDataConfig(com.flyteidl.admin.RawOutputDataConfig value) {
      if (rawOutputDataConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rawOutputDataConfig_ = value;
        onChanged();
      } else {
        rawOutputDataConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     */
    public Builder setRawOutputDataConfig(
        com.flyteidl.admin.RawOutputDataConfig.Builder builderForValue) {
      if (rawOutputDataConfigBuilder_ == null) {
        rawOutputDataConfig_ = builderForValue.build();
        onChanged();
      } else {
        rawOutputDataConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     */
    public Builder mergeRawOutputDataConfig(com.flyteidl.admin.RawOutputDataConfig value) {
      if (rawOutputDataConfigBuilder_ == null) {
        if (rawOutputDataConfig_ != null) {
          rawOutputDataConfig_ =
            com.flyteidl.admin.RawOutputDataConfig.newBuilder(rawOutputDataConfig_).mergeFrom(value).buildPartial();
        } else {
          rawOutputDataConfig_ = value;
        }
        onChanged();
      } else {
        rawOutputDataConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     */
    public Builder clearRawOutputDataConfig() {
      if (rawOutputDataConfigBuilder_ == null) {
        rawOutputDataConfig_ = null;
        onChanged();
      } else {
        rawOutputDataConfig_ = null;
        rawOutputDataConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     */
    public com.flyteidl.admin.RawOutputDataConfig.Builder getRawOutputDataConfigBuilder() {
      
      onChanged();
      return getRawOutputDataConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     */
    public com.flyteidl.admin.RawOutputDataConfigOrBuilder getRawOutputDataConfigOrBuilder() {
      if (rawOutputDataConfigBuilder_ != null) {
        return rawOutputDataConfigBuilder_.getMessageOrBuilder();
      } else {
        return rawOutputDataConfig_ == null ?
            com.flyteidl.admin.RawOutputDataConfig.getDefaultInstance() : rawOutputDataConfig_;
      }
    }
    /**
     * <pre>
     * User setting to configure where to store offloaded data (i.e. Blobs, structured datasets, query data, etc.).
     * This should be a prefix like s3://my-bucket/my-data
     * </pre>
     *
     * <code>.flyteidl.admin.RawOutputDataConfig raw_output_data_config = 19 [json_name = "rawOutputDataConfig"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.RawOutputDataConfig, com.flyteidl.admin.RawOutputDataConfig.Builder, com.flyteidl.admin.RawOutputDataConfigOrBuilder> 
        getRawOutputDataConfigFieldBuilder() {
      if (rawOutputDataConfigBuilder_ == null) {
        rawOutputDataConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.RawOutputDataConfig, com.flyteidl.admin.RawOutputDataConfig.Builder, com.flyteidl.admin.RawOutputDataConfigOrBuilder>(
                getRawOutputDataConfig(),
                getParentForChildren(),
                isClean());
        rawOutputDataConfig_ = null;
      }
      return rawOutputDataConfigBuilder_;
    }

    private com.flyteidl.admin.ClusterAssignment clusterAssignment_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.ClusterAssignment, com.flyteidl.admin.ClusterAssignment.Builder, com.flyteidl.admin.ClusterAssignmentOrBuilder> clusterAssignmentBuilder_;
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     * @return Whether the clusterAssignment field is set.
     */
    public boolean hasClusterAssignment() {
      return clusterAssignmentBuilder_ != null || clusterAssignment_ != null;
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     * @return The clusterAssignment.
     */
    public com.flyteidl.admin.ClusterAssignment getClusterAssignment() {
      if (clusterAssignmentBuilder_ == null) {
        return clusterAssignment_ == null ? com.flyteidl.admin.ClusterAssignment.getDefaultInstance() : clusterAssignment_;
      } else {
        return clusterAssignmentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     */
    public Builder setClusterAssignment(com.flyteidl.admin.ClusterAssignment value) {
      if (clusterAssignmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clusterAssignment_ = value;
        onChanged();
      } else {
        clusterAssignmentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     */
    public Builder setClusterAssignment(
        com.flyteidl.admin.ClusterAssignment.Builder builderForValue) {
      if (clusterAssignmentBuilder_ == null) {
        clusterAssignment_ = builderForValue.build();
        onChanged();
      } else {
        clusterAssignmentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     */
    public Builder mergeClusterAssignment(com.flyteidl.admin.ClusterAssignment value) {
      if (clusterAssignmentBuilder_ == null) {
        if (clusterAssignment_ != null) {
          clusterAssignment_ =
            com.flyteidl.admin.ClusterAssignment.newBuilder(clusterAssignment_).mergeFrom(value).buildPartial();
        } else {
          clusterAssignment_ = value;
        }
        onChanged();
      } else {
        clusterAssignmentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     */
    public Builder clearClusterAssignment() {
      if (clusterAssignmentBuilder_ == null) {
        clusterAssignment_ = null;
        onChanged();
      } else {
        clusterAssignment_ = null;
        clusterAssignmentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     */
    public com.flyteidl.admin.ClusterAssignment.Builder getClusterAssignmentBuilder() {
      
      onChanged();
      return getClusterAssignmentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     */
    public com.flyteidl.admin.ClusterAssignmentOrBuilder getClusterAssignmentOrBuilder() {
      if (clusterAssignmentBuilder_ != null) {
        return clusterAssignmentBuilder_.getMessageOrBuilder();
      } else {
        return clusterAssignment_ == null ?
            com.flyteidl.admin.ClusterAssignment.getDefaultInstance() : clusterAssignment_;
      }
    }
    /**
     * <pre>
     * Controls how to select an available cluster on which this execution should run.
     * </pre>
     *
     * <code>.flyteidl.admin.ClusterAssignment cluster_assignment = 20 [json_name = "clusterAssignment"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.flyteidl.admin.ClusterAssignment, com.flyteidl.admin.ClusterAssignment.Builder, com.flyteidl.admin.ClusterAssignmentOrBuilder> 
        getClusterAssignmentFieldBuilder() {
      if (clusterAssignmentBuilder_ == null) {
        clusterAssignmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.flyteidl.admin.ClusterAssignment, com.flyteidl.admin.ClusterAssignment.Builder, com.flyteidl.admin.ClusterAssignmentOrBuilder>(
                getClusterAssignment(),
                getParentForChildren(),
                isClean());
        clusterAssignment_ = null;
      }
      return clusterAssignmentBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:flyteidl.admin.ExecutionSpec)
  }

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ExecutionSpec)
  private static final com.flyteidl.admin.ExecutionSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.flyteidl.admin.ExecutionSpec();
  }

  public static com.flyteidl.admin.ExecutionSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExecutionSpec>
      PARSER = new com.google.protobuf.AbstractParser<ExecutionSpec>() {
    @java.lang.Override
    public ExecutionSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ExecutionSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ExecutionSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExecutionSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.flyteidl.admin.ExecutionSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

