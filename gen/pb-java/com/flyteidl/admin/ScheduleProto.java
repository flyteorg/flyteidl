// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/schedule.proto

package com.flyteidl.admin;

public final class ScheduleProto {
  private ScheduleProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Represents a frequency at which to run a schedule.
   * </pre>
   *
   * Protobuf enum {@code flyteidl.admin.FixedRateUnit}
   */
  public enum FixedRateUnit
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MINUTE = 0;</code>
     */
    MINUTE(0),
    /**
     * <code>HOUR = 1;</code>
     */
    HOUR(1),
    /**
     * <code>DAY = 2;</code>
     */
    DAY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MINUTE = 0;</code>
     */
    public static final int MINUTE_VALUE = 0;
    /**
     * <code>HOUR = 1;</code>
     */
    public static final int HOUR_VALUE = 1;
    /**
     * <code>DAY = 2;</code>
     */
    public static final int DAY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FixedRateUnit valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FixedRateUnit forNumber(int value) {
      switch (value) {
        case 0: return MINUTE;
        case 1: return HOUR;
        case 2: return DAY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FixedRateUnit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FixedRateUnit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FixedRateUnit>() {
            public FixedRateUnit findValueByNumber(int number) {
              return FixedRateUnit.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.flyteidl.admin.ScheduleProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final FixedRateUnit[] VALUES = values();

    public static FixedRateUnit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FixedRateUnit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.admin.FixedRateUnit)
  }

  public interface FixedRateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.FixedRate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 value = 1 [json_name = "value"];</code>
     * @return The value.
     */
    int getValue();

    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
     * @return The enum numeric value on the wire for unit.
     */
    int getUnitValue();
    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
     * @return The unit.
     */
    com.flyteidl.admin.ScheduleProto.FixedRateUnit getUnit();
  }
  /**
   * <pre>
   * Option for schedules run at a certain frequency e.g. every 2 minutes.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.FixedRate}
   */
  public static final class FixedRate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.FixedRate)
      FixedRateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FixedRate.newBuilder() to construct.
    private FixedRate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FixedRate() {
      unit_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FixedRate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_FixedRate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_FixedRate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.admin.ScheduleProto.FixedRate.class, com.flyteidl.admin.ScheduleProto.FixedRate.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>uint32 value = 1 [json_name = "value"];</code>
     * @return The value.
     */
    @java.lang.Override
    public int getValue() {
      return value_;
    }

    public static final int UNIT_FIELD_NUMBER = 2;
    private int unit_;
    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
     * @return The enum numeric value on the wire for unit.
     */
    @java.lang.Override public int getUnitValue() {
      return unit_;
    }
    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
     * @return The unit.
     */
    @java.lang.Override public com.flyteidl.admin.ScheduleProto.FixedRateUnit getUnit() {
      @SuppressWarnings("deprecation")
      com.flyteidl.admin.ScheduleProto.FixedRateUnit result = com.flyteidl.admin.ScheduleProto.FixedRateUnit.valueOf(unit_);
      return result == null ? com.flyteidl.admin.ScheduleProto.FixedRateUnit.UNRECOGNIZED : result;
    }

    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.FixedRate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.admin.ScheduleProto.FixedRate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Option for schedules run at a certain frequency e.g. every 2 minutes.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.FixedRate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.FixedRate)
        com.flyteidl.admin.ScheduleProto.FixedRateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_FixedRate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_FixedRate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.admin.ScheduleProto.FixedRate.class, com.flyteidl.admin.ScheduleProto.FixedRate.Builder.class);
      }

      // Construct using com.flyteidl.admin.ScheduleProto.FixedRate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0;

        unit_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_FixedRate_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.FixedRate getDefaultInstanceForType() {
        return com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.FixedRate build() {
        com.flyteidl.admin.ScheduleProto.FixedRate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.FixedRate buildPartial() {
        com.flyteidl.admin.ScheduleProto.FixedRate result = new com.flyteidl.admin.ScheduleProto.FixedRate(this);
        result.value_ = value_;
        result.unit_ = unit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private int value_ ;
      /**
       * <code>uint32 value = 1 [json_name = "value"];</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }
      /**
       * <code>uint32 value = 1 [json_name = "value"];</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 value = 1 [json_name = "value"];</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }

      private int unit_ = 0;
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
       * @return The enum numeric value on the wire for unit.
       */
      @java.lang.Override public int getUnitValue() {
        return unit_;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
       * @param value The enum numeric value on the wire for unit to set.
       * @return This builder for chaining.
       */
      public Builder setUnitValue(int value) {
        
        unit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
       * @return The unit.
       */
      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.FixedRateUnit getUnit() {
        @SuppressWarnings("deprecation")
        com.flyteidl.admin.ScheduleProto.FixedRateUnit result = com.flyteidl.admin.ScheduleProto.FixedRateUnit.valueOf(unit_);
        return result == null ? com.flyteidl.admin.ScheduleProto.FixedRateUnit.UNRECOGNIZED : result;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
       * @param value The unit to set.
       * @return This builder for chaining.
       */
      public Builder setUnit(com.flyteidl.admin.ScheduleProto.FixedRateUnit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        unit_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2 [json_name = "unit"];</code>
       * @return This builder for chaining.
       */
      public Builder clearUnit() {
        
        unit_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.FixedRate)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.FixedRate)
    private static final com.flyteidl.admin.ScheduleProto.FixedRate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.admin.ScheduleProto.FixedRate();
    }

    public static com.flyteidl.admin.ScheduleProto.FixedRate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FixedRate>
        PARSER = new com.google.protobuf.AbstractParser<FixedRate>() {
      @java.lang.Override
      public FixedRate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FixedRate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FixedRate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.admin.ScheduleProto.FixedRate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CronScheduleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.CronSchedule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
     * Also supports nonstandard predefined scheduling definitions
     * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
     * except &#64;reboot
     * </pre>
     *
     * <code>string schedule = 1 [json_name = "schedule"];</code>
     * @return The schedule.
     */
    java.lang.String getSchedule();
    /**
     * <pre>
     * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
     * Also supports nonstandard predefined scheduling definitions
     * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
     * except &#64;reboot
     * </pre>
     *
     * <code>string schedule = 1 [json_name = "schedule"];</code>
     * @return The bytes for schedule.
     */
    com.google.protobuf.ByteString
        getScheduleBytes();

    /**
     * <pre>
     * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
     * </pre>
     *
     * <code>string offset = 2 [json_name = "offset"];</code>
     * @return The offset.
     */
    java.lang.String getOffset();
    /**
     * <pre>
     * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
     * </pre>
     *
     * <code>string offset = 2 [json_name = "offset"];</code>
     * @return The bytes for offset.
     */
    com.google.protobuf.ByteString
        getOffsetBytes();
  }
  /**
   * <pre>
   * Options for schedules to run according to a cron expression.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.CronSchedule}
   */
  public static final class CronSchedule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.CronSchedule)
      CronScheduleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CronSchedule.newBuilder() to construct.
    private CronSchedule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CronSchedule() {
      schedule_ = "";
      offset_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CronSchedule();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_CronSchedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_CronSchedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.admin.ScheduleProto.CronSchedule.class, com.flyteidl.admin.ScheduleProto.CronSchedule.Builder.class);
    }

    public static final int SCHEDULE_FIELD_NUMBER = 1;
    private volatile java.lang.Object schedule_;
    /**
     * <pre>
     * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
     * Also supports nonstandard predefined scheduling definitions
     * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
     * except &#64;reboot
     * </pre>
     *
     * <code>string schedule = 1 [json_name = "schedule"];</code>
     * @return The schedule.
     */
    @java.lang.Override
    public java.lang.String getSchedule() {
      java.lang.Object ref = schedule_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schedule_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
     * Also supports nonstandard predefined scheduling definitions
     * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
     * except &#64;reboot
     * </pre>
     *
     * <code>string schedule = 1 [json_name = "schedule"];</code>
     * @return The bytes for schedule.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getScheduleBytes() {
      java.lang.Object ref = schedule_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schedule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 2;
    private volatile java.lang.Object offset_;
    /**
     * <pre>
     * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
     * </pre>
     *
     * <code>string offset = 2 [json_name = "offset"];</code>
     * @return The offset.
     */
    @java.lang.Override
    public java.lang.String getOffset() {
      java.lang.Object ref = offset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        offset_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
     * </pre>
     *
     * <code>string offset = 2 [json_name = "offset"];</code>
     * @return The bytes for offset.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOffsetBytes() {
      java.lang.Object ref = offset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        offset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.CronSchedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.admin.ScheduleProto.CronSchedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Options for schedules to run according to a cron expression.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.CronSchedule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.CronSchedule)
        com.flyteidl.admin.ScheduleProto.CronScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_CronSchedule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_CronSchedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.admin.ScheduleProto.CronSchedule.class, com.flyteidl.admin.ScheduleProto.CronSchedule.Builder.class);
      }

      // Construct using com.flyteidl.admin.ScheduleProto.CronSchedule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        schedule_ = "";

        offset_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_CronSchedule_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.CronSchedule getDefaultInstanceForType() {
        return com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.CronSchedule build() {
        com.flyteidl.admin.ScheduleProto.CronSchedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.CronSchedule buildPartial() {
        com.flyteidl.admin.ScheduleProto.CronSchedule result = new com.flyteidl.admin.ScheduleProto.CronSchedule(this);
        result.schedule_ = schedule_;
        result.offset_ = offset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      private java.lang.Object schedule_ = "";
      /**
       * <pre>
       * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
       * Also supports nonstandard predefined scheduling definitions
       * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
       * except &#64;reboot
       * </pre>
       *
       * <code>string schedule = 1 [json_name = "schedule"];</code>
       * @return The schedule.
       */
      public java.lang.String getSchedule() {
        java.lang.Object ref = schedule_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          schedule_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
       * Also supports nonstandard predefined scheduling definitions
       * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
       * except &#64;reboot
       * </pre>
       *
       * <code>string schedule = 1 [json_name = "schedule"];</code>
       * @return The bytes for schedule.
       */
      public com.google.protobuf.ByteString
          getScheduleBytes() {
        java.lang.Object ref = schedule_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          schedule_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
       * Also supports nonstandard predefined scheduling definitions
       * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
       * except &#64;reboot
       * </pre>
       *
       * <code>string schedule = 1 [json_name = "schedule"];</code>
       * @param value The schedule to set.
       * @return This builder for chaining.
       */
      public Builder setSchedule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        schedule_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
       * Also supports nonstandard predefined scheduling definitions
       * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
       * except &#64;reboot
       * </pre>
       *
       * <code>string schedule = 1 [json_name = "schedule"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSchedule() {
        
        schedule_ = getDefaultInstance().getSchedule();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard/default cron implementation as described by https://en.wikipedia.org/wiki/Cron#CRON_expression;
       * Also supports nonstandard predefined scheduling definitions
       * as described by https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions
       * except &#64;reboot
       * </pre>
       *
       * <code>string schedule = 1 [json_name = "schedule"];</code>
       * @param value The bytes for schedule to set.
       * @return This builder for chaining.
       */
      public Builder setScheduleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        schedule_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object offset_ = "";
      /**
       * <pre>
       * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
       * </pre>
       *
       * <code>string offset = 2 [json_name = "offset"];</code>
       * @return The offset.
       */
      public java.lang.String getOffset() {
        java.lang.Object ref = offset_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          offset_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
       * </pre>
       *
       * <code>string offset = 2 [json_name = "offset"];</code>
       * @return The bytes for offset.
       */
      public com.google.protobuf.ByteString
          getOffsetBytes() {
        java.lang.Object ref = offset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          offset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
       * </pre>
       *
       * <code>string offset = 2 [json_name = "offset"];</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
       * </pre>
       *
       * <code>string offset = 2 [json_name = "offset"];</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        
        offset_ = getDefaultInstance().getOffset();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ISO 8601 duration as described by https://en.wikipedia.org/wiki/ISO_8601#Durations
       * </pre>
       *
       * <code>string offset = 2 [json_name = "offset"];</code>
       * @param value The bytes for offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        offset_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.CronSchedule)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.CronSchedule)
    private static final com.flyteidl.admin.ScheduleProto.CronSchedule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.admin.ScheduleProto.CronSchedule();
    }

    public static com.flyteidl.admin.ScheduleProto.CronSchedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CronSchedule>
        PARSER = new com.google.protobuf.AbstractParser<CronSchedule>() {
      @java.lang.Override
      public CronSchedule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CronSchedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CronSchedule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.admin.ScheduleProto.CronSchedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScheduleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.Schedule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return Whether the cronExpression field is set.
     */
    @java.lang.Deprecated boolean hasCronExpression();
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return The cronExpression.
     */
    @java.lang.Deprecated java.lang.String getCronExpression();
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return The bytes for cronExpression.
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getCronExpressionBytes();

    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     * @return Whether the rate field is set.
     */
    boolean hasRate();
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     * @return The rate.
     */
    com.flyteidl.admin.ScheduleProto.FixedRate getRate();
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    com.flyteidl.admin.ScheduleProto.FixedRateOrBuilder getRateOrBuilder();

    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     * @return Whether the cronSchedule field is set.
     */
    boolean hasCronSchedule();
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     * @return The cronSchedule.
     */
    com.flyteidl.admin.ScheduleProto.CronSchedule getCronSchedule();
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    com.flyteidl.admin.ScheduleProto.CronScheduleOrBuilder getCronScheduleOrBuilder();

    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @return The kickoffTimeInputArg.
     */
    java.lang.String getKickoffTimeInputArg();
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @return The bytes for kickoffTimeInputArg.
     */
    com.google.protobuf.ByteString
        getKickoffTimeInputArgBytes();

    public com.flyteidl.admin.ScheduleProto.Schedule.ScheduleExpressionCase getScheduleExpressionCase();
  }
  /**
   * <pre>
   * Defines complete set of information required to trigger an execution on a schedule.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.Schedule}
   */
  public static final class Schedule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.Schedule)
      ScheduleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Schedule.newBuilder() to construct.
    private Schedule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Schedule() {
      kickoffTimeInputArg_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Schedule();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.flyteidl.admin.ScheduleProto.Schedule.class, com.flyteidl.admin.ScheduleProto.Schedule.Builder.class);
    }

    private int scheduleExpressionCase_ = 0;
    private java.lang.Object scheduleExpression_;
    public enum ScheduleExpressionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      @java.lang.Deprecated CRON_EXPRESSION(1),
      RATE(2),
      CRON_SCHEDULE(4),
      SCHEDULEEXPRESSION_NOT_SET(0);
      private final int value;
      private ScheduleExpressionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ScheduleExpressionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ScheduleExpressionCase forNumber(int value) {
        switch (value) {
          case 1: return CRON_EXPRESSION;
          case 2: return RATE;
          case 4: return CRON_SCHEDULE;
          case 0: return SCHEDULEEXPRESSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ScheduleExpressionCase
    getScheduleExpressionCase() {
      return ScheduleExpressionCase.forNumber(
          scheduleExpressionCase_);
    }

    public static final int CRON_EXPRESSION_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return Whether the cronExpression field is set.
     */
    @java.lang.Deprecated public boolean hasCronExpression() {
      return scheduleExpressionCase_ == 1;
    }
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return The cronExpression.
     */
    @java.lang.Deprecated public java.lang.String getCronExpression() {
      java.lang.Object ref = "";
      if (scheduleExpressionCase_ == 1) {
        ref = scheduleExpression_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (scheduleExpressionCase_ == 1) {
          scheduleExpression_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
     * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
     * </pre>
     *
     * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
     * @deprecated
     * @return The bytes for cronExpression.
     */
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getCronExpressionBytes() {
      java.lang.Object ref = "";
      if (scheduleExpressionCase_ == 1) {
        ref = scheduleExpression_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (scheduleExpressionCase_ == 1) {
          scheduleExpression_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RATE_FIELD_NUMBER = 2;
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     * @return Whether the rate field is set.
     */
    @java.lang.Override
    public boolean hasRate() {
      return scheduleExpressionCase_ == 2;
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     * @return The rate.
     */
    @java.lang.Override
    public com.flyteidl.admin.ScheduleProto.FixedRate getRate() {
      if (scheduleExpressionCase_ == 2) {
         return (com.flyteidl.admin.ScheduleProto.FixedRate) scheduleExpression_;
      }
      return com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
     */
    @java.lang.Override
    public com.flyteidl.admin.ScheduleProto.FixedRateOrBuilder getRateOrBuilder() {
      if (scheduleExpressionCase_ == 2) {
         return (com.flyteidl.admin.ScheduleProto.FixedRate) scheduleExpression_;
      }
      return com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance();
    }

    public static final int CRON_SCHEDULE_FIELD_NUMBER = 4;
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     * @return Whether the cronSchedule field is set.
     */
    @java.lang.Override
    public boolean hasCronSchedule() {
      return scheduleExpressionCase_ == 4;
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     * @return The cronSchedule.
     */
    @java.lang.Override
    public com.flyteidl.admin.ScheduleProto.CronSchedule getCronSchedule() {
      if (scheduleExpressionCase_ == 4) {
         return (com.flyteidl.admin.ScheduleProto.CronSchedule) scheduleExpression_;
      }
      return com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
     */
    @java.lang.Override
    public com.flyteidl.admin.ScheduleProto.CronScheduleOrBuilder getCronScheduleOrBuilder() {
      if (scheduleExpressionCase_ == 4) {
         return (com.flyteidl.admin.ScheduleProto.CronSchedule) scheduleExpression_;
      }
      return com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance();
    }

    public static final int KICKOFF_TIME_INPUT_ARG_FIELD_NUMBER = 3;
    private volatile java.lang.Object kickoffTimeInputArg_;
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @return The kickoffTimeInputArg.
     */
    @java.lang.Override
    public java.lang.String getKickoffTimeInputArg() {
      java.lang.Object ref = kickoffTimeInputArg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kickoffTimeInputArg_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
     * @return The bytes for kickoffTimeInputArg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKickoffTimeInputArgBytes() {
      java.lang.Object ref = kickoffTimeInputArg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kickoffTimeInputArg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.flyteidl.admin.ScheduleProto.Schedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.flyteidl.admin.ScheduleProto.Schedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines complete set of information required to trigger an execution on a schedule.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.Schedule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.Schedule)
        com.flyteidl.admin.ScheduleProto.ScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.flyteidl.admin.ScheduleProto.Schedule.class, com.flyteidl.admin.ScheduleProto.Schedule.Builder.class);
      }

      // Construct using com.flyteidl.admin.ScheduleProto.Schedule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        kickoffTimeInputArg_ = "";

        scheduleExpressionCase_ = 0;
        scheduleExpression_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.flyteidl.admin.ScheduleProto.internal_static_flyteidl_admin_Schedule_descriptor;
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.Schedule getDefaultInstanceForType() {
        return com.flyteidl.admin.ScheduleProto.Schedule.getDefaultInstance();
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.Schedule build() {
        com.flyteidl.admin.ScheduleProto.Schedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.Schedule buildPartial() {
        com.flyteidl.admin.ScheduleProto.Schedule result = new com.flyteidl.admin.ScheduleProto.Schedule(this);
        if (scheduleExpressionCase_ == 1) {
          result.scheduleExpression_ = scheduleExpression_;
        }
        if (scheduleExpressionCase_ == 2) {
          if (rateBuilder_ == null) {
            result.scheduleExpression_ = scheduleExpression_;
          } else {
            result.scheduleExpression_ = rateBuilder_.build();
          }
        }
        if (scheduleExpressionCase_ == 4) {
          if (cronScheduleBuilder_ == null) {
            result.scheduleExpression_ = scheduleExpression_;
          } else {
            result.scheduleExpression_ = cronScheduleBuilder_.build();
          }
        }
        result.kickoffTimeInputArg_ = kickoffTimeInputArg_;
        result.scheduleExpressionCase_ = scheduleExpressionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      private int scheduleExpressionCase_ = 0;
      private java.lang.Object scheduleExpression_;
      public ScheduleExpressionCase
          getScheduleExpressionCase() {
        return ScheduleExpressionCase.forNumber(
            scheduleExpressionCase_);
      }

      public Builder clearScheduleExpression() {
        scheduleExpressionCase_ = 0;
        scheduleExpression_ = null;
        onChanged();
        return this;
      }


      /**
       * <pre>
       * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
       * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
       * </pre>
       *
       * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
       * @deprecated
       * @return Whether the cronExpression field is set.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean hasCronExpression() {
        return scheduleExpressionCase_ == 1;
      }
      /**
       * <pre>
       * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
       * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
       * </pre>
       *
       * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
       * @deprecated
       * @return The cronExpression.
       */
      @java.lang.Override
      @java.lang.Deprecated public java.lang.String getCronExpression() {
        java.lang.Object ref = "";
        if (scheduleExpressionCase_ == 1) {
          ref = scheduleExpression_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (scheduleExpressionCase_ == 1) {
            scheduleExpression_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
       * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
       * </pre>
       *
       * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
       * @deprecated
       * @return The bytes for cronExpression.
       */
      @java.lang.Override
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getCronExpressionBytes() {
        java.lang.Object ref = "";
        if (scheduleExpressionCase_ == 1) {
          ref = scheduleExpression_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (scheduleExpressionCase_ == 1) {
            scheduleExpression_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
       * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
       * </pre>
       *
       * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
       * @deprecated
       * @param value The cronExpression to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setCronExpression(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  scheduleExpressionCase_ = 1;
        scheduleExpression_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
       * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
       * </pre>
       *
       * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
       * @deprecated
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearCronExpression() {
        if (scheduleExpressionCase_ == 1) {
          scheduleExpressionCase_ = 0;
          scheduleExpression_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Uses AWS syntax: Minutes Hours Day-of-month Month Day-of-week Year
       * e.g. for a schedule that runs every 15 minutes: 0/15 * * * ? *
       * </pre>
       *
       * <code>string cron_expression = 1 [json_name = "cronExpression", deprecated = true];</code>
       * @deprecated
       * @param value The bytes for cronExpression to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setCronExpressionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        scheduleExpressionCase_ = 1;
        scheduleExpression_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.admin.ScheduleProto.FixedRate, com.flyteidl.admin.ScheduleProto.FixedRate.Builder, com.flyteidl.admin.ScheduleProto.FixedRateOrBuilder> rateBuilder_;
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       * @return Whether the rate field is set.
       */
      @java.lang.Override
      public boolean hasRate() {
        return scheduleExpressionCase_ == 2;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       * @return The rate.
       */
      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.FixedRate getRate() {
        if (rateBuilder_ == null) {
          if (scheduleExpressionCase_ == 2) {
            return (com.flyteidl.admin.ScheduleProto.FixedRate) scheduleExpression_;
          }
          return com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance();
        } else {
          if (scheduleExpressionCase_ == 2) {
            return rateBuilder_.getMessage();
          }
          return com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       */
      public Builder setRate(com.flyteidl.admin.ScheduleProto.FixedRate value) {
        if (rateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduleExpression_ = value;
          onChanged();
        } else {
          rateBuilder_.setMessage(value);
        }
        scheduleExpressionCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       */
      public Builder setRate(
          com.flyteidl.admin.ScheduleProto.FixedRate.Builder builderForValue) {
        if (rateBuilder_ == null) {
          scheduleExpression_ = builderForValue.build();
          onChanged();
        } else {
          rateBuilder_.setMessage(builderForValue.build());
        }
        scheduleExpressionCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       */
      public Builder mergeRate(com.flyteidl.admin.ScheduleProto.FixedRate value) {
        if (rateBuilder_ == null) {
          if (scheduleExpressionCase_ == 2 &&
              scheduleExpression_ != com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance()) {
            scheduleExpression_ = com.flyteidl.admin.ScheduleProto.FixedRate.newBuilder((com.flyteidl.admin.ScheduleProto.FixedRate) scheduleExpression_)
                .mergeFrom(value).buildPartial();
          } else {
            scheduleExpression_ = value;
          }
          onChanged();
        } else {
          if (scheduleExpressionCase_ == 2) {
            rateBuilder_.mergeFrom(value);
          }
          rateBuilder_.setMessage(value);
        }
        scheduleExpressionCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       */
      public Builder clearRate() {
        if (rateBuilder_ == null) {
          if (scheduleExpressionCase_ == 2) {
            scheduleExpressionCase_ = 0;
            scheduleExpression_ = null;
            onChanged();
          }
        } else {
          if (scheduleExpressionCase_ == 2) {
            scheduleExpressionCase_ = 0;
            scheduleExpression_ = null;
          }
          rateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       */
      public com.flyteidl.admin.ScheduleProto.FixedRate.Builder getRateBuilder() {
        return getRateFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       */
      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.FixedRateOrBuilder getRateOrBuilder() {
        if ((scheduleExpressionCase_ == 2) && (rateBuilder_ != null)) {
          return rateBuilder_.getMessageOrBuilder();
        } else {
          if (scheduleExpressionCase_ == 2) {
            return (com.flyteidl.admin.ScheduleProto.FixedRate) scheduleExpression_;
          }
          return com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2 [json_name = "rate"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.admin.ScheduleProto.FixedRate, com.flyteidl.admin.ScheduleProto.FixedRate.Builder, com.flyteidl.admin.ScheduleProto.FixedRateOrBuilder> 
          getRateFieldBuilder() {
        if (rateBuilder_ == null) {
          if (!(scheduleExpressionCase_ == 2)) {
            scheduleExpression_ = com.flyteidl.admin.ScheduleProto.FixedRate.getDefaultInstance();
          }
          rateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.admin.ScheduleProto.FixedRate, com.flyteidl.admin.ScheduleProto.FixedRate.Builder, com.flyteidl.admin.ScheduleProto.FixedRateOrBuilder>(
                  (com.flyteidl.admin.ScheduleProto.FixedRate) scheduleExpression_,
                  getParentForChildren(),
                  isClean());
          scheduleExpression_ = null;
        }
        scheduleExpressionCase_ = 2;
        onChanged();;
        return rateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.admin.ScheduleProto.CronSchedule, com.flyteidl.admin.ScheduleProto.CronSchedule.Builder, com.flyteidl.admin.ScheduleProto.CronScheduleOrBuilder> cronScheduleBuilder_;
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       * @return Whether the cronSchedule field is set.
       */
      @java.lang.Override
      public boolean hasCronSchedule() {
        return scheduleExpressionCase_ == 4;
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       * @return The cronSchedule.
       */
      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.CronSchedule getCronSchedule() {
        if (cronScheduleBuilder_ == null) {
          if (scheduleExpressionCase_ == 4) {
            return (com.flyteidl.admin.ScheduleProto.CronSchedule) scheduleExpression_;
          }
          return com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance();
        } else {
          if (scheduleExpressionCase_ == 4) {
            return cronScheduleBuilder_.getMessage();
          }
          return com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       */
      public Builder setCronSchedule(com.flyteidl.admin.ScheduleProto.CronSchedule value) {
        if (cronScheduleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduleExpression_ = value;
          onChanged();
        } else {
          cronScheduleBuilder_.setMessage(value);
        }
        scheduleExpressionCase_ = 4;
        return this;
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       */
      public Builder setCronSchedule(
          com.flyteidl.admin.ScheduleProto.CronSchedule.Builder builderForValue) {
        if (cronScheduleBuilder_ == null) {
          scheduleExpression_ = builderForValue.build();
          onChanged();
        } else {
          cronScheduleBuilder_.setMessage(builderForValue.build());
        }
        scheduleExpressionCase_ = 4;
        return this;
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       */
      public Builder mergeCronSchedule(com.flyteidl.admin.ScheduleProto.CronSchedule value) {
        if (cronScheduleBuilder_ == null) {
          if (scheduleExpressionCase_ == 4 &&
              scheduleExpression_ != com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance()) {
            scheduleExpression_ = com.flyteidl.admin.ScheduleProto.CronSchedule.newBuilder((com.flyteidl.admin.ScheduleProto.CronSchedule) scheduleExpression_)
                .mergeFrom(value).buildPartial();
          } else {
            scheduleExpression_ = value;
          }
          onChanged();
        } else {
          if (scheduleExpressionCase_ == 4) {
            cronScheduleBuilder_.mergeFrom(value);
          }
          cronScheduleBuilder_.setMessage(value);
        }
        scheduleExpressionCase_ = 4;
        return this;
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       */
      public Builder clearCronSchedule() {
        if (cronScheduleBuilder_ == null) {
          if (scheduleExpressionCase_ == 4) {
            scheduleExpressionCase_ = 0;
            scheduleExpression_ = null;
            onChanged();
          }
        } else {
          if (scheduleExpressionCase_ == 4) {
            scheduleExpressionCase_ = 0;
            scheduleExpression_ = null;
          }
          cronScheduleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       */
      public com.flyteidl.admin.ScheduleProto.CronSchedule.Builder getCronScheduleBuilder() {
        return getCronScheduleFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       */
      @java.lang.Override
      public com.flyteidl.admin.ScheduleProto.CronScheduleOrBuilder getCronScheduleOrBuilder() {
        if ((scheduleExpressionCase_ == 4) && (cronScheduleBuilder_ != null)) {
          return cronScheduleBuilder_.getMessageOrBuilder();
        } else {
          if (scheduleExpressionCase_ == 4) {
            return (com.flyteidl.admin.ScheduleProto.CronSchedule) scheduleExpression_;
          }
          return com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.admin.CronSchedule cron_schedule = 4 [json_name = "cronSchedule"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.flyteidl.admin.ScheduleProto.CronSchedule, com.flyteidl.admin.ScheduleProto.CronSchedule.Builder, com.flyteidl.admin.ScheduleProto.CronScheduleOrBuilder> 
          getCronScheduleFieldBuilder() {
        if (cronScheduleBuilder_ == null) {
          if (!(scheduleExpressionCase_ == 4)) {
            scheduleExpression_ = com.flyteidl.admin.ScheduleProto.CronSchedule.getDefaultInstance();
          }
          cronScheduleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.flyteidl.admin.ScheduleProto.CronSchedule, com.flyteidl.admin.ScheduleProto.CronSchedule.Builder, com.flyteidl.admin.ScheduleProto.CronScheduleOrBuilder>(
                  (com.flyteidl.admin.ScheduleProto.CronSchedule) scheduleExpression_,
                  getParentForChildren(),
                  isClean());
          scheduleExpression_ = null;
        }
        scheduleExpressionCase_ = 4;
        onChanged();;
        return cronScheduleBuilder_;
      }

      private java.lang.Object kickoffTimeInputArg_ = "";
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
       * @return The kickoffTimeInputArg.
       */
      public java.lang.String getKickoffTimeInputArg() {
        java.lang.Object ref = kickoffTimeInputArg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          kickoffTimeInputArg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
       * @return The bytes for kickoffTimeInputArg.
       */
      public com.google.protobuf.ByteString
          getKickoffTimeInputArgBytes() {
        java.lang.Object ref = kickoffTimeInputArg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          kickoffTimeInputArg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
       * @param value The kickoffTimeInputArg to set.
       * @return This builder for chaining.
       */
      public Builder setKickoffTimeInputArg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kickoffTimeInputArg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKickoffTimeInputArg() {
        
        kickoffTimeInputArg_ = getDefaultInstance().getKickoffTimeInputArg();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3 [json_name = "kickoffTimeInputArg"];</code>
       * @param value The bytes for kickoffTimeInputArg to set.
       * @return This builder for chaining.
       */
      public Builder setKickoffTimeInputArgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kickoffTimeInputArg_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.Schedule)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.Schedule)
    private static final com.flyteidl.admin.ScheduleProto.Schedule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.flyteidl.admin.ScheduleProto.Schedule();
    }

    public static com.flyteidl.admin.ScheduleProto.Schedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Schedule>
        PARSER = new com.google.protobuf.AbstractParser<Schedule>() {
      @java.lang.Override
      public Schedule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(
                  builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Schedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Schedule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.flyteidl.admin.ScheduleProto.Schedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_FixedRate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_FixedRate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_CronSchedule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_CronSchedule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_Schedule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_Schedule_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035flyteidl/admin/schedule.proto\022\016flyteid" +
      "l.admin\"T\n\tFixedRate\022\024\n\005value\030\001 \001(\rR\005val" +
      "ue\0221\n\004unit\030\002 \001(\0162\035.flyteidl.admin.FixedR" +
      "ateUnitR\004unit\"B\n\014CronSchedule\022\032\n\010schedul" +
      "e\030\001 \001(\tR\010schedule\022\026\n\006offset\030\002 \001(\tR\006offse" +
      "t\"\372\001\n\010Schedule\022-\n\017cron_expression\030\001 \001(\tB" +
      "\002\030\001H\000R\016cronExpression\022/\n\004rate\030\002 \001(\0132\031.fl" +
      "yteidl.admin.FixedRateH\000R\004rate\022C\n\rcron_s" +
      "chedule\030\004 \001(\0132\034.flyteidl.admin.CronSched" +
      "uleH\000R\014cronSchedule\0223\n\026kickoff_time_inpu" +
      "t_arg\030\003 \001(\tR\023kickoffTimeInputArgB\024\n\022Sche" +
      "duleExpression*.\n\rFixedRateUnit\022\n\n\006MINUT" +
      "E\020\000\022\010\n\004HOUR\020\001\022\007\n\003DAY\020\002B\266\001\n\022com.flyteidl." +
      "adminB\rScheduleProtoH\002Z5github.com/flyte" +
      "org/flyteidl/gen/pb-go/flyteidl/admin\370\001\000" +
      "\242\002\003FAX\252\002\016Flyteidl.Admin\312\002\016Flyteidl\\Admin" +
      "\342\002\032Flyteidl\\Admin\\GPBMetadata\352\002\017Flyteidl" +
      "::Adminb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_flyteidl_admin_FixedRate_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_admin_FixedRate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_FixedRate_descriptor,
        new java.lang.String[] { "Value", "Unit", });
    internal_static_flyteidl_admin_CronSchedule_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_admin_CronSchedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_CronSchedule_descriptor,
        new java.lang.String[] { "Schedule", "Offset", });
    internal_static_flyteidl_admin_Schedule_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flyteidl_admin_Schedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_Schedule_descriptor,
        new java.lang.String[] { "CronExpression", "Rate", "CronSchedule", "KickoffTimeInputArg", "ScheduleExpression", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
