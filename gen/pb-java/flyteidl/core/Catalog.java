// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/catalog.proto

package flyteidl.core;

public final class Catalog {
  private Catalog() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Indicates the status of CatalogCaching. The reason why this is not embedded in TaskNodeMetadata is, that we may use for other types of nodes as well in the future
   * </pre>
   *
   * Protobuf enum {@code flyteidl.core.CatalogCacheStatus}
   */
  public enum CatalogCacheStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Used to indicate that caching was disabled
     * </pre>
     *
     * <code>CACHE_DISABLED = 0;</code>
     */
    CACHE_DISABLED(0),
    /**
     * <pre>
     * Used to indicate that the cache lookup resulted in no matches
     * </pre>
     *
     * <code>CACHE_MISS = 1;</code>
     */
    CACHE_MISS(1),
    /**
     * <pre>
     * used to indicate that the associated artifact was a result of a previous execution
     * </pre>
     *
     * <code>CACHE_HIT = 2;</code>
     */
    CACHE_HIT(2),
    /**
     * <pre>
     * used to indicate that the resultant artifact was added to the cache
     * </pre>
     *
     * <code>CACHE_POPULATED = 3;</code>
     */
    CACHE_POPULATED(3),
    /**
     * <pre>
     * Used to indicate that cache lookup failed because of an error
     * </pre>
     *
     * <code>CACHE_LOOKUP_FAILURE = 4;</code>
     */
    CACHE_LOOKUP_FAILURE(4),
    /**
     * <pre>
     * Used to indicate that cache lookup failed because of an error
     * </pre>
     *
     * <code>CACHE_PUT_FAILURE = 5;</code>
     */
    CACHE_PUT_FAILURE(5),
    /**
     * <pre>
     * Used to indicate the cache lookup was skipped
     * </pre>
     *
     * <code>CACHE_SKIPPED = 6;</code>
     */
    CACHE_SKIPPED(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Used to indicate that caching was disabled
     * </pre>
     *
     * <code>CACHE_DISABLED = 0;</code>
     */
    public static final int CACHE_DISABLED_VALUE = 0;
    /**
     * <pre>
     * Used to indicate that the cache lookup resulted in no matches
     * </pre>
     *
     * <code>CACHE_MISS = 1;</code>
     */
    public static final int CACHE_MISS_VALUE = 1;
    /**
     * <pre>
     * used to indicate that the associated artifact was a result of a previous execution
     * </pre>
     *
     * <code>CACHE_HIT = 2;</code>
     */
    public static final int CACHE_HIT_VALUE = 2;
    /**
     * <pre>
     * used to indicate that the resultant artifact was added to the cache
     * </pre>
     *
     * <code>CACHE_POPULATED = 3;</code>
     */
    public static final int CACHE_POPULATED_VALUE = 3;
    /**
     * <pre>
     * Used to indicate that cache lookup failed because of an error
     * </pre>
     *
     * <code>CACHE_LOOKUP_FAILURE = 4;</code>
     */
    public static final int CACHE_LOOKUP_FAILURE_VALUE = 4;
    /**
     * <pre>
     * Used to indicate that cache lookup failed because of an error
     * </pre>
     *
     * <code>CACHE_PUT_FAILURE = 5;</code>
     */
    public static final int CACHE_PUT_FAILURE_VALUE = 5;
    /**
     * <pre>
     * Used to indicate the cache lookup was skipped
     * </pre>
     *
     * <code>CACHE_SKIPPED = 6;</code>
     */
    public static final int CACHE_SKIPPED_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CatalogCacheStatus valueOf(int value) {
      return forNumber(value);
    }

    public static CatalogCacheStatus forNumber(int value) {
      switch (value) {
        case 0: return CACHE_DISABLED;
        case 1: return CACHE_MISS;
        case 2: return CACHE_HIT;
        case 3: return CACHE_POPULATED;
        case 4: return CACHE_LOOKUP_FAILURE;
        case 5: return CACHE_PUT_FAILURE;
        case 6: return CACHE_SKIPPED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CatalogCacheStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CatalogCacheStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CatalogCacheStatus>() {
            public CatalogCacheStatus findValueByNumber(int number) {
              return CatalogCacheStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return flyteidl.core.Catalog.getDescriptor().getEnumTypes().get(0);
    }

    private static final CatalogCacheStatus[] VALUES = values();

    public static CatalogCacheStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CatalogCacheStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.core.CatalogCacheStatus)
  }

  public interface CatalogArtifactTagOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.CatalogArtifactTag)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Artifact ID is generated name
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     */
    java.lang.String getArtifactId();
    /**
     * <pre>
     * Artifact ID is generated name
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getArtifactIdBytes();

    /**
     * <pre>
     * Flyte computes the tag automatically, as the hash of the values
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Flyte computes the tag automatically, as the hash of the values
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code flyteidl.core.CatalogArtifactTag}
   */
  public  static final class CatalogArtifactTag extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.CatalogArtifactTag)
      CatalogArtifactTagOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CatalogArtifactTag.newBuilder() to construct.
    private CatalogArtifactTag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CatalogArtifactTag() {
      artifactId_ = "";
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CatalogArtifactTag(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              artifactId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogArtifactTag_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogArtifactTag_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Catalog.CatalogArtifactTag.class, flyteidl.core.Catalog.CatalogArtifactTag.Builder.class);
    }

    public static final int ARTIFACT_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object artifactId_;
    /**
     * <pre>
     * Artifact ID is generated name
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     */
    public java.lang.String getArtifactId() {
      java.lang.Object ref = artifactId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        artifactId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Artifact ID is generated name
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getArtifactIdBytes() {
      java.lang.Object ref = artifactId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        artifactId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Flyte computes the tag automatically, as the hash of the values
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Flyte computes the tag automatically, as the hash of the values
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getArtifactIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, artifactId_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getArtifactIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, artifactId_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Catalog.CatalogArtifactTag)) {
        return super.equals(obj);
      }
      flyteidl.core.Catalog.CatalogArtifactTag other = (flyteidl.core.Catalog.CatalogArtifactTag) obj;

      if (!getArtifactId()
          .equals(other.getArtifactId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ARTIFACT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getArtifactId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogArtifactTag parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Catalog.CatalogArtifactTag prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flyteidl.core.CatalogArtifactTag}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.CatalogArtifactTag)
        flyteidl.core.Catalog.CatalogArtifactTagOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogArtifactTag_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogArtifactTag_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Catalog.CatalogArtifactTag.class, flyteidl.core.Catalog.CatalogArtifactTag.Builder.class);
      }

      // Construct using flyteidl.core.Catalog.CatalogArtifactTag.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        artifactId_ = "";

        name_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogArtifactTag_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogArtifactTag getDefaultInstanceForType() {
        return flyteidl.core.Catalog.CatalogArtifactTag.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogArtifactTag build() {
        flyteidl.core.Catalog.CatalogArtifactTag result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogArtifactTag buildPartial() {
        flyteidl.core.Catalog.CatalogArtifactTag result = new flyteidl.core.Catalog.CatalogArtifactTag(this);
        result.artifactId_ = artifactId_;
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Catalog.CatalogArtifactTag) {
          return mergeFrom((flyteidl.core.Catalog.CatalogArtifactTag)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Catalog.CatalogArtifactTag other) {
        if (other == flyteidl.core.Catalog.CatalogArtifactTag.getDefaultInstance()) return this;
        if (!other.getArtifactId().isEmpty()) {
          artifactId_ = other.artifactId_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Catalog.CatalogArtifactTag parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Catalog.CatalogArtifactTag) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object artifactId_ = "";
      /**
       * <pre>
       * Artifact ID is generated name
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       */
      public java.lang.String getArtifactId() {
        java.lang.Object ref = artifactId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          artifactId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Artifact ID is generated name
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getArtifactIdBytes() {
        java.lang.Object ref = artifactId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          artifactId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Artifact ID is generated name
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       */
      public Builder setArtifactId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        artifactId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Artifact ID is generated name
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       */
      public Builder clearArtifactId() {
        
        artifactId_ = getDefaultInstance().getArtifactId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Artifact ID is generated name
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       */
      public Builder setArtifactIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        artifactId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Flyte computes the tag automatically, as the hash of the values
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Flyte computes the tag automatically, as the hash of the values
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Flyte computes the tag automatically, as the hash of the values
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flyte computes the tag automatically, as the hash of the values
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flyte computes the tag automatically, as the hash of the values
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.CatalogArtifactTag)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.CatalogArtifactTag)
    private static final flyteidl.core.Catalog.CatalogArtifactTag DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Catalog.CatalogArtifactTag();
    }

    public static flyteidl.core.Catalog.CatalogArtifactTag getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CatalogArtifactTag>
        PARSER = new com.google.protobuf.AbstractParser<CatalogArtifactTag>() {
      @java.lang.Override
      public CatalogArtifactTag parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CatalogArtifactTag(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CatalogArtifactTag> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CatalogArtifactTag> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Catalog.CatalogArtifactTag getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CatalogMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.CatalogMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Dataset ID in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
     */
    boolean hasDatasetId();
    /**
     * <pre>
     * Dataset ID in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
     */
    flyteidl.core.IdentifierOuterClass.Identifier getDatasetId();
    /**
     * <pre>
     * Dataset ID in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
     */
    flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder getDatasetIdOrBuilder();

    /**
     * <pre>
     * Artifact tag in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
     */
    boolean hasArtifactTag();
    /**
     * <pre>
     * Artifact tag in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
     */
    flyteidl.core.Catalog.CatalogArtifactTag getArtifactTag();
    /**
     * <pre>
     * Artifact tag in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
     */
    flyteidl.core.Catalog.CatalogArtifactTagOrBuilder getArtifactTagOrBuilder();

    /**
     * <pre>
     * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
     * </pre>
     *
     * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
     */
    boolean hasSourceTaskExecution();
    /**
     * <pre>
     * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
     * </pre>
     *
     * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
     */
    flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier getSourceTaskExecution();
    /**
     * <pre>
     * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
     * </pre>
     *
     * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
     */
    flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifierOrBuilder getSourceTaskExecutionOrBuilder();

    public flyteidl.core.Catalog.CatalogMetadata.SourceExecutionCase getSourceExecutionCase();
  }
  /**
   * <pre>
   * Catalog artifact information with specific metadata
   * </pre>
   *
   * Protobuf type {@code flyteidl.core.CatalogMetadata}
   */
  public  static final class CatalogMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.CatalogMetadata)
      CatalogMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CatalogMetadata.newBuilder() to construct.
    private CatalogMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CatalogMetadata() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CatalogMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              flyteidl.core.IdentifierOuterClass.Identifier.Builder subBuilder = null;
              if (datasetId_ != null) {
                subBuilder = datasetId_.toBuilder();
              }
              datasetId_ = input.readMessage(flyteidl.core.IdentifierOuterClass.Identifier.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(datasetId_);
                datasetId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              flyteidl.core.Catalog.CatalogArtifactTag.Builder subBuilder = null;
              if (artifactTag_ != null) {
                subBuilder = artifactTag_.toBuilder();
              }
              artifactTag_ = input.readMessage(flyteidl.core.Catalog.CatalogArtifactTag.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(artifactTag_);
                artifactTag_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.Builder subBuilder = null;
              if (sourceExecutionCase_ == 3) {
                subBuilder = ((flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_).toBuilder();
              }
              sourceExecution_ =
                  input.readMessage(flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_);
                sourceExecution_ = subBuilder.buildPartial();
              }
              sourceExecutionCase_ = 3;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Catalog.CatalogMetadata.class, flyteidl.core.Catalog.CatalogMetadata.Builder.class);
    }

    private int sourceExecutionCase_ = 0;
    private java.lang.Object sourceExecution_;
    public enum SourceExecutionCase
        implements com.google.protobuf.Internal.EnumLite {
      SOURCE_TASK_EXECUTION(3),
      SOURCEEXECUTION_NOT_SET(0);
      private final int value;
      private SourceExecutionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SourceExecutionCase valueOf(int value) {
        return forNumber(value);
      }

      public static SourceExecutionCase forNumber(int value) {
        switch (value) {
          case 3: return SOURCE_TASK_EXECUTION;
          case 0: return SOURCEEXECUTION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SourceExecutionCase
    getSourceExecutionCase() {
      return SourceExecutionCase.forNumber(
          sourceExecutionCase_);
    }

    public static final int DATASET_ID_FIELD_NUMBER = 1;
    private flyteidl.core.IdentifierOuterClass.Identifier datasetId_;
    /**
     * <pre>
     * Dataset ID in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
     */
    public boolean hasDatasetId() {
      return datasetId_ != null;
    }
    /**
     * <pre>
     * Dataset ID in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
     */
    public flyteidl.core.IdentifierOuterClass.Identifier getDatasetId() {
      return datasetId_ == null ? flyteidl.core.IdentifierOuterClass.Identifier.getDefaultInstance() : datasetId_;
    }
    /**
     * <pre>
     * Dataset ID in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
     */
    public flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder getDatasetIdOrBuilder() {
      return getDatasetId();
    }

    public static final int ARTIFACT_TAG_FIELD_NUMBER = 2;
    private flyteidl.core.Catalog.CatalogArtifactTag artifactTag_;
    /**
     * <pre>
     * Artifact tag in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
     */
    public boolean hasArtifactTag() {
      return artifactTag_ != null;
    }
    /**
     * <pre>
     * Artifact tag in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
     */
    public flyteidl.core.Catalog.CatalogArtifactTag getArtifactTag() {
      return artifactTag_ == null ? flyteidl.core.Catalog.CatalogArtifactTag.getDefaultInstance() : artifactTag_;
    }
    /**
     * <pre>
     * Artifact tag in the catalog
     * </pre>
     *
     * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
     */
    public flyteidl.core.Catalog.CatalogArtifactTagOrBuilder getArtifactTagOrBuilder() {
      return getArtifactTag();
    }

    public static final int SOURCE_TASK_EXECUTION_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
     * </pre>
     *
     * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
     */
    public boolean hasSourceTaskExecution() {
      return sourceExecutionCase_ == 3;
    }
    /**
     * <pre>
     * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
     * </pre>
     *
     * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
     */
    public flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier getSourceTaskExecution() {
      if (sourceExecutionCase_ == 3) {
         return (flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_;
      }
      return flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.getDefaultInstance();
    }
    /**
     * <pre>
     * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
     * </pre>
     *
     * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
     */
    public flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifierOrBuilder getSourceTaskExecutionOrBuilder() {
      if (sourceExecutionCase_ == 3) {
         return (flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_;
      }
      return flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (datasetId_ != null) {
        output.writeMessage(1, getDatasetId());
      }
      if (artifactTag_ != null) {
        output.writeMessage(2, getArtifactTag());
      }
      if (sourceExecutionCase_ == 3) {
        output.writeMessage(3, (flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (datasetId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDatasetId());
      }
      if (artifactTag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getArtifactTag());
      }
      if (sourceExecutionCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Catalog.CatalogMetadata)) {
        return super.equals(obj);
      }
      flyteidl.core.Catalog.CatalogMetadata other = (flyteidl.core.Catalog.CatalogMetadata) obj;

      if (hasDatasetId() != other.hasDatasetId()) return false;
      if (hasDatasetId()) {
        if (!getDatasetId()
            .equals(other.getDatasetId())) return false;
      }
      if (hasArtifactTag() != other.hasArtifactTag()) return false;
      if (hasArtifactTag()) {
        if (!getArtifactTag()
            .equals(other.getArtifactTag())) return false;
      }
      if (!getSourceExecutionCase().equals(other.getSourceExecutionCase())) return false;
      switch (sourceExecutionCase_) {
        case 3:
          if (!getSourceTaskExecution()
              .equals(other.getSourceTaskExecution())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDatasetId()) {
        hash = (37 * hash) + DATASET_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDatasetId().hashCode();
      }
      if (hasArtifactTag()) {
        hash = (37 * hash) + ARTIFACT_TAG_FIELD_NUMBER;
        hash = (53 * hash) + getArtifactTag().hashCode();
      }
      switch (sourceExecutionCase_) {
        case 3:
          hash = (37 * hash) + SOURCE_TASK_EXECUTION_FIELD_NUMBER;
          hash = (53 * hash) + getSourceTaskExecution().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Catalog.CatalogMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Catalog artifact information with specific metadata
     * </pre>
     *
     * Protobuf type {@code flyteidl.core.CatalogMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.CatalogMetadata)
        flyteidl.core.Catalog.CatalogMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Catalog.CatalogMetadata.class, flyteidl.core.Catalog.CatalogMetadata.Builder.class);
      }

      // Construct using flyteidl.core.Catalog.CatalogMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (datasetIdBuilder_ == null) {
          datasetId_ = null;
        } else {
          datasetId_ = null;
          datasetIdBuilder_ = null;
        }
        if (artifactTagBuilder_ == null) {
          artifactTag_ = null;
        } else {
          artifactTag_ = null;
          artifactTagBuilder_ = null;
        }
        sourceExecutionCase_ = 0;
        sourceExecution_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogMetadata_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogMetadata getDefaultInstanceForType() {
        return flyteidl.core.Catalog.CatalogMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogMetadata build() {
        flyteidl.core.Catalog.CatalogMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogMetadata buildPartial() {
        flyteidl.core.Catalog.CatalogMetadata result = new flyteidl.core.Catalog.CatalogMetadata(this);
        if (datasetIdBuilder_ == null) {
          result.datasetId_ = datasetId_;
        } else {
          result.datasetId_ = datasetIdBuilder_.build();
        }
        if (artifactTagBuilder_ == null) {
          result.artifactTag_ = artifactTag_;
        } else {
          result.artifactTag_ = artifactTagBuilder_.build();
        }
        if (sourceExecutionCase_ == 3) {
          if (sourceTaskExecutionBuilder_ == null) {
            result.sourceExecution_ = sourceExecution_;
          } else {
            result.sourceExecution_ = sourceTaskExecutionBuilder_.build();
          }
        }
        result.sourceExecutionCase_ = sourceExecutionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Catalog.CatalogMetadata) {
          return mergeFrom((flyteidl.core.Catalog.CatalogMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Catalog.CatalogMetadata other) {
        if (other == flyteidl.core.Catalog.CatalogMetadata.getDefaultInstance()) return this;
        if (other.hasDatasetId()) {
          mergeDatasetId(other.getDatasetId());
        }
        if (other.hasArtifactTag()) {
          mergeArtifactTag(other.getArtifactTag());
        }
        switch (other.getSourceExecutionCase()) {
          case SOURCE_TASK_EXECUTION: {
            mergeSourceTaskExecution(other.getSourceTaskExecution());
            break;
          }
          case SOURCEEXECUTION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Catalog.CatalogMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Catalog.CatalogMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sourceExecutionCase_ = 0;
      private java.lang.Object sourceExecution_;
      public SourceExecutionCase
          getSourceExecutionCase() {
        return SourceExecutionCase.forNumber(
            sourceExecutionCase_);
      }

      public Builder clearSourceExecution() {
        sourceExecutionCase_ = 0;
        sourceExecution_ = null;
        onChanged();
        return this;
      }


      private flyteidl.core.IdentifierOuterClass.Identifier datasetId_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.IdentifierOuterClass.Identifier, flyteidl.core.IdentifierOuterClass.Identifier.Builder, flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder> datasetIdBuilder_;
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public boolean hasDatasetId() {
        return datasetIdBuilder_ != null || datasetId_ != null;
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public flyteidl.core.IdentifierOuterClass.Identifier getDatasetId() {
        if (datasetIdBuilder_ == null) {
          return datasetId_ == null ? flyteidl.core.IdentifierOuterClass.Identifier.getDefaultInstance() : datasetId_;
        } else {
          return datasetIdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public Builder setDatasetId(flyteidl.core.IdentifierOuterClass.Identifier value) {
        if (datasetIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          datasetId_ = value;
          onChanged();
        } else {
          datasetIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public Builder setDatasetId(
          flyteidl.core.IdentifierOuterClass.Identifier.Builder builderForValue) {
        if (datasetIdBuilder_ == null) {
          datasetId_ = builderForValue.build();
          onChanged();
        } else {
          datasetIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public Builder mergeDatasetId(flyteidl.core.IdentifierOuterClass.Identifier value) {
        if (datasetIdBuilder_ == null) {
          if (datasetId_ != null) {
            datasetId_ =
              flyteidl.core.IdentifierOuterClass.Identifier.newBuilder(datasetId_).mergeFrom(value).buildPartial();
          } else {
            datasetId_ = value;
          }
          onChanged();
        } else {
          datasetIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public Builder clearDatasetId() {
        if (datasetIdBuilder_ == null) {
          datasetId_ = null;
          onChanged();
        } else {
          datasetId_ = null;
          datasetIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public flyteidl.core.IdentifierOuterClass.Identifier.Builder getDatasetIdBuilder() {
        
        onChanged();
        return getDatasetIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      public flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder getDatasetIdOrBuilder() {
        if (datasetIdBuilder_ != null) {
          return datasetIdBuilder_.getMessageOrBuilder();
        } else {
          return datasetId_ == null ?
              flyteidl.core.IdentifierOuterClass.Identifier.getDefaultInstance() : datasetId_;
        }
      }
      /**
       * <pre>
       * Dataset ID in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.Identifier dataset_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.IdentifierOuterClass.Identifier, flyteidl.core.IdentifierOuterClass.Identifier.Builder, flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder> 
          getDatasetIdFieldBuilder() {
        if (datasetIdBuilder_ == null) {
          datasetIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.IdentifierOuterClass.Identifier, flyteidl.core.IdentifierOuterClass.Identifier.Builder, flyteidl.core.IdentifierOuterClass.IdentifierOrBuilder>(
                  getDatasetId(),
                  getParentForChildren(),
                  isClean());
          datasetId_ = null;
        }
        return datasetIdBuilder_;
      }

      private flyteidl.core.Catalog.CatalogArtifactTag artifactTag_;
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Catalog.CatalogArtifactTag, flyteidl.core.Catalog.CatalogArtifactTag.Builder, flyteidl.core.Catalog.CatalogArtifactTagOrBuilder> artifactTagBuilder_;
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public boolean hasArtifactTag() {
        return artifactTagBuilder_ != null || artifactTag_ != null;
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public flyteidl.core.Catalog.CatalogArtifactTag getArtifactTag() {
        if (artifactTagBuilder_ == null) {
          return artifactTag_ == null ? flyteidl.core.Catalog.CatalogArtifactTag.getDefaultInstance() : artifactTag_;
        } else {
          return artifactTagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public Builder setArtifactTag(flyteidl.core.Catalog.CatalogArtifactTag value) {
        if (artifactTagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          artifactTag_ = value;
          onChanged();
        } else {
          artifactTagBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public Builder setArtifactTag(
          flyteidl.core.Catalog.CatalogArtifactTag.Builder builderForValue) {
        if (artifactTagBuilder_ == null) {
          artifactTag_ = builderForValue.build();
          onChanged();
        } else {
          artifactTagBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public Builder mergeArtifactTag(flyteidl.core.Catalog.CatalogArtifactTag value) {
        if (artifactTagBuilder_ == null) {
          if (artifactTag_ != null) {
            artifactTag_ =
              flyteidl.core.Catalog.CatalogArtifactTag.newBuilder(artifactTag_).mergeFrom(value).buildPartial();
          } else {
            artifactTag_ = value;
          }
          onChanged();
        } else {
          artifactTagBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public Builder clearArtifactTag() {
        if (artifactTagBuilder_ == null) {
          artifactTag_ = null;
          onChanged();
        } else {
          artifactTag_ = null;
          artifactTagBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public flyteidl.core.Catalog.CatalogArtifactTag.Builder getArtifactTagBuilder() {
        
        onChanged();
        return getArtifactTagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      public flyteidl.core.Catalog.CatalogArtifactTagOrBuilder getArtifactTagOrBuilder() {
        if (artifactTagBuilder_ != null) {
          return artifactTagBuilder_.getMessageOrBuilder();
        } else {
          return artifactTag_ == null ?
              flyteidl.core.Catalog.CatalogArtifactTag.getDefaultInstance() : artifactTag_;
        }
      }
      /**
       * <pre>
       * Artifact tag in the catalog
       * </pre>
       *
       * <code>.flyteidl.core.CatalogArtifactTag artifact_tag = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.Catalog.CatalogArtifactTag, flyteidl.core.Catalog.CatalogArtifactTag.Builder, flyteidl.core.Catalog.CatalogArtifactTagOrBuilder> 
          getArtifactTagFieldBuilder() {
        if (artifactTagBuilder_ == null) {
          artifactTagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.Catalog.CatalogArtifactTag, flyteidl.core.Catalog.CatalogArtifactTag.Builder, flyteidl.core.Catalog.CatalogArtifactTagOrBuilder>(
                  getArtifactTag(),
                  getParentForChildren(),
                  isClean());
          artifactTag_ = null;
        }
        return artifactTagBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier, flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.Builder, flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifierOrBuilder> sourceTaskExecutionBuilder_;
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public boolean hasSourceTaskExecution() {
        return sourceExecutionCase_ == 3;
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier getSourceTaskExecution() {
        if (sourceTaskExecutionBuilder_ == null) {
          if (sourceExecutionCase_ == 3) {
            return (flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_;
          }
          return flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.getDefaultInstance();
        } else {
          if (sourceExecutionCase_ == 3) {
            return sourceTaskExecutionBuilder_.getMessage();
          }
          return flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public Builder setSourceTaskExecution(flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier value) {
        if (sourceTaskExecutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceExecution_ = value;
          onChanged();
        } else {
          sourceTaskExecutionBuilder_.setMessage(value);
        }
        sourceExecutionCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public Builder setSourceTaskExecution(
          flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.Builder builderForValue) {
        if (sourceTaskExecutionBuilder_ == null) {
          sourceExecution_ = builderForValue.build();
          onChanged();
        } else {
          sourceTaskExecutionBuilder_.setMessage(builderForValue.build());
        }
        sourceExecutionCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public Builder mergeSourceTaskExecution(flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier value) {
        if (sourceTaskExecutionBuilder_ == null) {
          if (sourceExecutionCase_ == 3 &&
              sourceExecution_ != flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.getDefaultInstance()) {
            sourceExecution_ = flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.newBuilder((flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_)
                .mergeFrom(value).buildPartial();
          } else {
            sourceExecution_ = value;
          }
          onChanged();
        } else {
          if (sourceExecutionCase_ == 3) {
            sourceTaskExecutionBuilder_.mergeFrom(value);
          }
          sourceTaskExecutionBuilder_.setMessage(value);
        }
        sourceExecutionCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public Builder clearSourceTaskExecution() {
        if (sourceTaskExecutionBuilder_ == null) {
          if (sourceExecutionCase_ == 3) {
            sourceExecutionCase_ = 0;
            sourceExecution_ = null;
            onChanged();
          }
        } else {
          if (sourceExecutionCase_ == 3) {
            sourceExecutionCase_ = 0;
            sourceExecution_ = null;
          }
          sourceTaskExecutionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.Builder getSourceTaskExecutionBuilder() {
        return getSourceTaskExecutionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      public flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifierOrBuilder getSourceTaskExecutionOrBuilder() {
        if ((sourceExecutionCase_ == 3) && (sourceTaskExecutionBuilder_ != null)) {
          return sourceTaskExecutionBuilder_.getMessageOrBuilder();
        } else {
          if (sourceExecutionCase_ == 3) {
            return (flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_;
          }
          return flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Today we only support TaskExecutionIdentifier as a source, as catalog caching only works for task executions
       * </pre>
       *
       * <code>.flyteidl.core.TaskExecutionIdentifier source_task_execution = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier, flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.Builder, flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifierOrBuilder> 
          getSourceTaskExecutionFieldBuilder() {
        if (sourceTaskExecutionBuilder_ == null) {
          if (!(sourceExecutionCase_ == 3)) {
            sourceExecution_ = flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.getDefaultInstance();
          }
          sourceTaskExecutionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier, flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier.Builder, flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifierOrBuilder>(
                  (flyteidl.core.IdentifierOuterClass.TaskExecutionIdentifier) sourceExecution_,
                  getParentForChildren(),
                  isClean());
          sourceExecution_ = null;
        }
        sourceExecutionCase_ = 3;
        onChanged();;
        return sourceTaskExecutionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.CatalogMetadata)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.CatalogMetadata)
    private static final flyteidl.core.Catalog.CatalogMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Catalog.CatalogMetadata();
    }

    public static flyteidl.core.Catalog.CatalogMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CatalogMetadata>
        PARSER = new com.google.protobuf.AbstractParser<CatalogMetadata>() {
      @java.lang.Override
      public CatalogMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CatalogMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CatalogMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CatalogMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Catalog.CatalogMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CatalogReservationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.core.CatalogReservation)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code flyteidl.core.CatalogReservation}
   */
  public  static final class CatalogReservation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.core.CatalogReservation)
      CatalogReservationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CatalogReservation.newBuilder() to construct.
    private CatalogReservation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CatalogReservation() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CatalogReservation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogReservation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogReservation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.core.Catalog.CatalogReservation.class, flyteidl.core.Catalog.CatalogReservation.Builder.class);
    }

    /**
     * <pre>
     * Indicates the status of a catalog reservation operation.
     * </pre>
     *
     * Protobuf enum {@code flyteidl.core.CatalogReservation.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Used to indicate that reservations are disabled
       * </pre>
       *
       * <code>RESERVATION_DISABLED = 0;</code>
       */
      RESERVATION_DISABLED(0),
      /**
       * <pre>
       * Used to indicate that a reservation was successfully acquired or extended
       * </pre>
       *
       * <code>RESERVATION_ACQUIRED = 1;</code>
       */
      RESERVATION_ACQUIRED(1),
      /**
       * <pre>
       * Used to indicate that an active reservation currently exists
       * </pre>
       *
       * <code>RESERVATION_EXISTS = 2;</code>
       */
      RESERVATION_EXISTS(2),
      /**
       * <pre>
       * Used to indicate that the reservation has been successfully released
       * </pre>
       *
       * <code>RESERVATION_RELEASED = 3;</code>
       */
      RESERVATION_RELEASED(3),
      /**
       * <pre>
       * Used to indicate that a reservation operation resulted in failure
       * </pre>
       *
       * <code>RESERVATION_FAILURE = 4;</code>
       */
      RESERVATION_FAILURE(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Used to indicate that reservations are disabled
       * </pre>
       *
       * <code>RESERVATION_DISABLED = 0;</code>
       */
      public static final int RESERVATION_DISABLED_VALUE = 0;
      /**
       * <pre>
       * Used to indicate that a reservation was successfully acquired or extended
       * </pre>
       *
       * <code>RESERVATION_ACQUIRED = 1;</code>
       */
      public static final int RESERVATION_ACQUIRED_VALUE = 1;
      /**
       * <pre>
       * Used to indicate that an active reservation currently exists
       * </pre>
       *
       * <code>RESERVATION_EXISTS = 2;</code>
       */
      public static final int RESERVATION_EXISTS_VALUE = 2;
      /**
       * <pre>
       * Used to indicate that the reservation has been successfully released
       * </pre>
       *
       * <code>RESERVATION_RELEASED = 3;</code>
       */
      public static final int RESERVATION_RELEASED_VALUE = 3;
      /**
       * <pre>
       * Used to indicate that a reservation operation resulted in failure
       * </pre>
       *
       * <code>RESERVATION_FAILURE = 4;</code>
       */
      public static final int RESERVATION_FAILURE_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      public static Status forNumber(int value) {
        switch (value) {
          case 0: return RESERVATION_DISABLED;
          case 1: return RESERVATION_ACQUIRED;
          case 2: return RESERVATION_EXISTS;
          case 3: return RESERVATION_RELEASED;
          case 4: return RESERVATION_FAILURE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return flyteidl.core.Catalog.CatalogReservation.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:flyteidl.core.CatalogReservation.Status)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.core.Catalog.CatalogReservation)) {
        return super.equals(obj);
      }
      flyteidl.core.Catalog.CatalogReservation other = (flyteidl.core.Catalog.CatalogReservation) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.core.Catalog.CatalogReservation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.core.Catalog.CatalogReservation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code flyteidl.core.CatalogReservation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.core.CatalogReservation)
        flyteidl.core.Catalog.CatalogReservationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogReservation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogReservation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.core.Catalog.CatalogReservation.class, flyteidl.core.Catalog.CatalogReservation.Builder.class);
      }

      // Construct using flyteidl.core.Catalog.CatalogReservation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.core.Catalog.internal_static_flyteidl_core_CatalogReservation_descriptor;
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogReservation getDefaultInstanceForType() {
        return flyteidl.core.Catalog.CatalogReservation.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogReservation build() {
        flyteidl.core.Catalog.CatalogReservation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.core.Catalog.CatalogReservation buildPartial() {
        flyteidl.core.Catalog.CatalogReservation result = new flyteidl.core.Catalog.CatalogReservation(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.core.Catalog.CatalogReservation) {
          return mergeFrom((flyteidl.core.Catalog.CatalogReservation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.core.Catalog.CatalogReservation other) {
        if (other == flyteidl.core.Catalog.CatalogReservation.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.core.Catalog.CatalogReservation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.core.Catalog.CatalogReservation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.core.CatalogReservation)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.core.CatalogReservation)
    private static final flyteidl.core.Catalog.CatalogReservation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.core.Catalog.CatalogReservation();
    }

    public static flyteidl.core.Catalog.CatalogReservation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CatalogReservation>
        PARSER = new com.google.protobuf.AbstractParser<CatalogReservation>() {
      @java.lang.Override
      public CatalogReservation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CatalogReservation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CatalogReservation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CatalogReservation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.core.Catalog.CatalogReservation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_CatalogArtifactTag_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_CatalogArtifactTag_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_CatalogMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_CatalogMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_core_CatalogReservation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_core_CatalogReservation_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033flyteidl/core/catalog.proto\022\rflyteidl." +
      "core\032\036flyteidl/core/identifier.proto\"7\n\022" +
      "CatalogArtifactTag\022\023\n\013artifact_id\030\001 \001(\t\022" +
      "\014\n\004name\030\002 \001(\t\"\326\001\n\017CatalogMetadata\022-\n\ndat" +
      "aset_id\030\001 \001(\0132\031.flyteidl.core.Identifier" +
      "\0227\n\014artifact_tag\030\002 \001(\0132!.flyteidl.core.C" +
      "atalogArtifactTag\022G\n\025source_task_executi" +
      "on\030\003 \001(\0132&.flyteidl.core.TaskExecutionId" +
      "entifierH\000B\022\n\020source_execution\"\236\001\n\022Catal" +
      "ogReservation\"\207\001\n\006Status\022\030\n\024RESERVATION_" +
      "DISABLED\020\000\022\030\n\024RESERVATION_ACQUIRED\020\001\022\026\n\022" +
      "RESERVATION_EXISTS\020\002\022\030\n\024RESERVATION_RELE" +
      "ASED\020\003\022\027\n\023RESERVATION_FAILURE\020\004*\240\001\n\022Cata" +
      "logCacheStatus\022\022\n\016CACHE_DISABLED\020\000\022\016\n\nCA" +
      "CHE_MISS\020\001\022\r\n\tCACHE_HIT\020\002\022\023\n\017CACHE_POPUL" +
      "ATED\020\003\022\030\n\024CACHE_LOOKUP_FAILURE\020\004\022\025\n\021CACH" +
      "E_PUT_FAILURE\020\005\022\021\n\rCACHE_SKIPPED\020\006B6Z4gi" +
      "thub.com/flyteorg/flyteidl/gen/pb-go/fly" +
      "teidl/coreb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          flyteidl.core.IdentifierOuterClass.getDescriptor(),
        }, assigner);
    internal_static_flyteidl_core_CatalogArtifactTag_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_core_CatalogArtifactTag_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_CatalogArtifactTag_descriptor,
        new java.lang.String[] { "ArtifactId", "Name", });
    internal_static_flyteidl_core_CatalogMetadata_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_core_CatalogMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_CatalogMetadata_descriptor,
        new java.lang.String[] { "DatasetId", "ArtifactTag", "SourceTaskExecution", "SourceExecution", });
    internal_static_flyteidl_core_CatalogReservation_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_flyteidl_core_CatalogReservation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_core_CatalogReservation_descriptor,
        new java.lang.String[] { });
    flyteidl.core.IdentifierOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
