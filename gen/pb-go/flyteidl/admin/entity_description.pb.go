// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/admin/entity_description.proto

package admin

import (
	fmt "fmt"
	_ "github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/core"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LongDescription_DescriptionFormat int32

const (
	LongDescription_UNKNOWN  LongDescription_DescriptionFormat = 0
	LongDescription_MARKDOWN LongDescription_DescriptionFormat = 1
	LongDescription_HTML     LongDescription_DescriptionFormat = 2
	// python default documentation - comments is rst
	LongDescription_RST LongDescription_DescriptionFormat = 3
)

var LongDescription_DescriptionFormat_name = map[int32]string{
	0: "UNKNOWN",
	1: "MARKDOWN",
	2: "HTML",
	3: "RST",
}

var LongDescription_DescriptionFormat_value = map[string]int32{
	"UNKNOWN":  0,
	"MARKDOWN": 1,
	"HTML":     2,
	"RST":      3,
}

func (x LongDescription_DescriptionFormat) String() string {
	return proto.EnumName(LongDescription_DescriptionFormat_name, int32(x))
}

func (LongDescription_DescriptionFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f33327cd6dce222e, []int{1, 0}
}

// EntityDescription contains detailed description for the task/workflow/launch plan.
// Documentation could provide insight into the algorithms, business use case, etc.
type EntityDescription struct {
	// One-liner overview of the entity.
	ShortDescription string `protobuf:"bytes,1,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	// Full user description with formatting preserved.
	LongDescription *LongDescription `protobuf:"bytes,2,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	// User-specified tags. These are arbitrary and can be used for searching
	// filtering and discovering entities.
	Tags []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// User-defined free-form key-value pair attributes. These are arbitrary
	// and can be used for searching, filtering and discovering entities.
	Labels *Labels `protobuf:"bytes,4,opt,name=labels,proto3" json:"labels,omitempty"`
	// Optional link to source code used to define this entity.
	Source               *SourceCode `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EntityDescription) Reset()         { *m = EntityDescription{} }
func (m *EntityDescription) String() string { return proto.CompactTextString(m) }
func (*EntityDescription) ProtoMessage()    {}
func (*EntityDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_f33327cd6dce222e, []int{0}
}

func (m *EntityDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityDescription.Unmarshal(m, b)
}
func (m *EntityDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityDescription.Marshal(b, m, deterministic)
}
func (m *EntityDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityDescription.Merge(m, src)
}
func (m *EntityDescription) XXX_Size() int {
	return xxx_messageInfo_EntityDescription.Size(m)
}
func (m *EntityDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityDescription.DiscardUnknown(m)
}

var xxx_messageInfo_EntityDescription proto.InternalMessageInfo

func (m *EntityDescription) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *EntityDescription) GetLongDescription() *LongDescription {
	if m != nil {
		return m.LongDescription
	}
	return nil
}

func (m *EntityDescription) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EntityDescription) GetLabels() *Labels {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *EntityDescription) GetSource() *SourceCode {
	if m != nil {
		return m.Source
	}
	return nil
}

// Full user description with formatting preserved. This can be rendered
// by clients, such as the console or command line tools with in-tact
// formatting.
type LongDescription struct {
	// long description - no more than 4KB
	Values string `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"`
	// if the description sizes exceed some threshold we can offload the entire
	// description proto altogether to an external data store, like S3 rather than store inline in the db
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// format of the long description
	LongFormat LongDescription_DescriptionFormat `protobuf:"varint,3,opt,name=long_format,json=longFormat,proto3,enum=flyteidl.admin.LongDescription_DescriptionFormat" json:"long_format,omitempty"`
	// Optional link to an icon for the entity
	IconLink             string   `protobuf:"bytes,4,opt,name=icon_link,json=iconLink,proto3" json:"icon_link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LongDescription) Reset()         { *m = LongDescription{} }
func (m *LongDescription) String() string { return proto.CompactTextString(m) }
func (*LongDescription) ProtoMessage()    {}
func (*LongDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_f33327cd6dce222e, []int{1}
}

func (m *LongDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LongDescription.Unmarshal(m, b)
}
func (m *LongDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LongDescription.Marshal(b, m, deterministic)
}
func (m *LongDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LongDescription.Merge(m, src)
}
func (m *LongDescription) XXX_Size() int {
	return xxx_messageInfo_LongDescription.Size(m)
}
func (m *LongDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_LongDescription.DiscardUnknown(m)
}

var xxx_messageInfo_LongDescription proto.InternalMessageInfo

func (m *LongDescription) GetValues() string {
	if m != nil {
		return m.Values
	}
	return ""
}

func (m *LongDescription) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *LongDescription) GetLongFormat() LongDescription_DescriptionFormat {
	if m != nil {
		return m.LongFormat
	}
	return LongDescription_UNKNOWN
}

func (m *LongDescription) GetIconLink() string {
	if m != nil {
		return m.IconLink
	}
	return ""
}

// Link to source code used to define this entity
type SourceCode struct {
	// File where the code is located
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// Line number where the task definition, workflow definition, etc starts at
	LineNumber uint32 `protobuf:"varint,2,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	// git repository
	Repo string `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	// branch of the repository
	Branch string `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	// link to the original repository
	Link string `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	// language of the code
	Language             string   `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceCode) Reset()         { *m = SourceCode{} }
func (m *SourceCode) String() string { return proto.CompactTextString(m) }
func (*SourceCode) ProtoMessage()    {}
func (*SourceCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f33327cd6dce222e, []int{2}
}

func (m *SourceCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceCode.Unmarshal(m, b)
}
func (m *SourceCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceCode.Marshal(b, m, deterministic)
}
func (m *SourceCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceCode.Merge(m, src)
}
func (m *SourceCode) XXX_Size() int {
	return xxx_messageInfo_SourceCode.Size(m)
}
func (m *SourceCode) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceCode.DiscardUnknown(m)
}

var xxx_messageInfo_SourceCode proto.InternalMessageInfo

func (m *SourceCode) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *SourceCode) GetLineNumber() uint32 {
	if m != nil {
		return m.LineNumber
	}
	return 0
}

func (m *SourceCode) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *SourceCode) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *SourceCode) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *SourceCode) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func init() {
	proto.RegisterEnum("flyteidl.admin.LongDescription_DescriptionFormat", LongDescription_DescriptionFormat_name, LongDescription_DescriptionFormat_value)
	proto.RegisterType((*EntityDescription)(nil), "flyteidl.admin.EntityDescription")
	proto.RegisterType((*LongDescription)(nil), "flyteidl.admin.LongDescription")
	proto.RegisterType((*SourceCode)(nil), "flyteidl.admin.SourceCode")
}

func init() {
	proto.RegisterFile("flyteidl/admin/entity_description.proto", fileDescriptor_f33327cd6dce222e)
}

var fileDescriptor_f33327cd6dce222e = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x71, 0x9a, 0xc6, 0x13, 0x68, 0x9d, 0x3d, 0x54, 0x56, 0x2a, 0xd1, 0x28, 0x17, 0x22,
	0x21, 0x6c, 0x11, 0x84, 0x38, 0x17, 0x0a, 0x42, 0x34, 0x0d, 0xd2, 0xb6, 0x08, 0x89, 0x4b, 0xe4,
	0x8f, 0xcd, 0x66, 0xd5, 0xf5, 0x6e, 0xb4, 0x5e, 0x23, 0xf5, 0xce, 0xdf, 0xe0, 0x37, 0xf2, 0x17,
	0xd0, 0x4e, 0x9c, 0x36, 0x49, 0x0f, 0xbd, 0xbd, 0x99, 0x79, 0x6f, 0x66, 0xde, 0x68, 0xe0, 0xd5,
	0x42, 0xde, 0x59, 0x26, 0x0a, 0x99, 0xa4, 0x45, 0x29, 0x54, 0xc2, 0x94, 0x15, 0xf6, 0x6e, 0x5e,
	0xb0, 0x2a, 0x37, 0x62, 0x65, 0x85, 0x56, 0xf1, 0xca, 0x68, 0xab, 0xc9, 0xd1, 0x86, 0x18, 0x23,
	0x71, 0xf0, 0xf2, 0x5e, 0x98, 0x6b, 0xc3, 0x12, 0x51, 0x38, 0xe5, 0x42, 0x30, 0xb3, 0xe6, 0x0f,
	0x4e, 0xf7, 0x1a, 0xe7, 0xba, 0x2c, 0x37, 0xcd, 0x46, 0x7f, 0x5a, 0xd0, 0xff, 0x8c, 0x93, 0x2e,
	0x1e, 0x06, 0x91, 0xd7, 0xd0, 0xaf, 0x96, 0xda, 0xd8, 0xed, 0xe9, 0x91, 0x37, 0xf4, 0xc6, 0x01,
	0x0d, 0xb1, 0xb0, 0x4d, 0xfe, 0x06, 0xa1, 0xd4, 0x8a, 0xef, 0x70, 0x5b, 0x43, 0x6f, 0xdc, 0x9b,
	0x9c, 0xc5, 0xbb, 0xab, 0xc6, 0x53, 0xad, 0xf8, 0x96, 0x94, 0x1e, 0xcb, 0xdd, 0x04, 0x21, 0xd0,
	0xb6, 0x29, 0xaf, 0x22, 0x7f, 0xe8, 0x8f, 0x03, 0x8a, 0x98, 0xc4, 0xd0, 0x91, 0x69, 0xc6, 0x64,
	0x15, 0xb5, 0xb1, 0xeb, 0xc9, 0xa3, 0xae, 0x58, 0xa5, 0x0d, 0x8b, 0x4c, 0xa0, 0x53, 0xe9, 0xda,
	0xe4, 0x2c, 0x3a, 0x40, 0xfe, 0x60, 0x9f, 0x7f, 0x8d, 0xd5, 0x4f, 0xba, 0x60, 0xb4, 0x61, 0x8e,
	0xfe, 0x79, 0x70, 0xbc, 0xb7, 0x1c, 0x39, 0x81, 0xce, 0xef, 0x54, 0xd6, 0xac, 0x6a, 0x9c, 0x37,
	0x11, 0x09, 0xc1, 0xaf, 0x8d, 0x40, 0x8b, 0x01, 0x75, 0x90, 0x50, 0xe8, 0xe1, 0x05, 0x16, 0xda,
	0x94, 0xa9, 0x8d, 0xfc, 0xa1, 0x37, 0x3e, 0x9a, 0xbc, 0x7d, 0xc2, 0x7c, 0xbc, 0x85, 0xbf, 0xa0,
	0x90, 0x82, 0xeb, 0xb2, 0xc6, 0xe4, 0x14, 0x02, 0x91, 0x6b, 0x35, 0x97, 0x42, 0xdd, 0xa2, 0xf1,
	0x80, 0x76, 0x5d, 0x62, 0x2a, 0xd4, 0xed, 0xe8, 0x1c, 0xfa, 0x8f, 0xd4, 0xa4, 0x07, 0x87, 0x3f,
	0x66, 0x97, 0xb3, 0xef, 0x3f, 0x67, 0xe1, 0x33, 0xf2, 0x1c, 0xba, 0x57, 0xe7, 0xf4, 0xf2, 0xc2,
	0x45, 0x1e, 0xe9, 0x42, 0xfb, 0xeb, 0xcd, 0xd5, 0x34, 0x6c, 0x91, 0x43, 0xf0, 0xe9, 0xf5, 0x4d,
	0xe8, 0x8f, 0xfe, 0x7a, 0x00, 0x0f, 0x87, 0x70, 0x87, 0x5f, 0x08, 0xc9, 0x1a, 0xab, 0x88, 0xc9,
	0x19, 0xf4, 0xa4, 0x50, 0x6c, 0xae, 0xea, 0x32, 0x63, 0x06, 0x0d, 0xbf, 0xa0, 0xe0, 0x52, 0x33,
	0xcc, 0x38, 0x91, 0x61, 0x2b, 0x8d, 0x86, 0x03, 0x8a, 0xd8, 0x5d, 0x2d, 0x33, 0xa9, 0xca, 0x97,
	0xcd, 0xd2, 0x4d, 0xe4, 0xb8, 0x68, 0xe5, 0x60, 0xcd, 0x75, 0x98, 0x0c, 0xa0, 0x2b, 0x53, 0xc5,
	0xeb, 0x94, 0xb3, 0xa8, 0xb3, 0xb6, 0xb8, 0x89, 0x3f, 0x7e, 0xf8, 0xf5, 0x9e, 0x0b, 0xbb, 0xac,
	0xb3, 0x38, 0xd7, 0x65, 0x82, 0xa7, 0xd4, 0x86, 0x27, 0xf7, 0xbf, 0xcc, 0x99, 0x4a, 0x56, 0xd9,
	0x1b, 0xae, 0x93, 0xdd, 0xf7, 0xce, 0x3a, 0xf8, 0xd8, 0xef, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff,
	0xef, 0x58, 0x86, 0xda, 0x50, 0x03, 0x00, 0x00,
}
