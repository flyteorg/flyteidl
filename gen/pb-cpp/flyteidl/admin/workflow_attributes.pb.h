// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/workflow_attributes.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/admin/matchable_resource.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto();
namespace flyteidl {
namespace admin {
class WorkflowAttributes;
class WorkflowAttributesDefaultTypeInternal;
extern WorkflowAttributesDefaultTypeInternal _WorkflowAttributes_default_instance_;
class WorkflowAttributesDeleteRequest;
class WorkflowAttributesDeleteRequestDefaultTypeInternal;
extern WorkflowAttributesDeleteRequestDefaultTypeInternal _WorkflowAttributesDeleteRequest_default_instance_;
class WorkflowAttributesDeleteResponse;
class WorkflowAttributesDeleteResponseDefaultTypeInternal;
extern WorkflowAttributesDeleteResponseDefaultTypeInternal _WorkflowAttributesDeleteResponse_default_instance_;
class WorkflowAttributesGetRequest;
class WorkflowAttributesGetRequestDefaultTypeInternal;
extern WorkflowAttributesGetRequestDefaultTypeInternal _WorkflowAttributesGetRequest_default_instance_;
class WorkflowAttributesGetResponse;
class WorkflowAttributesGetResponseDefaultTypeInternal;
extern WorkflowAttributesGetResponseDefaultTypeInternal _WorkflowAttributesGetResponse_default_instance_;
class WorkflowAttributesUpdateRequest;
class WorkflowAttributesUpdateRequestDefaultTypeInternal;
extern WorkflowAttributesUpdateRequestDefaultTypeInternal _WorkflowAttributesUpdateRequest_default_instance_;
class WorkflowAttributesUpdateResponse;
class WorkflowAttributesUpdateResponseDefaultTypeInternal;
extern WorkflowAttributesUpdateResponseDefaultTypeInternal _WorkflowAttributesUpdateResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::admin::WorkflowAttributes* Arena::CreateMaybeMessage<::flyteidl::admin::WorkflowAttributes>(Arena*);
template<> ::flyteidl::admin::WorkflowAttributesDeleteRequest* Arena::CreateMaybeMessage<::flyteidl::admin::WorkflowAttributesDeleteRequest>(Arena*);
template<> ::flyteidl::admin::WorkflowAttributesDeleteResponse* Arena::CreateMaybeMessage<::flyteidl::admin::WorkflowAttributesDeleteResponse>(Arena*);
template<> ::flyteidl::admin::WorkflowAttributesGetRequest* Arena::CreateMaybeMessage<::flyteidl::admin::WorkflowAttributesGetRequest>(Arena*);
template<> ::flyteidl::admin::WorkflowAttributesGetResponse* Arena::CreateMaybeMessage<::flyteidl::admin::WorkflowAttributesGetResponse>(Arena*);
template<> ::flyteidl::admin::WorkflowAttributesUpdateRequest* Arena::CreateMaybeMessage<::flyteidl::admin::WorkflowAttributesUpdateRequest>(Arena*);
template<> ::flyteidl::admin::WorkflowAttributesUpdateResponse* Arena::CreateMaybeMessage<::flyteidl::admin::WorkflowAttributesUpdateResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace admin {

// ===================================================================

class WorkflowAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.WorkflowAttributes) */ {
 public:
  WorkflowAttributes();
  virtual ~WorkflowAttributes();

  WorkflowAttributes(const WorkflowAttributes& from);

  inline WorkflowAttributes& operator=(const WorkflowAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowAttributes(WorkflowAttributes&& from) noexcept
    : WorkflowAttributes() {
    *this = ::std::move(from);
  }

  inline WorkflowAttributes& operator=(WorkflowAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowAttributes* internal_default_instance() {
    return reinterpret_cast<const WorkflowAttributes*>(
               &_WorkflowAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(WorkflowAttributes* other);
  friend void swap(WorkflowAttributes& a, WorkflowAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowAttributes* New() const final {
    return CreateMaybeMessage<WorkflowAttributes>(nullptr);
  }

  WorkflowAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowAttributes& from);
  void MergeFrom(const WorkflowAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // string workflow = 3;
  void clear_workflow();
  static const int kWorkflowFieldNumber = 3;
  const ::std::string& workflow() const;
  void set_workflow(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow(::std::string&& value);
  #endif
  void set_workflow(const char* value);
  void set_workflow(const char* value, size_t size);
  ::std::string* mutable_workflow();
  ::std::string* release_workflow();
  void set_allocated_workflow(::std::string* workflow);

  // .flyteidl.admin.MatchingAttributes matching_attributes = 4;
  bool has_matching_attributes() const;
  void clear_matching_attributes();
  static const int kMatchingAttributesFieldNumber = 4;
  const ::flyteidl::admin::MatchingAttributes& matching_attributes() const;
  ::flyteidl::admin::MatchingAttributes* release_matching_attributes();
  ::flyteidl::admin::MatchingAttributes* mutable_matching_attributes();
  void set_allocated_matching_attributes(::flyteidl::admin::MatchingAttributes* matching_attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.WorkflowAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr workflow_;
  ::flyteidl::admin::MatchingAttributes* matching_attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class WorkflowAttributesUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.WorkflowAttributesUpdateRequest) */ {
 public:
  WorkflowAttributesUpdateRequest();
  virtual ~WorkflowAttributesUpdateRequest();

  WorkflowAttributesUpdateRequest(const WorkflowAttributesUpdateRequest& from);

  inline WorkflowAttributesUpdateRequest& operator=(const WorkflowAttributesUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowAttributesUpdateRequest(WorkflowAttributesUpdateRequest&& from) noexcept
    : WorkflowAttributesUpdateRequest() {
    *this = ::std::move(from);
  }

  inline WorkflowAttributesUpdateRequest& operator=(WorkflowAttributesUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowAttributesUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowAttributesUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const WorkflowAttributesUpdateRequest*>(
               &_WorkflowAttributesUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(WorkflowAttributesUpdateRequest* other);
  friend void swap(WorkflowAttributesUpdateRequest& a, WorkflowAttributesUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowAttributesUpdateRequest* New() const final {
    return CreateMaybeMessage<WorkflowAttributesUpdateRequest>(nullptr);
  }

  WorkflowAttributesUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowAttributesUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowAttributesUpdateRequest& from);
  void MergeFrom(const WorkflowAttributesUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowAttributesUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.WorkflowAttributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::flyteidl::admin::WorkflowAttributes& attributes() const;
  ::flyteidl::admin::WorkflowAttributes* release_attributes();
  ::flyteidl::admin::WorkflowAttributes* mutable_attributes();
  void set_allocated_attributes(::flyteidl::admin::WorkflowAttributes* attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.WorkflowAttributesUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::WorkflowAttributes* attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class WorkflowAttributesUpdateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.WorkflowAttributesUpdateResponse) */ {
 public:
  WorkflowAttributesUpdateResponse();
  virtual ~WorkflowAttributesUpdateResponse();

  WorkflowAttributesUpdateResponse(const WorkflowAttributesUpdateResponse& from);

  inline WorkflowAttributesUpdateResponse& operator=(const WorkflowAttributesUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowAttributesUpdateResponse(WorkflowAttributesUpdateResponse&& from) noexcept
    : WorkflowAttributesUpdateResponse() {
    *this = ::std::move(from);
  }

  inline WorkflowAttributesUpdateResponse& operator=(WorkflowAttributesUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowAttributesUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowAttributesUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const WorkflowAttributesUpdateResponse*>(
               &_WorkflowAttributesUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(WorkflowAttributesUpdateResponse* other);
  friend void swap(WorkflowAttributesUpdateResponse& a, WorkflowAttributesUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowAttributesUpdateResponse* New() const final {
    return CreateMaybeMessage<WorkflowAttributesUpdateResponse>(nullptr);
  }

  WorkflowAttributesUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowAttributesUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowAttributesUpdateResponse& from);
  void MergeFrom(const WorkflowAttributesUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowAttributesUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.WorkflowAttributesUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class WorkflowAttributesGetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.WorkflowAttributesGetRequest) */ {
 public:
  WorkflowAttributesGetRequest();
  virtual ~WorkflowAttributesGetRequest();

  WorkflowAttributesGetRequest(const WorkflowAttributesGetRequest& from);

  inline WorkflowAttributesGetRequest& operator=(const WorkflowAttributesGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowAttributesGetRequest(WorkflowAttributesGetRequest&& from) noexcept
    : WorkflowAttributesGetRequest() {
    *this = ::std::move(from);
  }

  inline WorkflowAttributesGetRequest& operator=(WorkflowAttributesGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowAttributesGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowAttributesGetRequest* internal_default_instance() {
    return reinterpret_cast<const WorkflowAttributesGetRequest*>(
               &_WorkflowAttributesGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(WorkflowAttributesGetRequest* other);
  friend void swap(WorkflowAttributesGetRequest& a, WorkflowAttributesGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowAttributesGetRequest* New() const final {
    return CreateMaybeMessage<WorkflowAttributesGetRequest>(nullptr);
  }

  WorkflowAttributesGetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowAttributesGetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowAttributesGetRequest& from);
  void MergeFrom(const WorkflowAttributesGetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowAttributesGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // string workflow = 3;
  void clear_workflow();
  static const int kWorkflowFieldNumber = 3;
  const ::std::string& workflow() const;
  void set_workflow(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow(::std::string&& value);
  #endif
  void set_workflow(const char* value);
  void set_workflow(const char* value, size_t size);
  ::std::string* mutable_workflow();
  ::std::string* release_workflow();
  void set_allocated_workflow(::std::string* workflow);

  // .flyteidl.admin.MatchableResource resource_type = 4;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 4;
  ::flyteidl::admin::MatchableResource resource_type() const;
  void set_resource_type(::flyteidl::admin::MatchableResource value);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.WorkflowAttributesGetRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr workflow_;
  int resource_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class WorkflowAttributesGetResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.WorkflowAttributesGetResponse) */ {
 public:
  WorkflowAttributesGetResponse();
  virtual ~WorkflowAttributesGetResponse();

  WorkflowAttributesGetResponse(const WorkflowAttributesGetResponse& from);

  inline WorkflowAttributesGetResponse& operator=(const WorkflowAttributesGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowAttributesGetResponse(WorkflowAttributesGetResponse&& from) noexcept
    : WorkflowAttributesGetResponse() {
    *this = ::std::move(from);
  }

  inline WorkflowAttributesGetResponse& operator=(WorkflowAttributesGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowAttributesGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowAttributesGetResponse* internal_default_instance() {
    return reinterpret_cast<const WorkflowAttributesGetResponse*>(
               &_WorkflowAttributesGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(WorkflowAttributesGetResponse* other);
  friend void swap(WorkflowAttributesGetResponse& a, WorkflowAttributesGetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowAttributesGetResponse* New() const final {
    return CreateMaybeMessage<WorkflowAttributesGetResponse>(nullptr);
  }

  WorkflowAttributesGetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowAttributesGetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowAttributesGetResponse& from);
  void MergeFrom(const WorkflowAttributesGetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowAttributesGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.WorkflowAttributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::flyteidl::admin::WorkflowAttributes& attributes() const;
  ::flyteidl::admin::WorkflowAttributes* release_attributes();
  ::flyteidl::admin::WorkflowAttributes* mutable_attributes();
  void set_allocated_attributes(::flyteidl::admin::WorkflowAttributes* attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.WorkflowAttributesGetResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::WorkflowAttributes* attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class WorkflowAttributesDeleteRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.WorkflowAttributesDeleteRequest) */ {
 public:
  WorkflowAttributesDeleteRequest();
  virtual ~WorkflowAttributesDeleteRequest();

  WorkflowAttributesDeleteRequest(const WorkflowAttributesDeleteRequest& from);

  inline WorkflowAttributesDeleteRequest& operator=(const WorkflowAttributesDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowAttributesDeleteRequest(WorkflowAttributesDeleteRequest&& from) noexcept
    : WorkflowAttributesDeleteRequest() {
    *this = ::std::move(from);
  }

  inline WorkflowAttributesDeleteRequest& operator=(WorkflowAttributesDeleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowAttributesDeleteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowAttributesDeleteRequest* internal_default_instance() {
    return reinterpret_cast<const WorkflowAttributesDeleteRequest*>(
               &_WorkflowAttributesDeleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(WorkflowAttributesDeleteRequest* other);
  friend void swap(WorkflowAttributesDeleteRequest& a, WorkflowAttributesDeleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowAttributesDeleteRequest* New() const final {
    return CreateMaybeMessage<WorkflowAttributesDeleteRequest>(nullptr);
  }

  WorkflowAttributesDeleteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowAttributesDeleteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowAttributesDeleteRequest& from);
  void MergeFrom(const WorkflowAttributesDeleteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowAttributesDeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // string domain = 2;
  void clear_domain();
  static const int kDomainFieldNumber = 2;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // string workflow = 3;
  void clear_workflow();
  static const int kWorkflowFieldNumber = 3;
  const ::std::string& workflow() const;
  void set_workflow(const ::std::string& value);
  #if LANG_CXX11
  void set_workflow(::std::string&& value);
  #endif
  void set_workflow(const char* value);
  void set_workflow(const char* value, size_t size);
  ::std::string* mutable_workflow();
  ::std::string* release_workflow();
  void set_allocated_workflow(::std::string* workflow);

  // .flyteidl.admin.MatchableResource resource_type = 4;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 4;
  ::flyteidl::admin::MatchableResource resource_type() const;
  void set_resource_type(::flyteidl::admin::MatchableResource value);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.WorkflowAttributesDeleteRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr workflow_;
  int resource_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class WorkflowAttributesDeleteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.WorkflowAttributesDeleteResponse) */ {
 public:
  WorkflowAttributesDeleteResponse();
  virtual ~WorkflowAttributesDeleteResponse();

  WorkflowAttributesDeleteResponse(const WorkflowAttributesDeleteResponse& from);

  inline WorkflowAttributesDeleteResponse& operator=(const WorkflowAttributesDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkflowAttributesDeleteResponse(WorkflowAttributesDeleteResponse&& from) noexcept
    : WorkflowAttributesDeleteResponse() {
    *this = ::std::move(from);
  }

  inline WorkflowAttributesDeleteResponse& operator=(WorkflowAttributesDeleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WorkflowAttributesDeleteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkflowAttributesDeleteResponse* internal_default_instance() {
    return reinterpret_cast<const WorkflowAttributesDeleteResponse*>(
               &_WorkflowAttributesDeleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(WorkflowAttributesDeleteResponse* other);
  friend void swap(WorkflowAttributesDeleteResponse& a, WorkflowAttributesDeleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkflowAttributesDeleteResponse* New() const final {
    return CreateMaybeMessage<WorkflowAttributesDeleteResponse>(nullptr);
  }

  WorkflowAttributesDeleteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkflowAttributesDeleteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkflowAttributesDeleteResponse& from);
  void MergeFrom(const WorkflowAttributesDeleteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkflowAttributesDeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.WorkflowAttributesDeleteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorkflowAttributes

// string project = 1;
inline void WorkflowAttributes::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributes::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributes.project)
  return project_.GetNoArena();
}
inline void WorkflowAttributes::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributes.project)
}
#if LANG_CXX11
inline void WorkflowAttributes::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributes.project)
}
#endif
inline void WorkflowAttributes::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributes.project)
}
inline void WorkflowAttributes::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributes.project)
}
inline ::std::string* WorkflowAttributes::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributes.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributes::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributes.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributes::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributes.project)
}

// string domain = 2;
inline void WorkflowAttributes::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributes::domain() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributes.domain)
  return domain_.GetNoArena();
}
inline void WorkflowAttributes::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributes.domain)
}
#if LANG_CXX11
inline void WorkflowAttributes::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributes.domain)
}
#endif
inline void WorkflowAttributes::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributes.domain)
}
inline void WorkflowAttributes::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributes.domain)
}
inline ::std::string* WorkflowAttributes::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributes.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributes::release_domain() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributes.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributes::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributes.domain)
}

// string workflow = 3;
inline void WorkflowAttributes::clear_workflow() {
  workflow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributes::workflow() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributes.workflow)
  return workflow_.GetNoArena();
}
inline void WorkflowAttributes::set_workflow(const ::std::string& value) {
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributes.workflow)
}
#if LANG_CXX11
inline void WorkflowAttributes::set_workflow(::std::string&& value) {
  
  workflow_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributes.workflow)
}
#endif
inline void WorkflowAttributes::set_workflow(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributes.workflow)
}
inline void WorkflowAttributes::set_workflow(const char* value, size_t size) {
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributes.workflow)
}
inline ::std::string* WorkflowAttributes::mutable_workflow() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributes.workflow)
  return workflow_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributes::release_workflow() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributes.workflow)
  
  return workflow_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributes::set_allocated_workflow(::std::string* workflow) {
  if (workflow != nullptr) {
    
  } else {
    
  }
  workflow_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributes.workflow)
}

// .flyteidl.admin.MatchingAttributes matching_attributes = 4;
inline bool WorkflowAttributes::has_matching_attributes() const {
  return this != internal_default_instance() && matching_attributes_ != nullptr;
}
inline const ::flyteidl::admin::MatchingAttributes& WorkflowAttributes::matching_attributes() const {
  const ::flyteidl::admin::MatchingAttributes* p = matching_attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributes.matching_attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::MatchingAttributes*>(
      &::flyteidl::admin::_MatchingAttributes_default_instance_);
}
inline ::flyteidl::admin::MatchingAttributes* WorkflowAttributes::release_matching_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributes.matching_attributes)
  
  ::flyteidl::admin::MatchingAttributes* temp = matching_attributes_;
  matching_attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::MatchingAttributes* WorkflowAttributes::mutable_matching_attributes() {
  
  if (matching_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::MatchingAttributes>(GetArenaNoVirtual());
    matching_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributes.matching_attributes)
  return matching_attributes_;
}
inline void WorkflowAttributes::set_allocated_matching_attributes(::flyteidl::admin::MatchingAttributes* matching_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(matching_attributes_);
  }
  if (matching_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      matching_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, matching_attributes, submessage_arena);
    }
    
  } else {
    
  }
  matching_attributes_ = matching_attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributes.matching_attributes)
}

// -------------------------------------------------------------------

// WorkflowAttributesUpdateRequest

// .flyteidl.admin.WorkflowAttributes attributes = 1;
inline bool WorkflowAttributesUpdateRequest::has_attributes() const {
  return this != internal_default_instance() && attributes_ != nullptr;
}
inline void WorkflowAttributesUpdateRequest::clear_attributes() {
  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
}
inline const ::flyteidl::admin::WorkflowAttributes& WorkflowAttributesUpdateRequest::attributes() const {
  const ::flyteidl::admin::WorkflowAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesUpdateRequest.attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::WorkflowAttributes*>(
      &::flyteidl::admin::_WorkflowAttributes_default_instance_);
}
inline ::flyteidl::admin::WorkflowAttributes* WorkflowAttributesUpdateRequest::release_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesUpdateRequest.attributes)
  
  ::flyteidl::admin::WorkflowAttributes* temp = attributes_;
  attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::WorkflowAttributes* WorkflowAttributesUpdateRequest::mutable_attributes() {
  
  if (attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::WorkflowAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesUpdateRequest.attributes)
  return attributes_;
}
inline void WorkflowAttributesUpdateRequest::set_allocated_attributes(::flyteidl::admin::WorkflowAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesUpdateRequest.attributes)
}

// -------------------------------------------------------------------

// WorkflowAttributesUpdateResponse

// -------------------------------------------------------------------

// WorkflowAttributesGetRequest

// string project = 1;
inline void WorkflowAttributesGetRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributesGetRequest::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesGetRequest.project)
  return project_.GetNoArena();
}
inline void WorkflowAttributesGetRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesGetRequest.project)
}
#if LANG_CXX11
inline void WorkflowAttributesGetRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributesGetRequest.project)
}
#endif
inline void WorkflowAttributesGetRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributesGetRequest.project)
}
inline void WorkflowAttributesGetRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributesGetRequest.project)
}
inline ::std::string* WorkflowAttributesGetRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesGetRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributesGetRequest::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesGetRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributesGetRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesGetRequest.project)
}

// string domain = 2;
inline void WorkflowAttributesGetRequest::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributesGetRequest::domain() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesGetRequest.domain)
  return domain_.GetNoArena();
}
inline void WorkflowAttributesGetRequest::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesGetRequest.domain)
}
#if LANG_CXX11
inline void WorkflowAttributesGetRequest::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributesGetRequest.domain)
}
#endif
inline void WorkflowAttributesGetRequest::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributesGetRequest.domain)
}
inline void WorkflowAttributesGetRequest::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributesGetRequest.domain)
}
inline ::std::string* WorkflowAttributesGetRequest::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesGetRequest.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributesGetRequest::release_domain() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesGetRequest.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributesGetRequest::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesGetRequest.domain)
}

// string workflow = 3;
inline void WorkflowAttributesGetRequest::clear_workflow() {
  workflow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributesGetRequest::workflow() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
  return workflow_.GetNoArena();
}
inline void WorkflowAttributesGetRequest::set_workflow(const ::std::string& value) {
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
}
#if LANG_CXX11
inline void WorkflowAttributesGetRequest::set_workflow(::std::string&& value) {
  
  workflow_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
}
#endif
inline void WorkflowAttributesGetRequest::set_workflow(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
}
inline void WorkflowAttributesGetRequest::set_workflow(const char* value, size_t size) {
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
}
inline ::std::string* WorkflowAttributesGetRequest::mutable_workflow() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
  return workflow_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributesGetRequest::release_workflow() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
  
  return workflow_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributesGetRequest::set_allocated_workflow(::std::string* workflow) {
  if (workflow != nullptr) {
    
  } else {
    
  }
  workflow_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesGetRequest.workflow)
}

// .flyteidl.admin.MatchableResource resource_type = 4;
inline void WorkflowAttributesGetRequest::clear_resource_type() {
  resource_type_ = 0;
}
inline ::flyteidl::admin::MatchableResource WorkflowAttributesGetRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesGetRequest.resource_type)
  return static_cast< ::flyteidl::admin::MatchableResource >(resource_type_);
}
inline void WorkflowAttributesGetRequest::set_resource_type(::flyteidl::admin::MatchableResource value) {
  
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesGetRequest.resource_type)
}

// -------------------------------------------------------------------

// WorkflowAttributesGetResponse

// .flyteidl.admin.WorkflowAttributes attributes = 1;
inline bool WorkflowAttributesGetResponse::has_attributes() const {
  return this != internal_default_instance() && attributes_ != nullptr;
}
inline void WorkflowAttributesGetResponse::clear_attributes() {
  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
}
inline const ::flyteidl::admin::WorkflowAttributes& WorkflowAttributesGetResponse::attributes() const {
  const ::flyteidl::admin::WorkflowAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesGetResponse.attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::WorkflowAttributes*>(
      &::flyteidl::admin::_WorkflowAttributes_default_instance_);
}
inline ::flyteidl::admin::WorkflowAttributes* WorkflowAttributesGetResponse::release_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesGetResponse.attributes)
  
  ::flyteidl::admin::WorkflowAttributes* temp = attributes_;
  attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::WorkflowAttributes* WorkflowAttributesGetResponse::mutable_attributes() {
  
  if (attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::WorkflowAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesGetResponse.attributes)
  return attributes_;
}
inline void WorkflowAttributesGetResponse::set_allocated_attributes(::flyteidl::admin::WorkflowAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesGetResponse.attributes)
}

// -------------------------------------------------------------------

// WorkflowAttributesDeleteRequest

// string project = 1;
inline void WorkflowAttributesDeleteRequest::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributesDeleteRequest::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
  return project_.GetNoArena();
}
inline void WorkflowAttributesDeleteRequest::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
}
#if LANG_CXX11
inline void WorkflowAttributesDeleteRequest::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
}
#endif
inline void WorkflowAttributesDeleteRequest::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
}
inline void WorkflowAttributesDeleteRequest::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
}
inline ::std::string* WorkflowAttributesDeleteRequest::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributesDeleteRequest::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributesDeleteRequest::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesDeleteRequest.project)
}

// string domain = 2;
inline void WorkflowAttributesDeleteRequest::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributesDeleteRequest::domain() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
  return domain_.GetNoArena();
}
inline void WorkflowAttributesDeleteRequest::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
}
#if LANG_CXX11
inline void WorkflowAttributesDeleteRequest::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
}
#endif
inline void WorkflowAttributesDeleteRequest::set_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
}
inline void WorkflowAttributesDeleteRequest::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
}
inline ::std::string* WorkflowAttributesDeleteRequest::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributesDeleteRequest::release_domain() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributesDeleteRequest::set_allocated_domain(::std::string* domain) {
  if (domain != nullptr) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesDeleteRequest.domain)
}

// string workflow = 3;
inline void WorkflowAttributesDeleteRequest::clear_workflow() {
  workflow_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorkflowAttributesDeleteRequest::workflow() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
  return workflow_.GetNoArena();
}
inline void WorkflowAttributesDeleteRequest::set_workflow(const ::std::string& value) {
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
}
#if LANG_CXX11
inline void WorkflowAttributesDeleteRequest::set_workflow(::std::string&& value) {
  
  workflow_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
}
#endif
inline void WorkflowAttributesDeleteRequest::set_workflow(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
}
inline void WorkflowAttributesDeleteRequest::set_workflow(const char* value, size_t size) {
  
  workflow_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
}
inline ::std::string* WorkflowAttributesDeleteRequest::mutable_workflow() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
  return workflow_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorkflowAttributesDeleteRequest::release_workflow() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
  
  return workflow_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorkflowAttributesDeleteRequest::set_allocated_workflow(::std::string* workflow) {
  if (workflow != nullptr) {
    
  } else {
    
  }
  workflow_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workflow);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.WorkflowAttributesDeleteRequest.workflow)
}

// .flyteidl.admin.MatchableResource resource_type = 4;
inline void WorkflowAttributesDeleteRequest::clear_resource_type() {
  resource_type_ = 0;
}
inline ::flyteidl::admin::MatchableResource WorkflowAttributesDeleteRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.WorkflowAttributesDeleteRequest.resource_type)
  return static_cast< ::flyteidl::admin::MatchableResource >(resource_type_);
}
inline void WorkflowAttributesDeleteRequest::set_resource_type(::flyteidl::admin::MatchableResource value) {
  
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.admin.WorkflowAttributesDeleteRequest.resource_type)
}

// -------------------------------------------------------------------

// WorkflowAttributesDeleteResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto
