// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/description_entity.proto

#include "flyteidl/admin/description_entity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NamedEntityIdentifier_flyteidl_2fadmin_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Sort_flyteidl_2fadmin_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fdescription_5fentity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Description_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fdescription_5fentity_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fdescription_5fentity_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_DescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fcore_2fidentifier_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_flyteidl_2fcore_2fidentifier_2eproto;
namespace flyteidl {
namespace admin {
class DescriptionEntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DescriptionEntity> _instance;
} _DescriptionEntity_default_instance_;
class DescriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Description> _instance;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
} _Description_default_instance_;
class SourceCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceCode> _instance;
} _SourceCode_default_instance_;
class DescriptionEntityListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DescriptionEntityList> _instance;
} _DescriptionEntityList_default_instance_;
class DescriptionEntityListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DescriptionEntityListRequest> _instance;
} _DescriptionEntityListRequest_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static void InitDefaultsDescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_DescriptionEntity_default_instance_;
    new (ptr) ::flyteidl::admin::DescriptionEntity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::DescriptionEntity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto}, {
      &scc_info_Identifier_flyteidl_2fcore_2fidentifier_2eproto.base,
      &scc_info_Description_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base,
      &scc_info_SourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base,}};

static void InitDefaultsDescription_flyteidl_2fadmin_2fdescription_5fentity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_Description_default_instance_;
    new (ptr) ::flyteidl::admin::Description();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::Description::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Description_flyteidl_2fadmin_2fdescription_5fentity_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDescription_flyteidl_2fadmin_2fdescription_5fentity_2eproto}, {}};

static void InitDefaultsSourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_SourceCode_default_instance_;
    new (ptr) ::flyteidl::admin::SourceCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::SourceCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto}, {}};

static void InitDefaultsDescriptionEntityList_flyteidl_2fadmin_2fdescription_5fentity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_DescriptionEntityList_default_instance_;
    new (ptr) ::flyteidl::admin::DescriptionEntityList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::DescriptionEntityList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DescriptionEntityList_flyteidl_2fadmin_2fdescription_5fentity_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDescriptionEntityList_flyteidl_2fadmin_2fdescription_5fentity_2eproto}, {
      &scc_info_DescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base,}};

static void InitDefaultsDescriptionEntityListRequest_flyteidl_2fadmin_2fdescription_5fentity_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_DescriptionEntityListRequest_default_instance_;
    new (ptr) ::flyteidl::admin::DescriptionEntityListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::DescriptionEntityListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DescriptionEntityListRequest_flyteidl_2fadmin_2fdescription_5fentity_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDescriptionEntityListRequest_flyteidl_2fadmin_2fdescription_5fentity_2eproto}, {
      &scc_info_NamedEntityIdentifier_flyteidl_2fadmin_2fcommon_2eproto.base,
      &scc_info_Sort_flyteidl_2fadmin_2fcommon_2eproto.base,}};

void InitDefaults_flyteidl_2fadmin_2fdescription_5fentity_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_DescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Description_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DescriptionEntityList_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DescriptionEntityListRequest_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fadmin_2fdescription_5fentity_2eproto[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntity, id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntity, short_description_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntity, long_description_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntity, source_code_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntity, tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Description, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Description, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::admin::DescriptionDefaultTypeInternal, value_),
  offsetof(::flyteidl::admin::DescriptionDefaultTypeInternal, uri_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Description, format_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Description, icon_link_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::Description, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::SourceCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::SourceCode, link_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityList, descriptionentities_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityList, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityListRequest, resource_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityListRequest, id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityListRequest, limit_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityListRequest, token_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityListRequest, filters_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::DescriptionEntityListRequest, sort_by_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::admin::DescriptionEntity)},
  { 10, -1, sizeof(::flyteidl::admin::Description)},
  { 20, -1, sizeof(::flyteidl::admin::SourceCode)},
  { 26, -1, sizeof(::flyteidl::admin::DescriptionEntityList)},
  { 33, -1, sizeof(::flyteidl::admin::DescriptionEntityListRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_DescriptionEntity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_Description_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_SourceCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_DescriptionEntityList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_DescriptionEntityListRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto = {
  {}, AddDescriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto, "flyteidl/admin/description_entity.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fadmin_2fdescription_5fentity_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2fdescription_5fentity_2eproto, 5, file_level_enum_descriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fadmin_2fdescription_5fentity_2eproto[] =
  "\n\'flyteidl/admin/description_entity.prot"
  "o\022\016flyteidl.admin\032\036flyteidl/core/identif"
  "ier.proto\032\033flyteidl/admin/common.proto\"\313"
  "\001\n\021DescriptionEntity\022%\n\002id\030\001 \001(\0132\031.flyte"
  "idl.core.Identifier\022\031\n\021short_description"
  "\030\002 \001(\t\0225\n\020long_description\030\003 \001(\0132\033.flyte"
  "idl.admin.Description\022/\n\013source_code\030\004 \001"
  "(\0132\032.flyteidl.admin.SourceCode\022\014\n\004tags\030\005"
  " \003(\t\"~\n\013Description\022\017\n\005value\030\001 \001(\tH\000\022\r\n\003"
  "uri\030\002 \001(\tH\000\0221\n\006format\030\003 \001(\0162!.flyteidl.a"
  "dmin.DescriptionFormat\022\021\n\ticon_link\030\004 \001("
  "\tB\t\n\007content\"\032\n\nSourceCode\022\014\n\004link\030\001 \001(\t"
  "\"f\n\025DescriptionEntityList\022>\n\023description"
  "Entities\030\001 \003(\0132!.flyteidl.admin.Descript"
  "ionEntity\022\r\n\005token\030\002 \001(\t\"\333\001\n\034Description"
  "EntityListRequest\0222\n\rresource_type\030\001 \001(\016"
  "2\033.flyteidl.core.ResourceType\0221\n\002id\030\002 \001("
  "\0132%.flyteidl.admin.NamedEntityIdentifier"
  "\022\r\n\005limit\030\003 \001(\r\022\r\n\005token\030\004 \001(\t\022\017\n\007filter"
  "s\030\005 \001(\t\022%\n\007sort_by\030\006 \001(\0132\024.flyteidl.admi"
  "n.Sort*\215\001\n\021DescriptionFormat\022\036\n\032DESCRIPT"
  "ION_FORMAT_UNKNOWN\020\000\022\037\n\033DESCRIPTION_FORM"
  "AT_MARKDOWN\020\001\022\033\n\027DESCRIPTION_FORMAT_HTML"
  "\020\002\022\032\n\026DESCRIPTION_FORMAT_RST\020\003B7Z5github"
  ".com/flyteorg/flyteidl/gen/pb-go/flyteid"
  "l/adminb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto = {
  false, InitDefaults_flyteidl_2fadmin_2fdescription_5fentity_2eproto, 
  descriptor_table_protodef_flyteidl_2fadmin_2fdescription_5fentity_2eproto,
  "flyteidl/admin/description_entity.proto", &assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto, 1015,
};

void AddDescriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_flyteidl_2fcore_2fidentifier_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fcommon_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fadmin_2fdescription_5fentity_2eproto = []() { AddDescriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto(); return true; }();
namespace flyteidl {
namespace admin {
const ::google::protobuf::EnumDescriptor* DescriptionFormat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto);
  return file_level_enum_descriptors_flyteidl_2fadmin_2fdescription_5fentity_2eproto[0];
}
bool DescriptionFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DescriptionEntity::InitAsDefaultInstance() {
  ::flyteidl::admin::_DescriptionEntity_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::Identifier*>(
      ::flyteidl::core::Identifier::internal_default_instance());
  ::flyteidl::admin::_DescriptionEntity_default_instance_._instance.get_mutable()->long_description_ = const_cast< ::flyteidl::admin::Description*>(
      ::flyteidl::admin::Description::internal_default_instance());
  ::flyteidl::admin::_DescriptionEntity_default_instance_._instance.get_mutable()->source_code_ = const_cast< ::flyteidl::admin::SourceCode*>(
      ::flyteidl::admin::SourceCode::internal_default_instance());
}
class DescriptionEntity::HasBitSetters {
 public:
  static const ::flyteidl::core::Identifier& id(const DescriptionEntity* msg);
  static const ::flyteidl::admin::Description& long_description(const DescriptionEntity* msg);
  static const ::flyteidl::admin::SourceCode& source_code(const DescriptionEntity* msg);
};

const ::flyteidl::core::Identifier&
DescriptionEntity::HasBitSetters::id(const DescriptionEntity* msg) {
  return *msg->id_;
}
const ::flyteidl::admin::Description&
DescriptionEntity::HasBitSetters::long_description(const DescriptionEntity* msg) {
  return *msg->long_description_;
}
const ::flyteidl::admin::SourceCode&
DescriptionEntity::HasBitSetters::source_code(const DescriptionEntity* msg) {
  return *msg->source_code_;
}
void DescriptionEntity::clear_id() {
  if (GetArenaNoVirtual() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DescriptionEntity::kIdFieldNumber;
const int DescriptionEntity::kShortDescriptionFieldNumber;
const int DescriptionEntity::kLongDescriptionFieldNumber;
const int DescriptionEntity::kSourceCodeFieldNumber;
const int DescriptionEntity::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DescriptionEntity::DescriptionEntity()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.DescriptionEntity)
}
DescriptionEntity::DescriptionEntity(const DescriptionEntity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_description().size() > 0) {
    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  if (from.has_id()) {
    id_ = new ::flyteidl::core::Identifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from.has_long_description()) {
    long_description_ = new ::flyteidl::admin::Description(*from.long_description_);
  } else {
    long_description_ = nullptr;
  }
  if (from.has_source_code()) {
    source_code_ = new ::flyteidl::admin::SourceCode(*from.source_code_);
  } else {
    source_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.DescriptionEntity)
}

void DescriptionEntity::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  short_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_code_) -
      reinterpret_cast<char*>(&id_)) + sizeof(source_code_));
}

DescriptionEntity::~DescriptionEntity() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.DescriptionEntity)
  SharedDtor();
}

void DescriptionEntity::SharedDtor() {
  short_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete long_description_;
  if (this != internal_default_instance()) delete source_code_;
}

void DescriptionEntity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DescriptionEntity& DescriptionEntity::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DescriptionEntity_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  return *internal_default_instance();
}


void DescriptionEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.DescriptionEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  short_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && long_description_ != nullptr) {
    delete long_description_;
  }
  long_description_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && source_code_ != nullptr) {
    delete source_code_;
  }
  source_code_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DescriptionEntity::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DescriptionEntity*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.core.Identifier id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::core::Identifier::_InternalParse;
        object = msg->mutable_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string short_description = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.DescriptionEntity.short_description");
        object = msg->mutable_short_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.admin.Description long_description = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::Description::_InternalParse;
        object = msg->mutable_long_description();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.admin.SourceCode source_code = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::SourceCode::_InternalParse;
        object = msg->mutable_source_code();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated string tags = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("flyteidl.admin.DescriptionEntity.tags");
          object = msg->add_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DescriptionEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.DescriptionEntity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string short_description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_short_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->short_description().data(), static_cast<int>(this->short_description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.DescriptionEntity.short_description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.Description long_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_long_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.SourceCode source_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.DescriptionEntity.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.DescriptionEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.DescriptionEntity)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DescriptionEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.DescriptionEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::id(this), output);
  }

  // string short_description = 2;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntity.short_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->short_description(), output);
  }

  // .flyteidl.admin.Description long_description = 3;
  if (this->has_long_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::long_description(this), output);
  }

  // .flyteidl.admin.SourceCode source_code = 4;
  if (this->has_source_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::source_code(this), output);
  }

  // repeated string tags = 5;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntity.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->tags(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.DescriptionEntity)
}

::google::protobuf::uint8* DescriptionEntity::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.DescriptionEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::id(this), target);
  }

  // string short_description = 2;
  if (this->short_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->short_description().data(), static_cast<int>(this->short_description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntity.short_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->short_description(), target);
  }

  // .flyteidl.admin.Description long_description = 3;
  if (this->has_long_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::long_description(this), target);
  }

  // .flyteidl.admin.SourceCode source_code = 4;
  if (this->has_source_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::source_code(this), target);
  }

  // repeated string tags = 5;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntity.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->tags(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.DescriptionEntity)
  return target;
}

size_t DescriptionEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.DescriptionEntity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // string short_description = 2;
  if (this->short_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->short_description());
  }

  // .flyteidl.core.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .flyteidl.admin.Description long_description = 3;
  if (this->has_long_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *long_description_);
  }

  // .flyteidl.admin.SourceCode source_code = 4;
  if (this->has_source_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DescriptionEntity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.DescriptionEntity)
  GOOGLE_DCHECK_NE(&from, this);
  const DescriptionEntity* source =
      ::google::protobuf::DynamicCastToGenerated<DescriptionEntity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.DescriptionEntity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.DescriptionEntity)
    MergeFrom(*source);
  }
}

void DescriptionEntity::MergeFrom(const DescriptionEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.DescriptionEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.short_description().size() > 0) {

    short_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_description_);
  }
  if (from.has_id()) {
    mutable_id()->::flyteidl::core::Identifier::MergeFrom(from.id());
  }
  if (from.has_long_description()) {
    mutable_long_description()->::flyteidl::admin::Description::MergeFrom(from.long_description());
  }
  if (from.has_source_code()) {
    mutable_source_code()->::flyteidl::admin::SourceCode::MergeFrom(from.source_code());
  }
}

void DescriptionEntity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.DescriptionEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescriptionEntity::CopyFrom(const DescriptionEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.DescriptionEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescriptionEntity::IsInitialized() const {
  return true;
}

void DescriptionEntity::Swap(DescriptionEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DescriptionEntity::InternalSwap(DescriptionEntity* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.InternalSwap(CastToBase(&other->tags_));
  short_description_.Swap(&other->short_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(long_description_, other->long_description_);
  swap(source_code_, other->source_code_);
}

::google::protobuf::Metadata DescriptionEntity::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fdescription_5fentity_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Description::InitAsDefaultInstance() {
  ::flyteidl::admin::_Description_default_instance_.value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::flyteidl::admin::_Description_default_instance_.uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class Description::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Description::kValueFieldNumber;
const int Description::kUriFieldNumber;
const int Description::kFormatFieldNumber;
const int Description::kIconLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Description::Description()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.Description)
}
Description::Description(const Description& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  icon_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon_link().size() > 0) {
    icon_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_link_);
  }
  format_ = from.format_;
  clear_has_content();
  switch (from.content_case()) {
    case kValue: {
      set_value(from.value());
      break;
    }
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.Description)
}

void Description::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Description_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  icon_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_ = 0;
  clear_has_content();
}

Description::~Description() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.Description)
  SharedDtor();
}

void Description::SharedDtor() {
  icon_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_content()) {
    clear_content();
  }
}

void Description::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Description& Description::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Description_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  return *internal_default_instance();
}


void Description::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.admin.Description)
  switch (content_case()) {
    case kValue: {
      content_.value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kUri: {
      content_.uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void Description::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.Description)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  icon_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_ = 0;
  clear_content();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Description::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Description*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.Description.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string uri = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.Description.uri");
        object = msg->mutable_uri();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.admin.DescriptionFormat format = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_format(static_cast<::flyteidl::admin::DescriptionFormat>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string icon_link = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.Description.icon_link");
        object = msg->mutable_icon_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Description::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.Description)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.Description.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.Description.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.DescriptionFormat format = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_format(static_cast< ::flyteidl::admin::DescriptionFormat >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon_link = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon_link().data(), static_cast<int>(this->icon_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.Description.icon_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.Description)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.Description)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Description::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.Description)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.Description.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // string uri = 2;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.Description.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  // .flyteidl.admin.DescriptionFormat format = 3;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->format(), output);
  }

  // string icon_link = 4;
  if (this->icon_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_link().data(), static_cast<int>(this->icon_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.Description.icon_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon_link(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.Description)
}

::google::protobuf::uint8* Description::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.Description)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.Description.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // string uri = 2;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.Description.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  // .flyteidl.admin.DescriptionFormat format = 3;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->format(), target);
  }

  // string icon_link = 4;
  if (this->icon_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_link().data(), static_cast<int>(this->icon_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.Description.icon_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon_link(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.Description)
  return target;
}

size_t Description::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.Description)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string icon_link = 4;
  if (this->icon_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon_link());
  }

  // .flyteidl.admin.DescriptionFormat format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  switch (content_case()) {
    // string value = 1;
    case kValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
      break;
    }
    // string uri = 2;
    case kUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Description::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.Description)
  GOOGLE_DCHECK_NE(&from, this);
  const Description* source =
      ::google::protobuf::DynamicCastToGenerated<Description>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.Description)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.Description)
    MergeFrom(*source);
  }
}

void Description::MergeFrom(const Description& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.Description)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.icon_link().size() > 0) {

    icon_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_link_);
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
  switch (from.content_case()) {
    case kValue: {
      set_value(from.value());
      break;
    }
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void Description::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Description::CopyFrom(const Description& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Description::IsInitialized() const {
  return true;
}

void Description::Swap(Description* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Description::InternalSwap(Description* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  icon_link_.Swap(&other->icon_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(format_, other->format_);
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Description::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fdescription_5fentity_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SourceCode::InitAsDefaultInstance() {
}
class SourceCode::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceCode::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceCode::SourceCode()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.SourceCode)
}
SourceCode::SourceCode(const SourceCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.link().size() > 0) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.SourceCode)
}

void SourceCode::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SourceCode::~SourceCode() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.SourceCode)
  SharedDtor();
}

void SourceCode::SharedDtor() {
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourceCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceCode& SourceCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SourceCode_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  return *internal_default_instance();
}


void SourceCode::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.SourceCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SourceCode::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SourceCode*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string link = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.SourceCode.link");
        object = msg->mutable_link();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SourceCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.SourceCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string link = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->link().data(), static_cast<int>(this->link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.SourceCode.link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.SourceCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.SourceCode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SourceCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.SourceCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string link = 1;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.SourceCode.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->link(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.SourceCode)
}

::google::protobuf::uint8* SourceCode::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.SourceCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string link = 1;
  if (this->link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->link().data(), static_cast<int>(this->link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.SourceCode.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->link(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.SourceCode)
  return target;
}

size_t SourceCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.SourceCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string link = 1;
  if (this->link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.SourceCode)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceCode* source =
      ::google::protobuf::DynamicCastToGenerated<SourceCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.SourceCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.SourceCode)
    MergeFrom(*source);
  }
}

void SourceCode::MergeFrom(const SourceCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.SourceCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.link().size() > 0) {

    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
}

void SourceCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.SourceCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceCode::CopyFrom(const SourceCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.SourceCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceCode::IsInitialized() const {
  return true;
}

void SourceCode::Swap(SourceCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SourceCode::InternalSwap(SourceCode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  link_.Swap(&other->link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SourceCode::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fdescription_5fentity_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DescriptionEntityList::InitAsDefaultInstance() {
}
class DescriptionEntityList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DescriptionEntityList::kDescriptionEntitiesFieldNumber;
const int DescriptionEntityList::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DescriptionEntityList::DescriptionEntityList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.DescriptionEntityList)
}
DescriptionEntityList::DescriptionEntityList(const DescriptionEntityList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      descriptionentities_(from.descriptionentities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.DescriptionEntityList)
}

void DescriptionEntityList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DescriptionEntityList_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DescriptionEntityList::~DescriptionEntityList() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.DescriptionEntityList)
  SharedDtor();
}

void DescriptionEntityList::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DescriptionEntityList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DescriptionEntityList& DescriptionEntityList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DescriptionEntityList_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  return *internal_default_instance();
}


void DescriptionEntityList::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.DescriptionEntityList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptionentities_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DescriptionEntityList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DescriptionEntityList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .flyteidl.admin.DescriptionEntity descriptionEntities = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::admin::DescriptionEntity::_InternalParse;
          object = msg->add_descriptionentities();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.DescriptionEntityList.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DescriptionEntityList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.DescriptionEntityList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.admin.DescriptionEntity descriptionEntities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_descriptionentities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.DescriptionEntityList.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.DescriptionEntityList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.DescriptionEntityList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DescriptionEntityList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.DescriptionEntityList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.admin.DescriptionEntity descriptionEntities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptionentities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->descriptionentities(static_cast<int>(i)),
      output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntityList.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.DescriptionEntityList)
}

::google::protobuf::uint8* DescriptionEntityList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.DescriptionEntityList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.admin.DescriptionEntity descriptionEntities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptionentities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->descriptionentities(static_cast<int>(i)), target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntityList.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.DescriptionEntityList)
  return target;
}

size_t DescriptionEntityList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.DescriptionEntityList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .flyteidl.admin.DescriptionEntity descriptionEntities = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptionentities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->descriptionentities(static_cast<int>(i)));
    }
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DescriptionEntityList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.DescriptionEntityList)
  GOOGLE_DCHECK_NE(&from, this);
  const DescriptionEntityList* source =
      ::google::protobuf::DynamicCastToGenerated<DescriptionEntityList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.DescriptionEntityList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.DescriptionEntityList)
    MergeFrom(*source);
  }
}

void DescriptionEntityList::MergeFrom(const DescriptionEntityList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.DescriptionEntityList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  descriptionentities_.MergeFrom(from.descriptionentities_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void DescriptionEntityList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.DescriptionEntityList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescriptionEntityList::CopyFrom(const DescriptionEntityList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.DescriptionEntityList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescriptionEntityList::IsInitialized() const {
  return true;
}

void DescriptionEntityList::Swap(DescriptionEntityList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DescriptionEntityList::InternalSwap(DescriptionEntityList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&descriptionentities_)->InternalSwap(CastToBase(&other->descriptionentities_));
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DescriptionEntityList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fdescription_5fentity_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DescriptionEntityListRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_DescriptionEntityListRequest_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::admin::NamedEntityIdentifier*>(
      ::flyteidl::admin::NamedEntityIdentifier::internal_default_instance());
  ::flyteidl::admin::_DescriptionEntityListRequest_default_instance_._instance.get_mutable()->sort_by_ = const_cast< ::flyteidl::admin::Sort*>(
      ::flyteidl::admin::Sort::internal_default_instance());
}
class DescriptionEntityListRequest::HasBitSetters {
 public:
  static const ::flyteidl::admin::NamedEntityIdentifier& id(const DescriptionEntityListRequest* msg);
  static const ::flyteidl::admin::Sort& sort_by(const DescriptionEntityListRequest* msg);
};

const ::flyteidl::admin::NamedEntityIdentifier&
DescriptionEntityListRequest::HasBitSetters::id(const DescriptionEntityListRequest* msg) {
  return *msg->id_;
}
const ::flyteidl::admin::Sort&
DescriptionEntityListRequest::HasBitSetters::sort_by(const DescriptionEntityListRequest* msg) {
  return *msg->sort_by_;
}
void DescriptionEntityListRequest::clear_id() {
  if (GetArenaNoVirtual() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
}
void DescriptionEntityListRequest::clear_sort_by() {
  if (GetArenaNoVirtual() == nullptr && sort_by_ != nullptr) {
    delete sort_by_;
  }
  sort_by_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DescriptionEntityListRequest::kResourceTypeFieldNumber;
const int DescriptionEntityListRequest::kIdFieldNumber;
const int DescriptionEntityListRequest::kLimitFieldNumber;
const int DescriptionEntityListRequest::kTokenFieldNumber;
const int DescriptionEntityListRequest::kFiltersFieldNumber;
const int DescriptionEntityListRequest::kSortByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DescriptionEntityListRequest::DescriptionEntityListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.DescriptionEntityListRequest)
}
DescriptionEntityListRequest::DescriptionEntityListRequest(const DescriptionEntityListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  filters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filters().size() > 0) {
    filters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filters_);
  }
  if (from.has_id()) {
    id_ = new ::flyteidl::admin::NamedEntityIdentifier(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from.has_sort_by()) {
    sort_by_ = new ::flyteidl::admin::Sort(*from.sort_by_);
  } else {
    sort_by_ = nullptr;
  }
  ::memcpy(&resource_type_, &from.resource_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&resource_type_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.DescriptionEntityListRequest)
}

void DescriptionEntityListRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DescriptionEntityListRequest_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filters_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&id_)) + sizeof(limit_));
}

DescriptionEntityListRequest::~DescriptionEntityListRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.DescriptionEntityListRequest)
  SharedDtor();
}

void DescriptionEntityListRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filters_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete sort_by_;
}

void DescriptionEntityListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DescriptionEntityListRequest& DescriptionEntityListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DescriptionEntityListRequest_flyteidl_2fadmin_2fdescription_5fentity_2eproto.base);
  return *internal_default_instance();
}


void DescriptionEntityListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.DescriptionEntityListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filters_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && sort_by_ != nullptr) {
    delete sort_by_;
  }
  sort_by_ = nullptr;
  ::memset(&resource_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&resource_type_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DescriptionEntityListRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DescriptionEntityListRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.core.ResourceType resource_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_resource_type(static_cast<::flyteidl::core::ResourceType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .flyteidl.admin.NamedEntityIdentifier id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::NamedEntityIdentifier::_InternalParse;
        object = msg->mutable_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // uint32 limit = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_limit(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string token = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.DescriptionEntityListRequest.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filters = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.DescriptionEntityListRequest.filters");
        object = msg->mutable_filters();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.admin.Sort sort_by = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::Sort::_InternalParse;
        object = msg->mutable_sort_by();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DescriptionEntityListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.DescriptionEntityListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.ResourceType resource_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resource_type(static_cast< ::flyteidl::core::ResourceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.NamedEntityIdentifier id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.DescriptionEntityListRequest.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filters = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filters()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filters().data(), static_cast<int>(this->filters().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.DescriptionEntityListRequest.filters"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.Sort sort_by = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sort_by()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.DescriptionEntityListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.DescriptionEntityListRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DescriptionEntityListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.DescriptionEntityListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.ResourceType resource_type = 1;
  if (this->resource_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->resource_type(), output);
  }

  // .flyteidl.admin.NamedEntityIdentifier id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::id(this), output);
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->limit(), output);
  }

  // string token = 4;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntityListRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->token(), output);
  }

  // string filters = 5;
  if (this->filters().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filters().data(), static_cast<int>(this->filters().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntityListRequest.filters");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filters(), output);
  }

  // .flyteidl.admin.Sort sort_by = 6;
  if (this->has_sort_by()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::sort_by(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.DescriptionEntityListRequest)
}

::google::protobuf::uint8* DescriptionEntityListRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.DescriptionEntityListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.ResourceType resource_type = 1;
  if (this->resource_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->resource_type(), target);
  }

  // .flyteidl.admin.NamedEntityIdentifier id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::id(this), target);
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->limit(), target);
  }

  // string token = 4;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntityListRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->token(), target);
  }

  // string filters = 5;
  if (this->filters().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filters().data(), static_cast<int>(this->filters().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.DescriptionEntityListRequest.filters");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filters(), target);
  }

  // .flyteidl.admin.Sort sort_by = 6;
  if (this->has_sort_by()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::sort_by(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.DescriptionEntityListRequest)
  return target;
}

size_t DescriptionEntityListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.DescriptionEntityListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 4;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string filters = 5;
  if (this->filters().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filters());
  }

  // .flyteidl.admin.NamedEntityIdentifier id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .flyteidl.admin.Sort sort_by = 6;
  if (this->has_sort_by()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sort_by_);
  }

  // .flyteidl.core.ResourceType resource_type = 1;
  if (this->resource_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resource_type());
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DescriptionEntityListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.DescriptionEntityListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DescriptionEntityListRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DescriptionEntityListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.DescriptionEntityListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.DescriptionEntityListRequest)
    MergeFrom(*source);
  }
}

void DescriptionEntityListRequest::MergeFrom(const DescriptionEntityListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.DescriptionEntityListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.filters().size() > 0) {

    filters_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filters_);
  }
  if (from.has_id()) {
    mutable_id()->::flyteidl::admin::NamedEntityIdentifier::MergeFrom(from.id());
  }
  if (from.has_sort_by()) {
    mutable_sort_by()->::flyteidl::admin::Sort::MergeFrom(from.sort_by());
  }
  if (from.resource_type() != 0) {
    set_resource_type(from.resource_type());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void DescriptionEntityListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.DescriptionEntityListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescriptionEntityListRequest::CopyFrom(const DescriptionEntityListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.DescriptionEntityListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescriptionEntityListRequest::IsInitialized() const {
  return true;
}

void DescriptionEntityListRequest::Swap(DescriptionEntityListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DescriptionEntityListRequest::InternalSwap(DescriptionEntityListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filters_.Swap(&other->filters_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(sort_by_, other->sort_by_);
  swap(resource_type_, other->resource_type_);
  swap(limit_, other->limit_);
}

::google::protobuf::Metadata DescriptionEntityListRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fdescription_5fentity_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fdescription_5fentity_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::admin::DescriptionEntity* Arena::CreateMaybeMessage< ::flyteidl::admin::DescriptionEntity >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::DescriptionEntity >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::Description* Arena::CreateMaybeMessage< ::flyteidl::admin::Description >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::Description >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::SourceCode* Arena::CreateMaybeMessage< ::flyteidl::admin::SourceCode >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::SourceCode >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::DescriptionEntityList* Arena::CreateMaybeMessage< ::flyteidl::admin::DescriptionEntityList >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::DescriptionEntityList >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::DescriptionEntityListRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::DescriptionEntityListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::DescriptionEntityListRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
