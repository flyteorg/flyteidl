// source: flyteidl/core/literals.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.flyteidl.core.BindingData');
goog.provide('proto.flyteidl.core.BindingData.ValueCase');
goog.provide('proto.flyteidl.core.BindingDataCollection');
goog.provide('proto.flyteidl.core.BindingDataMap');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.flyteidl.core.OutputReference');
goog.require('proto.flyteidl.core.Scalar');
goog.require('proto.flyteidl.core.UnionInfo');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BindingData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flyteidl.core.BindingData.oneofGroups_);
};
goog.inherits(proto.flyteidl.core.BindingData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BindingData.displayName = 'proto.flyteidl.core.BindingData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BindingDataCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flyteidl.core.BindingDataCollection.repeatedFields_, null);
};
goog.inherits(proto.flyteidl.core.BindingDataCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BindingDataCollection.displayName = 'proto.flyteidl.core.BindingDataCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flyteidl.core.BindingDataMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flyteidl.core.BindingDataMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flyteidl.core.BindingDataMap.displayName = 'proto.flyteidl.core.BindingDataMap';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flyteidl.core.BindingData.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.flyteidl.core.BindingData.ValueCase = {
  VALUE_NOT_SET: 0,
  SCALAR: 1,
  COLLECTION: 2,
  PROMISE: 3,
  MAP: 4
};

/**
 * @return {proto.flyteidl.core.BindingData.ValueCase}
 */
proto.flyteidl.core.BindingData.prototype.getValueCase = function() {
  return /** @type {proto.flyteidl.core.BindingData.ValueCase} */(jspb.Message.computeOneofCase(this, proto.flyteidl.core.BindingData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BindingData.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BindingData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BindingData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingData.toObject = function(includeInstance, msg) {
  var f, obj = {
    scalar: (f = msg.getScalar()) && proto.flyteidl.core.Scalar.toObject(includeInstance, f),
    collection: (f = msg.getCollection()) && proto.flyteidl.core.BindingDataCollection.toObject(includeInstance, f),
    promise: (f = msg.getPromise()) && proto.flyteidl.core.OutputReference.toObject(includeInstance, f),
    map: (f = msg.getMap()) && proto.flyteidl.core.BindingDataMap.toObject(includeInstance, f),
    union: (f = msg.getUnion()) && proto.flyteidl.core.UnionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BindingData}
 */
proto.flyteidl.core.BindingData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BindingData;
  return proto.flyteidl.core.BindingData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BindingData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BindingData}
 */
proto.flyteidl.core.BindingData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.Scalar;
      reader.readMessage(value,proto.flyteidl.core.Scalar.deserializeBinaryFromReader);
      msg.setScalar(value);
      break;
    case 2:
      var value = new proto.flyteidl.core.BindingDataCollection;
      reader.readMessage(value,proto.flyteidl.core.BindingDataCollection.deserializeBinaryFromReader);
      msg.setCollection(value);
      break;
    case 3:
      var value = new proto.flyteidl.core.OutputReference;
      reader.readMessage(value,proto.flyteidl.core.OutputReference.deserializeBinaryFromReader);
      msg.setPromise(value);
      break;
    case 4:
      var value = new proto.flyteidl.core.BindingDataMap;
      reader.readMessage(value,proto.flyteidl.core.BindingDataMap.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 5:
      var value = new proto.flyteidl.core.UnionInfo;
      reader.readMessage(value,proto.flyteidl.core.UnionInfo.deserializeBinaryFromReader);
      msg.setUnion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BindingData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BindingData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BindingData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScalar();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flyteidl.core.Scalar.serializeBinaryToWriter
    );
  }
  f = message.getCollection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flyteidl.core.BindingDataCollection.serializeBinaryToWriter
    );
  }
  f = message.getPromise();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flyteidl.core.OutputReference.serializeBinaryToWriter
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flyteidl.core.BindingDataMap.serializeBinaryToWriter
    );
  }
  f = message.getUnion();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flyteidl.core.UnionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Scalar scalar = 1;
 * @return {?proto.flyteidl.core.Scalar}
 */
proto.flyteidl.core.BindingData.prototype.getScalar = function() {
  return /** @type{?proto.flyteidl.core.Scalar} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.Scalar, 1));
};


/**
 * @param {?proto.flyteidl.core.Scalar|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setScalar = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearScalar = function() {
  return this.setScalar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasScalar = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BindingDataCollection collection = 2;
 * @return {?proto.flyteidl.core.BindingDataCollection}
 */
proto.flyteidl.core.BindingData.prototype.getCollection = function() {
  return /** @type{?proto.flyteidl.core.BindingDataCollection} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.BindingDataCollection, 2));
};


/**
 * @param {?proto.flyteidl.core.BindingDataCollection|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearCollection = function() {
  return this.setCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasCollection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OutputReference promise = 3;
 * @return {?proto.flyteidl.core.OutputReference}
 */
proto.flyteidl.core.BindingData.prototype.getPromise = function() {
  return /** @type{?proto.flyteidl.core.OutputReference} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.OutputReference, 3));
};


/**
 * @param {?proto.flyteidl.core.OutputReference|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setPromise = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearPromise = function() {
  return this.setPromise(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasPromise = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BindingDataMap map = 4;
 * @return {?proto.flyteidl.core.BindingDataMap}
 */
proto.flyteidl.core.BindingData.prototype.getMap = function() {
  return /** @type{?proto.flyteidl.core.BindingDataMap} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.BindingDataMap, 4));
};


/**
 * @param {?proto.flyteidl.core.BindingDataMap|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flyteidl.core.BindingData.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasMap = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional UnionInfo union = 5;
 * @return {?proto.flyteidl.core.UnionInfo}
 */
proto.flyteidl.core.BindingData.prototype.getUnion = function() {
  return /** @type{?proto.flyteidl.core.UnionInfo} */ (
    jspb.Message.getWrapperField(this, proto.flyteidl.core.UnionInfo, 5));
};


/**
 * @param {?proto.flyteidl.core.UnionInfo|undefined} value
 * @return {!proto.flyteidl.core.BindingData} returns this
*/
proto.flyteidl.core.BindingData.prototype.setUnion = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flyteidl.core.BindingData} returns this
 */
proto.flyteidl.core.BindingData.prototype.clearUnion = function() {
  return this.setUnion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flyteidl.core.BindingData.prototype.hasUnion = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flyteidl.core.BindingDataCollection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BindingDataCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BindingDataCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BindingDataCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    bindingsList: jspb.Message.toObjectList(msg.getBindingsList(),
    proto.flyteidl.core.BindingData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BindingDataCollection}
 */
proto.flyteidl.core.BindingDataCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BindingDataCollection;
  return proto.flyteidl.core.BindingDataCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BindingDataCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BindingDataCollection}
 */
proto.flyteidl.core.BindingDataCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flyteidl.core.BindingData;
      reader.readMessage(value,proto.flyteidl.core.BindingData.deserializeBinaryFromReader);
      msg.addBindings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BindingDataCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BindingDataCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BindingDataCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBindingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.flyteidl.core.BindingData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BindingData bindings = 1;
 * @return {!Array<!proto.flyteidl.core.BindingData>}
 */
proto.flyteidl.core.BindingDataCollection.prototype.getBindingsList = function() {
  return /** @type{!Array<!proto.flyteidl.core.BindingData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.flyteidl.core.BindingData, 1));
};


/**
 * @param {!Array<!proto.flyteidl.core.BindingData>} value
 * @return {!proto.flyteidl.core.BindingDataCollection} returns this
*/
proto.flyteidl.core.BindingDataCollection.prototype.setBindingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.flyteidl.core.BindingData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flyteidl.core.BindingData}
 */
proto.flyteidl.core.BindingDataCollection.prototype.addBindings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.flyteidl.core.BindingData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flyteidl.core.BindingDataCollection} returns this
 */
proto.flyteidl.core.BindingDataCollection.prototype.clearBindingsList = function() {
  return this.setBindingsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flyteidl.core.BindingDataMap.prototype.toObject = function(opt_includeInstance) {
  return proto.flyteidl.core.BindingDataMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flyteidl.core.BindingDataMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    bindingsMap: (f = msg.getBindingsMap()) ? f.toObject(includeInstance, proto.flyteidl.core.BindingData.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flyteidl.core.BindingDataMap}
 */
proto.flyteidl.core.BindingDataMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flyteidl.core.BindingDataMap;
  return proto.flyteidl.core.BindingDataMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flyteidl.core.BindingDataMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flyteidl.core.BindingDataMap}
 */
proto.flyteidl.core.BindingDataMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getBindingsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.flyteidl.core.BindingData.deserializeBinaryFromReader, "", new proto.flyteidl.core.BindingData());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flyteidl.core.BindingDataMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flyteidl.core.BindingDataMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flyteidl.core.BindingDataMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flyteidl.core.BindingDataMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBindingsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.flyteidl.core.BindingData.serializeBinaryToWriter);
  }
};


/**
 * map<string, BindingData> bindings = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.flyteidl.core.BindingData>}
 */
proto.flyteidl.core.BindingDataMap.prototype.getBindingsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.flyteidl.core.BindingData>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.flyteidl.core.BindingData));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.flyteidl.core.BindingDataMap} returns this
 */
proto.flyteidl.core.BindingDataMap.prototype.clearBindingsMap = function() {
  this.getBindingsMap().clear();
  return this;};


